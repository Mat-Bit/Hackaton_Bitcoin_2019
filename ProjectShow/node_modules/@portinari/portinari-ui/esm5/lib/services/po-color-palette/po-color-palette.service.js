/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';
var PoColorPaletteService = /** @class */ (function () {
    function PoColorPaletteService() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    PoColorPaletteService.prototype.getColor = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return ((/** @type {?} */ (Object))).values(PoColorPaletteEnum).includes(value.color) ?
            value.color : this.getColorFromType(value.type || value.color);
    };
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    PoColorPaletteService.prototype.getColorFromType = /**
     * @private
     * @param {?} type
     * @return {?}
     */
    function (type) {
        switch (type) {
            case 'danger':
                return PoColorPaletteEnum.Color07;
            case 'success':
                return PoColorPaletteEnum.Color11;
            case 'warning':
                return PoColorPaletteEnum.Color08;
            default:
                return PoColorPaletteEnum.Color01;
        }
    };
    PoColorPaletteService.decorators = [
        { type: Injectable }
    ];
    return PoColorPaletteService;
}());
export { PoColorPaletteService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29sb3ItcGFsZXR0ZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvcG8tY29sb3ItcGFsZXR0ZS9wby1jb2xvci1wYWxldHRlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFdkU7SUFBQTtJQXFCQSxDQUFDOzs7OztJQWxCQyx3Q0FBUTs7OztJQUFSLFVBQVMsS0FBd0M7UUFDL0MsT0FBTyxDQUFDLG1CQUFLLE1BQU0sRUFBQSxDQUFDLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRSxDQUFDOzs7Ozs7SUFFTyxnREFBZ0I7Ozs7O0lBQXhCLFVBQXlCLElBQVk7UUFDbkMsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLFFBQVE7Z0JBQ1gsT0FBTyxrQkFBa0IsQ0FBQyxPQUFPLENBQUM7WUFDcEMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sa0JBQWtCLENBQUMsT0FBTyxDQUFDO1lBQ3BDLEtBQUssU0FBUztnQkFDWixPQUFPLGtCQUFrQixDQUFDLE9BQU8sQ0FBQztZQUNwQztnQkFDRSxPQUFPLGtCQUFrQixDQUFDLE9BQU8sQ0FBQztTQUNyQztJQUNILENBQUM7O2dCQW5CRixVQUFVOztJQXFCWCw0QkFBQztDQUFBLEFBckJELElBcUJDO1NBcEJZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Db2xvclBhbGV0dGVFbnVtIH0gZnJvbSAnLi4vLi4vZW51bXMvcG8tY29sb3ItcGFsZXR0ZS5lbnVtJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBvQ29sb3JQYWxldHRlU2VydmljZSB7XG5cbiAgZ2V0Q29sb3IodmFsdWU6IHsgY29sb3I/OiBzdHJpbmcsIHR5cGU/OiBzdHJpbmcgfSk6IHN0cmluZyB7XG4gICAgcmV0dXJuICg8YW55Pk9iamVjdCkudmFsdWVzKFBvQ29sb3JQYWxldHRlRW51bSkuaW5jbHVkZXModmFsdWUuY29sb3IpID9cbiAgICAgIHZhbHVlLmNvbG9yIDogdGhpcy5nZXRDb2xvckZyb21UeXBlKHZhbHVlLnR5cGUgfHwgdmFsdWUuY29sb3IpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb2xvckZyb21UeXBlKHR5cGU6IHN0cmluZyk6IFBvQ29sb3JQYWxldHRlRW51bSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlICdkYW5nZXInOlxuICAgICAgICByZXR1cm4gUG9Db2xvclBhbGV0dGVFbnVtLkNvbG9yMDc7XG4gICAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgICAgcmV0dXJuIFBvQ29sb3JQYWxldHRlRW51bS5Db2xvcjExO1xuICAgICAgY2FzZSAnd2FybmluZyc6XG4gICAgICAgIHJldHVybiBQb0NvbG9yUGFsZXR0ZUVudW0uQ29sb3IwODtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBQb0NvbG9yUGFsZXR0ZUVudW0uQ29sb3IwMTtcbiAgICB9XG4gIH1cblxufVxuIl19