/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { PoToasterBaseComponent } from './po-toaster-base.component';
import { PoToasterType } from './po-toaster-type.enum';
import { PoToasterOrientation } from './po-toaster-orientation.enum';
/**
 * \@docsPrivate
 *
 * \@docsExtends PoToasterBaseComponent
 */
var PoToasterComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoToasterComponent, _super);
    function PoToasterComponent(changeDetector, elementeRef) {
        var _this = _super.call(this) || this;
        _this.changeDetector = changeDetector;
        _this.elementeRef = elementeRef;
        /* Margem do Toaster referênte à sua orientação e posição*/
        _this.margin = 20;
        /* Observable para monitorar o Close to Toaster */
        _this.observableOnClose = new Subject();
        /* Mostra ou oculta o Toaster */
        _this.showToaster = true;
        /* Posição do Toaster*/
        _this.toasterPosition = 'po-toaster-bottom';
        return _this;
    }
    /* Muda a posição do Toaster na tela*/
    /* Muda a posição do Toaster na tela*/
    /**
     * @param {?} position
     * @return {?}
     */
    PoToasterComponent.prototype.changePosition = /* Muda a posição do Toaster na tela*/
    /**
     * @param {?} position
     * @return {?}
     */
    function (position) {
        this.elementeRef.nativeElement.style.display = 'table';
        this.margin = 6 + (44 * (position)) + position * 6;
        if (this.orientation === PoToasterOrientation.Top) {
            this.toaster.nativeElement.style.top = this.margin + 'px';
        }
        else {
            this.toaster.nativeElement.style.bottom = this.margin + 'px';
        }
    };
    /* Fecha o componente Toaster */
    /* Fecha o componente Toaster */
    /**
     * @return {?}
     */
    PoToasterComponent.prototype.close = /* Fecha o componente Toaster */
    /**
     * @return {?}
     */
    function () {
        this.showToaster = false;
        this.observableOnClose.next(true);
    };
    /* Configura o Toaster com os atributos passados para ele */
    /* Configura o Toaster com os atributos passados para ele */
    /**
     * @param {?} poToaster
     * @return {?}
     */
    PoToasterComponent.prototype.configToaster = /* Configura o Toaster com os atributos passados para ele */
    /**
     * @param {?} poToaster
     * @return {?}
     */
    function (poToaster) {
        this.type = poToaster.type;
        this.message = poToaster.message;
        this.orientation = poToaster.orientation;
        this.position = poToaster.position;
        this.action = poToaster.action;
        this.actionLabel = (poToaster.actionLabel) ? poToaster.actionLabel : 'Fechar';
        this.componentRef = poToaster.componentRef;
        /* Muda a orientação do Toaster */
        if (this.orientation === PoToasterOrientation.Top) {
            this.toasterPosition = 'po-toaster-top';
        }
        /* Muda a posição do Toaster */
        this.changePosition(this.position);
        /* Switch para o tipo de Toaster */
        switch (this.type) {
            case PoToasterType.Error: {
                this.toasterType = 'po-toaster-error';
                this.icon = 'po-icon-close';
                break;
            }
            case PoToasterType.Information: {
                this.toasterType = 'po-toaster-info';
                this.icon = 'po-icon-info';
                break;
            }
            case PoToasterType.Success: {
                this.toasterType = 'po-toaster-success';
                this.icon = 'po-icon-ok';
                break;
            }
            case PoToasterType.Warning: {
                this.toasterType = 'po-toaster-warning';
                this.icon = 'po-icon-warning';
                break;
            }
        }
        this.changeDetector.detectChanges();
    };
    /**
     * @return {?}
     */
    PoToasterComponent.prototype.getShowToaster = /**
     * @return {?}
     */
    function () {
        return this.showToaster;
    };
    /**
     * @return {?}
     */
    PoToasterComponent.prototype.getIcon = /**
     * @return {?}
     */
    function () {
        return this.icon;
    };
    /**
     * @return {?}
     */
    PoToasterComponent.prototype.getToasterPosition = /**
     * @return {?}
     */
    function () {
        return this.toasterPosition;
    };
    /**
     * @return {?}
     */
    PoToasterComponent.prototype.getToasterType = /**
     * @return {?}
     */
    function () {
        return this.toasterType;
    };
    /* Chama a função passada pelo atributo `action` */
    /* Chama a função passada pelo atributo `action` */
    /**
     * @return {?}
     */
    PoToasterComponent.prototype.poToasterAction = /* Chama a função passada pelo atributo `action` */
    /**
     * @return {?}
     */
    function () {
        this.action(this);
    };
    PoToasterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-toaster',
                    template: "<div #toaster *ngIf=\"getShowToaster()\"\n  class=\"po-toaster {{ getToasterType() }} {{ getToasterPosition() }} po-clickable\"\n  (click)=\"close()\">\n\n  <div class=\"po-toaster-message\">\n    <span class=\"po-icon {{ getIcon() }}\"></span> {{ message }}\n  </div>\n\n  <div *ngIf=\"action !== undefined\" (click)=\"poToasterAction()\" class=\"po-toaster-action\">\n    {{ actionLabel }}\n  </div>\n\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    PoToasterComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef }
    ]; };
    PoToasterComponent.propDecorators = {
        toaster: [{ type: ViewChild, args: ['toaster', { static: false },] }]
    };
    return PoToasterComponent;
}(PoToasterBaseComponent));
export { PoToasterComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.icon;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.margin;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.observableOnClose;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.showToaster;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.toasterPosition;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.toasterType;
    /** @type {?} */
    PoToasterComponent.prototype.toaster;
    /** @type {?} */
    PoToasterComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.elementeRef;
}
//# sourceMappingURL=data:application/json;base64,