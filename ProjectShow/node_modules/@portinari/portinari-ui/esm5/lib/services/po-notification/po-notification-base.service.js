/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';
import { PoToasterType } from './po-toaster/po-toaster-type.enum';
/**
 * \@description
 *
 * Serviço responsável por emitir as notificações em uma página. São disponibilizados os métodos de:
 *
 * - success,
 * - warning,
 * - error,
 * - information.
 *
 * Cada um destes métodos recebe como parâmetro o objeto "PoNotification" que contém os dados da mensagem e o
 * objeto ViewContainerRef que é a representação do container do componente onde será criada a notificação.
 *
 * Estas notificações serão exibidas durante 10 segundos por padrão, podendo ser alterada conforme necessidade.
 * Após este tempo a mesma é removida automaticamente.
 *
 * @abstract
 */
var /**
 * \@description
 *
 * Serviço responsável por emitir as notificações em uma página. São disponibilizados os métodos de:
 *
 * - success,
 * - warning,
 * - error,
 * - information.
 *
 * Cada um destes métodos recebe como parâmetro o objeto "PoNotification" que contém os dados da mensagem e o
 * objeto ViewContainerRef que é a representação do container do componente onde será criada a notificação.
 *
 * Estas notificações serão exibidas durante 10 segundos por padrão, podendo ser alterada conforme necessidade.
 * Após este tempo a mesma é removida automaticamente.
 *
 * @abstract
 */
PoNotificationBaseService = /** @class */ (function () {
    function PoNotificationBaseService() {
        // Array responsável por guardar a instância de po-toaster's superiores.
        this.stackTop = [];
        // Array responsável por guardar a instância de po-toaster's inferiores.
        this.stackBottom = [];
        // Duração da notificação ativa.
        this.defaultDuration = 10000;
    }
    /**
     * Emite uma notificação de sucesso.
     *
     * @param notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação.
     */
    /**
     * Emite uma notificação de sucesso.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação.
     * @return {?}
     */
    PoNotificationBaseService.prototype.success = /**
     * Emite uma notificação de sucesso.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação.
     * @return {?}
     */
    function (notification) {
        this.createToaster(this.buildToaster(notification, PoToasterType.Success));
    };
    /**
     * Emite uma notificação de atenção.
     *
     * @param notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     */
    /**
     * Emite uma notificação de atenção.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     * @return {?}
     */
    PoNotificationBaseService.prototype.warning = /**
     * Emite uma notificação de atenção.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     * @return {?}
     */
    function (notification) {
        this.createToaster(this.buildToaster(notification, PoToasterType.Warning));
    };
    /**
     * Emite uma notificação de erro.
     *
     * @param notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     */
    /**
     * Emite uma notificação de erro.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     * @return {?}
     */
    PoNotificationBaseService.prototype.error = /**
     * Emite uma notificação de erro.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     * @return {?}
     */
    function (notification) {
        this.createToaster(this.buildToaster(notification, PoToasterType.Error));
    };
    /**
     * Emite uma notificação de informação.
     *
     * @param notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     */
    /**
     * Emite uma notificação de informação.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     * @return {?}
     */
    PoNotificationBaseService.prototype.information = /**
     * Emite uma notificação de informação.
     *
     * @param {?} notification {PoNotification | string} Objeto com os dados da notificação ou somente a string com a mensagem da notificação
     * @return {?}
     */
    function (notification) {
        this.createToaster(this.buildToaster(notification, PoToasterType.Information));
    };
    /**
     * Define em milissegundos a duração padrão para as notificações.
     *
     * > Padrão 10 segundos.
     *
     * @param defaultDuration {number} Duração em milisegundos
     */
    /**
     * Define em milissegundos a duração padrão para as notificações.
     *
     * > Padrão 10 segundos.
     *
     * @param {?} defaultDuration {number} Duração em milisegundos
     * @return {?}
     */
    PoNotificationBaseService.prototype.setDefaultDuration = /**
     * Define em milissegundos a duração padrão para as notificações.
     *
     * > Padrão 10 segundos.
     *
     * @param {?} defaultDuration {number} Duração em milisegundos
     * @return {?}
     */
    function (defaultDuration) {
        this.defaultDuration = defaultDuration;
    };
    /**
     * @docsPrivate
     *
     * Cria um objeto do tipo PoToaster de acordo o tipo.
     *
     * @param notification {PoNotification | string} Objeto PoNotification com os dados da notificação
     */
    /**
     * \@docsPrivate
     *
     * Cria um objeto do tipo PoToaster de acordo o tipo.
     *
     * @private
     * @param {?} notification {PoNotification | string} Objeto PoNotification com os dados da notificação
     * @param {?} type
     * @return {?}
     */
    PoNotificationBaseService.prototype.buildToaster = /**
     * \@docsPrivate
     *
     * Cria um objeto do tipo PoToaster de acordo o tipo.
     *
     * @private
     * @param {?} notification {PoNotification | string} Objeto PoNotification com os dados da notificação
     * @param {?} type
     * @return {?}
     */
    function (notification, type) {
        var _this = this;
        /** @type {?} */
        var index = 0;
        /** @type {?} */
        var orientation;
        if (((/** @type {?} */ (notification))).orientation === undefined ||
            ((/** @type {?} */ (notification))).orientation === PoToasterOrientation.Bottom) {
            index = this.stackBottom.length;
            orientation = PoToasterOrientation.Bottom;
        }
        else {
            index = this.stackTop.length;
            orientation = PoToasterOrientation.Top;
        }
        /** @type {?} */
        var toaster = {
            componentRef: undefined,
            message: ((/** @type {?} */ (notification))).message || (/** @type {?} */ (notification)),
            type: type,
            orientation: orientation,
            action: ((/** @type {?} */ (notification))).action,
            actionLabel: ((/** @type {?} */ (notification))).actionLabel,
            position: index,
            duration: ((/** @type {?} */ (notification))).duration || this.defaultDuration
        };
        if (((/** @type {?} */ (notification))).action) {
            toaster.action = (/**
             * @param {?} param
             * @return {?}
             */
            function (param) {
                ((/** @type {?} */ (notification))).action();
                _this.destroyToaster(param.componentRef);
            });
        }
        return toaster;
    };
    return PoNotificationBaseService;
}());
/**
 * \@description
 *
 * Serviço responsável por emitir as notificações em uma página. São disponibilizados os métodos de:
 *
 * - success,
 * - warning,
 * - error,
 * - information.
 *
 * Cada um destes métodos recebe como parâmetro o objeto "PoNotification" que contém os dados da mensagem e o
 * objeto ViewContainerRef que é a representação do container do componente onde será criada a notificação.
 *
 * Estas notificações serão exibidas durante 10 segundos por padrão, podendo ser alterada conforme necessidade.
 * Após este tempo a mesma é removida automaticamente.
 *
 * @abstract
 */
export { PoNotificationBaseService };
if (false) {
    /** @type {?} */
    PoNotificationBaseService.prototype.stackTop;
    /** @type {?} */
    PoNotificationBaseService.prototype.stackBottom;
    /**
     * @type {?}
     * @private
     */
    PoNotificationBaseService.prototype.defaultDuration;
    /**
     * \@docsPrivate
     *
     * Método responsável por criar o po-toaster.
     *
     * @abstract
     * @param {?} toaster {PoToaster} Objeto contendo as informações do toaster.
     * @return {?}
     */
    PoNotificationBaseService.prototype.createToaster = function (toaster) { };
    /**
     * \@docsPrivate
     *
     * Método responsável por destruir o po-toaster.
     *
     * @abstract
     * @param {?} toaster {ComponentRef} Número da posição ou instancia do toaster a ser destruído.
     * @return {?}
     */
    PoNotificationBaseService.prototype.destroyToaster = function (toaster) { };
}
//# sourceMappingURL=data:application/json;base64,