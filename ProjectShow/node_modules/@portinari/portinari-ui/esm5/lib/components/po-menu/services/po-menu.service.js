/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Serviço que implementa a interface `PoMenuFilter`, utilizado para fazer requisições ao serviço informado pelo usuário,
 * caso for uma URL, no componente `po-menu`.
 */
var PoMenuService = /** @class */ (function () {
    function PoMenuService(http) {
        this.http = http;
    }
    Object.defineProperty(PoMenuService.prototype, "url", {
        get: /**
         * @return {?}
         */
        function () { return this._url; },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} url
     * @return {?}
     */
    PoMenuService.prototype.configProperties = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        this._url = url;
    };
    /**
     * @param {?} search
     * @param {?=} params
     * @return {?}
     */
    PoMenuService.prototype.getFilteredData = /**
     * @param {?} search
     * @param {?=} params
     * @return {?}
     */
    function (search, params) {
        /** @type {?} */
        var filterParams = tslib_1.__assign({ search: search }, params);
        return this.http.get(this.url, { params: filterParams })
            .pipe(map((/**
         * @param {?} response
         * @return {?}
         */
        function (response) { return response && response.items; })));
    };
    PoMenuService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PoMenuService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return PoMenuService;
}());
export { PoMenuService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoMenuService.prototype._url;
    /**
     * @type {?}
     * @private
     */
    PoMenuService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1tZW51L3NlcnZpY2VzL3BvLW1lbnUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7Ozs7O0FBY3JDO0lBT0UsdUJBQW9CLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7SUFBSSxDQUFDO0lBRnpDLHNCQUFJLDhCQUFHOzs7O1FBQVAsY0FBb0IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzs7O09BQUE7Ozs7O0lBSXZDLHdDQUFnQjs7OztJQUFoQixVQUFpQixHQUFXO1FBQzFCLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0lBQ2xCLENBQUM7Ozs7OztJQUVELHVDQUFlOzs7OztJQUFmLFVBQWdCLE1BQWMsRUFBRSxNQUFZOztZQUNwQyxZQUFZLHNCQUNoQixNQUFNLFFBQUEsSUFDSCxNQUFNLENBQ1Y7UUFFRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLENBQUM7YUFDckQsSUFBSSxDQUFDLEdBQUc7Ozs7UUFBQyxVQUFDLFFBQThDLElBQUssT0FBQSxRQUFRLElBQUksUUFBUSxDQUFDLEtBQUssRUFBMUIsQ0FBMEIsRUFBQyxDQUFDLENBQUM7SUFDL0YsQ0FBQzs7Z0JBckJGLFVBQVU7Ozs7Z0JBakJGLFVBQVU7O0lBd0NuQixvQkFBQztDQUFBLEFBdkJELElBdUJDO1NBdEJZLGFBQWE7Ozs7OztJQUV4Qiw2QkFBcUI7Ozs7O0lBSVQsNkJBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb01lbnVJdGVtRmlsdGVyZWQgfSBmcm9tICcuLi9wby1tZW51LWl0ZW0vcG8tbWVudS1pdGVtLWZpbHRlcmVkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb01lbnVGaWx0ZXIgfSBmcm9tICcuLi9wby1tZW51LWZpbHRlci9wby1tZW51LWZpbHRlci5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIFNlcnZpw6dvIHF1ZSBpbXBsZW1lbnRhIGEgaW50ZXJmYWNlIGBQb01lbnVGaWx0ZXJgLCB1dGlsaXphZG8gcGFyYSBmYXplciByZXF1aXNpw6fDtWVzIGFvIHNlcnZpw6dvIGluZm9ybWFkbyBwZWxvIHVzdcOhcmlvLFxuICogY2FzbyBmb3IgdW1hIFVSTCwgbm8gY29tcG9uZW50ZSBgcG8tbWVudWAuXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb01lbnVTZXJ2aWNlIGltcGxlbWVudHMgUG9NZW51RmlsdGVyIHtcblxuICBwcml2YXRlIF91cmw6IHN0cmluZztcblxuICBnZXQgdXJsKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLl91cmw7IH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHsgfVxuXG4gIGNvbmZpZ1Byb3BlcnRpZXModXJsOiBzdHJpbmcpIHtcbiAgICB0aGlzLl91cmwgPSB1cmw7XG4gIH1cblxuICBnZXRGaWx0ZXJlZERhdGEoc2VhcmNoOiBzdHJpbmcsIHBhcmFtcz86IGFueSk6IE9ic2VydmFibGU8QXJyYXk8UG9NZW51SXRlbUZpbHRlcmVkPj4ge1xuICAgIGNvbnN0IGZpbHRlclBhcmFtcyA9IHtcbiAgICAgIHNlYXJjaCxcbiAgICAgIC4uLnBhcmFtc1xuICAgIH07XG5cbiAgICByZXR1cm4gdGhpcy5odHRwLmdldCh0aGlzLnVybCwgeyBwYXJhbXM6IGZpbHRlclBhcmFtcyB9KVxuICAgICAgLnBpcGUobWFwKChyZXNwb25zZTogeyBpdGVtczogQXJyYXk8UG9NZW51SXRlbUZpbHRlcmVkPiB9KSA9PiByZXNwb25zZSAmJiByZXNwb25zZS5pdGVtcykpO1xuICB9XG5cbn1cbiJdfQ==