/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Serviço que implementa a comunicação entre os items do po-menu.
 */
var PoMenuItemsService = /** @class */ (function () {
    function PoMenuItemsService() {
        this.subjectParent = new Subject();
        this.subjectChild = new Subject();
    }
    // Envia informações do click do po-menu-item para o po-menu
    // Envia informações do click do po-menu-item para o po-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    PoMenuItemsService.prototype.sendToParentMenuClicked = 
    // Envia informações do click do po-menu-item para o po-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.subjectChild.next(menu);
    };
    // Recebe do po-menu-item sua informação de click.
    // Recebe do po-menu-item sua informação de click.
    /**
     * @return {?}
     */
    PoMenuItemsService.prototype.receiveFromChildMenuClicked = 
    // Recebe do po-menu-item sua informação de click.
    /**
     * @return {?}
     */
    function () {
        return this.subjectChild.asObservable();
    };
    // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.
    // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    PoMenuItemsService.prototype.sendToChildMenuClicked = 
    // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.subjectParent.next(menu);
    };
    // Recebe do po-menu as informações processadas do click de um po-menu-item.
    // Recebe do po-menu as informações processadas do click de um po-menu-item.
    /**
     * @return {?}
     */
    PoMenuItemsService.prototype.receiveFromParentMenuClicked = 
    // Recebe do po-menu as informações processadas do click de um po-menu-item.
    /**
     * @return {?}
     */
    function () {
        return this.subjectParent.asObservable();
    };
    PoMenuItemsService.decorators = [
        { type: Injectable }
    ];
    return PoMenuItemsService;
}());
export { PoMenuItemsService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoMenuItemsService.prototype.subjectParent;
    /**
     * @type {?}
     * @private
     */
    PoMenuItemsService.prototype.subjectChild;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1pdGVtcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1tZW51L3NlcnZpY2VzL3BvLW1lbnUtaXRlbXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOzs7Ozs7OztBQVMzQztJQUFBO1FBRVUsa0JBQWEsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO1FBQ25DLGlCQUFZLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztJQXFCNUMsQ0FBQztJQW5CQyw0REFBNEQ7Ozs7OztJQUM1RCxvREFBdUI7Ozs7OztJQUF2QixVQUF3QixJQUFZO1FBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxrREFBa0Q7Ozs7O0lBQ2xELHdEQUEyQjs7Ozs7SUFBM0I7UUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVELHNGQUFzRjs7Ozs7O0lBQ3RGLG1EQUFzQjs7Ozs7O0lBQXRCLFVBQXVCLElBQVk7UUFDakMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELDRFQUE0RTs7Ozs7SUFDNUUseURBQTRCOzs7OztJQUE1QjtRQUNFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMzQyxDQUFDOztnQkF2QkYsVUFBVTs7SUF3QlgseUJBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXZCWSxrQkFBa0I7Ozs7OztJQUM3QiwyQ0FBMkM7Ozs7O0lBQzNDLDBDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIFNlcnZpw6dvIHF1ZSBpbXBsZW1lbnRhIGEgY29tdW5pY2HDp8OjbyBlbnRyZSBvcyBpdGVtcyBkbyBwby1tZW51LlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9NZW51SXRlbXNTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBzdWJqZWN0UGFyZW50ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICBwcml2YXRlIHN1YmplY3RDaGlsZCA9IG5ldyBTdWJqZWN0PGFueT4oKTtcblxuICAvLyBFbnZpYSBpbmZvcm1hw6fDtWVzIGRvIGNsaWNrIGRvIHBvLW1lbnUtaXRlbSBwYXJhIG8gcG8tbWVudVxuICBzZW5kVG9QYXJlbnRNZW51Q2xpY2tlZChtZW51OiBvYmplY3QpIHtcbiAgICB0aGlzLnN1YmplY3RDaGlsZC5uZXh0KG1lbnUpO1xuICB9XG5cbiAgLy8gUmVjZWJlIGRvIHBvLW1lbnUtaXRlbSBzdWEgaW5mb3JtYcOnw6NvIGRlIGNsaWNrLlxuICByZWNlaXZlRnJvbUNoaWxkTWVudUNsaWNrZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3ViamVjdENoaWxkLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgLy8gRW52aWEgcGFyYSBvcyBwby1tZW51LWl0ZW0gYSByZXNwb3N0YSBkbyBwcm9jZXNzYW1lbnRvIGRlIGNsaWNrIGRlIHVtIHBvLW1lbnUtaXRlbS5cbiAgc2VuZFRvQ2hpbGRNZW51Q2xpY2tlZChtZW51OiBvYmplY3QpIHtcbiAgICB0aGlzLnN1YmplY3RQYXJlbnQubmV4dChtZW51KTtcbiAgfVxuXG4gIC8vIFJlY2ViZSBkbyBwby1tZW51IGFzIGluZm9ybWHDp8O1ZXMgcHJvY2Vzc2FkYXMgZG8gY2xpY2sgZGUgdW0gcG8tbWVudS1pdGVtLlxuICByZWNlaXZlRnJvbVBhcmVudE1lbnVDbGlja2VkKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuc3ViamVjdFBhcmVudC5hc09ic2VydmFibGUoKTtcbiAgfVxufVxuIl19