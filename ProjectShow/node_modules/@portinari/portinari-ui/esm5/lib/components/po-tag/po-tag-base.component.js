/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
import { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';
import { PoTagOrientation } from './enums/po-tag-orientation.enum';
import { PoTagType } from './enums/po-tag-type.enum';
/** @type {?} */
var poTagColors = ((/** @type {?} */ (Object))).values(PoColorPaletteEnum);
/** @type {?} */
var poTagOrientationDefault = PoTagOrientation.Vertical;
/**
 * \@description
 *
 * Este componente permite exibir um valor em forma de um marcador colorido, sendo possível definir uma legenda e realizar customizações
 * na cor, iconografia e tipo.
 *
 * Além disso, é possível definir uma ação que será executada tanto ao *click* quanto através das teclas *enter/space* enquanto navega
 * utilizando a tecla *tab*.
 *
 * Seu uso é recomendado para informações que necessitem de destaque em forma de marcação.
 */
var PoTagBaseComponent = /** @class */ (function () {
    function PoTagBaseComponent() {
        this._orientation = poTagOrientationDefault;
        this.poTagOrientation = PoTagOrientation;
        /**
         * \@optional
         *
         * \@description
         *
         * Ação que será executada ao clicar sobre o `po-tag` e que receberá como parâmetro um objeto contendo o seu valor e tipo.
         */
        this.click = new EventEmitter();
    }
    Object.defineProperty(PoTagBaseComponent.prototype, "color", {
        get: /**
         * @return {?}
         */
        function () {
            return this._color;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define uma cor para a *tag*.
         *
         * Valores válidos:
         *  - <span class="dot po-color-01"></span> `color-01`
         *  - <span class="dot po-color-02"></span> `color-02`
         *  - <span class="dot po-color-03"></span> `color-03`
         *  - <span class="dot po-color-04"></span> `color-04`
         *  - <span class="dot po-color-05"></span> `color-05`
         *  - <span class="dot po-color-06"></span> `color-06`
         *  - <span class="dot po-color-07"></span> `color-07`
         *  - <span class="dot po-color-08"></span> `color-08`
         *  - <span class="dot po-color-09"></span> `color-09`
         *  - <span class="dot po-color-10"></span> `color-10`
         *  - <span class="dot po-color-11"></span> `color-11`
         *  - <span class="dot po-color-12"></span> `color-12`
         *
         * > **Atenção:** A propriedade `p-type` sobrepõe esta definição.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define uma cor para a *tag*.
         *
         * Valores válidos:
         *  - <span class="dot po-color-01"></span> `color-01`
         *  - <span class="dot po-color-02"></span> `color-02`
         *  - <span class="dot po-color-03"></span> `color-03`
         *  - <span class="dot po-color-04"></span> `color-04`
         *  - <span class="dot po-color-05"></span> `color-05`
         *  - <span class="dot po-color-06"></span> `color-06`
         *  - <span class="dot po-color-07"></span> `color-07`
         *  - <span class="dot po-color-08"></span> `color-08`
         *  - <span class="dot po-color-09"></span> `color-09`
         *  - <span class="dot po-color-10"></span> `color-10`
         *  - <span class="dot po-color-11"></span> `color-11`
         *  - <span class="dot po-color-12"></span> `color-12`
         *
         * > **Atenção:** A propriedade `p-type` sobrepõe esta definição.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._color = poTagColors.includes(value) ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTagBaseComponent.prototype, "icon", {
        get: /**
         * @return {?}
         */
        function () {
            return this._icon;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define ou ativa um ícone que será exibido ao lado do valor da *tag*.
         *
         * > Veja os valores válidos na [biblioteca de ícones](guides/icons).
         *
         * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o ícone seja exibido conforme descrições abaixo:
         * - <span class="po-icon po-icon-ok"></span> - `success`
         * - <span class="po-icon po-icon-warning"></span> - `warning`
         * - <span class="po-icon po-icon-close"></span> - `danger`
         * - <span class="po-icon po-icon-info"></span> - `info`
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define ou ativa um ícone que será exibido ao lado do valor da *tag*.
         *
         * > Veja os valores válidos na [biblioteca de ícones](guides/icons).
         *
         * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o ícone seja exibido conforme descrições abaixo:
         * - <span class="po-icon po-icon-ok"></span> - `success`
         * - <span class="po-icon po-icon-warning"></span> - `warning`
         * - <span class="po-icon po-icon-close"></span> - `danger`
         * - <span class="po-icon po-icon-info"></span> - `info`
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.type) {
                this._icon = convertToBoolean(value);
            }
            else {
                this._icon = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTagBaseComponent.prototype, "inverse", {
        get: /**
         * @return {?}
         */
        function () {
            return this._inverse;
        },
        /**
         * @optional
         *
         * @description
         *
         * Ativa a inversão de cores configuradas no componente, possibilitando uma visualização de status ativo e inativo.
         *
         * > A cor do texto, do ícone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,
         * e a cor do fundo fica branca.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Ativa a inversão de cores configuradas no componente, possibilitando uma visualização de status ativo e inativo.
         *
         * > A cor do texto, do ícone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,
         * e a cor do fundo fica branca.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._inverse = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTagBaseComponent.prototype, "orientation", {
        get: /**
         * @return {?}
         */
        function () {
            return this._orientation;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define o *layout* de exibição.
         *
         * @default `vertical`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define o *layout* de exibição.
         *
         * \@default `vertical`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._orientation = ((/** @type {?} */ (Object))).values(PoTagOrientation).includes(value) ? value : poTagOrientationDefault;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTagBaseComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define o tipo da *tag*.
         *
         * Valores válidos:
         *  - `success`: cor verde utilizada para simbolizar sucesso ou êxito.
         *  - `warning`: cor amarela que representa aviso ou advertência.
         *  - `danger`: cor vermelha para erro ou aviso crítico.
         *  - `info`: cor cinza escuro que caracteriza conteúdo informativo.
         *
         * > Quando esta propriedade for definida, irá sobrepor a definição de `p-color` e `p-icon` somente será exibido caso seja `true`.
         *
         * @default `info`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define o tipo da *tag*.
         *
         * Valores válidos:
         *  - `success`: cor verde utilizada para simbolizar sucesso ou êxito.
         *  - `warning`: cor amarela que representa aviso ou advertência.
         *  - `danger`: cor vermelha para erro ou aviso crítico.
         *  - `info`: cor cinza escuro que caracteriza conteúdo informativo.
         *
         * > Quando esta propriedade for definida, irá sobrepor a definição de `p-color` e `p-icon` somente será exibido caso seja `true`.
         *
         * \@default `info`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._type = ((/** @type {?} */ (Object))).values(PoTagType).includes(value) ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    PoTagBaseComponent.propDecorators = {
        color: [{ type: Input, args: ['p-color',] }],
        icon: [{ type: Input, args: ['p-icon',] }],
        inverse: [{ type: Input, args: ['p-inverse',] }],
        label: [{ type: Input, args: ['p-label',] }],
        orientation: [{ type: Input, args: ['p-orientation',] }],
        type: [{ type: Input, args: ['p-type',] }],
        value: [{ type: Input, args: ['p-value',] }],
        click: [{ type: Output, args: ['p-click',] }]
    };
    return PoTagBaseComponent;
}());
export { PoTagBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTagBaseComponent.prototype._color;
    /**
     * @type {?}
     * @private
     */
    PoTagBaseComponent.prototype._icon;
    /**
     * @type {?}
     * @private
     */
    PoTagBaseComponent.prototype._inverse;
    /**
     * @type {?}
     * @private
     */
    PoTagBaseComponent.prototype._orientation;
    /**
     * @type {?}
     * @private
     */
    PoTagBaseComponent.prototype._type;
    /** @type {?} */
    PoTagBaseComponent.prototype.poTagOrientation;
    /**
     * \@optional
     *
     * \@description
     *
     * Define uma legenda que será exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.
     * @type {?}
     */
    PoTagBaseComponent.prototype.label;
    /**
     * Texto da tag.
     * @type {?}
     */
    PoTagBaseComponent.prototype.value;
    /**
     * \@optional
     *
     * \@description
     *
     * Ação que será executada ao clicar sobre o `po-tag` e que receberá como parâmetro um objeto contendo o seu valor e tipo.
     * @type {?}
     */
    PoTagBaseComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,