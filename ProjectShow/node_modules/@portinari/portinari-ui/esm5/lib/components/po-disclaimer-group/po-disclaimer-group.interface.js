/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * \@usedBy
 *
 * PoPageListComponent
 *
 * \@description
 *
 * Interface que representa o objeto `po-disclaimer-group`.
 * @record
 */
export function PoDisclaimerGroup() { }
if (false) {
    /**
     * \@optional
     *
     * \@description
     *
     * Função que será disparada quando a lista de *disclaimers* for modificada.
     * Será passado por parâmetro a nova lista de *disclaimers*.
     * @type {?|undefined}
     */
    PoDisclaimerGroup.prototype.change;
    /**
     *
     * \@description
     *
     * Lista de *disclaimers*.
     *
     * Exemplo:
     * ```
     *  disclaimers: [
     *    { property: 'type', label: 'Hotel', value: 'hotel' },
     *    { property: 'cost', label: '$500,00', value: '500'  },
     *    { property: 'dates', label: '10/05/2018 - 15/05/2018', value: '10/05/2018|15/05/2018'  }
     *   ]
     * ```
     *
     * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referência do array de `PoDisclaimer`.
     *
     * Exemplo:
     * ```
     * this.disclaimerGroup.disclaimers = [...this.disclaimers];
     * ```
     * @type {?}
     */
    PoDisclaimerGroup.prototype.disclaimers;
    /**
     * \@optional
     *
     * \@description
     *
     * Oculta o botão para remover todos os *disclaimers* do grupo.
     *
     * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.
     *
     * \@default `false`
     * @type {?|undefined}
     */
    PoDisclaimerGroup.prototype.hideRemoveAll;
    /**
     * \@optional
     *
     * \@description
     *
     * Título do grupo de *disclaimers*.
     * @type {?}
     */
    PoDisclaimerGroup.prototype.title;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlzY2xhaW1lci1ncm91cC5pbnRlcmZhY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWRpc2NsYWltZXItZ3JvdXAvcG8tZGlzY2xhaW1lci1ncm91cC5pbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFXQSx1Q0EwREM7Ozs7Ozs7Ozs7O0lBaERDLG1DQUFrQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBd0JsQix3Q0FBaUM7Ozs7Ozs7Ozs7Ozs7SUFhakMsMENBQXdCOzs7Ozs7Ozs7SUFTeEIsa0NBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb0Rpc2NsYWltZXIgfSBmcm9tICcuLi9wby1kaXNjbGFpbWVyL3BvLWRpc2NsYWltZXIuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAdXNlZEJ5XG4gKlxuICogUG9QYWdlTGlzdENvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEludGVyZmFjZSBxdWUgcmVwcmVzZW50YSBvIG9iamV0byBgcG8tZGlzY2xhaW1lci1ncm91cGAuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUG9EaXNjbGFpbWVyR3JvdXAge1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEZ1bsOnw6NvIHF1ZSBzZXLDoSBkaXNwYXJhZGEgcXVhbmRvIGEgbGlzdGEgZGUgKmRpc2NsYWltZXJzKiBmb3IgbW9kaWZpY2FkYS5cbiAgICogU2Vyw6EgcGFzc2FkbyBwb3IgcGFyw6JtZXRybyBhIG5vdmEgbGlzdGEgZGUgKmRpc2NsYWltZXJzKi5cbiAgICovXG4gIGNoYW5nZT86IEZ1bmN0aW9uO1xuXG4gIC8qKlxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTGlzdGEgZGUgKmRpc2NsYWltZXJzKi5cbiAgICpcbiAgICogRXhlbXBsbzpcbiAgICogYGBgXG4gICAqICBkaXNjbGFpbWVyczogW1xuICAgKiAgICB7IHByb3BlcnR5OiAndHlwZScsIGxhYmVsOiAnSG90ZWwnLCB2YWx1ZTogJ2hvdGVsJyB9LFxuICAgKiAgICB7IHByb3BlcnR5OiAnY29zdCcsIGxhYmVsOiAnJDUwMCwwMCcsIHZhbHVlOiAnNTAwJyAgfSxcbiAgICogICAgeyBwcm9wZXJ0eTogJ2RhdGVzJywgbGFiZWw6ICcxMC8wNS8yMDE4IC0gMTUvMDUvMjAxOCcsIHZhbHVlOiAnMTAvMDUvMjAxOHwxNS8wNS8yMDE4JyAgfVxuICAgKiAgIF1cbiAgICogYGBgXG4gICAqXG4gICAqIFBhcmEgcXVlIGEgbGlzdGEgZGUgKmRpc2NsYWltZXJzKiBzZWphIGF0dWFsaXphZGEgZGluYW1pY2FtZW50ZSBkZXZlLXNlIHBhc3NhciB1bWEgbm92YSByZWZlcsOqbmNpYSBkbyBhcnJheSBkZSBgUG9EaXNjbGFpbWVyYC5cbiAgICpcbiAgICogRXhlbXBsbzpcbiAgICogYGBgXG4gICAqIHRoaXMuZGlzY2xhaW1lckdyb3VwLmRpc2NsYWltZXJzID0gWy4uLnRoaXMuZGlzY2xhaW1lcnNdO1xuICAgKiBgYGBcbiAgICovXG4gIGRpc2NsYWltZXJzOiBBcnJheTxQb0Rpc2NsYWltZXI+O1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE9jdWx0YSBvIGJvdMOjbyBwYXJhIHJlbW92ZXIgdG9kb3Mgb3MgKmRpc2NsYWltZXJzKiBkbyBncnVwby5cbiAgICpcbiAgICogPiBQb3IgcGFkcsOjbywgbyBtZXNtbyDDqSBleGliaWRvIMOgIHBhcnRpciBkZSBkb2lzIG91IG1haXMgKmRpc2NsYWltZXJzKiBjb20gYSBvcMOnw6NvIGBoaWRlQ2xvc2VgIGhhYmlsaXRhZGEuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIGhpZGVSZW1vdmVBbGw/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFTDrXR1bG8gZG8gZ3J1cG8gZGUgKmRpc2NsYWltZXJzKi5cbiAgICovXG4gIHRpdGxlOiBzdHJpbmc7XG5cbn1cbiJdfQ==