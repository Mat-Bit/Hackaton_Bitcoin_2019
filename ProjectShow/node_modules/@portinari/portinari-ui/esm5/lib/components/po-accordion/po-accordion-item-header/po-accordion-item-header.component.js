/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
var PoAccordionItemHeaderComponent = /** @class */ (function () {
    function PoAccordionItemHeaderComponent() {
        this.expanded = false;
        this.toggle = new EventEmitter();
    }
    /**
     * @return {?}
     */
    PoAccordionItemHeaderComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.expanded = !this.expanded;
        this.toggle.emit(this.expanded);
    };
    PoAccordionItemHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-accordion-item-header',
                    template: "<header class=\"po-accordion-item-header\">\n  <button class=\"po-accordion-item-header-button po-clickable\" (click)=\"onClick()\">\n    <div class=\"po-text-ellipsis po-accordion-item-header-title\">{{ label }}</div>\n    <span #icon class=\"po-icon po-accordion-item-header-icon po-icon-arrow-down\">\n    </span>\n  </button>\n</header>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    PoAccordionItemHeaderComponent.propDecorators = {
        expanded: [{ type: Input, args: ['p-expanded',] }],
        label: [{ type: Input, args: ['p-label',] }],
        toggle: [{ type: Output, args: ['p-toggle',] }]
    };
    return PoAccordionItemHeaderComponent;
}());
export { PoAccordionItemHeaderComponent };
if (false) {
    /** @type {?} */
    PoAccordionItemHeaderComponent.prototype.expanded;
    /** @type {?} */
    PoAccordionItemHeaderComponent.prototype.label;
    /** @type {?} */
    PoAccordionItemHeaderComponent.prototype.toggle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYWNjb3JkaW9uL3BvLWFjY29yZGlvbi1pdGVtLWhlYWRlci9wby1hY2NvcmRpb24taXRlbS1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhHO0lBQUE7UUFPdUIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUkzQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQVEzRCxDQUFDOzs7O0lBTkMsZ0RBQU87OztJQUFQO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFFL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7O2dCQWpCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsa1dBQXNEO29CQUN0RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OzsyQkFHRSxLQUFLLFNBQUMsWUFBWTt3QkFFbEIsS0FBSyxTQUFDLFNBQVM7eUJBRWYsTUFBTSxTQUFDLFVBQVU7O0lBUXBCLHFDQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FkWSw4QkFBOEI7OztJQUV6QyxrREFBK0M7O0lBRS9DLCtDQUFnQzs7SUFFaEMsZ0RBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWFjY29yZGlvbi1pdGVtLWhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAncG8tYWNjb3JkaW9uLWl0ZW0taGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9BY2NvcmRpb25JdGVtSGVhZGVyQ29tcG9uZW50IHtcblxuICBASW5wdXQoJ3AtZXhwYW5kZWQnKSBleHBhbmRlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsOiBzdHJpbmc7XG5cbiAgQE91dHB1dCgncC10b2dnbGUnKSB0b2dnbGUgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgb25DbGljaygpIHtcbiAgICB0aGlzLmV4cGFuZGVkID0gIXRoaXMuZXhwYW5kZWQ7XG5cbiAgICB0aGlzLnRvZ2dsZS5lbWl0KHRoaXMuZXhwYW5kZWQpO1xuICB9XG5cbn1cbiJdfQ==