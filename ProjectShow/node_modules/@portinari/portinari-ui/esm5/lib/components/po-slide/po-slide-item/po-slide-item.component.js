/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { isIEOrEdge } from '../../../utils/util';
import { PoSlideContentTemplateDirective } from '../directives/po-slide-content-template.directive';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para cada item do po-slide.
 */
var PoSlideItemComponent = /** @class */ (function () {
    function PoSlideItemComponent() {
        this.isIEOrEdge = isIEOrEdge();
    }
    /**
     * @return {?}
     */
    PoSlideItemComponent.prototype.setLinkType = /**
     * @return {?}
     */
    function () {
        if (!this.template && this.link) {
            return this.link.startsWith('http') ? 'externalLink' : 'internalLink';
        }
        return 'noLink';
    };
    PoSlideItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-slide-item',
                    template: "<div #slideItem\n  class=\"po-slide-item\"\n  [class.po-slide-item-background-image]=\"!template && isIEOrEdge\"\n  [style.background-image]=\"!template && isIEOrEdge ? 'url(' + image + ')' : ''\"\n  [ngSwitch]=\"setLinkType()\">\n\n  <!-- slide com link interno -->\n  <a\n    *ngSwitchCase=\"'internalLink'\" \n    class=\"po-slide-item-link\" \n    [routerLink]=\"link\">\n    <ng-container \n      [ngTemplateOutlet]=\"slideItemImage\" \n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image }}\">\n    </ng-container>\n  </a>\n  <!-- slide com link externo -->\n  <a \n    *ngSwitchCase=\"'externalLink'\"\n    class=\"po-slide-item-link\" \n    [href]=\"link\">\n    <ng-container \n      [ngTemplateOutlet]=\"slideItemImage\" \n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image }}\">\n    </ng-container>\n  </a>\n  <!-- slide sem link -->\n  <a \n    *ngSwitchCase=\"'noLink'\"\n    [ngClass]=\"action ? 'po-slide-item-link' : 'po-slide-item-no-link'\"\n    (click)=\"action ? action(data) : undefined\">\n    <ng-container \n      [ngTemplateOutlet]=\"template ? slideItemTemplate : slideItemImage\"\n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image, data: data }}\">\n    </ng-container>\n  </a>\n\n</div>\n\n<ng-template #slideItemTemplate let-item='item'; let-index='index'>\n  <div\n    *ngIf=\"template\"\n    class=\"po-slide-item-content\">\n    <ng-template\n      [ngTemplateOutlet]=\"template.templateRef\"\n      [ngTemplateOutletContext]=\"{ $implicit: item.data, index: index }\">\n    </ng-template>\n  </div>\n</ng-template>\n\n<ng-template #slideItemImage let-item='item'>\n  <img\n    *ngIf=\"item.image && !isIEOrEdge\"\n    class=\"po-slide-image\"\n    [alt]=\"item.alt\"\n    [src]=\"item.image\"\n    [style.height.px]=\"imageHeight\">\n</ng-template>\n"
                }] }
    ];
    PoSlideItemComponent.propDecorators = {
        itemElement: [{ type: ViewChild, args: ['slideItem', { static: true },] }],
        action: [{ type: Input, args: ['p-action',] }],
        alt: [{ type: Input, args: ['p-alt',] }],
        data: [{ type: Input, args: ['p-data',] }],
        image: [{ type: Input, args: ['p-image',] }],
        imageHeight: [{ type: Input, args: ['p-image-height',] }],
        template: [{ type: Input, args: ['p-template',] }],
        link: [{ type: Input, args: ['p-link',] }]
    };
    return PoSlideItemComponent;
}());
export { PoSlideItemComponent };
if (false) {
    /** @type {?} */
    PoSlideItemComponent.prototype.itemElement;
    /** @type {?} */
    PoSlideItemComponent.prototype.isIEOrEdge;
    /**
     * Ação executada ao clicar em uma imagem
     * @type {?}
     */
    PoSlideItemComponent.prototype.action;
    /**
     * Texto alternativo quando a imagem não é encontrada
     * @type {?}
     */
    PoSlideItemComponent.prototype.alt;
    /**
     * Dados para o template customizado
     * @type {?}
     */
    PoSlideItemComponent.prototype.data;
    /**
     * Caminho da imagem
     * @type {?}
     */
    PoSlideItemComponent.prototype.image;
    /**
     * Altura da imagem
     * @type {?}
     */
    PoSlideItemComponent.prototype.imageHeight;
    /**
     * Template customizado
     * @type {?}
     */
    PoSlideItemComponent.prototype.template;
    /**
     * Link executado ao clicar em uma imagem
     * @type {?}
     */
    PoSlideItemComponent.prototype.link;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXNsaWRlL3BvLXNsaWRlLWl0ZW0vcG8tc2xpZGUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWpELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDOzs7Ozs7OztBQVNwRztJQUFBO1FBUUUsZUFBVSxHQUFRLFVBQVUsRUFBRSxDQUFDO0lBK0JqQyxDQUFDOzs7O0lBUkMsMENBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztTQUN2RTtRQUVELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7O2dCQXJDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLG96REFBNkM7aUJBQzlDOzs7OEJBR0UsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7eUJBS3ZDLEtBQUssU0FBQyxVQUFVO3NCQUdoQixLQUFLLFNBQUMsT0FBTzt1QkFHYixLQUFLLFNBQUMsUUFBUTt3QkFHZCxLQUFLLFNBQUMsU0FBUzs4QkFHZixLQUFLLFNBQUMsZ0JBQWdCOzJCQUd0QixLQUFLLFNBQUMsWUFBWTt1QkFHbEIsS0FBSyxTQUFDLFFBQVE7O0lBVWpCLDJCQUFDO0NBQUEsQUF2Q0QsSUF1Q0M7U0FuQ1ksb0JBQW9COzs7SUFFL0IsMkNBQWtFOztJQUVsRSwwQ0FBK0I7Ozs7O0lBRy9CLHNDQUFvQzs7Ozs7SUFHcEMsbUNBQTRCOzs7OztJQUc1QixvQ0FBa0M7Ozs7O0lBR2xDLHFDQUFnQzs7Ozs7SUFHaEMsMkNBQTZDOzs7OztJQUc3Qyx3Q0FBK0Q7Ozs7O0lBRy9ELG9DQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBpc0lFT3JFZGdlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvU2xpZGVDb250ZW50VGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL3BvLXNsaWRlLWNvbnRlbnQtdGVtcGxhdGUuZGlyZWN0aXZlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgY2FkYSBpdGVtIGRvIHBvLXNsaWRlLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1zbGlkZS1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXNsaWRlLWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvU2xpZGVJdGVtQ29tcG9uZW50IHtcblxuICBAVmlld0NoaWxkKCdzbGlkZUl0ZW0nLCB7IHN0YXRpYzogdHJ1ZSB9KSBpdGVtRWxlbWVudDogRWxlbWVudFJlZjtcblxuICBpc0lFT3JFZGdlOiBhbnkgPSBpc0lFT3JFZGdlKCk7XG5cbiAgLyoqIEHDp8OjbyBleGVjdXRhZGEgYW8gY2xpY2FyIGVtIHVtYSBpbWFnZW0gKi9cbiAgQElucHV0KCdwLWFjdGlvbicpIGFjdGlvbjogRnVuY3Rpb247XG5cbiAgLyoqIFRleHRvIGFsdGVybmF0aXZvIHF1YW5kbyBhIGltYWdlbSBuw6NvIMOpIGVuY29udHJhZGEgKi9cbiAgQElucHV0KCdwLWFsdCcpIGFsdDogc3RyaW5nO1xuXG4gIC8qKiBEYWRvcyBwYXJhIG8gdGVtcGxhdGUgY3VzdG9taXphZG8gKi9cbiAgQElucHV0KCdwLWRhdGEnKSBkYXRhOiBBcnJheTxhbnk+O1xuXG4gIC8qKiBDYW1pbmhvIGRhIGltYWdlbSAqL1xuICBASW5wdXQoJ3AtaW1hZ2UnKSBpbWFnZTogc3RyaW5nO1xuXG4gIC8qKiBBbHR1cmEgZGEgaW1hZ2VtICovXG4gIEBJbnB1dCgncC1pbWFnZS1oZWlnaHQnKSBpbWFnZUhlaWdodDogbnVtYmVyO1xuXG4gIC8qKiBUZW1wbGF0ZSBjdXN0b21pemFkbyAqL1xuICBASW5wdXQoJ3AtdGVtcGxhdGUnKSB0ZW1wbGF0ZTogUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZTtcblxuICAvKiogTGluayBleGVjdXRhZG8gYW8gY2xpY2FyIGVtIHVtYSBpbWFnZW0gKi9cbiAgQElucHV0KCdwLWxpbmsnKSBsaW5rOiBzdHJpbmc7XG5cbiAgc2V0TGlua1R5cGUoKSB7XG4gICAgaWYgKCF0aGlzLnRlbXBsYXRlICYmIHRoaXMubGluaykge1xuICAgICAgcmV0dXJuIHRoaXMubGluay5zdGFydHNXaXRoKCdodHRwJykgPyAnZXh0ZXJuYWxMaW5rJyA6ICdpbnRlcm5hbExpbmsnO1xuICAgIH1cblxuICAgIHJldHVybiAnbm9MaW5rJztcbiAgfVxuXG59XG4iXX0=