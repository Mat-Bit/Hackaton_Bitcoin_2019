/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a seta que controla a passagem de itens do `po-slide`.
 */
var PoSlideControlComponent = /** @class */ (function () {
    function PoSlideControlComponent() {
        /**
         * Evento emitido ao clicar em um controle.
         */
        this.click = new EventEmitter();
    }
    PoSlideControlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-slide-control',
                    template: "<div class=\"po-slide-control-{{control}}\">\n  <div class=\"po-slide-arrow-circle\" (click)=\"click.emit();\">\n    <div class=\"po-slide-arrow po-slide-arrow-{{control}}\"></div>\n  </div>\n</div>\n"
                }] }
    ];
    PoSlideControlComponent.propDecorators = {
        control: [{ type: Input, args: ['p-control',] }],
        click: [{ type: Output, args: ['p-click',] }]
    };
    return PoSlideControlComponent;
}());
export { PoSlideControlComponent };
if (false) {
    /**
     * Tipo de controle que aceita os valores: 'previous' e 'next'.
     * @type {?}
     */
    PoSlideControlComponent.prototype.control;
    /**
     * Evento emitido ao clicar em um controle.
     * @type {?}
     */
    PoSlideControlComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXNsaWRlL3BvLXNsaWRlLWNvbnRyb2wvcG8tc2xpZGUtY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBU3ZFO0lBQUE7Ozs7UUFVcUIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFFckQsQ0FBQzs7Z0JBWkEsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLG9OQUFnRDtpQkFDakQ7OzswQkFJRSxLQUFLLFNBQUMsV0FBVzt3QkFHakIsTUFBTSxTQUFDLFNBQVM7O0lBRW5CLDhCQUFDO0NBQUEsQUFaRCxJQVlDO1NBUlksdUJBQXVCOzs7Ozs7SUFHbEMsMENBQW9DOzs7OztJQUdwQyx3Q0FBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBhIHNldGEgcXVlIGNvbnRyb2xhIGEgcGFzc2FnZW0gZGUgaXRlbnMgZG8gYHBvLXNsaWRlYC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tc2xpZGUtY29udHJvbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1zbGlkZS1jb250cm9sLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1NsaWRlQ29udHJvbENvbXBvbmVudCB7XG5cbiAgLyoqIFRpcG8gZGUgY29udHJvbGUgcXVlIGFjZWl0YSBvcyB2YWxvcmVzOiAncHJldmlvdXMnIGUgJ25leHQnLiAqL1xuICBASW5wdXQoJ3AtY29udHJvbCcpIGNvbnRyb2w6IHN0cmluZztcblxuICAvKiogRXZlbnRvIGVtaXRpZG8gYW8gY2xpY2FyIGVtIHVtIGNvbnRyb2xlLiAqL1xuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxufVxuIl19