/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectorRef } from '@angular/core';
var PoGridHeadComponent = /** @class */ (function () {
    function PoGridHeadComponent(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this.align = 'left';
        this.boolean = false;
        this.position = '';
        this.tabIndex = -1;
    }
    Object.defineProperty(PoGridHeadComponent.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            return this._width ? this._width + "px" : '100%';
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._width = value;
        },
        enumerable: true,
        configurable: true
    });
    PoGridHeadComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-grid-head',
                    template: "<div>\n  <div [id]=\"position\"\n    class=\"po-grid-head-content po-grid-head-{{ align }}\"\n    tabindex=\"{{ title ? 0 : -1 }}\">\n    <span>{{ title || '&nbsp;' }}</span>\n  </div>\n</div>\n\n",
                    styles: ["\n  .po-grid-head-content {\n    border-bottom: 2px solid #ceeaf2;\n    border-left: none;\n    border-right: 1px solid #eceeee;\n    border-top: none;\n    color: #0c9abe;\n    font-family: NunitoSans-bold;\n    font-size: 14px;\n    height: 44px;\n    line-height: 1.71;\n    margin: 0;\n    max-height: 44px;\n    min-height: 44px;\n    overflow: hidden;\n    padding: 10px 16px;\n    text-align: left;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .po-grid-head-center {\n    text-align: center;\n  }\n\n  .po-grid-head-right {\n    text-align: right;\n  }\n\n  .po-grid-head-content:focus {\n    border: 1px solid #0c9abe;\n    outline: none;\n  }\n  "]
                }] }
    ];
    /** @nocollapse */
    PoGridHeadComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    PoGridHeadComponent.propDecorators = {
        align: [{ type: Input, args: ['p-align',] }],
        boolean: [{ type: Input, args: ['p-freeze',] }],
        position: [{ type: Input, args: ['p-position',] }],
        tabIndex: [{ type: Input, args: ['p-tab-index',] }],
        width: [{ type: Input, args: ['p-width',] }],
        title: [{ type: Input, args: ['p-title',] }]
    };
    return PoGridHeadComponent;
}());
export { PoGridHeadComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoGridHeadComponent.prototype._width;
    /** @type {?} */
    PoGridHeadComponent.prototype.align;
    /** @type {?} */
    PoGridHeadComponent.prototype.boolean;
    /** @type {?} */
    PoGridHeadComponent.prototype.position;
    /** @type {?} */
    PoGridHeadComponent.prototype.tabIndex;
    /** @type {?} */
    PoGridHeadComponent.prototype.title;
    /**
     * @type {?}
     * @private
     */
    PoGridHeadComponent.prototype.changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ3JpZC1oZWFkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZ3JpZC9wby1ncmlkLWhlYWQvcG8tZ3JpZC1oZWFkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXlCLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGO0lBNERFLDZCQUFvQixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQWpCdEMsVUFBSyxHQUFZLE1BQU0sQ0FBQztRQUV2QixZQUFPLEdBQWEsS0FBSyxDQUFDO1FBRXhCLGFBQVEsR0FBWSxFQUFFLENBQUM7UUFFdEIsYUFBUSxHQUFZLENBQUMsQ0FBQyxDQUFDO0lBV2UsQ0FBQztJQVQ3RCxzQkFBc0Isc0NBQUs7Ozs7UUFHM0I7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFJLElBQUksQ0FBQyxNQUFNLE9BQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ25ELENBQUM7Ozs7O1FBTEQsVUFBNEIsS0FBd0I7WUFDbEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7O2dCQXJERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLGdOQUE0Qzs2QkFFbkMsc3FCQWlDUjtpQkFDRjs7OztnQkF4Q2lELGlCQUFpQjs7O3dCQTZDaEUsS0FBSyxTQUFDLFNBQVM7MEJBRWYsS0FBSyxTQUFDLFVBQVU7MkJBRWhCLEtBQUssU0FBQyxZQUFZOzJCQUVsQixLQUFLLFNBQUMsYUFBYTt3QkFFbkIsS0FBSyxTQUFDLFNBQVM7d0JBT2YsS0FBSyxTQUFDLFNBQVM7O0lBSWxCLDBCQUFDO0NBQUEsQUE5REQsSUE4REM7U0F2QlksbUJBQW1COzs7Ozs7SUFFOUIscUNBQWtDOztJQUVsQyxvQ0FBMEM7O0lBRTFDLHNDQUE2Qzs7SUFFN0MsdUNBQTRDOztJQUU1Qyx1Q0FBNkM7O0lBUzdDLG9DQUFpQzs7Ozs7SUFFckIsZ0RBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1ncmlkLWhlYWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tZ3JpZC1oZWFkLmNvbXBvbmVudC5odG1sJyxcbiAgLy8gc3R5bGVVcmxzOiBbJy4vcG8tZ3JpZC1oZWFkLmNvbXBvbmVudC5jc3MnXVxuICBzdHlsZXM6IFtgXG4gIC5wby1ncmlkLWhlYWQtY29udGVudCB7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjZWVhZjI7XG4gICAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2VjZWVlZTtcbiAgICBib3JkZXItdG9wOiBub25lO1xuICAgIGNvbG9yOiAjMGM5YWJlO1xuICAgIGZvbnQtZmFtaWx5OiBOdW5pdG9TYW5zLWJvbGQ7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICBsaW5lLWhlaWdodDogMS43MTtcbiAgICBtYXJnaW46IDA7XG4gICAgbWF4LWhlaWdodDogNDRweDtcbiAgICBtaW4taGVpZ2h0OiA0NHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcGFkZGluZzogMTBweCAxNnB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgfVxuXG4gIC5wby1ncmlkLWhlYWQtY2VudGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAucG8tZ3JpZC1oZWFkLXJpZ2h0IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuXG4gIC5wby1ncmlkLWhlYWQtY29udGVudDpmb2N1cyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzBjOWFiZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIGBdXG59KVxuZXhwb3J0IGNsYXNzIFBvR3JpZEhlYWRDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX3dpZHRoOiAoc3RyaW5nIHwgbnVtYmVyKTtcblxuICBASW5wdXQoJ3AtYWxpZ24nKSBhbGlnbj86IHN0cmluZyA9ICdsZWZ0JztcblxuICBASW5wdXQoJ3AtZnJlZXplJykgYm9vbGVhbj86IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoJ3AtcG9zaXRpb24nKSBwb3NpdGlvbj86IHN0cmluZyA9ICcnO1xuXG4gIEBJbnB1dCgncC10YWItaW5kZXgnKSB0YWJJbmRleD86IG51bWJlciA9IC0xO1xuXG4gIEBJbnB1dCgncC13aWR0aCcpIHNldCB3aWR0aCh2YWx1ZTogKHN0cmluZyB8IG51bWJlcikpIHtcbiAgICB0aGlzLl93aWR0aCA9IHZhbHVlO1xuICB9XG4gIGdldCB3aWR0aCgpOiAoc3RyaW5nIHwgbnVtYmVyKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dpZHRoID8gYCR7dGhpcy5fd2lkdGh9cHhgIDogJzEwMCUnO1xuICB9XG5cbiAgQElucHV0KCdwLXRpdGxlJykgdGl0bGU/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxuXG59XG4iXX0=