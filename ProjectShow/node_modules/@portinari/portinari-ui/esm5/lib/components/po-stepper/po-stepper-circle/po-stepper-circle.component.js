/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { PoStepperStatus } from '../enums/po-stepper-status.enum';
/** @type {?} */
var poMediumStepSize = 32;
/** @type {?} */
var poLargeStepSize = 48;
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por exibir os círculos dos *steps*.
 */
var PoStepperCircleComponent = /** @class */ (function () {
    function PoStepperCircleComponent() {
    }
    Object.defineProperty(PoStepperCircleComponent.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === PoStepperStatus.Active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoStepperCircleComponent.prototype, "isDefault", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === PoStepperStatus.Default;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoStepperCircleComponent.prototype, "isDisabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === PoStepperStatus.Disabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoStepperCircleComponent.prototype, "isDone", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === PoStepperStatus.Done;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoStepperCircleComponent.prototype, "isError", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === PoStepperStatus.Error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoStepperCircleComponent.prototype, "isLargeStep", {
        get: /**
         * @return {?}
         */
        function () {
            return this.size >= poLargeStepSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoStepperCircleComponent.prototype, "isMediumStep", {
        get: /**
         * @return {?}
         */
        function () {
            return this.size >= poMediumStepSize && !this.isLargeStep;
        },
        enumerable: true,
        configurable: true
    });
    PoStepperCircleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-stepper-circle',
                    template: "<div class=\"po-stepper-circle\"\n  [class.po-stepper-circle-with-icon]=\"icons\"\n  [style.height.px]=\"size\"\n  [style.width.px]=\"size\"\n  [tabindex]=\"isDisabled ? -1 : 0\">\n\n  <span class=\"po-stepper-circle-content\"\n    [class.po-icon]=\"icons\"\n    [class.po-icon-exclamation]=\"icons && isError\"\n    [class.po-icon-info]=\"icons && (isActive || isDefault || isDisabled)\"\n    [class.po-icon-ok]=\"icons && isDone\"\n    [class.po-stepper-circle-content-lg]=\"isLargeStep\"\n    [class.po-stepper-circle-content-md]=\"isMediumStep\">\n\n    {{ !icons ? content: '' }}\n  </span>\n</div>\n"
                }] }
    ];
    PoStepperCircleComponent.propDecorators = {
        content: [{ type: Input, args: ['p-content',] }],
        icons: [{ type: Input, args: ['p-icons',] }],
        size: [{ type: Input, args: ['p-size',] }],
        status: [{ type: Input, args: ['p-status',] }]
    };
    return PoStepperCircleComponent;
}());
export { PoStepperCircleComponent };
if (false) {
    /** @type {?} */
    PoStepperCircleComponent.prototype.content;
    /** @type {?} */
    PoStepperCircleComponent.prototype.icons;
    /** @type {?} */
    PoStepperCircleComponent.prototype.size;
    /** @type {?} */
    PoStepperCircleComponent.prototype.status;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc3RlcHBlci1jaXJjbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1zdGVwcGVyL3BvLXN0ZXBwZXItY2lyY2xlL3BvLXN0ZXBwZXItY2lyY2xlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOztJQUU1RCxnQkFBZ0IsR0FBRyxFQUFFOztJQUNyQixlQUFlLEdBQUcsRUFBRTs7Ozs7Ozs7QUFTMUI7SUFBQTtJQThDQSxDQUFDO0lBNUJDLHNCQUFJLDhDQUFROzs7O1FBQVo7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLE1BQU0sQ0FBQztRQUNoRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLCtDQUFTOzs7O1FBQWI7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLE9BQU8sQ0FBQztRQUNqRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGdEQUFVOzs7O1FBQWQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLFFBQVEsQ0FBQztRQUNsRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDRDQUFNOzs7O1FBQVY7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLElBQUksQ0FBQztRQUM5QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDZDQUFPOzs7O1FBQVg7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLEtBQUssQ0FBQztRQUMvQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGlEQUFXOzs7O1FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksZUFBZSxDQUFDO1FBQ3RDLENBQUM7OztPQUFBO0lBRUQsc0JBQUksa0RBQVk7Ozs7UUFBaEI7WUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksZ0JBQWdCLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzVELENBQUM7OztPQUFBOztnQkE1Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLHltQkFBaUQ7aUJBQ2xEOzs7MEJBSUUsS0FBSyxTQUFDLFdBQVc7d0JBR2pCLEtBQUssU0FBQyxTQUFTO3VCQUdmLEtBQUssU0FBQyxRQUFRO3lCQUdkLEtBQUssU0FBQyxVQUFVOztJQThCbkIsK0JBQUM7Q0FBQSxBQTlDRCxJQThDQztTQTFDWSx3QkFBd0I7OztJQUduQywyQ0FBaUM7O0lBR2pDLHlDQUFpQzs7SUFHakMsd0NBQThCOztJQUc5QiwwQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvU3RlcHBlclN0YXR1cyB9IGZyb20gJy4uL2VudW1zL3BvLXN0ZXBwZXItc3RhdHVzLmVudW0nO1xuXG5jb25zdCBwb01lZGl1bVN0ZXBTaXplID0gMzI7XG5jb25zdCBwb0xhcmdlU3RlcFNpemUgPSA0ODtcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgZXhpYmlyIG9zIGPDrXJjdWxvcyBkb3MgKnN0ZXBzKi5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tc3RlcHBlci1jaXJjbGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tc3RlcHBlci1jaXJjbGUuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvU3RlcHBlckNpcmNsZUNvbXBvbmVudCB7XG5cbiAgLy8gQ29udGXDumRvIHF1ZSBpcsOhIGFwYXJlY2VyIG5vIGPDrXJjdWxvIGRvICpzdGVwKi5cbiAgQElucHV0KCdwLWNvbnRlbnQnKSBjb250ZW50OiBhbnk7XG5cbiAgLy8gRGVmaW5lIHNlIHNlcsOjbyBleGliaWRvcyDDrWNvbmVzIG5vIGx1Z2FyIGRlIG7Dum1lcm9zIG5vcyBzdGVwcy5cbiAgQElucHV0KCdwLWljb25zJykgaWNvbnM6IGJvb2xlYW47XG5cbiAgLy8gVGFtYW5obyBkbyAqc3RlcC1jaXJjbGUqLlxuICBASW5wdXQoJ3Atc2l6ZScpIHNpemU6IG51bWJlcjtcblxuICAvLyBTdGF0dXMgZG8gKnN0ZXAqLlxuICBASW5wdXQoJ3Atc3RhdHVzJykgc3RhdHVzOiBzdHJpbmc7XG5cbiAgZ2V0IGlzQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gUG9TdGVwcGVyU3RhdHVzLkFjdGl2ZTtcbiAgfVxuXG4gIGdldCBpc0RlZmF1bHQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdHVzID09PSBQb1N0ZXBwZXJTdGF0dXMuRGVmYXVsdDtcbiAgfVxuXG4gIGdldCBpc0Rpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gUG9TdGVwcGVyU3RhdHVzLkRpc2FibGVkO1xuICB9XG5cbiAgZ2V0IGlzRG9uZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09IFBvU3RlcHBlclN0YXR1cy5Eb25lO1xuICB9XG5cbiAgZ2V0IGlzRXJyb3IoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdHVzID09PSBQb1N0ZXBwZXJTdGF0dXMuRXJyb3I7XG4gIH1cblxuICBnZXQgaXNMYXJnZVN0ZXAoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA+PSBwb0xhcmdlU3RlcFNpemU7XG4gIH1cblxuICBnZXQgaXNNZWRpdW1TdGVwKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnNpemUgPj0gcG9NZWRpdW1TdGVwU2l6ZSAmJiAhdGhpcy5pc0xhcmdlU3RlcDtcbiAgfVxuXG59XG4iXX0=