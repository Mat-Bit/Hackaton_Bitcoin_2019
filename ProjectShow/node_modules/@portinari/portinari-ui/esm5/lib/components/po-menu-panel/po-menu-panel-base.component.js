/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { isExternalLink } from '../../utils/util';
/**
 * \@description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
var PoMenuPanelBaseComponent = /** @class */ (function () {
    function PoMenuPanelBaseComponent() {
    }
    Object.defineProperty(PoMenuPanelBaseComponent.prototype, "menus", {
        get: /**
         * @return {?}
         */
        function () {
            return this._menus;
        },
        /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
        set: /**
         * Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio.
         * @param {?} menus
         * @return {?}
         */
        function (menus) {
            this._menus = Array.isArray(menus) ? menus : [];
            this.setMenuExtraProperties(this._menus);
            this.validateMenus(this._menus);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    PoMenuPanelBaseComponent.prototype.setMenuExtraProperties = /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    function (menus) {
        var _this = this;
        menus.forEach((/**
         * @param {?} menuItem
         * @return {?}
         */
        function (menuItem) { return _this.setMenuItemProperties((/** @type {?} */ (menuItem))); }));
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    PoMenuPanelBaseComponent.prototype.setMenuItemProperties = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    PoMenuPanelBaseComponent.prototype.setMenuType = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    PoMenuPanelBaseComponent.prototype.validateMenu = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');
        }
    };
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    PoMenuPanelBaseComponent.prototype.validateMenus = /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    function (menus) {
        var _this = this;
        menus.forEach((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) { return _this.validateMenu(menu); }));
    };
    PoMenuPanelBaseComponent.propDecorators = {
        menus: [{ type: Input, args: ['p-menus',] }]
    };
    return PoMenuPanelBaseComponent;
}());
export { PoMenuPanelBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoMenuPanelBaseComponent.prototype._menus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbWVudS1wYW5lbC9wby1tZW51LXBhbmVsLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7Ozs7OztBQWNsRDtJQUFBO0lBbURBLENBQUM7SUE5Q0Msc0JBQXNCLDJDQUFLOzs7O1FBTzNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFWRCw0SEFBNEg7Ozs7OztRQUM1SCxVQUE0QixLQUE2QjtZQUN2RCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBRWhELElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDekMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEMsQ0FBQzs7O09BQUE7Ozs7OztJQU1PLHlEQUFzQjs7Ozs7SUFBOUIsVUFBK0IsS0FBNkI7UUFBNUQsaUJBRUM7UUFEQyxLQUFLLENBQUMsT0FBTzs7OztRQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsS0FBSSxDQUFDLHFCQUFxQixDQUFDLG1CQUEwQixRQUFRLEVBQUEsQ0FBQyxFQUE5RCxDQUE4RCxFQUFDLENBQUM7SUFDNUYsQ0FBQzs7Ozs7O0lBRU8sd0RBQXFCOzs7OztJQUE3QixVQUE4QixRQUFpQztRQUM3RCxRQUFRLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQyxFQUFFLElBQUksSUFBSSxFQUFFLENBQUM7UUFDcEMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7OztJQUVPLDhDQUFXOzs7OztJQUFuQixVQUFvQixRQUF5QjtRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqQyxPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7Ozs7OztJQUVPLCtDQUFZOzs7OztJQUFwQixVQUFxQixRQUF5QjtRQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRTtZQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLHNEQUFzRCxDQUFDLENBQUM7U0FDekU7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7U0FDeEU7SUFDSCxDQUFDOzs7Ozs7SUFFTyxnREFBYTs7Ozs7SUFBckIsVUFBc0IsS0FBSztRQUEzQixpQkFFQztRQURDLEtBQUssQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUF2QixDQUF1QixFQUFDLENBQUM7SUFDakQsQ0FBQzs7d0JBNUNBLEtBQUssU0FBQyxTQUFTOztJQThDbEIsK0JBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQW5EWSx3QkFBd0I7Ozs7OztJQUVuQywwQ0FBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IHY0IGFzIHV1aWQgfSBmcm9tICd1dWlkJztcbmltcG9ydCB7IGlzRXh0ZXJuYWxMaW5rIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbSB9IGZyb20gJy4vcG8tbWVudS1wYW5lbC1pdGVtL3BvLW1lbnUtcGFuZWwtaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwgfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0taW50ZXJuYWwuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RlIMOpIHVtIGNvbXBvbmVudGUgZGUgbWVudSBsYXRlcmFsIGNvbXBvc3RvIGFwZW5hcyBwb3Igw61jb25lcyBlIGNvbSB1bSBuw612ZWwsIHV0aWxpemFkbyBwYXJhIG5hdmVnYcOnw6NvXG4gKiBlbSBww6FnaW5hcyBpbnRlcm5hcywgZXh0ZXJuYXMgZGEgYXBsaWNhw6fDo28gb3UgYWNpb25hIHVtYSBhw6fDo28uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1tZW51LXBhbmVsYCByZWNlYmUgdW1hIGxpc3RhIGRlIG9iamV0b3MgZG8gdGlwbyBgTWVudVBhbmVsSXRlbWAgY29tIGFzIGluZm9ybWHDp8O1ZXMgZG9zXG4gKiBpdGVucyBkZSBtZW51IGNvbW8gdGV4dG9zLCBsaW5rcyBwYXJhIHJlZGlyZWNpb25hbWVudG8sIGHDp8O1ZXMgZSDDrWNvbmVzLlxuICovXG5leHBvcnQgY2xhc3MgUG9NZW51UGFuZWxCYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9tZW51cztcblxuICAvKiogTGlzdGEgZG9zIGl0ZW5zIGRvIGBwby1tZW51LXBhbmVsYC4gU2UgbyB2YWxvciBlc3RpdmVyIGluZGVmaW5pZG8gb3UgaW52w6FsaWRvLCBzZXLDoSBpbmljaWFsaXphZG8gY29tbyB1bSBhcnJheSB2YXppby4gKi9cbiAgQElucHV0KCdwLW1lbnVzJykgc2V0IG1lbnVzKG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XG4gICAgdGhpcy5fbWVudXMgPSBBcnJheS5pc0FycmF5KG1lbnVzKSA/IG1lbnVzIDogW107XG5cbiAgICB0aGlzLnNldE1lbnVFeHRyYVByb3BlcnRpZXModGhpcy5fbWVudXMpO1xuICAgIHRoaXMudmFsaWRhdGVNZW51cyh0aGlzLl9tZW51cyk7XG4gIH1cblxuICBnZXQgbWVudXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lbnVzO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRNZW51RXh0cmFQcm9wZXJ0aWVzKG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XG4gICAgbWVudXMuZm9yRWFjaChtZW51SXRlbSA9PiB0aGlzLnNldE1lbnVJdGVtUHJvcGVydGllcyg8UG9NZW51UGFuZWxJdGVtSW50ZXJuYWw+IG1lbnVJdGVtKSk7XG4gIH1cblxuICBwcml2YXRlIHNldE1lbnVJdGVtUHJvcGVydGllcyhtZW51SXRlbTogUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwpIHtcbiAgICBtZW51SXRlbS5pZCA9IG1lbnVJdGVtLmlkIHx8IHV1aWQoKTtcbiAgICBtZW51SXRlbS50eXBlID0gdGhpcy5zZXRNZW51VHlwZShtZW51SXRlbSk7XG4gIH1cblxuICBwcml2YXRlIHNldE1lbnVUeXBlKG1lbnVJdGVtOiBQb01lbnVQYW5lbEl0ZW0pOiBzdHJpbmcge1xuICAgIGlmICghbWVudUl0ZW0ubGluaykge1xuICAgICAgcmV0dXJuICdub0xpbmsnO1xuICAgIH1cblxuICAgIGlmIChpc0V4dGVybmFsTGluayhtZW51SXRlbS5saW5rKSkge1xuICAgICAgcmV0dXJuICdleHRlcm5hbExpbmsnO1xuICAgIH1cblxuICAgIHJldHVybiAnaW50ZXJuYWxMaW5rJztcbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVNZW51KG1lbnVJdGVtOiBQb01lbnVQYW5lbEl0ZW0pIHtcbiAgICBpZiAoIW1lbnVJdGVtLmxhYmVsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ08gYXRyaWJ1dG8gUG9NZW51UGFuZWxJdGVtLmxhYmVsIG7Do28gcG9kZSBzZXIgdmF6aW8uJyk7XG4gICAgfVxuXG4gICAgaWYgKCFtZW51SXRlbS5pY29uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ08gYXRyaWJ1dG8gUG9NZW51UGFuZWxJdGVtLmljb24gbsOjbyBwb2RlIHNlciB2YXppby4nKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHZhbGlkYXRlTWVudXMobWVudXMpOiB2b2lkIHtcbiAgICBtZW51cy5mb3JFYWNoKG1lbnUgPT4gdGhpcy52YWxpZGF0ZU1lbnUobWVudSkpO1xuICB9XG5cbn1cbiJdfQ==