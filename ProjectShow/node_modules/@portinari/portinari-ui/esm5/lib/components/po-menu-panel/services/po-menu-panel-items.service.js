/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Serviço que implementa a comunicação entre os items do po-menu-panel.
 */
var PoMenuPanelItemsService = /** @class */ (function () {
    function PoMenuPanelItemsService() {
        this.subjectChild = new Subject();
        this.subjectParent = new Subject();
    }
    // Recebe do po-menu-panel-item sua informação de click.
    // Recebe do po-menu-panel-item sua informação de click.
    /**
     * @return {?}
     */
    PoMenuPanelItemsService.prototype.receiveFromChildMenuClicked = 
    // Recebe do po-menu-panel-item sua informação de click.
    /**
     * @return {?}
     */
    function () {
        return this.subjectChild.asObservable();
    };
    // Recebe do po-menu-panel as informações processadas do click de um po-menu-panel-item.
    // Recebe do po-menu-panel as informações processadas do click de um po-menu-panel-item.
    /**
     * @return {?}
     */
    PoMenuPanelItemsService.prototype.receiveFromParentMenuClicked = 
    // Recebe do po-menu-panel as informações processadas do click de um po-menu-panel-item.
    /**
     * @return {?}
     */
    function () {
        return this.subjectParent.asObservable();
    };
    // Envia informações do click do po-menu-panel-item para o po-menu
    // Envia informações do click do po-menu-panel-item para o po-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    PoMenuPanelItemsService.prototype.sendToParentMenuClicked = 
    // Envia informações do click do po-menu-panel-item para o po-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.subjectChild.next(menu);
    };
    // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.
    // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    PoMenuPanelItemsService.prototype.sendToChildMenuClicked = 
    // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.subjectParent.next(menu);
    };
    PoMenuPanelItemsService.decorators = [
        { type: Injectable }
    ];
    return PoMenuPanelItemsService;
}());
export { PoMenuPanelItemsService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoMenuPanelItemsService.prototype.subjectChild;
    /**
     * @type {?}
     * @private
     */
    PoMenuPanelItemsService.prototype.subjectParent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1pdGVtcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1tZW51LXBhbmVsL3NlcnZpY2VzL3BvLW1lbnUtcGFuZWwtaXRlbXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOzs7Ozs7OztBQVMzQztJQUFBO1FBR1UsaUJBQVksR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO1FBQ2xDLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztJQXNCN0MsQ0FBQztJQXBCQyx3REFBd0Q7Ozs7O0lBQ3hELDZEQUEyQjs7Ozs7SUFBM0I7UUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVELHdGQUF3Rjs7Ozs7SUFDeEYsOERBQTRCOzs7OztJQUE1QjtRQUNFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMzQyxDQUFDO0lBRUQsa0VBQWtFOzs7Ozs7SUFDbEUseURBQXVCOzs7Ozs7SUFBdkIsVUFBd0IsSUFBWTtRQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsa0dBQWtHOzs7Ozs7SUFDbEcsd0RBQXNCOzs7Ozs7SUFBdEIsVUFBdUIsSUFBWTtRQUNqQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDOztnQkF4QkYsVUFBVTs7SUEwQlgsOEJBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQXpCWSx1QkFBdUI7Ozs7OztJQUVsQywrQ0FBMEM7Ozs7O0lBQzFDLGdEQUEyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIFNlcnZpw6dvIHF1ZSBpbXBsZW1lbnRhIGEgY29tdW5pY2HDp8OjbyBlbnRyZSBvcyBpdGVtcyBkbyBwby1tZW51LXBhbmVsLlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9NZW51UGFuZWxJdGVtc1NlcnZpY2Uge1xuXG4gIHByaXZhdGUgc3ViamVjdENoaWxkID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICBwcml2YXRlIHN1YmplY3RQYXJlbnQgPSBuZXcgU3ViamVjdDxhbnk+KCk7XG5cbiAgLy8gUmVjZWJlIGRvIHBvLW1lbnUtcGFuZWwtaXRlbSBzdWEgaW5mb3JtYcOnw6NvIGRlIGNsaWNrLlxuICByZWNlaXZlRnJvbUNoaWxkTWVudUNsaWNrZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3ViamVjdENoaWxkLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgLy8gUmVjZWJlIGRvIHBvLW1lbnUtcGFuZWwgYXMgaW5mb3JtYcOnw7VlcyBwcm9jZXNzYWRhcyBkbyBjbGljayBkZSB1bSBwby1tZW51LXBhbmVsLWl0ZW0uXG4gIHJlY2VpdmVGcm9tUGFyZW50TWVudUNsaWNrZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5zdWJqZWN0UGFyZW50LmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgLy8gRW52aWEgaW5mb3JtYcOnw7VlcyBkbyBjbGljayBkbyBwby1tZW51LXBhbmVsLWl0ZW0gcGFyYSBvIHBvLW1lbnVcbiAgc2VuZFRvUGFyZW50TWVudUNsaWNrZWQobWVudTogb2JqZWN0KSB7XG4gICAgdGhpcy5zdWJqZWN0Q2hpbGQubmV4dChtZW51KTtcbiAgfVxuXG4gIC8vIEVudmlhIHBhcmEgb3MgcG8tbWVudS1wYW5lbC1pdGVtIGEgcmVzcG9zdGEgZG8gcHJvY2Vzc2FtZW50byBkZSBjbGljayBkZSB1bSBwby1tZW51LXBhbmVsLWl0ZW0uXG4gIHNlbmRUb0NoaWxkTWVudUNsaWNrZWQobWVudTogb2JqZWN0KSB7XG4gICAgdGhpcy5zdWJqZWN0UGFyZW50Lm5leHQobWVudSk7XG4gIH1cblxufVxuIl19