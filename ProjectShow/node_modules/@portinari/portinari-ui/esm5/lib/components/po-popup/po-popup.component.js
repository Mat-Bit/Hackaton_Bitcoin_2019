/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../utils/util';
import { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';
import { PoPopupBaseComponent } from './po-popup-base.component';
/**
 *
 * \@docsExtends PoPopupBaseComponent
 *
 * \@example
 *
 * <example name="po-popup-basic" title="Portinari Popup - Basic">
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.html"> </file>
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-labs" title="Portinari Popup - Labs">
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.html"> </file>
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-email" title="Portinari Popup Email">
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.html"> </file>
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.ts"> </file>
 * </example>
 *
 */
var PoPopupComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoPopupComponent, _super);
    function PoPopupComponent(viewContainerRef, renderer, router, poControlPosition, changeDetector) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.router = router;
        _this.poControlPosition = poControlPosition;
        _this.changeDetector = changeDetector;
        _this.onScroll = (/**
         * @return {?}
         */
        function () {
            if (_this.showPopup) {
                _this.close();
            }
        });
        _this.parentRef = viewContainerRef['_view']['component'];
        return _this;
    }
    /**
     * Fecha o componente *popup*.
     *
     * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.
     */
    /**
     * Fecha o componente *popup*.
     *
     * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.
     * @return {?}
     */
    PoPopupComponent.prototype.close = /**
     * Fecha o componente *popup*.
     *
     * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.
     * @return {?}
     */
    function () {
        this.removeListeners();
        this.showPopup = false;
    };
    /**
     * @param {?} popupAction
     * @return {?}
     */
    PoPopupComponent.prototype.onActionClick = /**
     * @param {?} popupAction
     * @return {?}
     */
    function (popupAction) {
        /** @type {?} */
        var actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');
        if (popupAction && popupAction.action && actionNoDisabled) {
            this.close();
            return callFunction(popupAction.action, this.parentRef, this.param || popupAction);
        }
        if (popupAction && popupAction.url && actionNoDisabled) {
            this.close();
            return this.openUrl(popupAction.url);
        }
    };
    /**
     * Abre o componente *popup*.
     *
     * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    /**
     * Abre o componente *popup*.
     *
     * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     * @param {?=} param
     * @return {?}
     */
    PoPopupComponent.prototype.open = /**
     * Abre o componente *popup*.
     *
     * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     * @param {?=} param
     * @return {?}
     */
    function (param) {
        this.oldTarget = this.target;
        this.param = param;
        this.showPopup = true;
        this.changeDetector.detectChanges();
        this.validateInitialContent();
    };
    /**
     * @param {?} popupAction
     * @param {?} property
     * @return {?}
     */
    PoPopupComponent.prototype.returnBooleanValue = /**
     * @param {?} popupAction
     * @param {?} property
     * @return {?}
     */
    function (popupAction, property) {
        return isTypeof(popupAction[property], 'function') ? popupAction[property](this.param || popupAction) : popupAction[property];
    };
    /**
     * Responsável por abrir e fechar o *popup*.
     *
     * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.
     *
     * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    /**
     * Responsável por abrir e fechar o *popup*.
     *
     * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.
     *
     * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     * @param {?=} param
     * @return {?}
     */
    PoPopupComponent.prototype.toggle = /**
     * Responsável por abrir e fechar o *popup*.
     *
     * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.
     *
     * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     * @param {?=} param
     * @return {?}
     */
    function (param) {
        this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoPopupComponent.prototype.clickedOutDisabledItem = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var containsItemDisabled = this.elementContains(event.target, 'po-popup-item-disabled') ||
            this.elementContains(event.target.parentElement, 'po-popup-item-disabled');
        return !containsItemDisabled;
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoPopupComponent.prototype.clickedOutHeaderTemplate = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[p-popup-header-template]');
        return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoPopupComponent.prototype.clickedOutTarget = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return this.target && !this.target.contains(event.target);
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoPopupComponent.prototype.closePopupOnClickout = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {
            this.close();
        }
    };
    /**
     * @private
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    PoPopupComponent.prototype.elementContains = /**
     * @private
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    function (element, className) {
        return element && element.classList.contains(className);
    };
    /**
     * @private
     * @return {?}
     */
    PoPopupComponent.prototype.hasContentToShow = /**
     * @private
     * @return {?}
     */
    function () {
        return !!(this.popupRef.nativeElement && this.popupRef.nativeElement.clientHeight);
    };
    /**
     * @private
     * @return {?}
     */
    PoPopupComponent.prototype.initializeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        function () {
            _this.close();
        }));
        this.clickoutListener = this.renderer.listen('document', 'click', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.closePopupOnClickout(event);
        }));
        window.addEventListener('scroll', this.onScroll, true);
    };
    /**
     * @private
     * @param {?} url
     * @return {?}
     */
    PoPopupComponent.prototype.openUrl = /**
     * @private
     * @param {?} url
     * @return {?}
     */
    function (url) {
        if (isExternalLink(url)) {
            return openExternalLink(url);
        }
        if (url) {
            return this.router.navigate([url]);
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoPopupComponent.prototype.removeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    };
    /**
     * @private
     * @return {?}
     */
    PoPopupComponent.prototype.setPosition = /**
     * @private
     * @return {?}
     */
    function () {
        this.poControlPosition.setElements(this.popupRef.nativeElement, 8, this.target, this.customPositions, false, this.isCornerAlign);
        this.poControlPosition.adjustPosition(this.position);
        this.arrowDirection = this.poControlPosition.getArrowDirection();
    };
    /**
     * @private
     * @return {?}
     */
    PoPopupComponent.prototype.validateInitialContent = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.hasContentToShow()) {
            this.setPosition();
            this.initializeListeners();
        }
        else {
            this.close();
        }
    };
    PoPopupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-popup',
                    template: "<div #popupRef class=\"po-popup\" *ngIf=\"showPopup\">\n\n  <div *ngIf=\"!hideArrow\" class=\"po-popup-arrow po-arrow-{{ arrowDirection }}\"></div>\n\n  <ng-content select=\"[p-popup-header-template]\"></ng-content>\n\n  <ng-container *ngFor=\"let action of actions; let actionIndex = index\">\n    <div *ngIf=\"action.visible !== false\"\n      [class.po-popup-item-default]=\"action.type !== 'danger'\"\n      [class.po-popup-item-danger]=\"action.type === 'danger'\"\n      [class.po-popup-item-disabled]=\"returnBooleanValue(action, 'disabled')\"\n      [class.po-popup-item-separator]=\"action.separator && actionIndex !== 0\"\n      [class.po-popup-item-selected]=\"action.selected\"\n      (click)=\"onActionClick(action)\">\n\n      <span *ngIf=\"action.icon\" class=\"po-icon {{ action.icon }} po-popup-icon-item\"></span>\n      {{ action.label }}\n\n    </div>\n  </ng-container>\n\n</div>\n",
                    providers: [PoControlPositionService]
                }] }
    ];
    /** @nocollapse */
    PoPopupComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: Renderer2 },
        { type: Router },
        { type: PoControlPositionService },
        { type: ChangeDetectorRef }
    ]; };
    PoPopupComponent.propDecorators = {
        popupRef: [{ type: ViewChild, args: ['popupRef', { read: ElementRef, static: false },] }]
    };
    return PoPopupComponent;
}(PoPopupBaseComponent));
export { PoPopupComponent };
if (false) {
    /** @type {?} */
    PoPopupComponent.prototype.popupRef;
    /**
     * @type {?}
     * @private
     */
    PoPopupComponent.prototype.onScroll;
    /**
     * @type {?}
     * @private
     */
    PoPopupComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    PoPopupComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    PoPopupComponent.prototype.poControlPosition;
    /** @type {?} */
    PoPopupComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,