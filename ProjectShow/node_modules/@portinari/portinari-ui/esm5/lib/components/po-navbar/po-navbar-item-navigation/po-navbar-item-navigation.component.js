/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var PoNavbarItemNavigationComponent = /** @class */ (function () {
    function PoNavbarItemNavigationComponent() {
        this.click = new EventEmitter();
    }
    PoNavbarItemNavigationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-navbar-item-navigation',
                    template: "<po-navbar-item-navigation-icon class=\"po-navbar-item-navigation-icon\"\n  p-icon=\"left\"\n  [p-disabled]=\"disableLeft\"\n  (p-click)=\"click.emit($event)\">\n</po-navbar-item-navigation-icon>\n\n<po-navbar-item-navigation-icon class=\"po-navbar-item-navigation-icon\"\n  p-icon=\"right\"\n  [p-disabled]=\"disableRight\"\n  (p-click)=\"click.emit($event)\">\n</po-navbar-item-navigation-icon>\n"
                }] }
    ];
    PoNavbarItemNavigationComponent.propDecorators = {
        disableLeft: [{ type: Input, args: ['p-disable-left',] }],
        disableRight: [{ type: Input, args: ['p-disable-right',] }],
        click: [{ type: Output, args: ['p-click',] }]
    };
    return PoNavbarItemNavigationComponent;
}());
export { PoNavbarItemNavigationComponent };
if (false) {
    /** @type {?} */
    PoNavbarItemNavigationComponent.prototype.disableLeft;
    /** @type {?} */
    PoNavbarItemNavigationComponent.prototype.disableRight;
    /** @type {?} */
    PoNavbarItemNavigationComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLWl0ZW0tbmF2aWdhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLW5hdmJhci9wby1uYXZiYXItaXRlbS1uYXZpZ2F0aW9uL3BvLW5hdmJhci1pdGVtLW5hdmlnYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFO0lBQUE7UUFVcUIsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRXhFLENBQUM7O2dCQVpBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQywwWkFBeUQ7aUJBQzFEOzs7OEJBR0UsS0FBSyxTQUFDLGdCQUFnQjsrQkFFdEIsS0FBSyxTQUFDLGlCQUFpQjt3QkFFdkIsTUFBTSxTQUFDLFNBQVM7O0lBRW5CLHNDQUFDO0NBQUEsQUFaRCxJQVlDO1NBUlksK0JBQStCOzs7SUFFMUMsc0RBQThDOztJQUU5Qyx1REFBZ0Q7O0lBRWhELGdEQUFzRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLW5hdmJhci1pdGVtLW5hdmlnYXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tbmF2YmFyLWl0ZW0tbmF2aWdhdGlvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9OYXZiYXJJdGVtTmF2aWdhdGlvbkNvbXBvbmVudCB7XG5cbiAgQElucHV0KCdwLWRpc2FibGUtbGVmdCcpIGRpc2FibGVMZWZ0OiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1kaXNhYmxlLXJpZ2h0JykgZGlzYWJsZVJpZ2h0OiBib29sZWFuO1xuXG4gIEBPdXRwdXQoJ3AtY2xpY2snKSBjbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxufVxuIl19