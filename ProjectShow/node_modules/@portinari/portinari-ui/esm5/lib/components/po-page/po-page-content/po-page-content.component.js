/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Renderer2 } from '@angular/core';
import { PoPageContentBaseComponent } from './po-page-content-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends PoPageContentBaseComponent
 */
var PoPageContentComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoPageContentComponent, _super);
    function PoPageContentComponent(renderer) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.contentOpacity = 0;
        _this.height = '90%';
        _this.overflowY = 'none';
        _this.initializeListeners();
        return _this;
    }
    /**
     * @return {?}
     */
    PoPageContentComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.recalculateHeaderSize();
    };
    /**
     * @return {?}
     */
    PoPageContentComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeListeners();
    };
    /**
     * @return {?}
     */
    PoPageContentComponent.prototype.recalculateHeaderSize = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var pageHeaderElement = document.querySelector('div.po-page-header');
            _this.setHeightContent(pageHeaderElement);
            _this.contentOpacity = 1;
        }));
    };
    /**
     * @param {?} poPageHeader
     * @return {?}
     */
    PoPageContentComponent.prototype.setHeightContent = /**
     * @param {?} poPageHeader
     * @return {?}
     */
    function (poPageHeader) {
        /** @type {?} */
        var bodyHeight = document.body.clientHeight;
        /** @type {?} */
        var pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;
        /** @type {?} */
        var newHeight = bodyHeight - pageHeaderHeight;
        this.height = newHeight + "px";
    };
    /**
     * @private
     * @return {?}
     */
    PoPageContentComponent.prototype.initializeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        function () {
            _this.recalculateHeaderSize();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    PoPageContentComponent.prototype.removeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        this.resizeListener();
    };
    PoPageContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-page-content',
                    template: "<div class=\"po-page-content\"\n  [style.height]=\"height\"\n  [style.opacity]=\"contentOpacity\"\n  [style.overflow-y]=\"overflowY\">\n  <ng-content></ng-content>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    PoPageContentComponent.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    return PoPageContentComponent;
}(PoPageContentBaseComponent));
export { PoPageContentComponent };
if (false) {
    /** @type {?} */
    PoPageContentComponent.prototype.contentOpacity;
    /** @type {?} */
    PoPageContentComponent.prototype.height;
    /** @type {?} */
    PoPageContentComponent.prototype.overflowY;
    /** @type {?} */
    PoPageContentComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS9wby1wYWdlLWNvbnRlbnQvcG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFhLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7Ozs7O0FBTzlFO0lBSTRDLGtEQUEwQjtJQU1wRSxnQ0FBbUIsUUFBbUI7UUFBdEMsWUFDRSxpQkFBTyxTQUVSO1FBSGtCLGNBQVEsR0FBUixRQUFRLENBQVc7UUFKdEMsb0JBQWMsR0FBVyxDQUFDLENBQUM7UUFDM0IsWUFBTSxHQUFXLEtBQUssQ0FBQztRQUN2QixlQUFTLEdBQVcsTUFBTSxDQUFDO1FBSXpCLEtBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDOztJQUM3QixDQUFDOzs7O0lBRUQsZ0RBQWU7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELDRDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs7O0lBRUQsc0RBQXFCOzs7SUFBckI7UUFBQSxpQkFPQztRQU5DLFVBQVU7OztRQUFDOztnQkFDSCxpQkFBaUIsR0FBZ0IsUUFBUSxDQUFDLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQztZQUVuRixLQUFJLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsQ0FBQztZQUN6QyxLQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQztRQUMxQixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsaURBQWdCOzs7O0lBQWhCLFVBQWlCLFlBQXlCOztZQUNsQyxVQUFVLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZOztZQUN2QyxnQkFBZ0IsR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQzs7WUFDeEYsU0FBUyxHQUFHLFVBQVUsR0FBRyxnQkFBZ0I7UUFFL0MsSUFBSSxDQUFDLE1BQU0sR0FBTSxTQUFTLE9BQUksQ0FBQztJQUNqQyxDQUFDOzs7OztJQUVPLG9EQUFtQjs7OztJQUEzQjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsUUFBUTs7O1FBQUU7WUFDN0QsS0FBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDL0IsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVPLGdEQUFlOzs7O0lBQXZCO1FBQ0UsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7O2dCQWhERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IseUxBQStDO2lCQUNoRDs7OztnQkFaNkMsU0FBUzs7SUEyRHZELDZCQUFDO0NBQUEsQUFsREQsQ0FJNEMsMEJBQTBCLEdBOENyRTtTQTlDWSxzQkFBc0I7OztJQUVqQyxnREFBMkI7O0lBQzNCLHdDQUF1Qjs7SUFDdkIsMkNBQTJCOztJQUVmLDBDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9QYWdlQ29udGVudEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXBhZ2UtY29udGVudC1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRvY3NFeHRlbmRzIFBvUGFnZUNvbnRlbnRCYXNlQ29tcG9uZW50XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXBhZ2UtY29udGVudCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1wYWdlLWNvbnRlbnQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvUGFnZUNvbnRlbnRDb21wb25lbnQgZXh0ZW5kcyBQb1BhZ2VDb250ZW50QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG5cbiAgY29udGVudE9wYWNpdHk6IG51bWJlciA9IDA7XG4gIGhlaWdodDogc3RyaW5nID0gJzkwJSc7XG4gIG92ZXJmbG93WTogc3RyaW5nID0gJ25vbmUnO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmluaXRpYWxpemVMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLnJlY2FsY3VsYXRlSGVhZGVyU2l6ZSgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHJlY2FsY3VsYXRlSGVhZGVyU2l6ZSgpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IHBhZ2VIZWFkZXJFbGVtZW50OiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Rpdi5wby1wYWdlLWhlYWRlcicpO1xuXG4gICAgICB0aGlzLnNldEhlaWdodENvbnRlbnQocGFnZUhlYWRlckVsZW1lbnQpO1xuICAgICAgdGhpcy5jb250ZW50T3BhY2l0eSA9IDE7XG4gICAgfSk7XG4gIH1cblxuICBzZXRIZWlnaHRDb250ZW50KHBvUGFnZUhlYWRlcjogSFRNTEVsZW1lbnQpIHtcbiAgICBjb25zdCBib2R5SGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XG4gICAgY29uc3QgcGFnZUhlYWRlckhlaWdodCA9IHBvUGFnZUhlYWRlciA/IHBvUGFnZUhlYWRlci5vZmZzZXRUb3AgKyBwb1BhZ2VIZWFkZXIub2Zmc2V0SGVpZ2h0IDogMDtcbiAgICBjb25zdCBuZXdIZWlnaHQgPSBib2R5SGVpZ2h0IC0gcGFnZUhlYWRlckhlaWdodDtcblxuICAgIHRoaXMuaGVpZ2h0ID0gYCR7bmV3SGVpZ2h0fXB4YDtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdGlhbGl6ZUxpc3RlbmVycygpIHtcbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCAoKSA9PiB7XG4gICAgICB0aGlzLnJlY2FsY3VsYXRlSGVhZGVyU2l6ZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSByZW1vdmVMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICB9XG5cbn1cbiJdfQ==