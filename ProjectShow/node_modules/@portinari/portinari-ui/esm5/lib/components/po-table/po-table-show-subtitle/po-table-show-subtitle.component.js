/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação de um botão e modal para visualização de todas as legendas.
 */
var PoTableShowSubtitleComponent = /** @class */ (function () {
    function PoTableShowSubtitleComponent() {
    }
    PoTableShowSubtitleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-table-show-subtitle',
                    template: "<div class=\"po-table-footer-show-subtitle\" (click)=\"modal.open()\">\n  <div class=\"po-table-footer-show-subtitle-container\">\n    <span class=\"po-table-show-subtitle\">{{ literals.seeCompleteSubtitle }}</span>\n  </div>\n</div>\n\n<po-modal #modal\n  p-size=\"sm\"\n  [p-title]=\"literals.completeSubtitle\">\n\n  <div *ngFor=\"let subtitle of subtitles\" class=\"po-table-subtitle-footer-modal po-row\">\n    <po-table-subtitle-circle\n      p-hide-title=\"true\"\n      [p-subtitle]=\"subtitle\">\n    </po-table-subtitle-circle>\n    <span class=\"po-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n</po-modal>\n"
                }] }
    ];
    PoTableShowSubtitleComponent.propDecorators = {
        subtitles: [{ type: Input, args: ['p-subtitles',] }],
        literals: [{ type: Input, args: ['p-literals',] }]
    };
    return PoTableShowSubtitleComponent;
}());
export { PoTableShowSubtitleComponent };
if (false) {
    /**
     * Objeto com os dados da legenda.
     * @type {?}
     */
    PoTableShowSubtitleComponent.prototype.subtitles;
    /**
     * Propriedade que recebe as literais definidas no `po-table`.
     * @type {?}
     */
    PoTableShowSubtitleComponent.prototype.literals;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtc2hvdy1zdWJ0aXRsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLXNob3ctc3VidGl0bGUvcG8tdGFibGUtc2hvdy1zdWJ0aXRsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVdqRDtJQUFBO0lBWUEsQ0FBQzs7Z0JBWkEsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLHNvQkFBc0Q7aUJBQ3ZEOzs7NEJBSUUsS0FBSyxTQUFDLGFBQWE7MkJBR25CLEtBQUssU0FBQyxZQUFZOztJQUVyQixtQ0FBQztDQUFBLEFBWkQsSUFZQztTQVJZLDRCQUE0Qjs7Ozs7O0lBR3ZDLGlEQUE4RDs7Ozs7SUFHOUQsZ0RBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb1RhYmxlU3VidGl0bGVDb2x1bW4gfSBmcm9tICcuLi9wby10YWJsZS1zdWJ0aXRsZS1mb290ZXIvcG8tdGFibGUtc3VidGl0bGUtY29sdW1uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGEgY3JpYcOnw6NvIGRlIHVtIGJvdMOjbyBlIG1vZGFsIHBhcmEgdmlzdWFsaXphw6fDo28gZGUgdG9kYXMgYXMgbGVnZW5kYXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLXNob3ctc3VidGl0bGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtc2hvdy1zdWJ0aXRsZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJsZVNob3dTdWJ0aXRsZUNvbXBvbmVudCB7XG5cbiAgLyoqIE9iamV0byBjb20gb3MgZGFkb3MgZGEgbGVnZW5kYS4gKi9cbiAgQElucHV0KCdwLXN1YnRpdGxlcycpIHN1YnRpdGxlczogQXJyYXk8UG9UYWJsZVN1YnRpdGxlQ29sdW1uPjtcblxuICAvKiogUHJvcHJpZWRhZGUgcXVlIHJlY2ViZSBhcyBsaXRlcmFpcyBkZWZpbmlkYXMgbm8gYHBvLXRhYmxlYC4gKi9cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHM7XG5cbn1cbiJdfQ==