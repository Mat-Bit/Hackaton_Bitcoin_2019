/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por exibir um ícone na tabela.
 */
var PoTableIconComponent = /** @class */ (function () {
    function PoTableIconComponent() {
        /**
         * Output click.
         */
        this.click = new EventEmitter();
    }
    Object.defineProperty(PoTableIconComponent.prototype, "allowTooltip", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            return !this.disabled && this.iconTooltip;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PoTableIconComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (this.clickable) {
            this.click.emit();
        }
    };
    /**
     * @return {?}
     */
    PoTableIconComponent.prototype.tooltipMouseEnter = /**
     * @return {?}
     */
    function () {
        if (this.allowTooltip) {
            this.tooltip = this.iconTooltip;
        }
    };
    /**
     * @return {?}
     */
    PoTableIconComponent.prototype.tooltipMouseLeave = /**
     * @return {?}
     */
    function () {
        this.tooltip = undefined;
    };
    PoTableIconComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-table-icon',
                    template: "<span\n  class=\"po-icon {{ icon }} {{ color }}\"\n  [ngClass]=\"{'po-clickable': clickable, 'po-table-icon-disabled': disabled}\"\n  [p-tooltip]=\"tooltip\"\n  (click)=\"onClick()\"\n  (mouseenter)=\"tooltipMouseEnter()\"\n  (mouseleave)=\"tooltipMouseLeave()\">\n</span>\n"
                }] }
    ];
    PoTableIconComponent.propDecorators = {
        clickable: [{ type: Input, args: ['p-clickable',] }],
        color: [{ type: Input, args: ['p-color',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        icon: [{ type: Input, args: ['p-icon',] }],
        iconTooltip: [{ type: Input, args: ['p-icon-tooltip',] }],
        click: [{ type: Output, args: ['p-click',] }]
    };
    return PoTableIconComponent;
}());
export { PoTableIconComponent };
if (false) {
    /** @type {?} */
    PoTableIconComponent.prototype.tooltip;
    /**
     * Define se o ícone é clicável.
     * @type {?}
     */
    PoTableIconComponent.prototype.clickable;
    /**
     * Cor do ícone.
     * @type {?}
     */
    PoTableIconComponent.prototype.color;
    /**
     * Desabilitado.
     * @type {?}
     */
    PoTableIconComponent.prototype.disabled;
    /**
     * Classe css do ícone.
     * @type {?}
     */
    PoTableIconComponent.prototype.icon;
    /**
     * Texto do tooltip.
     * @type {?}
     */
    PoTableIconComponent.prototype.iconTooltip;
    /**
     * Output click.
     * @type {?}
     */
    PoTableIconComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWljb24vcG8tdGFibGUtaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBU3ZFO0lBQUE7Ozs7UUF5QnFCLFVBQUssR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQXNCbkUsQ0FBQztJQXBCQyxzQkFBWSw4Q0FBWTs7Ozs7UUFBeEI7WUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzVDLENBQUM7OztPQUFBOzs7O0lBRUQsc0NBQU87OztJQUFQO1FBQ0UsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDbkI7SUFDSCxDQUFDOzs7O0lBRUQsZ0RBQWlCOzs7SUFBakI7UUFDRSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQzs7OztJQUVELGdEQUFpQjs7O0lBQWpCO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7SUFDM0IsQ0FBQzs7Z0JBN0NGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsOFJBQTZDO2lCQUM5Qzs7OzRCQU9FLEtBQUssU0FBQyxhQUFhO3dCQUduQixLQUFLLFNBQUMsU0FBUzsyQkFHZixLQUFLLFNBQUMsWUFBWTt1QkFHbEIsS0FBSyxTQUFDLFFBQVE7OEJBR2QsS0FBSyxTQUFDLGdCQUFnQjt3QkFHdEIsTUFBTSxTQUFDLFNBQVM7O0lBc0JuQiwyQkFBQztDQUFBLEFBL0NELElBK0NDO1NBMUNZLG9CQUFvQjs7O0lBRS9CLHVDQUFnQjs7Ozs7SUFHaEIseUNBQXlDOzs7OztJQUd6QyxxQ0FBZ0M7Ozs7O0lBR2hDLHdDQUF1Qzs7Ozs7SUFHdkMsb0NBQThCOzs7OztJQUc5QiwyQ0FBNkM7Ozs7O0lBRzdDLHFDQUFpRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSByZXNwb25zw6F2ZWwgcG9yIGV4aWJpciB1bSDDrWNvbmUgbmEgdGFiZWxhLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWJsZS1pY29uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYmxlLWljb24uY29tcG9uZW50Lmh0bWwnXG59KVxuXG5leHBvcnQgY2xhc3MgUG9UYWJsZUljb25Db21wb25lbnQge1xuXG4gIHRvb2x0aXA6IHN0cmluZztcblxuICAvKiogRGVmaW5lIHNlIG8gw61jb25lIMOpIGNsaWPDoXZlbC4gKi9cbiAgQElucHV0KCdwLWNsaWNrYWJsZScpIGNsaWNrYWJsZTogYm9vbGVhbjtcblxuICAvKiogQ29yIGRvIMOtY29uZS4gKi9cbiAgQElucHV0KCdwLWNvbG9yJykgY29sb3I6IHN0cmluZztcblxuICAvKiogRGVzYWJpbGl0YWRvLiAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAvKiogQ2xhc3NlIGNzcyBkbyDDrWNvbmUuICovXG4gIEBJbnB1dCgncC1pY29uJykgaWNvbjogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBkbyB0b29sdGlwLiAqL1xuICBASW5wdXQoJ3AtaWNvbi10b29sdGlwJykgaWNvblRvb2x0aXA6IHN0cmluZztcblxuICAvKiogT3V0cHV0IGNsaWNrLiAqL1xuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHByaXZhdGUgZ2V0IGFsbG93VG9vbHRpcCgpIHtcbiAgICByZXR1cm4gIXRoaXMuZGlzYWJsZWQgJiYgdGhpcy5pY29uVG9vbHRpcDtcbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuY2xpY2thYmxlKSB7XG4gICAgICB0aGlzLmNsaWNrLmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICB0b29sdGlwTW91c2VFbnRlcigpIHtcbiAgICBpZiAodGhpcy5hbGxvd1Rvb2x0aXApIHtcbiAgICAgIHRoaXMudG9vbHRpcCA9IHRoaXMuaWNvblRvb2x0aXA7XG4gICAgfVxuICB9XG5cbiAgdG9vbHRpcE1vdXNlTGVhdmUoKSB7XG4gICAgdGhpcy50b29sdGlwID0gdW5kZWZpbmVkO1xuICB9XG5cbn1cbiJdfQ==