/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por exibir ícones nas colunas.
 */
var PoTableColumnIconComponent = /** @class */ (function () {
    function PoTableColumnIconComponent() {
        this._icons = [];
    }
    Object.defineProperty(PoTableColumnIconComponent.prototype, "icons", {
        get: /**
         * @return {?}
         */
        function () {
            return this._icons;
        },
        /** Lista de colunas com ícones. */
        set: /**
         * Lista de colunas com ícones.
         * @param {?} icons
         * @return {?}
         */
        function (icons) {
            this._icons = icons || [];
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} column
     * @return {?}
     */
    PoTableColumnIconComponent.prototype.click = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        column.action(this.row, column);
    };
    /**
     * @param {?} column
     * @return {?}
     */
    PoTableColumnIconComponent.prototype.getColor = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        /** @type {?} */
        var color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;
        if (color) {
            return "po-text-" + color;
        }
    };
    /**
     * @param {?} column
     * @return {?}
     */
    PoTableColumnIconComponent.prototype.getIcon = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return column.icon || column.value;
    };
    /**
     * @param {?} column
     * @return {?}
     */
    PoTableColumnIconComponent.prototype.isClickable = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return column.action && !this.isDisabled(column);
    };
    /**
     * @param {?} column
     * @return {?}
     */
    PoTableColumnIconComponent.prototype.isDisabled = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return column.disabled ? column.disabled(this.row) : false;
    };
    /**
     * @param {?} index
     * @return {?}
     */
    PoTableColumnIconComponent.prototype.trackByFunction = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        return index;
    };
    PoTableColumnIconComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-table-column-icon',
                    template: "<po-table-icon *ngFor=\"let column of icons trackBy: trackByFunction\"\n  [p-clickable]=\"isClickable(column)\"\n  [p-color]=\"getColor(column)\"\n  [p-disabled]=\"isDisabled(column)\"\n  [p-icon]=\"getIcon(column)\"\n  [p-icon-tooltip]=\"column.tooltip\"\n  (p-click)=\"click(column)\">\n</po-table-icon>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    PoTableColumnIconComponent.propDecorators = {
        icons: [{ type: Input, args: ['p-icons',] }],
        row: [{ type: Input, args: ['p-row',] }]
    };
    return PoTableColumnIconComponent;
}());
export { PoTableColumnIconComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTableColumnIconComponent.prototype._icons;
    /**
     * Dados da linha da tabela.
     * @type {?}
     */
    PoTableColumnIconComponent.prototype.row;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10YWJsZS9wby10YWJsZS1jb2x1bW4taWNvbi9wby10YWJsZS1jb2x1bW4taWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVcxRTtJQUFBO1FBUVUsV0FBTSxHQUE2QixFQUFFLENBQUM7SUEwQ2hELENBQUM7SUF2Q0Msc0JBQXNCLDZDQUFLOzs7O1FBSTNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFQRCxtQ0FBbUM7Ozs7OztRQUNuQyxVQUE0QixLQUErQjtZQUN6RCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDNUIsQ0FBQzs7O09BQUE7Ozs7O0lBU0QsMENBQUs7Ozs7SUFBTCxVQUFNLE1BQXlCO1FBQzdCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVELDZDQUFROzs7O0lBQVIsVUFBUyxNQUF5Qjs7WUFDMUIsS0FBSyxHQUFJLE9BQU8sTUFBTSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFFakcsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLGFBQVcsS0FBTyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCw0Q0FBTzs7OztJQUFQLFVBQVEsTUFBeUI7UUFDL0IsT0FBTyxNQUFNLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDckMsQ0FBQzs7Ozs7SUFFRCxnREFBVzs7OztJQUFYLFVBQVksTUFBeUI7UUFDbkMsT0FBTyxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7OztJQUVELCtDQUFVOzs7O0lBQVYsVUFBVyxNQUF5QjtRQUNsQyxPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDN0QsQ0FBQzs7Ozs7SUFFRCxvREFBZTs7OztJQUFmLFVBQWdCLEtBQUs7UUFDbkIsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOztnQkFoREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLCtUQUFvRDtvQkFDcEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzs7d0JBT0UsS0FBSyxTQUFDLFNBQVM7c0JBU2YsS0FBSyxTQUFDLE9BQU87O0lBOEJoQixpQ0FBQztDQUFBLEFBbERELElBa0RDO1NBNUNZLDBCQUEwQjs7Ozs7O0lBRXJDLDRDQUE4Qzs7Ozs7SUFZOUMseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9UYWJsZUNvbHVtbkljb24gfSBmcm9tICcuL3BvLXRhYmxlLWNvbHVtbi1pY29uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSByZXNwb25zw6F2ZWwgcG9yIGV4aWJpciDDrWNvbmVzIG5hcyBjb2x1bmFzLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWJsZS1jb2x1bW4taWNvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1jb2x1bW4taWNvbi5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuXG5leHBvcnQgY2xhc3MgUG9UYWJsZUNvbHVtbkljb25Db21wb25lbnQge1xuXG4gIHByaXZhdGUgX2ljb25zOiBBcnJheTxQb1RhYmxlQ29sdW1uSWNvbj4gPSBbXTtcblxuICAvKiogTGlzdGEgZGUgY29sdW5hcyBjb20gw61jb25lcy4gKi9cbiAgQElucHV0KCdwLWljb25zJykgc2V0IGljb25zKGljb25zOiBBcnJheTxQb1RhYmxlQ29sdW1uSWNvbj4pIHtcbiAgICB0aGlzLl9pY29ucyA9IGljb25zIHx8IFtdO1xuICB9XG5cbiAgZ2V0IGljb25zKCkge1xuICAgIHJldHVybiB0aGlzLl9pY29ucztcbiAgfVxuXG4gIC8qKiBEYWRvcyBkYSBsaW5oYSBkYSB0YWJlbGEuICovXG4gIEBJbnB1dCgncC1yb3cnKSByb3c6IGFueTtcblxuICBjbGljayhjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKTogdm9pZCB7XG4gICAgY29sdW1uLmFjdGlvbih0aGlzLnJvdywgY29sdW1uKTtcbiAgfVxuXG4gIGdldENvbG9yKGNvbHVtbjogUG9UYWJsZUNvbHVtbkljb24pOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvbG9yID0gIHR5cGVvZiBjb2x1bW4uY29sb3IgPT09ICdmdW5jdGlvbicgPyBjb2x1bW4uY29sb3IodGhpcy5yb3csIGNvbHVtbikgOiBjb2x1bW4uY29sb3I7XG5cbiAgICBpZiAoY29sb3IpIHtcbiAgICAgIHJldHVybiBgcG8tdGV4dC0ke2NvbG9yfWA7XG4gICAgfVxuICB9XG5cbiAgZ2V0SWNvbihjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKSB7XG4gICAgcmV0dXJuIGNvbHVtbi5pY29uIHx8IGNvbHVtbi52YWx1ZTtcbiAgfVxuXG4gIGlzQ2xpY2thYmxlKGNvbHVtbjogUG9UYWJsZUNvbHVtbkljb24pOiBib29sZWFuIHtcbiAgICByZXR1cm4gY29sdW1uLmFjdGlvbiAmJiAhdGhpcy5pc0Rpc2FibGVkKGNvbHVtbik7XG4gIH1cblxuICBpc0Rpc2FibGVkKGNvbHVtbjogUG9UYWJsZUNvbHVtbkljb24pOiBib29sZWFuIHtcbiAgICByZXR1cm4gY29sdW1uLmRpc2FibGVkID8gY29sdW1uLmRpc2FibGVkKHRoaXMucm93KSA6IGZhbHNlO1xuICB9XG5cbiAgdHJhY2tCeUZ1bmN0aW9uKGluZGV4KSB7XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG5cbn1cbiJdfQ==