/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { capitalizeFirstLetter, isTypeof } from '../../../utils/util';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por apresentar o detalhe de cada linha da tabela.
 */
var PoTableDetailComponent = /** @class */ (function () {
    function PoTableDetailComponent(decimalPipe) {
        this.decimalPipe = decimalPipe;
        /**
         * Define se a tabela possui a opção de `checkbox` habilitada.
         */
        this.hasCheckbox = false;
        /**
         * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.
         */
        this.selectRow = new EventEmitter();
    }
    Object.defineProperty(PoTableDetailComponent.prototype, "detail", {
        get: /**
         * @return {?}
         */
        function () {
            return this._detail;
        },
        /**
         * Configuração da linha de detalhes.
         */
        set: /**
         * Configuração da linha de detalhes.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._detail = this.returnPoTableDetailObject(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "detailColumns", {
        get: /**
         * @return {?}
         */
        function () {
            return this.detail && this.detail.columns || [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "typeHeaderInline", {
        get: /**
         * @return {?}
         */
        function () {
            return this.detail && !this.detail['typeHeader'] || this.detail['typeHeader'] === 'inline';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "typeHeaderTop", {
        get: /**
         * @return {?}
         */
        function () {
            return this.detail && this.detail['typeHeader'] === 'top';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @param {?} format
     * @return {?}
     */
    PoTableDetailComponent.prototype.formatNumberDetail = /**
     * @param {?} value
     * @param {?} format
     * @return {?}
     */
    function (value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    };
    /**
     * @param {?} detail
     * @return {?}
     */
    PoTableDetailComponent.prototype.getColumnTitleLabel = /**
     * @param {?} detail
     * @return {?}
     */
    function (detail) {
        return detail.label || capitalizeFirstLetter(detail.property);
    };
    /**
     * @param {?} item
     * @return {?}
     */
    PoTableDetailComponent.prototype.onSelectRow = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        item.$selected = !item.$selected;
        this.selectRow.emit(item);
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    PoTableDetailComponent.prototype.returnPoTableDetailObject = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value && isTypeof(value, 'object')) {
            if (value.columns) {
                value.columns.forEach((/**
                 * @param {?} column
                 * @return {?}
                 */
                function (column) { return column.property = column.property || column.column; }));
            }
            if (Array.isArray(value)) {
                return { columns: value };
            }
            if (value.columns) {
                return value;
            }
        }
    };
    PoTableDetailComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-table-detail',
                    template: "<table class=\"po-table-master-detail\">\n  <thead *ngIf=\"typeHeaderTop\">\n    <tr>\n      <th class=\"po-table-header po-table-column-checkbox\" *ngIf=\"hasCheckbox\"></th>\n      <th class=\"po-table-header po-table-header-column po-table-header-master-detail\"></th>\n      <th class=\"po-table-header po-table-header-ellipsis\" *ngFor=\"let detail of detail.columns\">\n        {{ getColumnTitleLabel(detail) }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"po-table-detail-row\"\n        [class.po-table-row-active]=\"item.$selected && hasCheckbox\"\n        *ngFor=\"let item of items\">\n\n      <ng-container *ngIf=\"hasCheckbox; else masterDetailSpace\">\n\n        <td class=\"po-table-column-master-detail-space-checkbox\"></td>\n        <td class=\"po-table-column po-table-column-checkbox\">\n          <input\n            class=\"po-table-checkbox\"\n            type=\"checkbox\"\n            [class.po-table-checkbox-checked]=\"item.$selected\">\n          <label class=\"po-table-checkbox-label po-clickable\" (click)=\"onSelectRow(item)\">\n          </label>\n        </td>\n\n      </ng-container>\n\n      <ng-template #masterDetailSpace>\n        <td class=\"po-table-column-master-detail-space\"></td>\n      </ng-template>\n\n      <td class=\"po-table-column-master-detail po-table-master-detail-label\"\n        (click)=\"hasCheckbox ? onSelectRow(item) : 'javascript:;'\"\n        *ngFor=\"let detail of detailColumns\">\n        <strong *ngIf=\"typeHeaderInline\"> {{ getColumnTitleLabel(detail) }}: </strong>\n\n        <ng-container [ngSwitch]=\"detail.type\">\n          <span *ngSwitchCase=\"'currency'\">{{ item[detail.property] | currency: detail.format:'symbol':'1.2-2' }}</span>\n          <span *ngSwitchCase=\"'date'\">{{ item[detail.property] | date: detail.format || 'dd/MM/yyyy' }}</span>\n          <span *ngSwitchCase=\"'time'\">{{ item[detail.property] | po_time: detail.format || 'HH:mm:ss.ffffff' }}</span>\n          <span *ngSwitchCase=\"'dateTime'\">{{ item[detail.property] | date: detail.format || 'dd/MM/yyyy HH:mm:ss' }}</span>\n          <span *ngSwitchCase=\"'number'\">{{ formatNumberDetail(item[detail.property], detail.format) }}</span>\n          <span *ngSwitchDefault>{{ item[detail.property] }}</span>\n        </ng-container>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
                }] }
    ];
    /** @nocollapse */
    PoTableDetailComponent.ctorParameters = function () { return [
        { type: DecimalPipe }
    ]; };
    PoTableDetailComponent.propDecorators = {
        hasCheckbox: [{ type: Input, args: ['p-checkbox',] }],
        detail: [{ type: Input, args: ['p-detail',] }],
        items: [{ type: Input, args: ['p-items',] }],
        selectRow: [{ type: Output, args: ['p-select-row',] }]
    };
    return PoTableDetailComponent;
}());
export { PoTableDetailComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTableDetailComponent.prototype._detail;
    /**
     * Define se a tabela possui a opção de `checkbox` habilitada.
     * @type {?}
     */
    PoTableDetailComponent.prototype.hasCheckbox;
    /**
     * Lista de itens do _detail_ da tabela.
     * @type {?}
     */
    PoTableDetailComponent.prototype.items;
    /**
     * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.
     * @type {?}
     */
    PoTableDetailComponent.prototype.selectRow;
    /**
     * @type {?}
     * @private
     */
    PoTableDetailComponent.prototype.decimalPipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtZGV0YWlsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtZGV0YWlsL3BvLXRhYmxlLWRldGFpbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7QUFZdEU7SUFrQ0UsZ0NBQW9CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhOzs7O1FBdkJ2QixnQkFBVyxHQUFhLEtBQUssQ0FBQzs7OztRQXFCM0IsY0FBUyxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRWpDLENBQUM7SUFsQmhELHNCQUF1QiwwQ0FBTTs7OztRQUk3QjtZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDO1FBVEQ7O1dBRUc7Ozs7OztRQUNILFVBQThCLEtBQW9CO1lBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZELENBQUM7OztPQUFBO0lBa0JELHNCQUFJLGlEQUFhOzs7O1FBQWpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUNsRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG9EQUFnQjs7OztRQUFwQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxRQUFRLENBQUM7UUFDN0YsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxpREFBYTs7OztRQUFqQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLEtBQUssQ0FBQztRQUM1RCxDQUFDOzs7T0FBQTs7Ozs7O0lBRUQsbURBQWtCOzs7OztJQUFsQixVQUFtQixLQUFVLEVBQUUsTUFBYztRQUMzQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25ELENBQUM7Ozs7O0lBRUQsb0RBQW1COzs7O0lBQW5CLFVBQW9CLE1BQTJCO1FBQzdDLE9BQU8sTUFBTSxDQUFDLEtBQUssSUFBSSxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEUsQ0FBQzs7Ozs7SUFFRCw0Q0FBVzs7OztJQUFYLFVBQVksSUFBSTtRQUNkLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7Ozs7OztJQUVPLDBEQUF5Qjs7Ozs7SUFBakMsVUFBa0MsS0FBVTtRQUMxQyxJQUFJLEtBQUssSUFBSSxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxFQUFFO1lBRXRDLElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDakIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPOzs7O2dCQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsTUFBTSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQWxELENBQWtELEVBQUMsQ0FBQzthQUNyRjtZQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDeEIsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQzthQUMzQjtZQUVELElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDakIsT0FBTyxLQUFLLENBQUM7YUFDZDtTQUNGO0lBQ0gsQ0FBQzs7Z0JBaEZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixnMEVBQStDO2lCQUNoRDs7OztnQkFqQlEsV0FBVzs7OzhCQXlCakIsS0FBSyxTQUFDLFlBQVk7eUJBS2xCLEtBQUssU0FBQyxVQUFVO3dCQVdoQixLQUFLLFNBQUMsU0FBUzs0QkFLZixNQUFNLFNBQUMsY0FBYzs7SUFrRHhCLDZCQUFDO0NBQUEsQUFsRkQsSUFrRkM7U0E5RVksc0JBQXNCOzs7Ozs7SUFFakMseUNBQStCOzs7OztJQUsvQiw2Q0FBbUQ7Ozs7O0lBZ0JuRCx1Q0FBb0M7Ozs7O0lBS3BDLDJDQUFnRjs7Ozs7SUFFcEUsNkNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERlY2ltYWxQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgY2FwaXRhbGl6ZUZpcnN0TGV0dGVyLCBpc1R5cGVvZiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb1RhYmxlRGV0YWlsIH0gZnJvbSAnLi9wby10YWJsZS1kZXRhaWwuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvVGFibGVEZXRhaWxDb2x1bW4gfSBmcm9tICcuL3BvLXRhYmxlLWRldGFpbC1jb2x1bW4uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgYXByZXNlbnRhciBvIGRldGFsaGUgZGUgY2FkYSBsaW5oYSBkYSB0YWJlbGEuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLWRldGFpbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1kZXRhaWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFibGVEZXRhaWxDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX2RldGFpbDogUG9UYWJsZURldGFpbDtcblxuICAvKipcbiAgICogRGVmaW5lIHNlIGEgdGFiZWxhIHBvc3N1aSBhIG9ww6fDo28gZGUgYGNoZWNrYm94YCBoYWJpbGl0YWRhLlxuICAgKi9cbiAgQElucHV0KCdwLWNoZWNrYm94JykgaGFzQ2hlY2tib3g/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIENvbmZpZ3VyYcOnw6NvIGRhIGxpbmhhIGRlIGRldGFsaGVzLlxuICAgKi9cbiAgQElucHV0KCdwLWRldGFpbCcpIHNldCBkZXRhaWwodmFsdWU6IFBvVGFibGVEZXRhaWwpIHtcbiAgICB0aGlzLl9kZXRhaWwgPSB0aGlzLnJldHVyblBvVGFibGVEZXRhaWxPYmplY3QodmFsdWUpO1xuICB9XG5cbiAgZ2V0IGRldGFpbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZGV0YWlsO1xuICB9XG5cbiAgLyoqXG4gICAqIExpc3RhIGRlIGl0ZW5zIGRvIF9kZXRhaWxfIGRhIHRhYmVsYS5cbiAgICovXG4gIEBJbnB1dCgncC1pdGVtcycpIGl0ZW1zOiBBcnJheTxhbnk+O1xuXG4gIC8qKlxuICAgKiBBw6fDo28gZXhlY3V0YWRhIGFvIHNlbGVjaW9uYXIgb3UgZGVzbWFyY2FyIGEgc2VsZcOnw6NvIGRlIHVtYSBsaW5oYSBkZSBkZXRhbGhlIGRvIGBwby10YWJsZWAuXG4gICAqL1xuICBAT3V0cHV0KCdwLXNlbGVjdC1yb3cnKSBzZWxlY3RSb3c/OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZGVjaW1hbFBpcGU6IERlY2ltYWxQaXBlKSB7fVxuXG4gIGdldCBkZXRhaWxDb2x1bW5zKCk6IEFycmF5PFBvVGFibGVEZXRhaWxDb2x1bW4+IHtcbiAgICByZXR1cm4gdGhpcy5kZXRhaWwgJiYgdGhpcy5kZXRhaWwuY29sdW1ucyB8fCBbXTtcbiAgfVxuXG4gIGdldCB0eXBlSGVhZGVySW5saW5lKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmRldGFpbCAmJiAhdGhpcy5kZXRhaWxbJ3R5cGVIZWFkZXInXSB8fCB0aGlzLmRldGFpbFsndHlwZUhlYWRlciddID09PSAnaW5saW5lJztcbiAgfVxuXG4gIGdldCB0eXBlSGVhZGVyVG9wKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmRldGFpbCAmJiB0aGlzLmRldGFpbFsndHlwZUhlYWRlciddID09PSAndG9wJztcbiAgfVxuXG4gIGZvcm1hdE51bWJlckRldGFpbCh2YWx1ZTogYW55LCBmb3JtYXQ6IHN0cmluZykge1xuICAgIGlmICghZm9ybWF0KSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZGVjaW1hbFBpcGUudHJhbnNmb3JtKHZhbHVlLCBmb3JtYXQpO1xuICB9XG5cbiAgZ2V0Q29sdW1uVGl0bGVMYWJlbChkZXRhaWw6IFBvVGFibGVEZXRhaWxDb2x1bW4pIHtcbiAgICByZXR1cm4gZGV0YWlsLmxhYmVsIHx8IGNhcGl0YWxpemVGaXJzdExldHRlcihkZXRhaWwucHJvcGVydHkpO1xuICB9XG5cbiAgb25TZWxlY3RSb3coaXRlbSkge1xuICAgIGl0ZW0uJHNlbGVjdGVkID0gIWl0ZW0uJHNlbGVjdGVkO1xuICAgIHRoaXMuc2VsZWN0Um93LmVtaXQoaXRlbSk7XG4gIH1cblxuICBwcml2YXRlIHJldHVyblBvVGFibGVEZXRhaWxPYmplY3QodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSAmJiBpc1R5cGVvZih2YWx1ZSwgJ29iamVjdCcpKSB7XG5cbiAgICAgIGlmICh2YWx1ZS5jb2x1bW5zKSB7XG4gICAgICAgIHZhbHVlLmNvbHVtbnMuZm9yRWFjaChjb2x1bW4gPT4gY29sdW1uLnByb3BlcnR5ID0gY29sdW1uLnByb3BlcnR5IHx8IGNvbHVtbi5jb2x1bW4pO1xuICAgICAgfVxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHsgY29sdW1uczogdmFsdWUgfTtcbiAgICAgIH1cblxuICAgICAgaWYgKHZhbHVlLmNvbHVtbnMpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG59XG4iXX0=