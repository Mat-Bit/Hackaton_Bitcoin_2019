/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { isExternalLink } from '../../../utils/util';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente respons√°vel por exibir link nas colunas.
 */
var PoTableColumnLinkComponent = /** @class */ (function () {
    function PoTableColumnLinkComponent() {
    }
    Object.defineProperty(PoTableColumnLinkComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.disabled) {
                return 'disabled';
            }
            if (this.action) {
                return 'action';
            }
            if (isExternalLink(this.link)) {
                return 'externalLink';
            }
            return 'internalLink';
        },
        enumerable: true,
        configurable: true
    });
    PoTableColumnLinkComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-table-column-link',
                    template: "<ng-container [ngSwitch]=\"type\">\n  <p *ngSwitchCase=\"'disabled'\" class=\"po-table-link-disabled\">{{ value }}</p>\n  <a *ngSwitchCase=\"'action'\" class=\"po-table-link\" (click)=\"action(value, row)\">{{ value }}</a>\n  <a *ngSwitchCase=\"'externalLink'\" class=\"po-table-link\" [href]=\"link\" target=\"_blank\">{{ value }}</a>\n  <a *ngSwitchCase=\"'internalLink'\" class=\"po-table-link\" [routerLink]=\"link\">{{ value }}</a>\n</ng-container>\n"
                }] }
    ];
    PoTableColumnLinkComponent.propDecorators = {
        action: [{ type: Input, args: ['p-action',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        link: [{ type: Input, args: ['p-link',] }],
        row: [{ type: Input, args: ['p-row',] }],
        value: [{ type: Input, args: ['p-value',] }]
    };
    return PoTableColumnLinkComponent;
}());
export { PoTableColumnLinkComponent };
if (false) {
    /** @type {?} */
    PoTableColumnLinkComponent.prototype.action;
    /** @type {?} */
    PoTableColumnLinkComponent.prototype.disabled;
    /** @type {?} */
    PoTableColumnLinkComponent.prototype.link;
    /** @type {?} */
    PoTableColumnLinkComponent.prototype.row;
    /** @type {?} */
    PoTableColumnLinkComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWxpbmsuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10YWJsZS9wby10YWJsZS1jb2x1bW4tbGluay9wby10YWJsZS1jb2x1bW4tbGluay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7QUFTckQ7SUFBQTtJQW1DQSxDQUFDO0lBbEJDLHNCQUFJLDRDQUFJOzs7O1FBQVI7WUFFRSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pCLE9BQU8sVUFBVSxDQUFDO2FBQ25CO1lBRUQsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNkLE9BQU8sUUFBUSxDQUFDO2FBQ2xCO1lBRUQsSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM3QixPQUFPLGNBQWMsQ0FBQzthQUN2QjtZQUVELE9BQU8sY0FBYyxDQUFDO1FBRXhCLENBQUM7OztPQUFBOztnQkFqQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLG1kQUFvRDtpQkFDckQ7Ozt5QkFJRSxLQUFLLFNBQUMsVUFBVTsyQkFFaEIsS0FBSyxTQUFDLFlBQVk7dUJBRWxCLEtBQUssU0FBQyxRQUFRO3NCQUVkLEtBQUssU0FBQyxPQUFPO3dCQUViLEtBQUssU0FBQyxTQUFTOztJQW9CbEIsaUNBQUM7Q0FBQSxBQW5DRCxJQW1DQztTQTlCWSwwQkFBMEI7OztJQUVyQyw0Q0FBb0M7O0lBRXBDLDhDQUF1Qzs7SUFFdkMsMENBQThCOztJQUU5Qix5Q0FBb0I7O0lBRXBCLDJDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgaXNFeHRlcm5hbExpbmsgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgZXhpYmlyIGxpbmsgbmFzIGNvbHVuYXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLWNvbHVtbi1saW5rJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYmxlLWNvbHVtbi1saW5rLmNvbXBvbmVudC5odG1sJ1xufSlcblxuZXhwb3J0IGNsYXNzIFBvVGFibGVDb2x1bW5MaW5rQ29tcG9uZW50IHtcblxuICBASW5wdXQoJ3AtYWN0aW9uJykgYWN0aW9uOiBGdW5jdGlvbjtcblxuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICBASW5wdXQoJ3AtbGluaycpIGxpbms6IHN0cmluZztcblxuICBASW5wdXQoJ3Atcm93Jykgcm93O1xuXG4gIEBJbnB1dCgncC12YWx1ZScpIHZhbHVlOiBzdHJpbmc7XG5cbiAgZ2V0IHR5cGUoKSB7XG5cbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuICdkaXNhYmxlZCc7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYWN0aW9uKSB7XG4gICAgICAgcmV0dXJuICdhY3Rpb24nO1xuICAgIH1cblxuICAgIGlmIChpc0V4dGVybmFsTGluayh0aGlzLmxpbmspKSB7XG4gICAgICByZXR1cm4gJ2V4dGVybmFsTGluayc7XG4gICAgfVxuXG4gICAgcmV0dXJuICdpbnRlcm5hbExpbmsnO1xuXG4gIH1cblxufVxuIl19