/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por manipular os botões de aba.
 */
var PoTabButtonComponent = /** @class */ (function () {
    function PoTabButtonComponent(elementRef) {
        this.elementRef = elementRef;
        // Função sera emitida quando a tab ficar ativada
        this.activated = new EventEmitter();
        // Função sera emitida quando a tab ficar desabilitada ou escondida
        this.changeState = new EventEmitter();
        // Método recebido do usuário para ser disparado quando clicar na aba
        this.click = new EventEmitter();
    }
    Object.defineProperty(PoTabButtonComponent.prototype, "active", {
        get: /**
         * @return {?}
         */
        function () {
            return this._active;
        },
        // Ativa o botão
        set: 
        // Ativa o botão
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._active = value;
            this.emitActivated();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTabButtonComponent.prototype, "hide", {
        get: /**
         * @return {?}
         */
        function () {
            return this._hide;
        },
        // Oculta o botão
        set: 
        // Oculta o botão
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._hide = convertToBoolean(value);
            this.setDisplayOnHide();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} changes
     * @return {?}
     */
    PoTabButtonComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {
            this.changeState.emit(this);
        }
    };
    /**
     * @return {?}
     */
    PoTabButtonComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.click.emit(this.id);
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoTabButtonComponent.prototype.emitActivated = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.active) {
            this.activated.emit(this);
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoTabButtonComponent.prototype.setDisplayOnHide = /**
     * @private
     * @return {?}
     */
    function () {
        this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';
    };
    PoTabButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-tab-button',
                    template: "<div\n  class=\"po-tab-button-md\"\n  [attr.tabindex]=\"disabled ? null : 0\"\n  [class.po-tab-button-active]=\"active\"\n  [class.po-tab-button-disabled]=\"disabled\"\n  [class.po-tab-button-sm]=\"small\"\n  (click)=\"onClick()\"\n  (keyup.enter)=\"onClick()\">\n\n  <span class=\"po-tab-button-label po-text-ellipsis\">\n    {{label}}\n  </span>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    PoTabButtonComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PoTabButtonComponent.propDecorators = {
        active: [{ type: Input, args: ['p-active',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        hide: [{ type: Input, args: ['p-hide',] }],
        id: [{ type: Input, args: ['p-id',] }],
        label: [{ type: Input, args: ['p-label',] }],
        small: [{ type: Input, args: ['p-small',] }],
        activated: [{ type: Output, args: ['p-activated',] }],
        changeState: [{ type: Output, args: ['p-change-state',] }],
        click: [{ type: Output, args: ['p-click',] }]
    };
    return PoTabButtonComponent;
}());
export { PoTabButtonComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTabButtonComponent.prototype._active;
    /**
     * @type {?}
     * @private
     */
    PoTabButtonComponent.prototype._hide;
    /** @type {?} */
    PoTabButtonComponent.prototype.disabled;
    /** @type {?} */
    PoTabButtonComponent.prototype.id;
    /** @type {?} */
    PoTabButtonComponent.prototype.label;
    /** @type {?} */
    PoTabButtonComponent.prototype.small;
    /** @type {?} */
    PoTabButtonComponent.prototype.activated;
    /** @type {?} */
    PoTabButtonComponent.prototype.changeState;
    /** @type {?} */
    PoTabButtonComponent.prototype.click;
    /**
     * @type {?}
     * @private
     */
    PoTabButtonComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYnMvcG8tdGFiLWJ1dHRvbi9wby10YWItYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBYSxNQUFNLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTdHLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7OztBQVN2RDtJQW9ERSw4QkFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTs7UUFSbkIsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O1FBRzVCLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7UUFHeEMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFQSxDQUFDO0lBMUMvQyxzQkFBdUIsd0NBQU07Ozs7UUFNN0I7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQztRQVRELGdCQUFnQjs7Ozs7OztRQUNoQixVQUE4QixLQUFjO1lBQzFDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBRXJCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDOzs7T0FBQTtJQVVELHNCQUFxQixzQ0FBSTs7OztRQU16QjtZQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDO1FBVEQsaUJBQWlCOzs7Ozs7O1FBQ2pCLFVBQTBCLEtBQWM7WUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUVyQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUMxQixDQUFDOzs7T0FBQTs7Ozs7SUEwQkQsMENBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUU7WUFDdEcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDN0I7SUFDSCxDQUFDOzs7O0lBRUQsc0NBQU87OztJQUFQO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzFCO0lBQ0gsQ0FBQzs7Ozs7SUFFTyw0Q0FBYTs7OztJQUFyQjtRQUNFLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs7Ozs7SUFFTywrQ0FBZ0I7Ozs7SUFBeEI7UUFDRSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3hFLENBQUM7O2dCQTFFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLGlYQUE2QztpQkFDOUM7Ozs7Z0JBZG1CLFVBQVU7Ozt5QkFxQjNCLEtBQUssU0FBQyxVQUFVOzJCQVdoQixLQUFLLFNBQUMsWUFBWTt1QkFHbEIsS0FBSyxTQUFDLFFBQVE7cUJBV2QsS0FBSyxTQUFDLE1BQU07d0JBR1osS0FBSyxTQUFDLFNBQVM7d0JBR2YsS0FBSyxTQUFDLFNBQVM7NEJBR2YsTUFBTSxTQUFDLGFBQWE7OEJBR3BCLE1BQU0sU0FBQyxnQkFBZ0I7d0JBR3ZCLE1BQU0sU0FBQyxTQUFTOztJQTBCbkIsMkJBQUM7Q0FBQSxBQTVFRCxJQTRFQztTQXhFWSxvQkFBb0I7Ozs7OztJQUUvQix1Q0FBeUI7Ozs7O0lBQ3pCLHFDQUF1Qjs7SUFjdkIsd0NBQXVDOztJQWN2QyxrQ0FBMEI7O0lBRzFCLHFDQUFnQzs7SUFHaEMscUNBQWlDOztJQUdqQyx5Q0FBc0Q7O0lBR3RELDJDQUEyRDs7SUFHM0QscUNBQThDOzs7OztJQUVsQywwQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uQ2hhbmdlcywgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgbWFuaXB1bGFyIG9zIGJvdMO1ZXMgZGUgYWJhLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWItYnV0dG9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYi1idXR0b24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFiQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcblxuICBwcml2YXRlIF9hY3RpdmU6IGJvb2xlYW47XG4gIHByaXZhdGUgX2hpZGU6IGJvb2xlYW47XG5cbiAgLy8gQXRpdmEgbyBib3TDo29cbiAgQElucHV0KCdwLWFjdGl2ZScpIHNldCBhY3RpdmUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9hY3RpdmUgPSB2YWx1ZTtcblxuICAgIHRoaXMuZW1pdEFjdGl2YXRlZCgpO1xuICB9XG5cbiAgZ2V0IGFjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fYWN0aXZlO1xuICB9XG5cbiAgLy8gRGVzYWJpbGl0YSBvIGJvdMOjb1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAvLyBPY3VsdGEgbyBib3TDo29cbiAgQElucHV0KCdwLWhpZGUnKSBzZXQgaGlkZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2hpZGUgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcblxuICAgIHRoaXMuc2V0RGlzcGxheU9uSGlkZSgpO1xuICB9XG5cbiAgZ2V0IGhpZGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2hpZGU7XG4gIH1cblxuICAvLyBJZGVudGlmaWNhZG9yIGRvIGNvbXBvbmVudGVcbiAgQElucHV0KCdwLWlkJykgaWQ6IHN0cmluZztcblxuICAvLyBSw7N0dWxvIGRvIGJvdMOjb1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8vIERpbWludWkgbyB0YW1hbmhvIGRvIGJvdMOjb1xuICBASW5wdXQoJ3Atc21hbGwnKSBzbWFsbDogYm9vbGVhbjtcblxuICAvLyBGdW7Dp8OjbyBzZXJhIGVtaXRpZGEgcXVhbmRvIGEgdGFiIGZpY2FyIGF0aXZhZGFcbiAgQE91dHB1dCgncC1hY3RpdmF0ZWQnKSBhY3RpdmF0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLy8gRnVuw6fDo28gc2VyYSBlbWl0aWRhIHF1YW5kbyBhIHRhYiBmaWNhciBkZXNhYmlsaXRhZGEgb3UgZXNjb25kaWRhXG4gIEBPdXRwdXQoJ3AtY2hhbmdlLXN0YXRlJykgY2hhbmdlU3RhdGUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLy8gTcOpdG9kbyByZWNlYmlkbyBkbyB1c3XDoXJpbyBwYXJhIHNlciBkaXNwYXJhZG8gcXVhbmRvIGNsaWNhciBuYSBhYmFcbiAgQE91dHB1dCgncC1jbGljaycpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikgeyB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICgoY2hhbmdlcy5oaWRlICYmIGNoYW5nZXMuaGlkZS5jdXJyZW50VmFsdWUpIHx8IChjaGFuZ2VzLmRpc2FibGVkICYmIGNoYW5nZXMuZGlzYWJsZWQuY3VycmVudFZhbHVlKSkge1xuICAgICAgdGhpcy5jaGFuZ2VTdGF0ZS5lbWl0KHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLmNsaWNrLmVtaXQodGhpcy5pZCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBlbWl0QWN0aXZhdGVkKCkge1xuICAgIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgICAgdGhpcy5hY3RpdmF0ZWQuZW1pdCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldERpc3BsYXlPbkhpZGUoKSB7XG4gICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IHRoaXMuaGlkZSA/ICdub25lJyA6ICcnO1xuICB9XG5cbn1cbiJdfQ==