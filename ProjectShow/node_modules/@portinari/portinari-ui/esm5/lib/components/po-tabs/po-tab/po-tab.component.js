/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef } from '@angular/core';
import { PoTabBaseComponent } from './po-tab-base.component';
/**
 * \@docsExtends PoTabBaseComponent
 */
var PoTabComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoTabComponent, _super);
    function PoTabComponent(elementRef) {
        var _this = _super.call(this) || this;
        _this.elementRef = elementRef;
        return _this;
    }
    /**
     * @return {?}
     */
    PoTabComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.setDisplayOnActive();
    };
    /**
     * @protected
     * @return {?}
     */
    PoTabComponent.prototype.setDisplayOnActive = /**
     * @protected
     * @return {?}
     */
    function () {
        this.elementRef.nativeElement.style.display = this.active ? '' : 'none';
    };
    PoTabComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-tab',
                    template: "<ng-content></ng-content>\n"
                }] }
    ];
    /** @nocollapse */
    PoTabComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return PoTabComponent;
}(PoTabBaseComponent));
export { PoTabComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTabComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFicy9wby10YWIvcG8tdGFiLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBb0IsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQzs7OztBQUs3RDtJQUlvQywwQ0FBa0I7SUFFcEQsd0JBQW9CLFVBQXNCO1FBQTFDLFlBQ0UsaUJBQU8sU0FDUjtRQUZtQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTs7SUFFMUMsQ0FBQzs7OztJQUVELDJDQUFrQjs7O0lBQWxCO1FBQ0UsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFUywyQ0FBa0I7Ozs7SUFBNUI7UUFDRSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQzFFLENBQUM7O2dCQWhCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFFBQVE7b0JBQ2xCLHVDQUFzQztpQkFDdkM7Ozs7Z0JBVnFDLFVBQVU7O0lBeUJoRCxxQkFBQztDQUFBLEFBbEJELENBSW9DLGtCQUFrQixHQWNyRDtTQWRZLGNBQWM7Ozs7OztJQUViLG9DQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb1RhYkJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXRhYi1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvVGFiQmFzZUNvbXBvbmVudFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWInLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFiLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1RhYkNvbXBvbmVudCBleHRlbmRzIFBvVGFiQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5zZXREaXNwbGF5T25BY3RpdmUoKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBzZXREaXNwbGF5T25BY3RpdmUoKSB7XG4gICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IHRoaXMuYWN0aXZlID8gJycgOiAnbm9uZSc7XG4gIH1cblxufVxuIl19