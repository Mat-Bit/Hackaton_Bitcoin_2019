/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
/** @type {?} */
var PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];
/** @type {?} */
var PO_AVATAR_SIZE_DEFAULT = 'md';
/**
 * \@description
 *
 * O componente `po-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de
 * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.
 *
 * Além de poder ser utilizado separadamente, é possível usar o `po-avatar` juntamente com outros componentes e criar
 * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.
 */
var PoAvatarBaseComponent = /** @class */ (function () {
    function PoAvatarBaseComponent() {
        this._size = 'md';
    }
    Object.defineProperty(PoAvatarBaseComponent.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this._size;
        },
        /**
         * @optional
         *
         * @description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * @default `md`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * \@default `md`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;
        },
        enumerable: true,
        configurable: true
    });
    PoAvatarBaseComponent.propDecorators = {
        src: [{ type: Input, args: ['p-src',] }],
        size: [{ type: Input, args: ['p-size',] }]
    };
    return PoAvatarBaseComponent;
}());
export { PoAvatarBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoAvatarBaseComponent.prototype._size;
    /**
     * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)
     * ou um servidor externo (`https://portinari.io/assets/images/logo-black-small.png`).
     * @type {?}
     */
    PoAvatarBaseComponent.prototype.src;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYXZhdGFyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1hdmF0YXIvcG8tYXZhdGFyLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztJQUVoQyxlQUFlLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDOztJQUNoRCxzQkFBc0IsR0FBRyxJQUFJOzs7Ozs7Ozs7O0FBV25DO0lBQUE7UUFDVSxVQUFLLEdBQVcsSUFBSSxDQUFDO0lBOEIvQixDQUFDO0lBTkMsc0JBQXFCLHVDQUFJOzs7O1FBR3pCO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFyQkQ7Ozs7Ozs7Ozs7Ozs7OztXQWVHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBQ0gsVUFBMEIsS0FBYTtZQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsc0JBQXNCLENBQUM7UUFDaEYsQ0FBQzs7O09BQUE7O3NCQXBCQSxLQUFLLFNBQUMsT0FBTzt1QkFrQmIsS0FBSyxTQUFDLFFBQVE7O0lBTWpCLDRCQUFDO0NBQUEsQUEvQkQsSUErQkM7U0EvQlkscUJBQXFCOzs7Ozs7SUFDaEMsc0NBQTZCOzs7Ozs7SUFNN0Isb0NBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuY29uc3QgUE9fQVZBVEFSX1NJWkVTID0gWyd4cycsICdzbScsICdtZCcsICdsZycsICd4bCddO1xuY29uc3QgUE9fQVZBVEFSX1NJWkVfREVGQVVMVCA9ICdtZCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1hdmF0YXJgIMOpIHVtIGNvbnRhaW5lciBwYXJhIGltYWdlbnMgZW0gbWluaWF0dXJhLCBwb3NzdWkgdW0gZm9ybWF0byByZWRvbmRvIGUgY2luY28gb3DDp8O1ZXMgZGVcbiAqIHRhbWFuaG8sIHBvZGUgc2VyIHV0aWxpemFkbyBwYXJhIG1vc3RyYXIgYSBmb3RvIGRvIHBlcmZpbCBkZSB1bSB1c3XDoXJpbywgZW50cmUgb3V0cmFzIHBvc3NpYmlsaWRhZGVzLlxuICpcbiAqIEFsw6ltIGRlIHBvZGVyIHNlciB1dGlsaXphZG8gc2VwYXJhZGFtZW50ZSwgw6kgcG9zc8OtdmVsIHVzYXIgbyBgcG8tYXZhdGFyYCBqdW50YW1lbnRlIGNvbSBvdXRyb3MgY29tcG9uZW50ZXMgZSBjcmlhclxuICogbGF5b3V0cyByaWNvcyBlIGJlbSBpbnRlcmVzc2FudGVzIHBhcmEgb3MgdXN1w6FyaW9zLCBjb21vIHBvciBleGVtcGxvLCB1bWEgbGlzdGEgZGUgaXRlbnMgb3UgcHJvZHV0b3MuXG4gKi9cbmV4cG9ydCBjbGFzcyBQb0F2YXRhckJhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF9zaXplOiBzdHJpbmcgPSAnbWQnO1xuXG4gIC8qKlxuICAgKiBGb250ZSBkYSBpbWFnZW0gcXVlIHBvZGUgc2VyIHVtIGNhbWluaG8gbG9jYWwgKGAuL2Fzc2V0cy9pbWFnZXMvbG9nby1ibGFjay1zbWFsbC5wbmdgKVxuICAgKiBvdSB1bSBzZXJ2aWRvciBleHRlcm5vIChgaHR0cHM6Ly9wb3J0aW5hcmkuaW8vYXNzZXRzL2ltYWdlcy9sb2dvLWJsYWNrLXNtYWxsLnBuZ2ApLlxuICAgKi9cbiAgQElucHV0KCdwLXNyYycpIHNyYzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjb21wb25lbnRlLlxuICAgKlxuICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgKiAgLSBgeHNgICgyNHgyNClcbiAgICogIC0gYHNtYCAoMzJ4MzIpXG4gICAqICAtIGBtZGAgKDY0eDY0KVxuICAgKiAgLSBgbGdgICg5Nng5NilcbiAgICogIC0gYHhsYCAoMTQ0eDE0NClcbiAgICpcbiAgICogQGRlZmF1bHQgYG1kYFxuICAgKi9cbiAgQElucHV0KCdwLXNpemUnKSBzZXQgc2l6ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fc2l6ZSA9IFBPX0FWQVRBUl9TSVpFUy5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IFBPX0FWQVRBUl9TSVpFX0RFRkFVTFQ7XG4gIH1cbiAgZ2V0IHNpemUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fc2l6ZTtcbiAgfVxufVxuIl19