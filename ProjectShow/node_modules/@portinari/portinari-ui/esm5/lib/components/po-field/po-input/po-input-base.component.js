/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import { requiredFailed, maxlengpoailed, minlengpoailed, patternFailed } from './../validators';
import { PoMask } from './po-mask';
/**
 * \@description
 *
 * Este é um componente baseado em input, com várias propriedades do input nativo e outras
 * propriedades extras como: máscara, pattern, mensagem de erro e etc.
 * Você deve informar a variável que contém o valor como [(ngModel)]="variavel", para que o
 * input receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).
 * A propriedade name é obrigatória para que o formulário e o model funcionem corretamente.
 *
 * Importante:
 *
 * - Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.
 * Então você precisa informar o atributo name ou o atributo [ngModelOptions]="{standalone: true}".
 * Exemplo: [(ngModel)]="pessoa.nome" [ngModelOptions]="{standalone: true}"
 * @abstract
 */
var PoInputBaseComponent = /** @class */ (function () {
    function PoInputBaseComponent() {
        this._noAutocomplete = false;
        this._placeholder = '';
        this.passedWriteValue = false;
        /**
         * \@description
         *
         * Se verdadeiro, desabilita o campo.
         *
         * \@default `false`
         */
        this.disabled = false;
        /**
         * Indica que o campo será somente leitura.
         */
        this.readonly = false;
        /**
         * \@description
         *
         * Indica que o campo será obrigatório.
         *
         * > Esta propriedade é desconsiderada quando o input está desabilitado `(p-disabled)`.
         *
         * \@default `false`
         */
        this.required = false;
        /**
         * Se verdadeiro, o campo receberá um botão para ser limpo.
         */
        this.clean = false;
        /**
         * \@description
         *
         * Mensagem que será apresentada quando o `pattern` ou a máscara não for satisfeita.
         *
         * > Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.
         */
        this.errorPattern = '';
        /**
         * \@description
         *
         * Indica uma máscara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.
         * A máscara gera uma validação automática do campo, podendo esta ser substituída por um REGEX específico
         * através da propriedade p-pattern.
         * O campo será sinalizado e o formulário ficará inválido quando o valor informado estiver fora do padrão definido,
         * mesmo quando desabilitado.
         */
        this.mask = '';
        /**
         * \@description
         *
         * Indica se o `model` receberá o valor formatado pela máscara ou apenas o valor puro (sem formatação).
         *
         * \@default `false`
         */
        this.maskFormatModel = false;
        /**
         * Evento disparado ao sair do campo.
         */
        this.blur = new EventEmitter();
        /**
         * Evento disparado ao entrar do campo.
         */
        this.enter = new EventEmitter();
        /**
         * Evento disparado ao alterar valor e deixar o campo.
         */
        this.change = new EventEmitter();
        /**
         * Evento disparado ao alterar valor do model.
         */
        this.changeModel = new EventEmitter();
        this.onChangePropagate = null;
        this.onTouched = null;
    }
    Object.defineProperty(PoInputBaseComponent.prototype, "noAutocomplete", {
        get: /**
         * @return {?}
         */
        function () {
            return this._noAutocomplete;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define a propriedade nativa `autocomplete` do campo como `off`.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define a propriedade nativa `autocomplete` do campo como `off`.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._noAutocomplete = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "placeholder", {
        get: /**
         * @return {?}
         */
        function () {
            return this._placeholder;
        },
        /**
         * @optional
         *
         * @description
         *
         * Mensagem que aparecerá enquanto o campo não estiver preenchido.
         *
         * @default ''
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Mensagem que aparecerá enquanto o campo não estiver preenchido.
         *
         * \@default ''
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._placeholder = value || '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setDisabled", {
        set: /**
         * @param {?} disabled
         * @return {?}
         */
        function (disabled) {
            this.disabled = disabled === '' ? true : convertToBoolean(disabled);
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setReadonly", {
        set: /**
         * @param {?} readonly
         * @return {?}
         */
        function (readonly) {
            this.readonly = readonly === '' ? true : convertToBoolean(readonly);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setRequired", {
        set: /**
         * @param {?} required
         * @return {?}
         */
        function (required) {
            this.required = required === '' ? true : convertToBoolean(required);
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "autofocus", {
        get: /**
         * @return {?}
         */
        function () {
            return this._autofocus;
        },
        /**
         * @optional
         *
         * @description
         *
         * Aplica foco no elemento ao ser iniciado.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Aplica foco no elemento ao ser iniciado.
         *
         * \@default `false`
         * @param {?} focus
         * @return {?}
         */
        function (focus) {
            this._autofocus = convertToBoolean(focus);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setClean", {
        set: /**
         * @param {?} clean
         * @return {?}
         */
        function (clean) {
            this.clean = clean === '' ? true : convertToBoolean(clean);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setPattern", {
        set: /**
         * @param {?} pattern
         * @return {?}
         */
        function (pattern) {
            this.pattern = pattern;
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "maxlength", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxlength;
        },
        /**
         * @optional
         *
         * @description
         *
         * Indica a quantidade máxima de caracteres que o campo aceita.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Indica a quantidade máxima de caracteres que o campo aceita.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (!isNaN(parseInt((/** @type {?} */ (value)), 10))) {
                this._maxlength = parseInt((/** @type {?} */ (value)), 10);
                this.validateModel();
            }
            else if (!value) {
                this._maxlength = undefined;
                this.validateModel();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "minlength", {
        get: /**
         * @return {?}
         */
        function () {
            return this._minlength;
        },
        /**
         * @optional
         *
         * @description
         *
         * Indica a quantidade mínima de caracteres que o campo aceita.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Indica a quantidade mínima de caracteres que o campo aceita.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (!isNaN(parseInt((/** @type {?} */ (value)), 10))) {
                this._minlength = parseInt((/** @type {?} */ (value)), 10);
                this.validateModel();
            }
            else if (!value) {
                this._minlength = undefined;
                this.validateModel();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setMask", {
        set: /**
         * @param {?} mask
         * @return {?}
         */
        function (mask) {
            this.mask = mask;
            // Atualiza Máscara do Campo
            this.objMask = new PoMask(this.mask, this.maskFormatModel);
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInputBaseComponent.prototype, "setMaskFormatModel", {
        set: /**
         * @param {?} maskFormatModel
         * @return {?}
         */
        function (maskFormatModel) {
            this.maskFormatModel = maskFormatModel === '' ? true : convertToBoolean(maskFormatModel);
            if (this.objMask instanceof PoMask) {
                this.objMask.formatModel = this.maskFormatModel;
                this.validateModel();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.callOnChange = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.updateModel(value);
        this.controlChangeModelEmitter(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.callUpdateModelWithTimeout = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.updateModel(value); }));
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.controlChangeModelEmitter = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.modelLastUpdate !== value) {
            this.changeModel.emit(value);
            this.modelLastUpdate = value;
        }
    };
    // Função implementada do ControlValueAccessor
    // Usada para interceptar as mudanças e não atualizar automaticamente o Model
    // Função implementada do ControlValueAccessor
    // Usada para interceptar as mudanças e não atualizar automaticamente o Model
    /**
     * @param {?} func
     * @return {?}
     */
    PoInputBaseComponent.prototype.registerOnChange = 
    // Função implementada do ControlValueAccessor
    // Usada para interceptar as mudanças e não atualizar automaticamente o Model
    /**
     * @param {?} func
     * @return {?}
     */
    function (func) {
        this.onChangePropagate = func;
    };
    // Função implementada do ControlValueAccessor
    // Usada para interceptar as mudanças e não atualizar automaticamente o Model
    // Função implementada do ControlValueAccessor
    // Usada para interceptar as mudanças e não atualizar automaticamente o Model
    /**
     * @param {?} func
     * @return {?}
     */
    PoInputBaseComponent.prototype.registerOnTouched = 
    // Função implementada do ControlValueAccessor
    // Usada para interceptar as mudanças e não atualizar automaticamente o Model
    /**
     * @param {?} func
     * @return {?}
     */
    function (func) {
        this.onTouched = func;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PoInputBaseComponent.prototype.registerOnValidatorChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.validatorChange = fn;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.updateModel = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        // Quando o input não possui um formulário, então esta função não é registrada
        if (this.onChangePropagate) {
            this.onChangePropagate(value);
        }
    };
    /**
     * @param {?} c
     * @return {?}
     */
    PoInputBaseComponent.prototype.validate = /**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        if (requiredFailed(this.required, this.disabled, this.getScreenValue())) {
            return { required: {
                    valid: false,
                } };
        }
        if (maxlengpoailed(this.maxlength, this.getScreenValue())) {
            return { maxlength: {
                    valid: false,
                } };
        }
        if (minlengpoailed(this.minlength, this.getScreenValue())) {
            return { minlength: {
                    valid: false,
                } };
        }
        if (patternFailed(this.pattern, c.value)) {
            this.validatePatternOnWriteValue(c.value);
            return { pattern: {
                    valid: false,
                } };
        }
        return this.extraValidation(c);
    };
    // Função implementada do ControlValueAccessor
    // Função implementada do ControlValueAccessor
    /**
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.writeValue = 
    // Função implementada do ControlValueAccessor
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.writeValueModel(value);
    };
    /**
     * @protected
     * @return {?}
     */
    PoInputBaseComponent.prototype.validateModel = /**
     * @protected
     * @return {?}
     */
    function () {
        if (this.validatorChange) {
            this.validatorChange();
        }
    };
    // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).
    // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.validatePatternOnWriteValue = 
    // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        if (value && this.passedWriteValue) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.updateModel(value);
            }));
            this.passedWriteValue = false;
        }
    };
    PoInputBaseComponent.propDecorators = {
        icon: [{ type: Input, args: ['p-icon',] }],
        label: [{ type: Input, args: ['p-label',] }],
        help: [{ type: Input, args: ['p-help',] }],
        name: [{ type: Input, args: ['name',] }],
        noAutocomplete: [{ type: Input, args: ['p-no-autocomplete',] }],
        placeholder: [{ type: Input, args: ['p-placeholder',] }],
        setDisabled: [{ type: Input, args: ['p-disabled',] }],
        setReadonly: [{ type: Input, args: ['p-readonly',] }],
        setRequired: [{ type: Input, args: ['p-required',] }],
        autofocus: [{ type: Input, args: ['p-focus',] }],
        setClean: [{ type: Input, args: ['p-clean',] }],
        setPattern: [{ type: Input, args: ['p-pattern',] }],
        errorPattern: [{ type: Input, args: ['p-error-pattern',] }],
        maxlength: [{ type: Input, args: ['p-maxlength',] }],
        minlength: [{ type: Input, args: ['p-minlength',] }],
        setMask: [{ type: Input, args: ['p-mask',] }],
        setMaskFormatModel: [{ type: Input, args: ['p-mask-format-model',] }],
        optional: [{ type: Input, args: ['p-optional',] }],
        blur: [{ type: Output, args: ['p-blur',] }],
        enter: [{ type: Output, args: ['p-enter',] }],
        change: [{ type: Output, args: ['p-change',] }],
        changeModel: [{ type: Output, args: ['p-change-model',] }]
    };
    return PoInputBaseComponent;
}());
export { PoInputBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoInputBaseComponent.prototype._autofocus;
    /**
     * @type {?}
     * @private
     */
    PoInputBaseComponent.prototype._maxlength;
    /**
     * @type {?}
     * @private
     */
    PoInputBaseComponent.prototype._minlength;
    /**
     * @type {?}
     * @private
     */
    PoInputBaseComponent.prototype._noAutocomplete;
    /**
     * @type {?}
     * @private
     */
    PoInputBaseComponent.prototype._placeholder;
    /**
     * @type {?}
     * @protected
     */
    PoInputBaseComponent.prototype.passedWriteValue;
    /**
     * @type {?}
     * @protected
     */
    PoInputBaseComponent.prototype.validatorChange;
    /**
     * \@optional
     *
     * \@description
     *
     * Define o ícone que será exibido no início do campo.
     *
     * > Veja a disponibilidade de ícones em [biblioteca de ícones](guides/icons).
     * @type {?}
     */
    PoInputBaseComponent.prototype.icon;
    /**
     * Rótulo do campo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.label;
    /**
     * Texto de apoio do campo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.help;
    /**
     * Nome e identificador do campo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.name;
    /**
     * \@description
     *
     * Se verdadeiro, desabilita o campo.
     *
     * \@default `false`
     * @type {?}
     */
    PoInputBaseComponent.prototype.disabled;
    /**
     * Indica que o campo será somente leitura.
     * @type {?}
     */
    PoInputBaseComponent.prototype.readonly;
    /**
     * \@description
     *
     * Indica que o campo será obrigatório.
     *
     * > Esta propriedade é desconsiderada quando o input está desabilitado `(p-disabled)`.
     *
     * \@default `false`
     * @type {?}
     */
    PoInputBaseComponent.prototype.required;
    /**
     * Se verdadeiro, o campo receberá um botão para ser limpo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.clean;
    /**
     * \@description
     *
     * Expressão regular para validar o campo.
     * Quando o campo possuir uma máscara `(p-mask)` será automaticamente validado por ela, porém
     * é possível definir um p-pattern para substituir a validação da máscara.
     * @type {?}
     */
    PoInputBaseComponent.prototype.pattern;
    /**
     * \@description
     *
     * Mensagem que será apresentada quando o `pattern` ou a máscara não for satisfeita.
     *
     * > Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.
     * @type {?}
     */
    PoInputBaseComponent.prototype.errorPattern;
    /**
     * \@description
     *
     * Indica uma máscara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.
     * A máscara gera uma validação automática do campo, podendo esta ser substituída por um REGEX específico
     * através da propriedade p-pattern.
     * O campo será sinalizado e o formulário ficará inválido quando o valor informado estiver fora do padrão definido,
     * mesmo quando desabilitado.
     * @type {?}
     */
    PoInputBaseComponent.prototype.mask;
    /**
     * \@description
     *
     * Indica se o `model` receberá o valor formatado pela máscara ou apenas o valor puro (sem formatação).
     *
     * \@default `false`
     * @type {?}
     */
    PoInputBaseComponent.prototype.maskFormatModel;
    /**
     * \@optional
     *
     * \@description
     *
     * Define se a indicação de campo opcional será exibida.
     *
     * > Não será exibida a indicação se:
     * - O campo conter `p-required`;
     * - Não possuir `p-help` e/ou `p-label`.
     *
     * \@default `false`
     * @type {?}
     */
    PoInputBaseComponent.prototype.optional;
    /**
     * Evento disparado ao sair do campo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.blur;
    /**
     * Evento disparado ao entrar do campo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.enter;
    /**
     * Evento disparado ao alterar valor e deixar o campo.
     * @type {?}
     */
    PoInputBaseComponent.prototype.change;
    /**
     * Evento disparado ao alterar valor do model.
     * @type {?}
     */
    PoInputBaseComponent.prototype.changeModel;
    /** @type {?} */
    PoInputBaseComponent.prototype.type;
    /** @type {?} */
    PoInputBaseComponent.prototype.onChangePropagate;
    /** @type {?} */
    PoInputBaseComponent.prototype.onTouched;
    /** @type {?} */
    PoInputBaseComponent.prototype.objMask;
    /** @type {?} */
    PoInputBaseComponent.prototype.modelLastUpdate;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoNomeDoComponenteComponent } from '\@portinari/portinari-ui';
     *
     * ...
     *
     * \@ViewChild(PoNomeDoComponenteComponent, { static: true }) nomeDoComponente: PoNomeDoComponenteComponent;
     *
     * focusComponent() {
     *   this.nomeDoComponente.focus();
     * }
     * ```
     * @abstract
     * @return {?}
     */
    PoInputBaseComponent.prototype.focus = function () { };
    /**
     * @abstract
     * @param {?} value
     * @return {?}
     */
    PoInputBaseComponent.prototype.writeValueModel = function (value) { };
    /**
     * @abstract
     * @param {?} c
     * @return {?}
     */
    PoInputBaseComponent.prototype.extraValidation = function (c) { };
    /**
     * @abstract
     * @return {?}
     */
    PoInputBaseComponent.prototype.getScreenValue = function () { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taW5wdXQtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLWlucHV0L3BvLWlucHV0LWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hHLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJuQztJQUFBO1FBS1Usb0JBQWUsR0FBYSxLQUFLLENBQUM7UUFDbEMsaUJBQVksR0FBWSxFQUFFLENBQUM7UUFFekIscUJBQWdCLEdBQVksS0FBSyxDQUFDOzs7Ozs7OztRQStENUMsYUFBUSxHQUFhLEtBQUssQ0FBQzs7OztRQVEzQixhQUFRLEdBQWEsS0FBSyxDQUFDOzs7Ozs7Ozs7O1FBYzNCLGFBQVEsR0FBYSxLQUFLLENBQUM7Ozs7UUF5QjNCLFVBQUssR0FBYSxLQUFLLENBQUM7Ozs7Ozs7O1FBMEJFLGlCQUFZLEdBQVksRUFBRSxDQUFDOzs7Ozs7Ozs7O1FBeURyRCxTQUFJLEdBQVksRUFBRSxDQUFDOzs7Ozs7OztRQWlCbkIsb0JBQWUsR0FBYSxLQUFLLENBQUM7Ozs7UUEyQmhCLFNBQUksR0FBdUIsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7OztRQUc3QyxVQUFLLEdBQXVCLElBQUksWUFBWSxFQUFFLENBQUM7Ozs7UUFHOUMsV0FBTSxHQUF1QixJQUFJLFlBQVksRUFBRSxDQUFDOzs7O1FBRzFDLGdCQUFXLEdBQXVCLElB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Ozs7OztJQUV4QywwQ0FBNkI7Ozs7O0lBQzdCLDBDQUE0Qjs7Ozs7SUFDNUIsMENBQTRCOzs7OztJQUM1QiwrQ0FBMEM7Ozs7O0lBQzFDLDRDQUFtQzs7Ozs7SUFFbkMsZ0RBQTRDOzs7OztJQUM1QywrQ0FBK0I7Ozs7Ozs7Ozs7O0lBVy9CLG9DQUErQjs7Ozs7SUFHL0IscUNBQWlDOzs7OztJQUdqQyxvQ0FBK0I7Ozs7O0lBRy9CLG9DQUE0Qjs7Ozs7Ozs7O0lBMEM1Qix3Q0FBMkI7Ozs7O0lBUTNCLHdDQUEyQjs7Ozs7Ozs7Ozs7SUFjM0Isd0NBQTJCOzs7OztJQXlCM0IscUNBQXdCOzs7Ozs7Ozs7SUFZeEIsdUNBQWlCOzs7Ozs7Ozs7SUFjakIsNENBQXFEOzs7Ozs7Ozs7OztJQXlEckQsb0NBQW1COzs7Ozs7Ozs7SUFpQm5CLCtDQUFrQzs7Ozs7Ozs7Ozs7Ozs7O0lBd0JsQyx3Q0FBdUM7Ozs7O0lBR3ZDLG9DQUFnRTs7Ozs7SUFHaEUscUNBQWtFOzs7OztJQUdsRSxzQ0FBb0U7Ozs7O0lBR3BFLDJDQUErRTs7SUFFL0Usb0NBQWE7O0lBRWIsaURBQThCOztJQUM5Qix5Q0FBc0I7O0lBQ3RCLHVDQUFhOztJQUNiLCtDQUFxQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFvQ3JCLHVEQUF1Qjs7Ozs7O0lBbUV2QixzRUFBMkM7Ozs7OztJQUczQyxrRUFBc0U7Ozs7O0lBR3RFLGdFQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBDb250cm9sVmFsdWVBY2Nlc3NvciwgVmFsaWRhdG9yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgeyByZXF1aXJlZEZhaWxlZCwgbWF4bGVuZ3BvYWlsZWQsIG1pbmxlbmdwb2FpbGVkLCBwYXR0ZXJuRmFpbGVkIH0gZnJvbSAnLi8uLi92YWxpZGF0b3JzJztcbmltcG9ydCB7IFBvTWFzayB9IGZyb20gJy4vcG8tbWFzayc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0ZSDDqSB1bSBjb21wb25lbnRlIGJhc2VhZG8gZW0gaW5wdXQsIGNvbSB2w6FyaWFzIHByb3ByaWVkYWRlcyBkbyBpbnB1dCBuYXRpdm8gZSBvdXRyYXNcbiAqIHByb3ByaWVkYWRlcyBleHRyYXMgY29tbzogbcOhc2NhcmEsIHBhdHRlcm4sIG1lbnNhZ2VtIGRlIGVycm8gZSBldGMuXG4gKiBWb2PDqiBkZXZlIGluZm9ybWFyIGEgdmFyacOhdmVsIHF1ZSBjb250w6ltIG8gdmFsb3IgY29tbyBbKG5nTW9kZWwpXT1cInZhcmlhdmVsXCIsIHBhcmEgcXVlIG9cbiAqIGlucHV0IHJlY2ViYSBvIHZhbG9yIGRhIHZhcmnDoXZlbCBlIHBhcmEgcXVlIGVsYSByZWNlYmEgYXMgYWx0ZXJhw6fDtWVzIGRvIHZhbG9yICh0d28td2F5LWRhdGFiaW5kaW5nKS5cbiAqIEEgcHJvcHJpZWRhZGUgbmFtZSDDqSBvYnJpZ2F0w7NyaWEgcGFyYSBxdWUgbyBmb3JtdWzDoXJpbyBlIG8gbW9kZWwgZnVuY2lvbmVtIGNvcnJldGFtZW50ZS5cbiAqXG4gKiBJbXBvcnRhbnRlOlxuICpcbiAqIC0gQ2FzbyBvIGlucHV0IHRlbmhhIHVtIFsobmdNb2RlbCldIHNlbSBvIGF0cmlidXRvIG5hbWUsIG9jb3JyZXLDoSB1bSBlcnJvIGRlIGFuZ3VsYXIuXG4gKiBFbnTDo28gdm9jw6ogcHJlY2lzYSBpbmZvcm1hciBvIGF0cmlidXRvIG5hbWUgb3UgbyBhdHJpYnV0byBbbmdNb2RlbE9wdGlvbnNdPVwie3N0YW5kYWxvbmU6IHRydWV9XCIuXG4gKiBFeGVtcGxvOiBbKG5nTW9kZWwpXT1cInBlc3NvYS5ub21lXCIgW25nTW9kZWxPcHRpb25zXT1cIntzdGFuZGFsb25lOiB0cnVlfVwiXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQb0lucHV0QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBWYWxpZGF0b3Ige1xuXG4gIHByaXZhdGUgX2F1dG9mb2N1cz86IGJvb2xlYW47XG4gIHByaXZhdGUgX21heGxlbmd0aD86IG51bWJlcjtcbiAgcHJpdmF0ZSBfbWlubGVuZ3RoPzogbnVtYmVyO1xuICBwcml2YXRlIF9ub0F1dG9jb21wbGV0ZT86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfcGxhY2Vob2xkZXI/OiBzdHJpbmcgPSAnJztcblxuICBwcm90ZWN0ZWQgcGFzc2VkV3JpdGVWYWx1ZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwcm90ZWN0ZWQgdmFsaWRhdG9yQ2hhbmdlOiBhbnk7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIG8gw61jb25lIHF1ZSBzZXLDoSBleGliaWRvIG5vIGluw61jaW8gZG8gY2FtcG8uXG4gICAqXG4gICAqID4gVmVqYSBhIGRpc3BvbmliaWxpZGFkZSBkZSDDrWNvbmVzIGVtIFtiaWJsaW90ZWNhIGRlIMOtY29uZXNdKGd1aWRlcy9pY29ucykuXG4gICAqL1xuICBASW5wdXQoJ3AtaWNvbicpIGljb24/OiBzdHJpbmc7XG5cbiAgLyoqIFLDs3R1bG8gZG8gY2FtcG8uICovXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsPzogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBkZSBhcG9pbyBkbyBjYW1wby4gKi9cbiAgQElucHV0KCdwLWhlbHAnKSBoZWxwPzogc3RyaW5nO1xuXG4gIC8qKiBOb21lIGUgaWRlbnRpZmljYWRvciBkbyBjYW1wby4gKi9cbiAgQElucHV0KCduYW1lJykgbmFtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSBhIHByb3ByaWVkYWRlIG5hdGl2YSBgYXV0b2NvbXBsZXRlYCBkbyBjYW1wbyBjb21vIGBvZmZgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Atbm8tYXV0b2NvbXBsZXRlJykgc2V0IG5vQXV0b2NvbXBsZXRlKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fbm9BdXRvY29tcGxldGUgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBub0F1dG9jb21wbGV0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbm9BdXRvY29tcGxldGU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBNZW5zYWdlbSBxdWUgYXBhcmVjZXLDoSBlbnF1YW50byBvIGNhbXBvIG7Do28gZXN0aXZlciBwcmVlbmNoaWRvLlxuICAgKlxuICAgKiBAZGVmYXVsdCAnJ1xuICAgKi9cbiAgQElucHV0KCdwLXBsYWNlaG9sZGVyJykgc2V0IHBsYWNlaG9sZGVyKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9wbGFjZWhvbGRlciA9IHZhbHVlIHx8ICcnO1xuICB9XG4gIGdldCBwbGFjZWhvbGRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fcGxhY2Vob2xkZXI7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFNlIHZlcmRhZGVpcm8sIGRlc2FiaWxpdGEgbyBjYW1wby5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgZGlzYWJsZWQ/OiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIHNldCBzZXREaXNhYmxlZChkaXNhYmxlZDogc3RyaW5nKSB7XG4gICAgdGhpcy5kaXNhYmxlZCA9IGRpc2FibGVkID09PSAnJyA/IHRydWUgOiBjb252ZXJ0VG9Cb29sZWFuKGRpc2FibGVkKTtcblxuICAgIHRoaXMudmFsaWRhdGVNb2RlbCgpO1xuICB9XG5cbiAgLyoqIEluZGljYSBxdWUgbyBjYW1wbyBzZXLDoSBzb21lbnRlIGxlaXR1cmEuICovXG4gIHJlYWRvbmx5PzogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoJ3AtcmVhZG9ubHknKSBzZXQgc2V0UmVhZG9ubHkocmVhZG9ubHk6IHN0cmluZykge1xuICAgIHRoaXMucmVhZG9ubHkgPSByZWFkb25seSA9PT0gJycgPyB0cnVlIDogY29udmVydFRvQm9vbGVhbihyZWFkb25seSk7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEluZGljYSBxdWUgbyBjYW1wbyBzZXLDoSBvYnJpZ2F0w7NyaW8uXG4gICAqXG4gICAqID4gRXN0YSBwcm9wcmllZGFkZSDDqSBkZXNjb25zaWRlcmFkYSBxdWFuZG8gbyBpbnB1dCBlc3TDoSBkZXNhYmlsaXRhZG8gYChwLWRpc2FibGVkKWAuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIHJlcXVpcmVkPzogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoJ3AtcmVxdWlyZWQnKSBzZXQgc2V0UmVxdWlyZWQocmVxdWlyZWQ6IHN0cmluZykge1xuICAgIHRoaXMucmVxdWlyZWQgPSByZXF1aXJlZCA9PT0gJycgPyB0cnVlIDogY29udmVydFRvQm9vbGVhbihyZXF1aXJlZCk7XG5cbiAgICB0aGlzLnZhbGlkYXRlTW9kZWwoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEFwbGljYSBmb2NvIG5vIGVsZW1lbnRvIGFvIHNlciBpbmljaWFkby5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLWZvY3VzJykgc2V0IGF1dG9mb2N1cyhmb2N1czogYm9vbGVhbikge1xuICAgIHRoaXMuX2F1dG9mb2N1cyA9IGNvbnZlcnRUb0Jvb2xlYW4oZm9jdXMpO1xuICB9XG5cbiAgZ2V0IGF1dG9mb2N1cygpIHtcbiAgICByZXR1cm4gdGhpcy5fYXV0b2ZvY3VzO1xuICB9XG5cbiAgLyoqIFNlIHZlcmRhZGVpcm8sIG8gY2FtcG8gcmVjZWJlcsOhIHVtIGJvdMOjbyBwYXJhIHNlciBsaW1wby4gKi9cbiAgY2xlYW4/OiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgncC1jbGVhbicpIHNldCBzZXRDbGVhbihjbGVhbjogc3RyaW5nKSB7XG4gICAgdGhpcy5jbGVhbiA9IGNsZWFuID09PSAnJyA/IHRydWUgOiBjb252ZXJ0VG9Cb29sZWFuKGNsZWFuKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRXhwcmVzc8OjbyByZWd1bGFyIHBhcmEgdmFsaWRhciBvIGNhbXBvLlxuICAgKiBRdWFuZG8gbyBjYW1wbyBwb3NzdWlyIHVtYSBtw6FzY2FyYSBgKHAtbWFzaylgIHNlcsOhIGF1dG9tYXRpY2FtZW50ZSB2YWxpZGFkbyBwb3IgZWxhLCBwb3LDqW1cbiAgICogw6kgcG9zc8OtdmVsIGRlZmluaXIgdW0gcC1wYXR0ZXJuIHBhcmEgc3Vic3RpdHVpciBhIHZhbGlkYcOnw6NvIGRhIG3DoXNjYXJhLlxuICAgKi9cbiAgcGF0dGVybj86IHN0cmluZztcbiAgQElucHV0KCdwLXBhdHRlcm4nKSBzZXQgc2V0UGF0dGVybihwYXR0ZXJuOiBzdHJpbmcpIHtcbiAgICB0aGlzLnBhdHRlcm4gPSBwYXR0ZXJuO1xuXG4gICAgdGhpcy52YWxpZGF0ZU1vZGVsKCk7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE1lbnNhZ2VtIHF1ZSBzZXLDoSBhcHJlc2VudGFkYSBxdWFuZG8gbyBgcGF0dGVybmAgb3UgYSBtw6FzY2FyYSBuw6NvIGZvciBzYXRpc2ZlaXRhLlxuICAgKlxuICAgKiA+IEVzdGEgbWVuc2FnZW0gbsOjbyDDqSBhcHJlc2VudGFkYSBxdWFuZG8gbyBjYW1wbyBlc3RpdmVyIHZhemlvLCBtZXNtbyBxdWUgZWxlIHNlamEgcmVxdWVyaWRvLlxuICAgKi9cbiAgQElucHV0KCdwLWVycm9yLXBhdHRlcm4nKSBlcnJvclBhdHRlcm4/OiBzdHJpbmcgPSAnJztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBJbmRpY2EgYSBxdWFudGlkYWRlIG3DoXhpbWEgZGUgY2FyYWN0ZXJlcyBxdWUgbyBjYW1wbyBhY2VpdGEuXG4gICAqL1xuICBASW5wdXQoJ3AtbWF4bGVuZ3RoJykgc2V0IG1heGxlbmd0aCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgaWYgKCFpc05hTihwYXJzZUludCg8YW55PiB2YWx1ZSwgMTApKSkge1xuICAgICAgdGhpcy5fbWF4bGVuZ3RoID0gcGFyc2VJbnQoPGFueT4gdmFsdWUsIDEwKTtcblxuICAgICAgdGhpcy52YWxpZGF0ZU1vZGVsKCk7XG4gICAgfSBlbHNlIGlmICghdmFsdWUpIHtcbiAgICAgIHRoaXMuX21heGxlbmd0aCA9IHVuZGVmaW5lZDtcblxuICAgICAgdGhpcy52YWxpZGF0ZU1vZGVsKCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IG1heGxlbmd0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWF4bGVuZ3RoO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogSW5kaWNhIGEgcXVhbnRpZGFkZSBtw61uaW1hIGRlIGNhcmFjdGVyZXMgcXVlIG8gY2FtcG8gYWNlaXRhLlxuICAgKi9cbiAgQElucHV0KCdwLW1pbmxlbmd0aCcpIHNldCBtaW5sZW5ndGgodmFsdWU6IG51bWJlcikge1xuICAgIGlmICghaXNOYU4ocGFyc2VJbnQoPGFueT4gdmFsdWUsIDEwKSkpIHtcbiAgICAgIHRoaXMuX21pbmxlbmd0aCA9IHBhcnNlSW50KDxhbnk+IHZhbHVlLCAxMCk7XG5cbiAgICAgIHRoaXMudmFsaWRhdGVNb2RlbCgpO1xuICAgIH0gZWxzZSBpZiAoIXZhbHVlKSB7XG4gICAgICB0aGlzLl9taW5sZW5ndGggPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMudmFsaWRhdGVNb2RlbCgpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBtaW5sZW5ndGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21pbmxlbmd0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogSW5kaWNhIHVtYSBtw6FzY2FyYSBwYXJhIG8gY2FtcG8uIEV4ZW1wbG9zOiAoKzk5KSAoOTkpIDk5OTk5Py05OTk5LCA5OTk5OS05OTksIDk5OS45OTkuOTk5LTk5LlxuICAgKiBBIG3DoXNjYXJhIGdlcmEgdW1hIHZhbGlkYcOnw6NvIGF1dG9tw6F0aWNhIGRvIGNhbXBvLCBwb2RlbmRvIGVzdGEgc2VyIHN1YnN0aXR1w61kYSBwb3IgdW0gUkVHRVggZXNwZWPDrWZpY29cbiAgICogYXRyYXbDqXMgZGEgcHJvcHJpZWRhZGUgcC1wYXR0ZXJuLlxuICAgKiBPIGNhbXBvIHNlcsOhIHNpbmFsaXphZG8gZSBvIGZvcm11bMOhcmlvIGZpY2Fyw6EgaW52w6FsaWRvIHF1YW5kbyBvIHZhbG9yIGluZm9ybWFkbyBlc3RpdmVyIGZvcmEgZG8gcGFkcsOjbyBkZWZpbmlkbyxcbiAgICogbWVzbW8gcXVhbmRvIGRlc2FiaWxpdGFkby5cbiAgICovXG4gIG1hc2s/OiBzdHJpbmcgPSAnJztcbiAgQElucHV0KCdwLW1hc2snKSBzZXQgc2V0TWFzayhtYXNrOiBzdHJpbmcpIHtcbiAgICB0aGlzLm1hc2sgPSBtYXNrO1xuXG4gICAgLy8gQXR1YWxpemEgTcOhc2NhcmEgZG8gQ2FtcG9cbiAgICB0aGlzLm9iak1hc2sgPSBuZXcgUG9NYXNrKHRoaXMubWFzaywgdGhpcy5tYXNrRm9ybWF0TW9kZWwpO1xuXG4gICAgdGhpcy52YWxpZGF0ZU1vZGVsKCk7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEluZGljYSBzZSBvIGBtb2RlbGAgcmVjZWJlcsOhIG8gdmFsb3IgZm9ybWF0YWRvIHBlbGEgbcOhc2NhcmEgb3UgYXBlbmFzIG8gdmFsb3IgcHVybyAoc2VtIGZvcm1hdGHDp8OjbykuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIG1hc2tGb3JtYXRNb2RlbD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCdwLW1hc2stZm9ybWF0LW1vZGVsJykgc2V0IHNldE1hc2tGb3JtYXRNb2RlbChtYXNrRm9ybWF0TW9kZWw6IHN0cmluZykge1xuICAgIHRoaXMubWFza0Zvcm1hdE1vZGVsID0gbWFza0Zvcm1hdE1vZGVsID09PSAnJyA/IHRydWUgOiBjb252ZXJ0VG9Cb29sZWFuKG1hc2tGb3JtYXRNb2RlbCk7XG5cbiAgICBpZiAodGhpcy5vYmpNYXNrIGluc3RhbmNlb2YgUG9NYXNrKSB7XG4gICAgICB0aGlzLm9iak1hc2suZm9ybWF0TW9kZWwgPSB0aGlzLm1hc2tGb3JtYXRNb2RlbDtcblxuICAgICAgdGhpcy52YWxpZGF0ZU1vZGVsKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIHNlIGEgaW5kaWNhw6fDo28gZGUgY2FtcG8gb3BjaW9uYWwgc2Vyw6EgZXhpYmlkYS5cbiAgICpcbiAgICogPiBOw6NvIHNlcsOhIGV4aWJpZGEgYSBpbmRpY2HDp8OjbyBzZTpcbiAgICogLSBPIGNhbXBvIGNvbnRlciBgcC1yZXF1aXJlZGA7XG4gICAqIC0gTsOjbyBwb3NzdWlyIGBwLWhlbHBgIGUvb3UgYHAtbGFiZWxgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Atb3B0aW9uYWwnKSBvcHRpb25hbDogYm9vbGVhbjtcblxuICAvKiogRXZlbnRvIGRpc3BhcmFkbyBhbyBzYWlyIGRvIGNhbXBvLiAqL1xuICBAT3V0cHV0KCdwLWJsdXInKSBibHVyPzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqIEV2ZW50byBkaXNwYXJhZG8gYW8gZW50cmFyIGRvIGNhbXBvLiAqL1xuICBAT3V0cHV0KCdwLWVudGVyJykgZW50ZXI/OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAvKiogRXZlbnRvIGRpc3BhcmFkbyBhbyBhbHRlcmFyIHZhbG9yIGUgZGVpeGFyIG8gY2FtcG8uICovXG4gIEBPdXRwdXQoJ3AtY2hhbmdlJykgY2hhbmdlPzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqIEV2ZW50byBkaXNwYXJhZG8gYW8gYWx0ZXJhciB2YWxvciBkbyBtb2RlbC4gKi9cbiAgQE91dHB1dCgncC1jaGFuZ2UtbW9kZWwnKSBjaGFuZ2VNb2RlbD86IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHR5cGU6IHN0cmluZztcblxuICBvbkNoYW5nZVByb3BhZ2F0ZTogYW55ID0gbnVsbDtcbiAgb25Ub3VjaGVkOiBhbnkgPSBudWxsO1xuICBvYmpNYXNrOiBhbnk7XG4gIG1vZGVsTGFzdFVwZGF0ZTogYW55O1xuXG4gIGNhbGxPbkNoYW5nZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy51cGRhdGVNb2RlbCh2YWx1ZSk7XG5cbiAgICB0aGlzLmNvbnRyb2xDaGFuZ2VNb2RlbEVtaXR0ZXIodmFsdWUpO1xuICB9XG5cbiAgY2FsbFVwZGF0ZU1vZGVsV2l0aFRpbWVvdXQodmFsdWUpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMudXBkYXRlTW9kZWwodmFsdWUpKTtcbiAgfVxuXG4gIGNvbnRyb2xDaGFuZ2VNb2RlbEVtaXR0ZXIodmFsdWU6IGFueSkge1xuICAgIGlmICh0aGlzLm1vZGVsTGFzdFVwZGF0ZSAhPT0gdmFsdWUpIHtcbiAgICAgIHRoaXMuY2hhbmdlTW9kZWwuZW1pdCh2YWx1ZSk7XG4gICAgICB0aGlzLm1vZGVsTGFzdFVwZGF0ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBGdW7Dp8OjbyBxdWUgYXRyaWJ1aSBmb2NvIGFvIGNvbXBvbmVudGUuXG4gICAqXG4gICAqIFBhcmEgdXRpbGl6w6EtbGEgw6kgbmVjZXNzw6FyaW8gdGVyIGEgaW5zdMOibmNpYSBkbyBjb21wb25lbnRlIG5vIERPTSwgcG9kZW5kbyBzZXIgdXRpbGl6YWRvIG8gVmlld0NoaWxkIGRhIHNlZ3VpbnRlIGZvcm1hOlxuICAgKlxuICAgKiBgYGBcbiAgICogaW1wb3J0IHsgUG9Ob21lRG9Db21wb25lbnRlQ29tcG9uZW50IH0gZnJvbSAnQHBvcnRpbmFyaS9wb3J0aW5hcmktdWknO1xuICAgKlxuICAgKiAuLi5cbiAgICpcbiAgICogQFZpZXdDaGlsZChQb05vbWVEb0NvbXBvbmVudGVDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIG5vbWVEb0NvbXBvbmVudGU6IFBvTm9tZURvQ29tcG9uZW50ZUNvbXBvbmVudDtcbiAgICpcbiAgICogZm9jdXNDb21wb25lbnQoKSB7XG4gICAqICAgdGhpcy5ub21lRG9Db21wb25lbnRlLmZvY3VzKCk7XG4gICAqIH1cbiAgICogYGBgXG4gICAqL1xuICBhYnN0cmFjdCBmb2N1cygpOiB2b2lkO1xuXG4gIC8vIEZ1bsOnw6NvIGltcGxlbWVudGFkYSBkbyBDb250cm9sVmFsdWVBY2Nlc3NvclxuICAvLyBVc2FkYSBwYXJhIGludGVyY2VwdGFyIGFzIG11ZGFuw6dhcyBlIG7Do28gYXR1YWxpemFyIGF1dG9tYXRpY2FtZW50ZSBvIE1vZGVsXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZnVuYzogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZVByb3BhZ2F0ZSA9IGZ1bmM7XG4gIH1cblxuICAvLyBGdW7Dp8OjbyBpbXBsZW1lbnRhZGEgZG8gQ29udHJvbFZhbHVlQWNjZXNzb3JcbiAgLy8gVXNhZGEgcGFyYSBpbnRlcmNlcHRhciBhcyBtdWRhbsOnYXMgZSBuw6NvIGF0dWFsaXphciBhdXRvbWF0aWNhbWVudGUgbyBNb2RlbFxuICByZWdpc3Rlck9uVG91Y2hlZChmdW5jOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uVG91Y2hlZCA9IGZ1bmM7XG4gIH1cblxuICByZWdpc3Rlck9uVmFsaWRhdG9yQ2hhbmdlKGZuOiAoKSA9PiB2b2lkKSB7XG4gICAgdGhpcy52YWxpZGF0b3JDaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHVwZGF0ZU1vZGVsKHZhbHVlOiBhbnkpIHtcbiAgICAvLyBRdWFuZG8gbyBpbnB1dCBuw6NvIHBvc3N1aSB1bSBmb3JtdWzDoXJpbywgZW50w6NvIGVzdGEgZnVuw6fDo28gbsOjbyDDqSByZWdpc3RyYWRhXG4gICAgaWYgKHRoaXMub25DaGFuZ2VQcm9wYWdhdGUpIHtcbiAgICAgIHRoaXMub25DaGFuZ2VQcm9wYWdhdGUodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhbGlkYXRlKGM6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYW55OyB9IHtcblxuICAgIGlmIChyZXF1aXJlZEZhaWxlZCh0aGlzLnJlcXVpcmVkLCB0aGlzLmRpc2FibGVkLCB0aGlzLmdldFNjcmVlblZhbHVlKCkpKSB7XG4gICAgICByZXR1cm4geyByZXF1aXJlZDoge1xuICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICB9fTtcbiAgICB9XG5cbiAgICBpZiAobWF4bGVuZ3BvYWlsZWQodGhpcy5tYXhsZW5ndGgsIHRoaXMuZ2V0U2NyZWVuVmFsdWUoKSkpIHtcbiAgICAgIHJldHVybiB7IG1heGxlbmd0aDoge1xuICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICB9fTtcbiAgICB9XG5cbiAgICBpZiAobWlubGVuZ3BvYWlsZWQodGhpcy5taW5sZW5ndGgsIHRoaXMuZ2V0U2NyZWVuVmFsdWUoKSkpIHtcbiAgICAgIHJldHVybiB7IG1pbmxlbmd0aDoge1xuICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICB9fTtcbiAgICB9XG5cbiAgICBpZiAocGF0dGVybkZhaWxlZCh0aGlzLnBhdHRlcm4sIGMudmFsdWUpKSB7XG4gICAgICB0aGlzLnZhbGlkYXRlUGF0dGVybk9uV3JpdGVWYWx1ZShjLnZhbHVlKTtcbiAgICAgIHJldHVybiB7IHBhdHRlcm46IHtcbiAgICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgfX07XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZXh0cmFWYWxpZGF0aW9uKGMpO1xuICB9XG5cbiAgLy8gRnVuw6fDo28gaW1wbGVtZW50YWRhIGRvIENvbnRyb2xWYWx1ZUFjY2Vzc29yXG4gIHdyaXRlVmFsdWUodmFsdWU6IGFueSkge1xuICAgIHRoaXMud3JpdGVWYWx1ZU1vZGVsKHZhbHVlKTtcbiAgfVxuXG4gIHByb3RlY3RlZCB2YWxpZGF0ZU1vZGVsKCkge1xuICAgIGlmICh0aGlzLnZhbGlkYXRvckNoYW5nZSkge1xuICAgICAgdGhpcy52YWxpZGF0b3JDaGFuZ2UoKTtcbiAgICB9XG4gIH1cblxuICAvLyBNw6l0b2RvIHF1ZSByZWNlYmVyw6EgbyB2YWxvciBkbyBtb2RlbFxuICBhYnN0cmFjdCB3cml0ZVZhbHVlTW9kZWwodmFsdWU6IGFueSk6IHZvaWQ7XG5cbiAgLy8gVmFsaWRhw6fDtWVzIGRvIGNhbXBvXG4gIGFic3RyYWN0IGV4dHJhVmFsaWRhdGlvbihjOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGFueTsgfTtcblxuICAvLyBEZXZlIHJldG9ybmFyIG8gdmFsb3IgZG8gY2FtcG9cbiAgYWJzdHJhY3QgZ2V0U2NyZWVuVmFsdWUoKTogc3RyaW5nO1xuXG4gIC8vIHV0aWxpemFkbyBwYXJhIHZhbGlkYXIgbyBwYXR0ZXJuIG5hIGluaWNpYWxpemFjYW8sIGZhemVuZG8gZGVzc2EgZm9ybWEgbyBjYW1wbyBmaWNhIHN1am8gKGRpcnR5KS5cbiAgcHJpdmF0ZSB2YWxpZGF0ZVBhdHRlcm5PbldyaXRlVmFsdWUodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh2YWx1ZSAmJiB0aGlzLnBhc3NlZFdyaXRlVmFsdWUpIHtcblxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMudXBkYXRlTW9kZWwodmFsdWUpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMucGFzc2VkV3JpdGVWYWx1ZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=