/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';
import { PoDateService } from './../../../services/po-date/po-date.service';
import { PoMask } from '../po-input/po-mask';
/** @type {?} */
var arrowLeftKey = 37;
/** @type {?} */
var arrowRightKey = 39;
/** @type {?} */
var backspaceKey = 8;
/** @type {?} */
var poDatepickerRangeDateLengthDefault = 10;
/**
 * \@docsExtends PoDatepickerRangeBaseComponent
 *
 * \@example
 *
 * <example name="po-datepicker-range-basic" title="Portinari Datepicker Range Basic">
 *  <file name="sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html"> </file>
 *  <file name="sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-labs" title="Portinari Datepicker Range Labs">
 *  <file name="sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html"> </file>
 *  <file name="sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-vacations" title="Portinari Datepicker Range - Vacations Suggestion">
 *  <file name="sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html"> </file>
 *  <file name="sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-vacations-reactive-form" title="Portinari Datepicker Range - Vacations Reactive Form">
 *  <file name="sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html">
 *  </file>
 *  <file name="sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts">
 *  </file>
 * </example>
 */
var PoDatepickerRangeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoDatepickerRangeComponent, _super);
    function PoDatepickerRangeComponent(poDateService, poDatepickerRangeElement) {
        var _this = _super.call(this, poDateService) || this;
        _this.poDatepickerRangeElement = poDatepickerRangeElement;
        return _this;
    }
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "autocomplete", {
        get: /**
         * @return {?}
         */
        function () {
            return this.noAutocomplete ? 'off' : 'on';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "enableCleaner", {
        get: /**
         * @return {?}
         */
        function () {
            return (this.startDateInputValue || this.endDateInputValue) && !this.disabled && !this.readonly;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "endDateInputName", {
        get: /**
         * @return {?}
         */
        function () {
            return 'end-date';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "endDateInputValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this.endDateInput.nativeElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "getErrorMessage", {
        get: /**
         * @return {?}
         */
        function () {
            return (this.errorMessage !== '' && this.hasInvalidClass()) ? this.errorMessage : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "isDateRangeInputUncompleted", {
        get: /**
         * @return {?}
         */
        function () {
            return this.endDateInputValue.length < poDatepickerRangeDateLengthDefault
                && this.startDateInputValue.length < poDatepickerRangeDateLengthDefault;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "isDirtyDateRangeInput", {
        get: /**
         * @return {?}
         */
        function () {
            return this.endDateInputValue.length > 0 || this.startDateInputValue.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "startDateInputName", {
        get: /**
         * @return {?}
         */
        function () {
            return 'start-date';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDatepickerRangeComponent.prototype, "startDateInputValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this.startDateInput.nativeElement.value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    PoDatepickerRangeComponent.getKeyCode = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return event.keyCode || event.which;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoDatepickerRangeComponent.getTargetElement = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return event.target || event.srcElement;
    };
    /**
     * @param {?} keyCode
     * @return {?}
     */
    PoDatepickerRangeComponent.isValidKey = /**
     * @param {?} keyCode
     * @return {?}
     */
    function (keyCode) {
        /** @type {?} */
        var isNumericKey = keyCode >= 48 && keyCode <= 57;
        /** @type {?} */
        var isNumericNumpadKey = keyCode >= 96 && keyCode <= 105;
        return isNumericKey || isNumericNumpadKey;
    };
    /**
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // Classe de máscara
        this.poMaskObject = this.buildMask();
    };
    /**
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.resetDateRangeInputValidation();
        this.dateRange = { start: '', end: '' };
        this.updateScreenByModel(this.dateRange);
        this.updateModel(this.dateRange);
    };
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerRangeComponent } from '@portinari/portinari-ui';
     *
     * ...
     *
     * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;
     *
     * focusDatepickerRange() {
     *   this.datepickerRange.focus();
     * }
     * ```
     */
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerRangeComponent } from '\@portinari/portinari-ui';
     *
     * ...
     *
     * \@ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;
     *
     * focusDatepickerRange() {
     *   this.datepickerRange.focus();
     * }
     * ```
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.focus = /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerRangeComponent } from '\@portinari/portinari-ui';
     *
     * ...
     *
     * \@ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;
     *
     * focusDatepickerRange() {
     *   this.datepickerRange.focus();
     * }
     * ```
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.startDateInput.nativeElement.focus();
        }
    };
    /**
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.removeFocusFromDatePickerRangeField();
    };
    /**
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.onFocus = /**
     * @return {?}
     */
    function () {
        this.applyFocusOnDatePickerRangeField();
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.onKeydown = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        if (this.readonly) {
            return;
        }
        if (this.isSetFocusOnBackspace(event)) {
            event.preventDefault();
            this.setFocusOnBackspace();
        }
        else {
            this.poMaskObject.keydown(event);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.onKeyup = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.readonly) {
            return;
        }
        /** @type {?} */
        var isStartDateTargetEvent = event.target.name === this.startDateInputName;
        this.setFocus(event);
        this.poMaskObject.keyup(event);
        this.updateModelByScreen(isStartDateTargetEvent);
    };
    /**
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.resetDateRangeInputValidation = /**
     * @return {?}
     */
    function () {
        this.isStartDateRangeInputValid = true;
        this.isDateRangeInputFormatValid = true;
    };
    /**
     * @param {?} model
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.updateScreenByModel = /**
     * @param {?} model
     * @return {?}
     */
    function (model) {
        var _this = this;
        /** @type {?} */
        var dateRange = { start: (/** @type {?} */ (model.start)), end: (/** @type {?} */ (model.end)) };
        /** @type {?} */
        var isStartDateValid = this.poDateService.isDateRangeValid(dateRange.end, dateRange.start);
        /** @type {?} */
        var isDateValid = (/**
         * @param {?} date
         * @return {?}
         */
        function (date) { return !_this.dateFormatFailed(date) && isStartDateValid; });
        /** @type {?} */
        var endDateFormated = isDateValid(dateRange.end) ? this.formatModelToScreen(dateRange.end) : '';
        /** @type {?} */
        var startDateFormated = isDateValid(dateRange.start) ? this.formatModelToScreen(dateRange.start) : '';
        this.endDateInput.nativeElement.value = endDateFormated;
        this.startDateInput.nativeElement.value = startDateFormated;
    };
    /**
     * @private
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.applyFocusOnDatePickerRangeField = /**
     * @private
     * @return {?}
     */
    function () {
        this.dateRangeField.nativeElement.classList.add('po-datepicker-range-field-focused');
    };
    // Retorna um objeto do tipo PoMask com a mascara configurada.
    // Retorna um objeto do tipo PoMask com a mascara configurada.
    /**
     * @private
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.buildMask = 
    // Retorna um objeto do tipo PoMask com a mascara configurada.
    /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var mask = this.format.toUpperCase();
        mask = mask.replace(/DD/g, '99');
        mask = mask.replace(/MM/g, '99');
        mask = mask.replace(/YYYY/g, '9999');
        return new PoMask(mask, true);
    };
    /**
     * @private
     * @param {?} format
     * @param {?=} day
     * @param {?=} month
     * @param {?=} year
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.formatDate = /**
     * @private
     * @param {?} format
     * @param {?=} day
     * @param {?=} month
     * @param {?=} year
     * @return {?}
     */
    function (format, day, month, year) {
        if (day === void 0) { day = ''; }
        if (month === void 0) { month = ''; }
        if (year === void 0) { year = ''; }
        /** @type {?} */
        var dateFormatted = format;
        day = day && day.includes('T') ? day.slice(0, 2) : day;
        dateFormatted = dateFormatted.replace('dd', ('0' + day).slice(-2));
        dateFormatted = dateFormatted.replace('mm', ('0' + (month)).slice(-2));
        dateFormatted = dateFormatted.replace('yyyy', String(year));
        return dateFormatted;
    };
    /**
     * @private
     * @param {?=} value
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.formatScreenToModel = /**
     * @private
     * @param {?=} value
     * @return {?}
     */
    function (value) {
        if (value === void 0) { value = ''; }
        var _a = tslib_1.__read(value.split('/'), 3), day = _a[0], month = _a[1], year = _a[2];
        return value ? this.formatDate('yyyy-mm-dd', day, month, year) : '';
    };
    /**
     * @private
     * @param {?=} value
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.formatModelToScreen = /**
     * @private
     * @param {?=} value
     * @return {?}
     */
    function (value) {
        if (value === void 0) { value = ''; }
        var _a = tslib_1.__read(value.split('-'), 3), year = _a[0], month = _a[1], day = _a[2];
        return value ? this.formatDate(this.format, day, month, year) : '';
    };
    /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @param {?} isStartDateTargetEvent
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.getDateRangeFormatValidation = /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @param {?} isStartDateTargetEvent
     * @return {?}
     */
    function (startDate, endDate, isStartDateTargetEvent) {
        this.setDateRangeInputValidation(startDate, endDate);
        return {
            isValid: this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid,
            dateRangeModel: this.getValidatedModel(startDate, endDate, isStartDateTargetEvent)
        };
    };
    /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @param {?} isStartDateTargetEvent
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.getValidatedModel = /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @param {?} isStartDateTargetEvent
     * @return {?}
     */
    function (startDate, endDate, isStartDateTargetEvent) {
        /** @type {?} */
        var dateRangeModel = { start: '', end: '' };
        dateRangeModel.end = (isStartDateTargetEvent || this.isStartDateRangeInputValid)
            && !this.dateFormatFailed(endDate) ? endDate : '';
        dateRangeModel.start = (!isStartDateTargetEvent || this.isStartDateRangeInputValid)
            && !this.dateFormatFailed(startDate) ? startDate : '';
        return dateRangeModel;
    };
    /**
     * @private
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.hasInvalidClass = /**
     * @private
     * @return {?}
     */
    function () {
        return (this.poDatepickerRangeElement.nativeElement.classList.contains('ng-invalid') &&
            this.poDatepickerRangeElement.nativeElement.classList.contains('ng-dirty'));
    };
    /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.isEqualBeforeValue = /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @return {?}
     */
    function (startDate, endDate) {
        return this.isDateRangeInputFormatValid && endDate === this.dateRange.end && startDate === this.dateRange.start;
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.isSetFocusOnBackspace = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return event.target.name === this.endDateInputName &&
            this.endDateInput.nativeElement.selectionStart === 0 && this.endDateInput.nativeElement.selectionEnd === 0 &&
            event.keyCode === backspaceKey;
    };
    /**
     * @private
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.removeFocusFromDatePickerRangeField = /**
     * @private
     * @return {?}
     */
    function () {
        this.dateRangeField.nativeElement.classList.remove('po-datepicker-range-field-focused');
    };
    /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setDateRangeInputValidation = /**
     * @private
     * @param {?} startDate
     * @param {?} endDate
     * @return {?}
     */
    function (startDate, endDate) {
        this.isStartDateRangeInputValid = this.poDateService.isDateRangeValid(endDate, startDate);
        this.isDateRangeInputFormatValid = !this.dateFormatFailed(startDate) && !this.dateFormatFailed(endDate);
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setFocus = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var inputElement = PoDatepickerRangeComponent.getTargetElement(event);
        /** @type {?} */
        var keyCode = PoDatepickerRangeComponent.getKeyCode(event);
        /** @type {?} */
        var inputName = inputElement['name'];
        this.setFocusOnArrowLeft(keyCode, inputName);
        this.setFocusOnArrowRight(keyCode, inputName, inputElement);
        this.setFocusOnStartDateCompleted(keyCode, inputName);
    };
    /**
     * @private
     * @param {?} position
     * @param {?} inputElement
     * @param {?} selectionRange
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setFocusAndPosition = /**
     * @private
     * @param {?} position
     * @param {?} inputElement
     * @param {?} selectionRange
     * @return {?}
     */
    function (position, inputElement, selectionRange) {
        var _this = this;
        this.focusOnElement(inputElement);
        setTimeout((/**
         * @return {?}
         */
        function () {
            inputElement.nativeElement.setSelectionRange(selectionRange, selectionRange);
            _this.poMaskObject.initialPosition = position;
            _this.poMaskObject.finalPosition = position;
        }));
    };
    /**
     * @private
     * @param {?} inputElement
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.focusOnElement = /**
     * @private
     * @param {?} inputElement
     * @return {?}
     */
    function (inputElement) {
        inputElement.nativeElement.focus();
    };
    /**
     * @private
     * @param {?} keyCode
     * @param {?} inputName
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setFocusOnArrowLeft = /**
     * @private
     * @param {?} keyCode
     * @param {?} inputName
     * @return {?}
     */
    function (keyCode, inputName) {
        /** @type {?} */
        var isCursorAtStartOfInput = this.endDateInput.nativeElement.selectionStart === 0;
        if (inputName === this.endDateInputName && isCursorAtStartOfInput && keyCode === arrowLeftKey) {
            /** @type {?} */
            var inputLength = this.startDateInput.nativeElement.value.length;
            this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);
        }
    };
    /**
     * @private
     * @param {?} keyCode
     * @param {?} inputName
     * @param {?} inputElement
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setFocusOnArrowRight = /**
     * @private
     * @param {?} keyCode
     * @param {?} inputName
     * @param {?} inputElement
     * @return {?}
     */
    function (keyCode, inputName, inputElement) {
        /** @type {?} */
        var isCursorAtEndOfInput = this.startDateInput.nativeElement.selectionStart === inputElement.value.length;
        if (inputName === this.startDateInputName && isCursorAtEndOfInput && keyCode === arrowRightKey) {
            this.setFocusAndPosition(0, this.endDateInput, 0);
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setFocusOnBackspace = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var inputLength = this.startDateInput.nativeElement.value.length;
        this.startDateInput.nativeElement.value = this.startDateInputValue.slice(0, -1);
        this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);
    };
    /**
     * @private
     * @param {?} keyCode
     * @param {?} inputName
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.setFocusOnStartDateCompleted = /**
     * @private
     * @param {?} keyCode
     * @param {?} inputName
     * @return {?}
     */
    function (keyCode, inputName) {
        /** @type {?} */
        var isLastKeyPressed = this.startDateInput.nativeElement.selectionStart === poDatepickerRangeDateLengthDefault;
        /** @type {?} */
        var isNewDateCompleted = this.startDateInputValue.length === poDatepickerRangeDateLengthDefault && isLastKeyPressed;
        /** @type {?} */
        var isValidKey = PoDatepickerRangeComponent.isValidKey(keyCode);
        if (inputName === this.startDateInputName && isNewDateCompleted && isValidKey) {
            this.setFocusAndPosition(0, this.endDateInput, 0);
        }
    };
    /**
     * @private
     * @param {?} isStartDateTargetEvent
     * @return {?}
     */
    PoDatepickerRangeComponent.prototype.updateModelByScreen = /**
     * @private
     * @param {?} isStartDateTargetEvent
     * @return {?}
     */
    function (isStartDateTargetEvent) {
        /** @type {?} */
        var endDateFormatted = this.formatScreenToModel(this.endDateInputValue);
        /** @type {?} */
        var startDateFormatted = this.formatScreenToModel(this.startDateInputValue);
        if (this.isDateRangeInputUncompleted && this.isDirtyDateRangeInput) {
            this.updateModel(this.dateRange);
            return;
        }
        if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {
            this.resetDateRangeInputValidation();
            this.validateModel(this.dateRange);
            return;
        }
        /** @type {?} */
        var dateFormatValidation = this.getDateRangeFormatValidation(startDateFormatted, endDateFormatted, isStartDateTargetEvent);
        if (dateFormatValidation.isValid) {
            this.dateRange = { start: startDateFormatted, end: endDateFormatted };
            this.updateModel(this.dateRange);
            this.onChange.emit(tslib_1.__assign({}, this.dateRange));
        }
        if (!dateFormatValidation.isValid) {
            this.dateRange = tslib_1.__assign({}, dateFormatValidation.dateRangeModel);
            this.updateModel(dateFormatValidation.dateRangeModel);
        }
    };
    PoDatepickerRangeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-datepicker-range',
                    template: "<po-field-container\n  [p-help]=\"help\"\n  [p-label]=\"label\"\n  [p-optional]=\"!required && optional\">\n\n  <div\n    #dateRangeField\n    class=\"po-datepicker-range-field po-input\"\n    [class.po-datepicker-range-field-disabled]=\"disabled\">\n\n    <div class=\"po-datepicker-range-start-date\">\n      <input\n        #startDateInput\n        class=\"po-datepicker-range-input\"\n        maxlength=\"10\"\n        type=\"text\"\n        [autocomplete]=\"autocomplete\"\n        [disabled]=\"disabled\"\n        [name]=\"startDateInputName\"\n        [readonly]=\"readonly\"\n        (blur)=\"onBlur()\"\n        (focus)=\"onFocus()\"\n        (keydown)=\"onKeydown($event)\"\n        (keyup)=\"onKeyup($event)\">\n    </div>\n\n    <div class=\"po-datepicker-range-separator\">-</div>\n\n    <div class=\"po-datepicker-range-end-date\">\n      <input\n        #endDateInput\n        class=\"po-datepicker-range-input\"\n        maxlength=\"10\"\n        type=\"text\"\n        [autocomplete]=\"autocomplete\"\n        [disabled]=\"disabled\"\n        [name]=\"endDateInputName\"\n        [readonly]=\"readonly\"\n        (blur)=\"onBlur()\"\n        (focus)=\"onFocus()\"\n        (keydown)=\"onKeydown($event)\"\n        (keyup)=\"onKeyup($event)\">\n    </div>\n\n    <div class=\"po-datepicker-range-icon\">\n      <po-clean *ngIf=\"enableCleaner\" (p-change-event)=\"clear()\"></po-clean>\n    </div>\n\n    <div class=\"po-datepicker-range-icon\">\n      <span\n        class=\"po-icon po-field-icon po-icon-calendar\"\n        [class.po-field-icon-disabled]=\"disabled || readonly\">\n      </span>\n    </div>\n\n  </div>\n\n  <po-field-container-bottom [p-error-pattern]=\"getErrorMessage\"></po-field-container-bottom>\n</po-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoDatepickerRangeComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoDatepickerRangeComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    PoDatepickerRangeComponent.ctorParameters = function () { return [
        { type: PoDateService },
        { type: ElementRef }
    ]; };
    PoDatepickerRangeComponent.propDecorators = {
        dateRangeField: [{ type: ViewChild, args: ['dateRangeField', { read: ElementRef, static: true },] }],
        endDateInput: [{ type: ViewChild, args: ['endDateInput', { read: ElementRef, static: true },] }],
        startDateInput: [{ type: ViewChild, args: ['startDateInput', { read: ElementRef, static: true },] }]
    };
    return PoDatepickerRangeComponent;
}(PoDatepickerRangeBaseComponent));
export { PoDatepickerRangeComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoDatepickerRangeComponent.prototype.poDatepickerRangeElement;
    /**
     * @type {?}
     * @private
     */
    PoDatepickerRangeComponent.prototype.poMaskObject;
    /** @type {?} */
    PoDatepickerRangeComponent.prototype.dateRangeField;
    /** @type {?} */
    PoDatepickerRangeComponent.prototype.endDateInput;
    /** @type {?} */
    PoDatepickerRangeComponent.prototype.startDateInput;
}
//# sourceMappingURL=data:application/json;base64,