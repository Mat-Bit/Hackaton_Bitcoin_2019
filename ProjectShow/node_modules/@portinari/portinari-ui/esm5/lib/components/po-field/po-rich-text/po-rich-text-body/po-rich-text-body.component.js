/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { isIE } from './../../../../utils/util';
import { PoKeyCodeEnum } from './../../../../enums/po-key-code.enum';
/** @type {?} */
var poRichTextBodyCommands = [
    'bold', 'italic', 'underline', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertUnorderedList', 'Createlink'
];
var PoRichTextBodyComponent = /** @class */ (function () {
    function PoRichTextBodyComponent() {
        this.change = new EventEmitter();
        this.commands = new EventEmitter();
        this.shortcutCommand = new EventEmitter();
        this.value = new EventEmitter();
    }
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.bodyElement.nativeElement.designMode = 'on';
        // timeout necessário para setar o valor vindo do writeValue do componente principal.
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.updateValueWithModelValue(); }));
    };
    /**
     * @param {?} command
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.executeCommand = /**
     * @param {?} command
     * @return {?}
     */
    function (command) {
        this.bodyElement.nativeElement.focus();
        if (typeof (command) === 'object') {
            if (command.command === 'InsertHTML') {
                var linkCommand = command.command, urlLink = command.value.urlLink, urlLinkText = command.value.urlLinkText;
                this.handleCommandLink(linkCommand, urlLink, urlLinkText);
            }
            else {
                document.execCommand(command.command, false, command.value);
            }
        }
        else {
            document.execCommand(command, false, null);
        }
        this.updateModel();
        this.value.emit(this.modelValue);
    };
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.modelValue !== this.valueBeforeChange) {
            clearTimeout(this.timeoutChange);
            this.timeoutChange = setTimeout((/**
             * @return {?}
             */
            function () {
                _this.change.emit(_this.modelValue);
            }), 200);
        }
    };
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.focus = /**
     * @return {?}
     */
    function () {
        this.bodyElement.nativeElement.focus();
    };
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.emitSelectionCommands();
    };
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.onFocus = /**
     * @return {?}
     */
    function () {
        this.valueBeforeChange = this.modelValue;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.onKeyDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var keyL = event.keyCode === PoKeyCodeEnum.keyL;
        if (keyL && event.ctrlKey || keyL && event.metaKey) {
            event.preventDefault();
            this.shortcutCommand.emit();
        }
    };
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.onKeyUp = /**
     * @return {?}
     */
    function () {
        // Tratamento necessário para eliminar a tag <br> criada no firefox quando o body for limpo.
        /** @type {?} */
        var bodyElement = this.bodyElement.nativeElement;
        if (!bodyElement.innerText.trim() && bodyElement.childNodes.length === 1 && bodyElement.querySelector('br')) {
            bodyElement.querySelector('br').remove();
        }
        this.updateModel();
        this.emitSelectionCommands();
    };
    /**
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.update = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.updateModel(); }));
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.onKeyUp(); }));
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.cursorPositionedInALink = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var link = document.getSelection();
        return link.focusNode.parentElement.tagName === 'A';
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.emitSelectionCommands = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var commands = poRichTextBodyCommands.filter((/**
         * @param {?} command
         * @return {?}
         */
        function (command) { return document.queryCommandState(command); }));
        /** @type {?} */
        var rgbColor = document.queryCommandValue('ForeColor');
        /** @type {?} */
        var hexColor = this.rgbToHex(rgbColor);
        if (this.cursorPositionedInALink()) {
            commands.push('Createlink');
        }
        this.commands.emit({ commands: commands, hexColor: hexColor });
    };
    /**
     * @private
     * @param {?} linkCommand
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.handleCommandLink = /**
     * @private
     * @param {?} linkCommand
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    function (linkCommand, urlLink, urlLinkText) {
        if (isIE()) {
            this.insertHtmlLinkElement(urlLink, urlLinkText);
        }
        else {
            // necessário '&nbsp;' no fim pois o Firefox mantém o cursor dentro da tag;
            /** @type {?} */
            var linkValue = "<a class=\"po-rich-text-link\" href=\"" + urlLink + "\" target=\"_blank\">" + (urlLinkText || urlLink) + "</a>";
            document.execCommand(linkCommand, false, linkValue);
        }
    };
    // tratamento específico para IE pois não suporta o comando 'insertHTML'.
    // tratamento específico para IE pois não suporta o comando 'insertHTML'.
    /**
     * @private
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.insertHtmlLinkElement = 
    // tratamento específico para IE pois não suporta o comando 'insertHTML'.
    /**
     * @private
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    function (urlLink, urlLinkText) {
        /** @type {?} */
        var selection = document.getSelection();
        /** @type {?} */
        var selectionRange = selection.getRangeAt(0);
        /** @type {?} */
        var elementLink = document.createElement('a');
        /** @type {?} */
        var elementlinkText = document.createTextNode(urlLinkText);
        elementLink.appendChild(elementlinkText);
        elementLink.href = urlLink;
        elementLink.setAttribute('target', '_blank');
        elementLink.classList.add('po-rich-text-link');
        selectionRange.deleteContents();
        selectionRange.insertNode(elementLink);
    };
    /**
     * @private
     * @param {?} rgb
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.rgbToHex = /**
     * @private
     * @param {?} rgb
     * @return {?}
     */
    function (rgb) {
        // Tratamento necessário para converter o código rgb para hexadecimal.
        /** @type {?} */
        var sep = rgb.indexOf(',') > -1 ? ',' : ' ';
        rgb = rgb.substr(4).split(')')[0].split(sep);
        /** @type {?} */
        var r = (+rgb[0]).toString(16);
        /** @type {?} */
        var g = (+rgb[1]).toString(16);
        /** @type {?} */
        var b = (+rgb[2]).toString(16);
        if (r.length === 1) {
            r = '0' + r;
        }
        if (g.length === 1) {
            g = '0' + g;
        }
        if (b.length === 1) {
            b = '0' + b;
        }
        return '#' + r + g + b;
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.updateModel = /**
     * @private
     * @return {?}
     */
    function () {
        this.modelValue = this.bodyElement.nativeElement.innerHTML;
        this.value.emit(this.modelValue);
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextBodyComponent.prototype.updateValueWithModelValue = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.modelValue) {
            this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);
        }
    };
    PoRichTextBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-rich-text-body',
                    template: "<div #bodyElement\n  class=\"po-rich-text-body\"\n  tabindex=\"0\"\n  [attr.contenteditable]=\"!readonly\"\n  [attr.data-placeholder]=\"placeholder\"\n  [style.height.px]=\"height\"\n  (blur)=\"onBlur()\"\n  (click)=\"onClick()\"\n  (cut)=\"update()\"\n  (focus)=\"onFocus()\"\n  (keydown)=\"onKeyDown($event)\"\n  (keyup)=\"onKeyUp()\"\n  (paste)=\"update()\">\n</div>\n"
                }] }
    ];
    PoRichTextBodyComponent.propDecorators = {
        bodyElement: [{ type: ViewChild, args: ['bodyElement', { static: true },] }],
        height: [{ type: Input, args: ['p-height',] }],
        modelValue: [{ type: Input, args: ['p-model-value',] }],
        placeholder: [{ type: Input, args: ['p-placeholder',] }],
        readonly: [{ type: Input, args: ['p-readonly',] }],
        change: [{ type: Output, args: ['p-change',] }],
        commands: [{ type: Output, args: ['p-commands',] }],
        shortcutCommand: [{ type: Output, args: ['p-shortcut-command',] }],
        value: [{ type: Output, args: ['p-value',] }]
    };
    return PoRichTextBodyComponent;
}());
export { PoRichTextBodyComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoRichTextBodyComponent.prototype.timeoutChange;
    /**
     * @type {?}
     * @private
     */
    PoRichTextBodyComponent.prototype.valueBeforeChange;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.bodyElement;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.height;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.modelValue;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.placeholder;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.readonly;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.change;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.commands;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.shortcutCommand;
    /** @type {?} */
    PoRichTextBodyComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,