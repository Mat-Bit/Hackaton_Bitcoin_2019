/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';
import { PoI18nPipe } from '../../../../services/po-i18n/po-i18n.pipe';
import { PoNotificationService } from '../../../../services/po-notification/po-notification.service';
var PoUploadDragDropDirective = /** @class */ (function () {
    function PoUploadDragDropDirective(i18nPipe, notification) {
        this.i18nPipe = i18nPipe;
        this.notification = notification;
        this.dragLeave = new EventEmitter();
        this.dragOver = new EventEmitter();
        this.fileChange = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.onDragLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        event.preventDefault();
        event.stopPropagation();
        this.timeout = setTimeout((/**
         * @return {?}
         */
        function () { return _this.dragLeave.emit(); }), 30);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.onDragOver = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        event.stopPropagation();
        clearTimeout(this.timeout);
        if (!this.disabled) {
            this.dragOver.emit();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.onDrop = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.getFilesFromDataTransferItems(event);
        this.dragLeave.emit();
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.getFilesFromDataTransferItems = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (!this.disabled) {
            this.invalidFileType = 0;
            if (this.directoryCompatible) {
                this.getOnlyDirectories(event.dataTransfer.items).then((/**
                 * @return {?}
                 */
                function () {
                    _this.sendFiles(event, _this.files);
                }));
            }
            else {
                /** @type {?} */
                var files = this.getOnlyFiles(event.dataTransfer.files);
                this.sendFiles(event, files);
            }
        }
    };
    // analisa as entradas recursivamente
    // analisa as entradas recursivamente
    /**
     * @private
     * @param {?} entry
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.getFilesFromEntry = 
    // analisa as entradas recursivamente
    /**
     * @private
     * @param {?} entry
     * @return {?}
     */
    function (entry) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var file;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!entry.isFile) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.readFile(entry)];
                    case 1:
                        file = _a.sent();
                        return [2 /*return*/, [file]];
                    case 2:
                        if (!entry.isDirectory) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.readDirectory(entry)];
                    case 3: return [2 /*return*/, _a.sent()];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} dataTransferItems
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.getOnlyDirectories = /**
     * @private
     * @param {?} dataTransferItems
     * @return {?}
     */
    function (dataTransferItems) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var e_1, _a, e_2, _b, entries, dataTransferItems_1, dataTransferItems_1_1, item, entries_1, entries_1_1, entry, newFiles, e_2_1;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        entries = [];
                        try {
                            // lista todas as entradas antes de analis√°-las
                            for (dataTransferItems_1 = tslib_1.__values(dataTransferItems), dataTransferItems_1_1 = dataTransferItems_1.next(); !dataTransferItems_1_1.done; dataTransferItems_1_1 = dataTransferItems_1.next()) {
                                item = dataTransferItems_1_1.value;
                                entries.push(item.webkitGetAsEntry());
                            }
                        }
                        catch (e_1_1) { e_1 = { error: e_1_1 }; }
                        finally {
                            try {
                                if (dataTransferItems_1_1 && !dataTransferItems_1_1.done && (_a = dataTransferItems_1.return)) _a.call(dataTransferItems_1);
                            }
                            finally { if (e_1) throw e_1.error; }
                        }
                        this.files = [];
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 7, 8, 9]);
                        entries_1 = tslib_1.__values(entries), entries_1_1 = entries_1.next();
                        _c.label = 2;
                    case 2:
                        if (!!entries_1_1.done) return [3 /*break*/, 6];
                        entry = entries_1_1.value;
                        if (!entry.isFile) return [3 /*break*/, 3];
                        this.invalidFileType++;
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, this.getFilesFromEntry(entry)];
                    case 4:
                        newFiles = _c.sent();
                        this.files = this.files.concat(newFiles);
                        _c.label = 5;
                    case 5:
                        entries_1_1 = entries_1.next();
                        return [3 /*break*/, 2];
                    case 6: return [3 /*break*/, 9];
                    case 7:
                        e_2_1 = _c.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 9];
                    case 8:
                        try {
                            if (entries_1_1 && !entries_1_1.done && (_b = entries_1.return)) _b.call(entries_1);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7 /*endfinally*/];
                    case 9: return [2 /*return*/];
                }
            });
        });
    };
    // return only files. If it is a directory, invalidFileType counts.
    // return only files. If it is a directory, invalidFileType counts.
    /**
     * @private
     * @param {?} fileList
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.getOnlyFiles = 
    // return only files. If it is a directory, invalidFileType counts.
    /**
     * @private
     * @param {?} fileList
     * @return {?}
     */
    function (fileList) {
        var _this = this;
        return Array.from(fileList).reduce((/**
         * @param {?} newFiles
         * @param {?} file
         * @return {?}
         */
        function (newFiles, file) {
            if (file.type) {
                return newFiles.concat(file);
            }
            else {
                _this.invalidFileType++;
            }
            return newFiles;
        }), []);
    };
    /**
     * @private
     * @param {?} entry
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.readFile = /**
     * @private
     * @param {?} entry
     * @return {?}
     */
    function (entry) {
        return new Promise((/**
         * @param {?} resolve
         * @return {?}
         */
        function (resolve) {
            entry.file((/**
             * @param {?} file
             * @return {?}
             */
            function (file) {
                resolve(file);
            }));
        }));
    };
    /**
     * @private
     * @param {?} entry
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.readDirectory = /**
     * @private
     * @param {?} entry
     * @return {?}
     */
    function (entry) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var dirReader, files, newFiles;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        dirReader = entry.createReader();
                        files = [];
                        return [4 /*yield*/, this.readDirectoryEntries(dirReader)];
                    case 1:
                        newFiles = _a.sent();
                        files = files.concat(newFiles);
                        return [2 /*return*/, files];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} dirReader
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.readDirectoryEntries = /**
     * @private
     * @param {?} dirReader
     * @return {?}
     */
    function (dirReader) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @return {?}
         */
        function (resolve) {
            dirReader.readEntries((/**
             * @param {?} entries
             * @return {?}
             */
            function (entries) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var e_3, _a, files, entries_2, entries_2_1, entry, itemFiles, e_3_1;
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            files = [];
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 6, 7, 8]);
                            entries_2 = tslib_1.__values(entries), entries_2_1 = entries_2.next();
                            _b.label = 2;
                        case 2:
                            if (!!entries_2_1.done) return [3 /*break*/, 5];
                            entry = entries_2_1.value;
                            return [4 /*yield*/, this.getFilesFromEntry(entry)];
                        case 3:
                            itemFiles = _b.sent();
                            files = files.concat(itemFiles);
                            _b.label = 4;
                        case 4:
                            entries_2_1 = entries_2.next();
                            return [3 /*break*/, 2];
                        case 5: return [3 /*break*/, 8];
                        case 6:
                            e_3_1 = _b.sent();
                            e_3 = { error: e_3_1 };
                            return [3 /*break*/, 8];
                        case 7:
                            try {
                                if (entries_2_1 && !entries_2_1.done && (_a = entries_2.return)) _a.call(entries_2);
                            }
                            finally { if (e_3) throw e_3.error; }
                            return [7 /*endfinally*/];
                        case 8:
                            resolve(files);
                            return [2 /*return*/];
                    }
                });
            }); }));
        }));
    };
    /**
     * @private
     * @param {?} invalidFiles
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.sendFeedback = /**
     * @private
     * @param {?} invalidFiles
     * @return {?}
     */
    function (invalidFiles) {
        if (invalidFiles) {
            this.setPipeArguments('invalidFileType', invalidFiles);
        }
    };
    /**
     * @private
     * @param {?} event
     * @param {?} files
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.sendFiles = /**
     * @private
     * @param {?} event
     * @param {?} files
     * @return {?}
     */
    function (event, files) {
        if (this.areaElement.contains(event.target)) {
            if (files.length > 0) {
                this.fileChange.emit(files);
            }
            this.sendFeedback(this.invalidFileType);
        }
        else {
            /** @type {?} */
            var invalidDropAreaArg = this.directoryCompatible ? this.literals.folders : this.literals.files;
            this.setPipeArguments('invalidDropArea', invalidDropAreaArg);
        }
    };
    // m√©todo respons√°vel por setar os argumentos do i18nPipe.
    // m√©todo respons√°vel por setar os argumentos do i18nPipe.
    /**
     * @private
     * @param {?} literalAttributes
     * @param {?=} args
     * @return {?}
     */
    PoUploadDragDropDirective.prototype.setPipeArguments = 
    // m√©todo respons√°vel por setar os argumentos do i18nPipe.
    /**
     * @private
     * @param {?} literalAttributes
     * @param {?=} args
     * @return {?}
     */
    function (literalAttributes, args) {
        /** @type {?} */
        var pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], args);
        this.notification.information(pipeArguments);
    };
    PoUploadDragDropDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[p-upload-drag-drop]',
                    providers: [PoI18nPipe]
                },] }
    ];
    /** @nocollapse */
    PoUploadDragDropDirective.ctorParameters = function () { return [
        { type: PoI18nPipe },
        { type: PoNotificationService }
    ]; };
    PoUploadDragDropDirective.propDecorators = {
        areaElement: [{ type: Input, args: ['p-area-element',] }],
        directoryCompatible: [{ type: Input, args: ['p-directory-compatible',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        literals: [{ type: Input, args: ['p-literals',] }],
        dragLeave: [{ type: Output, args: ['p-drag-leave',] }],
        dragOver: [{ type: Output, args: ['p-drag-over',] }],
        fileChange: [{ type: Output, args: ['p-file-change',] }],
        onDragLeave: [{ type: HostListener, args: ['document:dragleave', ['$event'],] }],
        onDragOver: [{ type: HostListener, args: ['document:dragover', ['$event'],] }],
        onDrop: [{ type: HostListener, args: ['document:drop', ['$event'],] }]
    };
    return PoUploadDragDropDirective;
}());
export { PoUploadDragDropDirective };
if (false) {
    /** @type {?} */
    PoUploadDragDropDirective.prototype.timeout;
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropDirective.prototype.files;
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropDirective.prototype.invalidFileType;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.areaElement;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.directoryCompatible;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.disabled;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.literals;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.dragLeave;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.dragOver;
    /** @type {?} */
    PoUploadDragDropDirective.prototype.fileChange;
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropDirective.prototype.i18nPipe;
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropDirective.prototype.notification;
}
//# sourceMappingURL=data:application/json;base64,