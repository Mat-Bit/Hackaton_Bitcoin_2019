/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { PoInputGeneric } from '../po-input-generic/po-input-generic';
/**
 * @abstract
 */
var /**
 * @abstract
 */
PoNumberBaseComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoNumberBaseComponent, _super);
    function PoNumberBaseComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.type = 'number';
        return _this;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    PoNumberBaseComponent.prototype.eventOnInput = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (!this.mask) {
            /** @type {?} */
            var value = e.target.value;
            /** @type {?} */
            var valueMaxlength = this.validMaxLength(this.maxlength, value);
            if (value !== valueMaxlength) {
                value = valueMaxlength;
                this.inputEl.nativeElement.value = value;
            }
            this.callOnChange(this.formatNumber(value));
        }
    };
    /**
     * @param {?} maxlength
     * @param {?} value
     * @return {?}
     */
    PoNumberBaseComponent.prototype.validMaxLength = /**
     * @param {?} maxlength
     * @param {?} value
     * @return {?}
     */
    function (maxlength, value) {
        if (maxlength && value.length > maxlength) {
            /** @type {?} */
            var substringValue = value.toString().substring(0, maxlength);
            if (substringValue && this.isEndWithDot(substringValue)) {
                return substringValue.toString().substring(0, maxlength - 1);
            }
            return substringValue;
        }
        return value;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PoNumberBaseComponent.prototype.writeValueModel = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.inputEl) {
            if (value || value === 0) {
                if (this.mask) {
                    this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));
                    // Se o model for definido como formatado, então precisa atualizá-lo no primeiro acesso
                    if (this.objMask.formatModel) {
                        this.onChangePropagate(this.objMask.valueToModel);
                    }
                }
                else {
                    this.inputEl.nativeElement.value = value;
                }
            }
            else { // Se for o valor for undefined, deve limpar o campo
                this.inputEl.nativeElement.value = '';
            }
        }
        // Emite evento quando o model é atualizado, inclusive a primeira vez
        this.changeModel.emit(value);
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    PoNumberBaseComponent.prototype.isEndWithDot = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value && value.lastIndexOf('.') === value.length - 1;
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    PoNumberBaseComponent.prototype.formatNumber = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value ? Number(value) : null;
    };
    return PoNumberBaseComponent;
}(PoInputGeneric));
/**
 * @abstract
 */
export { PoNumberBaseComponent };
if (false) {
    /** @type {?} */
    PoNumberBaseComponent.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbnVtYmVyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1udW1iZXIvcG8tbnVtYmVyLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHNDQUFzQyxDQUFDOzs7O0FBRXRFOzs7O0lBQW9ELGlEQUFjO0lBSWhFLCtCQUFZLFVBQXNCO1FBQWxDLFlBQ0Usa0JBQU0sVUFBVSxDQUFDLFNBQ2xCO1FBSkQsVUFBSSxHQUFHLFFBQVEsQ0FBQzs7SUFJaEIsQ0FBQzs7Ozs7SUFFRCw0Q0FBWTs7OztJQUFaLFVBQWEsQ0FBTTtRQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTs7Z0JBQ1YsS0FBSyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSzs7Z0JBQ3BCLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO1lBRWpFLElBQUksS0FBSyxLQUFLLGNBQWMsRUFBRTtnQkFDNUIsS0FBSyxHQUFHLGNBQWMsQ0FBQztnQkFFdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQzthQUMxQztZQUVELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQzdDO0lBQ0gsQ0FBQzs7Ozs7O0lBRUQsOENBQWM7Ozs7O0lBQWQsVUFBZSxTQUFpQixFQUFFLEtBQWE7UUFFN0MsSUFBSSxTQUFTLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLEVBQUU7O2dCQUNuQyxjQUFjLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDO1lBRS9ELElBQUksY0FBYyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLEVBQUU7Z0JBQ3ZELE9BQU8sY0FBYyxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQzlEO1lBRUQsT0FBTyxjQUFjLENBQUM7U0FDdkI7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsK0NBQWU7Ozs7SUFBZixVQUFnQixLQUFLO1FBQ25CLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO2dCQUN4QixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7b0JBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBRWpGLHVGQUF1RjtvQkFDdkYsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTt3QkFDNUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7cUJBQ25EO2lCQUNGO3FCQUFNO29CQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7aUJBQzFDO2FBQ0Y7aUJBQU0sRUFBRSxvREFBb0Q7Z0JBQzNELElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7YUFDdkM7U0FDRjtRQUVELHFFQUFxRTtRQUVyRSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUvQixDQUFDOzs7Ozs7SUFFTyw0Q0FBWTs7Ozs7SUFBcEIsVUFBcUIsS0FBYTtRQUNoQyxPQUFPLEtBQUssSUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzlELENBQUM7Ozs7OztJQUVPLDRDQUFZOzs7OztJQUFwQixVQUFxQixLQUFLO1FBQ3hCLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUN0QyxDQUFDO0lBRUgsNEJBQUM7QUFBRCxDQUFDLEFBdEVELENBQW9ELGNBQWMsR0FzRWpFOzs7Ozs7O0lBcEVDLHFDQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvSW5wdXRHZW5lcmljIH0gZnJvbSAnLi4vcG8taW5wdXQtZ2VuZXJpYy9wby1pbnB1dC1nZW5lcmljJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBvTnVtYmVyQmFzZUNvbXBvbmVudCBleHRlbmRzIFBvSW5wdXRHZW5lcmljIHtcblxuICB0eXBlID0gJ251bWJlcic7XG5cbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKGVsZW1lbnRSZWYpO1xuICB9XG5cbiAgZXZlbnRPbklucHV0KGU6IGFueSkge1xuICAgIGlmICghdGhpcy5tYXNrKSB7XG4gICAgICBsZXQgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgIGNvbnN0IHZhbHVlTWF4bGVuZ3RoID0gdGhpcy52YWxpZE1heExlbmd0aCh0aGlzLm1heGxlbmd0aCwgdmFsdWUpO1xuXG4gICAgICBpZiAodmFsdWUgIT09IHZhbHVlTWF4bGVuZ3RoKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWVNYXhsZW5ndGg7XG5cbiAgICAgICAgdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWUgPSB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jYWxsT25DaGFuZ2UodGhpcy5mb3JtYXROdW1iZXIodmFsdWUpKTtcbiAgICB9XG4gIH1cblxuICB2YWxpZE1heExlbmd0aChtYXhsZW5ndGg6IG51bWJlciwgdmFsdWU6IHN0cmluZykge1xuXG4gICAgaWYgKG1heGxlbmd0aCAmJiB2YWx1ZS5sZW5ndGggPiBtYXhsZW5ndGgpIHtcbiAgICAgIGNvbnN0IHN1YnN0cmluZ1ZhbHVlID0gdmFsdWUudG9TdHJpbmcoKS5zdWJzdHJpbmcoMCwgbWF4bGVuZ3RoKTtcblxuICAgICAgaWYgKHN1YnN0cmluZ1ZhbHVlICYmIHRoaXMuaXNFbmRXaXRoRG90KHN1YnN0cmluZ1ZhbHVlKSkge1xuICAgICAgICByZXR1cm4gc3Vic3RyaW5nVmFsdWUudG9TdHJpbmcoKS5zdWJzdHJpbmcoMCwgbWF4bGVuZ3RoIC0gMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdWJzdHJpbmdWYWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICB3cml0ZVZhbHVlTW9kZWwodmFsdWUpIHtcbiAgICBpZiAodGhpcy5pbnB1dEVsKSB7XG4gICAgICBpZiAodmFsdWUgfHwgdmFsdWUgPT09IDApIHtcbiAgICAgICAgaWYgKHRoaXMubWFzaykge1xuICAgICAgICAgIHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdGhpcy5vYmpNYXNrLmNvbnRyb2xGb3JtYXR0aW5nKFN0cmluZyh2YWx1ZSkpO1xuXG4gICAgICAgICAgLy8gU2UgbyBtb2RlbCBmb3IgZGVmaW5pZG8gY29tbyBmb3JtYXRhZG8sIGVudMOjbyBwcmVjaXNhIGF0dWFsaXrDoS1sbyBubyBwcmltZWlybyBhY2Vzc29cbiAgICAgICAgICBpZiAodGhpcy5vYmpNYXNrLmZvcm1hdE1vZGVsKSB7XG4gICAgICAgICAgICB0aGlzLm9uQ2hhbmdlUHJvcGFnYXRlKHRoaXMub2JqTWFzay52YWx1ZVRvTW9kZWwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgeyAvLyBTZSBmb3IgbyB2YWxvciBmb3IgdW5kZWZpbmVkLCBkZXZlIGxpbXBhciBvIGNhbXBvXG4gICAgICAgIHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRW1pdGUgZXZlbnRvIHF1YW5kbyBvIG1vZGVsIMOpIGF0dWFsaXphZG8sIGluY2x1c2l2ZSBhIHByaW1laXJhIHZlelxuXG4gICAgdGhpcy5jaGFuZ2VNb2RlbC5lbWl0KHZhbHVlKTtcblxuICB9XG5cbiAgcHJpdmF0ZSBpc0VuZFdpdGhEb3QodmFsdWU6IHN0cmluZykge1xuICAgIHJldHVybiB2YWx1ZSAmJiB2YWx1ZS5sYXN0SW5kZXhPZignLicpID09PSB2YWx1ZS5sZW5ndGggLSAxO1xuICB9XG5cbiAgcHJpdmF0ZSBmb3JtYXROdW1iZXIodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPyBOdW1iZXIodmFsdWUpIDogbnVsbDtcbiAgfVxuXG59XG4iXX0=