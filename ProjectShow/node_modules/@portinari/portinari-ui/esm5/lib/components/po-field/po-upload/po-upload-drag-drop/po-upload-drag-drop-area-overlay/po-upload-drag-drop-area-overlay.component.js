/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';
var PoUploadDragDropAreaOverlayComponent = /** @class */ (function () {
    function PoUploadDragDropAreaOverlayComponent(renderer) {
        this.renderer = renderer;
        this.areaElement = new EventEmitter();
    }
    /**
     * @return {?}
     */
    PoUploadDragDropAreaOverlayComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.target) {
            this.setPosition(this.target);
        }
        this.areaElement.emit(this.DragDropAreaFixed.nativeElement);
    };
    /**
     * @private
     * @param {?} targetElement
     * @return {?}
     */
    PoUploadDragDropAreaOverlayComponent.prototype.setPosition = /**
     * @private
     * @param {?} targetElement
     * @return {?}
     */
    function (targetElement) {
        var _this = this;
        /** @type {?} */
        var boundingClientRect = targetElement.nativeElement.getBoundingClientRect();
        /** @type {?} */
        var clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];
        clientRectKeys.forEach((/**
         * @param {?} clientRectKey
         * @return {?}
         */
        function (clientRectKey) {
            /** @type {?} */
            var clientRectValue = boundingClientRect[clientRectKey];
            _this.renderer.setStyle(_this.DragDropAreaFixed.nativeElement, clientRectKey, clientRectValue + "px");
        }));
    };
    PoUploadDragDropAreaOverlayComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-upload-drag-drop-area-overlay',
                    template: "<div class=\"po-overlay-fixed\">\n\n  <po-upload-drag-drop-area #DragDropAreaFixed\n    class=\"po-upload-drag-drop-area-overlay\"\n    [p-directory-compatible]=\"directoryCompatible\"\n    [p-disabled]=\"disabled\"\n    [p-literals]=\"literals\"\n    [p-overlay]=\"true\">\n  </po-upload-drag-drop-area>\n\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PoUploadDragDropAreaOverlayComponent.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    PoUploadDragDropAreaOverlayComponent.propDecorators = {
        DragDropAreaFixed: [{ type: ViewChild, args: ['DragDropAreaFixed', { read: ElementRef, static: true },] }],
        directoryCompatible: [{ type: Input, args: ['p-directory-compatible',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        literals: [{ type: Input, args: ['p-literals',] }],
        target: [{ type: Input, args: ['p-target',] }],
        areaElement: [{ type: Output, args: ['p-area-element',] }]
    };
    return PoUploadDragDropAreaOverlayComponent;
}());
export { PoUploadDragDropAreaOverlayComponent };
if (false) {
    /** @type {?} */
    PoUploadDragDropAreaOverlayComponent.prototype.DragDropAreaFixed;
    /** @type {?} */
    PoUploadDragDropAreaOverlayComponent.prototype.directoryCompatible;
    /** @type {?} */
    PoUploadDragDropAreaOverlayComponent.prototype.disabled;
    /** @type {?} */
    PoUploadDragDropAreaOverlayComponent.prototype.literals;
    /** @type {?} */
    PoUploadDragDropAreaOverlayComponent.prototype.target;
    /** @type {?} */
    PoUploadDragDropAreaOverlayComponent.prototype.areaElement;
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropAreaOverlayComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLW92ZXJsYXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby11cGxvYWQvcG8tdXBsb2FkLWRyYWctZHJvcC9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEtb3ZlcmxheS9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEtb3ZlcmxheS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQzlHLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUlqQztJQW1CRSw4Q0FBb0IsUUFBbUI7UUFBbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUZiLGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFFeEMsQ0FBQzs7OztJQUU1Qyw4REFBZTs7O0lBQWY7UUFDRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQjtRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7Ozs7SUFFTywwREFBVzs7Ozs7SUFBbkIsVUFBb0IsYUFBeUI7UUFBN0MsaUJBU0M7O1lBUk8sa0JBQWtCLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRTs7WUFDeEUsY0FBYyxHQUFHLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUM7UUFFNUUsY0FBYyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLGFBQWE7O2dCQUM1QixlQUFlLEdBQUcsa0JBQWtCLENBQUMsYUFBYSxDQUFDO1lBRXpELEtBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEVBQUUsYUFBYSxFQUFLLGVBQWUsT0FBSSxDQUFDLENBQUM7UUFDdEcsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOztnQkFyQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLHdVQUE4RDtvQkFDOUQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzs7O2dCQVRvRyxTQUFTOzs7b0NBWTNHLFNBQVMsU0FBQyxtQkFBbUIsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtzQ0FFakUsS0FBSyxTQUFDLHdCQUF3QjsyQkFFOUIsS0FBSyxTQUFDLFlBQVk7MkJBRWxCLEtBQUssU0FBQyxZQUFZO3lCQUVsQixLQUFLLFNBQUMsVUFBVTs4QkFFaEIsTUFBTSxTQUFDLGdCQUFnQjs7SUFzQjFCLDJDQUFDO0NBQUEsQUF2Q0QsSUF1Q0M7U0FsQ1ksb0NBQW9DOzs7SUFFL0MsaUVBQWtHOztJQUVsRyxtRUFBOEQ7O0lBRTlELHdEQUF1Qzs7SUFFdkMsd0RBQWdEOztJQUVoRCxzREFBc0M7O0lBRXRDLDJEQUFtRjs7Ozs7SUFFdkUsd0RBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBSZW5kZXJlcjIsXG5WaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9VcGxvYWRMaXRlcmFscyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvcG8tdXBsb2FkLWxpdGVyYWxzLmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5JyxcbiAgdGVtcGxhdGVVcmw6ICdwby11cGxvYWQtZHJhZy1kcm9wLWFyZWEtb3ZlcmxheS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVXBsb2FkRHJhZ0Ryb3BBcmVhT3ZlcmxheUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuXG4gIEBWaWV3Q2hpbGQoJ0RyYWdEcm9wQXJlYUZpeGVkJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgRHJhZ0Ryb3BBcmVhRml4ZWQ6IEVsZW1lbnRSZWY7XG5cbiAgQElucHV0KCdwLWRpcmVjdG9yeS1jb21wYXRpYmxlJykgZGlyZWN0b3J5Q29tcGF0aWJsZTogYm9vbGVhbjtcblxuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFsczogUG9VcGxvYWRMaXRlcmFscztcblxuICBASW5wdXQoJ3AtdGFyZ2V0JykgdGFyZ2V0OiBFbGVtZW50UmVmO1xuXG4gIEBPdXRwdXQoJ3AtYXJlYS1lbGVtZW50JykgYXJlYUVsZW1lbnQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7IH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgaWYgKHRoaXMudGFyZ2V0KSB7XG4gICAgICB0aGlzLnNldFBvc2l0aW9uKHRoaXMudGFyZ2V0KTtcbiAgICB9XG4gICAgdGhpcy5hcmVhRWxlbWVudC5lbWl0KHRoaXMuRHJhZ0Ryb3BBcmVhRml4ZWQubmF0aXZlRWxlbWVudCk7XG4gIH1cblxuICBwcml2YXRlIHNldFBvc2l0aW9uKHRhcmdldEVsZW1lbnQ6IEVsZW1lbnRSZWYpIHtcbiAgICBjb25zdCBib3VuZGluZ0NsaWVudFJlY3QgPSB0YXJnZXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgY2xpZW50UmVjdEtleXMgPSBbJ2JvdHRvbScsICdsZWZ0JywgJ2hlaWdodCcsICdyaWdodCcsICd0b3AnLCAnd2lkdGgnXTtcblxuICAgIGNsaWVudFJlY3RLZXlzLmZvckVhY2goY2xpZW50UmVjdEtleSA9PiB7XG4gICAgICBjb25zdCBjbGllbnRSZWN0VmFsdWUgPSBib3VuZGluZ0NsaWVudFJlY3RbY2xpZW50UmVjdEtleV07XG5cbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5EcmFnRHJvcEFyZWFGaXhlZC5uYXRpdmVFbGVtZW50LCBjbGllbnRSZWN0S2V5LCBgJHtjbGllbnRSZWN0VmFsdWV9cHhgKTtcbiAgICB9KTtcbiAgfVxuXG59XG4iXX0=