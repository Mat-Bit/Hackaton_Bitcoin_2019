/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import { PoSwitchLabelPosition } from './po-switch-label-position.enum';
/**
 * \@description
 *
 * O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.
 * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.
 *
 * Pode-se ligar ou deligar o botão utilizando a tecla de espaço ou o clique do mouse.
 *
 * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,
 * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.
 *
 * > O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.
 */
var PoSwitchBaseComponent = /** @class */ (function () {
    function PoSwitchBaseComponent() {
        this._disabled = false;
        this.switchValue = false;
        /**
         * Texto exibido quando o valor do componente for `true`.
         *
         * \@default `true`
         */
        this.labelOn = 'true';
        /**
         * Texto exibido quando o valor do componente for `false`.
         *
         * \@default `false`
         */
        this.labelOff = 'false';
        /**
         * \@optional
         *
         * \@description
         *
         * Posição de exibição do rótulo.
         *
         * > Por padrão exibe à direita.
         */
        this.labelPosition = PoSwitchLabelPosition.Right;
        /**
         * Evento disparado ao alterar valor do campo.
         */
        this.change = new EventEmitter();
        // Função para atualizar o ngModel do componente, necessário quando não for utilizado dentro da tag form.
        this.ngModelChange = new EventEmitter();
    }
    Object.defineProperty(PoSwitchBaseComponent.prototype, "setLabelOn", {
        set: /**
         * @param {?} label
         * @return {?}
         */
        function (label) {
            this.labelOn = label || 'true';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoSwitchBaseComponent.prototype, "setLabelOff", {
        set: /**
         * @param {?} label
         * @return {?}
         */
        function (label) {
            this.labelOff = label || 'false';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoSwitchBaseComponent.prototype, "setLabelPosition", {
        set: /**
         * @param {?} position
         * @return {?}
         */
        function (position) {
            this.labelPosition = (position in PoSwitchLabelPosition) ? parseInt((/** @type {?} */ (position)), 10) : PoSwitchLabelPosition.Right;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoSwitchBaseComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        /**
         * @optional
         *
         * @description
         *
         * Indica se o campo será desabilitado.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Indica se o campo será desabilitado.
         *
         * \@default `false`
         * @param {?} disabled
         * @return {?}
         */
        function (disabled) {
            this._disabled = convertToBoolean(disabled);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    PoSwitchBaseComponent.prototype.changeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.switchValue !== value) {
            this.switchValue = value;
            if (this.propagateChange) {
                this.propagateChange(value);
            }
            else {
                this.ngModelChange.emit(value);
            }
            this.change.emit(this.switchValue);
        }
    };
    /**
     * @return {?}
     */
    PoSwitchBaseComponent.prototype.eventClick = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.changeValue(!this.switchValue);
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PoSwitchBaseComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.propagateChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PoSwitchBaseComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) { };
    /**
     * @param {?} value
     * @return {?}
     */
    PoSwitchBaseComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== this.switchValue) {
            this.switchValue = !!value;
        }
    };
    PoSwitchBaseComponent.propDecorators = {
        name: [{ type: Input, args: ['name',] }],
        label: [{ type: Input, args: ['p-label',] }],
        help: [{ type: Input, args: ['p-help',] }],
        setLabelOn: [{ type: Input, args: ['p-label-on',] }],
        setLabelOff: [{ type: Input, args: ['p-label-off',] }],
        setLabelPosition: [{ type: Input, args: ['p-label-position',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        change: [{ type: Output, args: ['p-change',] }],
        ngModelChange: [{ type: Output, args: ['ngModelChange',] }]
    };
    return PoSwitchBaseComponent;
}());
export { PoSwitchBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoSwitchBaseComponent.prototype._disabled;
    /** @type {?} */
    PoSwitchBaseComponent.prototype.propagateChange;
    /** @type {?} */
    PoSwitchBaseComponent.prototype.switchValue;
    /**
     * Nome do componente.
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.name;
    /**
     * Rótulo exibido pelo componente.
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.label;
    /**
     * Texto de apoio para o campo.
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.help;
    /**
     * Texto exibido quando o valor do componente for `true`.
     *
     * \@default `true`
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.labelOn;
    /**
     * Texto exibido quando o valor do componente for `false`.
     *
     * \@default `false`
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.labelOff;
    /**
     * \@optional
     *
     * \@description
     *
     * Posição de exibição do rótulo.
     *
     * > Por padrão exibe à direita.
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.labelPosition;
    /**
     * Evento disparado ao alterar valor do campo.
     * @type {?}
     */
    PoSwitchBaseComponent.prototype.change;
    /** @type {?} */
    PoSwitchBaseComponent.prototype.ngModelChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc3dpdGNoLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1zd2l0Y2gvcG8tc3dpdGNoLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdkQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBZXhFO0lBQUE7UUFFVSxjQUFTLEdBQWEsS0FBSyxDQUFDO1FBR3BDLGdCQUFXLEdBQVksS0FBSyxDQUFDOzs7Ozs7UUFnQjdCLFlBQU8sR0FBWSxNQUFNLENBQUM7Ozs7OztRQVUxQixhQUFRLEdBQVksT0FBTyxDQUFDOzs7Ozs7Ozs7O1FBYzVCLGtCQUFhLEdBQTJCLHFCQUFxQixDQUFDLEtBQUssQ0FBQzs7OztRQXVCaEQsV0FBTSxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDOztRQUdoRCxrQkFBYSxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDO0lBaUN2RixDQUFDO0lBbEZDLHNCQUF5Qiw2Q0FBVTs7Ozs7UUFBbkMsVUFBb0MsS0FBYTtZQUMvQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssSUFBSSxNQUFNLENBQUM7UUFDakMsQ0FBQzs7O09BQUE7SUFRRCxzQkFBMEIsOENBQVc7Ozs7O1FBQXJDLFVBQXNDLEtBQWE7WUFDakQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLElBQUksT0FBTyxDQUFDO1FBQ25DLENBQUM7OztPQUFBO0lBWUQsc0JBQStCLG1EQUFnQjs7Ozs7UUFBL0MsVUFBZ0QsUUFBK0I7WUFDN0UsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLFFBQVEsSUFBSSxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsbUJBQUssUUFBUSxFQUFBLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQztRQUN2SCxDQUFDOzs7T0FBQTtJQVdELHNCQUF5QiwyQ0FBUTs7OztRQUlqQztZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDO1FBZkQ7Ozs7Ozs7O1dBUUc7Ozs7Ozs7Ozs7OztRQUNILFVBQWtDLFFBQWlCO1lBQ2pELElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsQ0FBQzs7O09BQUE7Ozs7O0lBWUQsMkNBQVc7Ozs7SUFBWCxVQUFZLEtBQVU7UUFDcEIsSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLEtBQUssRUFBRTtZQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztZQUV6QixJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7Z0JBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDN0I7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDaEM7WUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDcEM7SUFDSCxDQUFDOzs7O0lBRUQsMENBQVU7OztJQUFWO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUNyQztJQUNILENBQUM7Ozs7O0lBRUQsZ0RBQWdCOzs7O0lBQWhCLFVBQWlCLEVBQU87UUFDdEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFRCxpREFBaUI7Ozs7SUFBakIsVUFBa0IsRUFBTyxJQUFVLENBQUM7Ozs7O0lBRXBDLDBDQUFVOzs7O0lBQVYsVUFBVyxLQUFVO1FBQ25CLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQzVCO0lBQ0gsQ0FBQzs7dUJBOUZBLEtBQUssU0FBQyxNQUFNO3dCQUdaLEtBQUssU0FBQyxTQUFTO3VCQUdmLEtBQUssU0FBQyxRQUFROzZCQVFkLEtBQUssU0FBQyxZQUFZOzhCQVVsQixLQUFLLFNBQUMsYUFBYTttQ0FjbkIsS0FBSyxTQUFDLGtCQUFrQjsyQkFheEIsS0FBSyxTQUFDLFlBQVk7eUJBU2xCLE1BQU0sU0FBQyxVQUFVO2dDQUdqQixNQUFNLFNBQUMsZUFBZTs7SUFpQ3pCLDRCQUFDO0NBQUEsQUF4R0QsSUF3R0M7U0F4R1kscUJBQXFCOzs7Ozs7SUFFaEMsMENBQW9DOztJQUVwQyxnREFBcUI7O0lBQ3JCLDRDQUE2Qjs7Ozs7SUFHN0IscUNBQTRCOzs7OztJQUc1QixzQ0FBaUM7Ozs7O0lBR2pDLHFDQUErQjs7Ozs7OztJQU8vQix3Q0FBMEI7Ozs7Ozs7SUFVMUIseUNBQTRCOzs7Ozs7Ozs7OztJQWM1Qiw4Q0FBb0U7Ozs7O0lBdUJwRSx1Q0FBeUU7O0lBR3pFLDhDQUFxRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9Td2l0Y2hMYWJlbFBvc2l0aW9uIH0gZnJvbSAnLi9wby1zd2l0Y2gtbGFiZWwtcG9zaXRpb24uZW51bSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1zd2l0Y2hgIMOpIHVtIFtjaGVja2JveF0oL2RvY3VtZW50YXRpb24vcG8tY2hlY2tib3gtZ3JvdXApIG1haXMgaW50dWl0aXZvLCBwb2lzIGZheiBhbmFsb2dpYSBhIHVtIGludGVycnVwdG9yLlxuICogRGV2ZSBzZXIgdXNhZG8gcXVhbmRvIGRlc2VqYS1zZSB0cmFuc21pdGlyIGEgaWRlaWEgZGUgbGlnYXIgLyBkZXNsaWdhciB1bWEgZnVuY2lvbmFsaWRhZGUgZXNwZWPDrWZpY2EuXG4gKlxuICogUG9kZS1zZSBsaWdhciBvdSBkZWxpZ2FyIG8gYm90w6NvIHV0aWxpemFuZG8gYSB0ZWNsYSBkZSBlc3Bhw6dvIG91IG8gY2xpcXVlIGRvIG1vdXNlLlxuICpcbiAqIE8gdGV4dG8gZXhpYmlkbyBwb2RlIHNlciBhbHRlcmFkbyBkZSBhY29yZG8gY29tIG8gdmFsb3Igc2V0YWRvIGF1bWVudGFuZG8gYXMgcG9zc2liaWxpZGFkZXMgZGUgdXNvIGRvIGNvbXBvbmVudGUsXG4gKiBwb3J0YW50bywgcmVjb21lbmRhLXNlIGluZm9ybWFyIHRleHRvcyBxdWUgY29udGV4dHVhbGl6ZW0gc2V1IHVzbyBwYXJhIHF1ZSBmYWNpbGl0ZSBhIGNvbXByZWVuc8OjbyBkbyB1c3XDoXJpby5cbiAqXG4gKiA+IE8gY29tcG9uZW50ZSBuw6NvIGFsdGVyYSBvIHZhbG9yIGluY2lhbCBpbmZvcm1hZG8gbm8gKm1vZGVsKiwgcG9ydGFudG8gaW5kaWNhLXNlIGluaWNpYWxpemEtbG8gY2FzbyB0ZXIgbmVjZXNzaWRhZGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBQb1N3aXRjaEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG5cbiAgcHJpdmF0ZSBfZGlzYWJsZWQ/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJvcGFnYXRlQ2hhbmdlOiBhbnk7XG4gIHN3aXRjaFZhbHVlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIE5vbWUgZG8gY29tcG9uZW50ZS4gKi9cbiAgQElucHV0KCduYW1lJykgbmFtZTogc3RyaW5nO1xuXG4gIC8qKiBSw7N0dWxvIGV4aWJpZG8gcGVsbyBjb21wb25lbnRlLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbD86IHN0cmluZztcblxuICAvKiogVGV4dG8gZGUgYXBvaW8gcGFyYSBvIGNhbXBvLiAqL1xuICBASW5wdXQoJ3AtaGVscCcpIGhlbHA/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRleHRvIGV4aWJpZG8gcXVhbmRvIG8gdmFsb3IgZG8gY29tcG9uZW50ZSBmb3IgYHRydWVgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgdHJ1ZWBcbiAgICovXG4gIGxhYmVsT24/OiBzdHJpbmcgPSAndHJ1ZSc7XG4gIEBJbnB1dCgncC1sYWJlbC1vbicpIHNldCBzZXRMYWJlbE9uKGxhYmVsOiBzdHJpbmcpIHtcbiAgICB0aGlzLmxhYmVsT24gPSBsYWJlbCB8fCAndHJ1ZSc7XG4gIH1cblxuICAvKipcbiAgICogVGV4dG8gZXhpYmlkbyBxdWFuZG8gbyB2YWxvciBkbyBjb21wb25lbnRlIGZvciBgZmFsc2VgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBsYWJlbE9mZj86IHN0cmluZyA9ICdmYWxzZSc7XG4gIEBJbnB1dCgncC1sYWJlbC1vZmYnKSBzZXQgc2V0TGFiZWxPZmYobGFiZWw6IHN0cmluZykge1xuICAgIHRoaXMubGFiZWxPZmYgPSBsYWJlbCB8fCAnZmFsc2UnO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogUG9zacOnw6NvIGRlIGV4aWJpw6fDo28gZG8gcsOzdHVsby5cbiAgICpcbiAgICogPiBQb3IgcGFkcsOjbyBleGliZSDDoCBkaXJlaXRhLlxuICAgKi9cbiAgbGFiZWxQb3NpdGlvbj86IFBvU3dpdGNoTGFiZWxQb3NpdGlvbiA9IFBvU3dpdGNoTGFiZWxQb3NpdGlvbi5SaWdodDtcbiAgQElucHV0KCdwLWxhYmVsLXBvc2l0aW9uJykgc2V0IHNldExhYmVsUG9zaXRpb24ocG9zaXRpb246IFBvU3dpdGNoTGFiZWxQb3NpdGlvbikge1xuICAgIHRoaXMubGFiZWxQb3NpdGlvbiA9IChwb3NpdGlvbiBpbiBQb1N3aXRjaExhYmVsUG9zaXRpb24pID8gcGFyc2VJbnQoPGFueT5wb3NpdGlvbiwgMTApIDogUG9Td2l0Y2hMYWJlbFBvc2l0aW9uLlJpZ2h0O1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogSW5kaWNhIHNlIG8gY2FtcG8gc2Vyw6EgZGVzYWJpbGl0YWRvLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBzZXQgZGlzYWJsZWQoZGlzYWJsZWQ6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9kaXNhYmxlZCA9IGNvbnZlcnRUb0Jvb2xlYW4oZGlzYWJsZWQpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuXG4gIC8qKiBFdmVudG8gZGlzcGFyYWRvIGFvIGFsdGVyYXIgdmFsb3IgZG8gY2FtcG8uICovXG4gIEBPdXRwdXQoJ3AtY2hhbmdlJykgY2hhbmdlPzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAvLyBGdW7Dp8OjbyBwYXJhIGF0dWFsaXphciBvIG5nTW9kZWwgZG8gY29tcG9uZW50ZSwgbmVjZXNzw6FyaW8gcXVhbmRvIG7Do28gZm9yIHV0aWxpemFkbyBkZW50cm8gZGEgdGFnIGZvcm0uXG4gIEBPdXRwdXQoJ25nTW9kZWxDaGFuZ2UnKSBuZ01vZGVsQ2hhbmdlPzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjaGFuZ2VWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHRoaXMuc3dpdGNoVmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLnN3aXRjaFZhbHVlID0gdmFsdWU7XG5cbiAgICAgIGlmICh0aGlzLnByb3BhZ2F0ZUNoYW5nZSkge1xuICAgICAgICB0aGlzLnByb3BhZ2F0ZUNoYW5nZSh2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm5nTW9kZWxDaGFuZ2UuZW1pdCh2YWx1ZSk7XG4gICAgICB9XG4gICAgICB0aGlzLmNoYW5nZS5lbWl0KHRoaXMuc3dpdGNoVmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIGV2ZW50Q2xpY2soKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLmNoYW5nZVZhbHVlKCF0aGlzLnN3aXRjaFZhbHVlKTtcbiAgICB9XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLnByb3BhZ2F0ZUNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQgeyB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLnN3aXRjaFZhbHVlKSB7XG4gICAgICB0aGlzLnN3aXRjaFZhbHVlID0gISF2YWx1ZTtcbiAgICB9XG4gIH1cblxufVxuIl19