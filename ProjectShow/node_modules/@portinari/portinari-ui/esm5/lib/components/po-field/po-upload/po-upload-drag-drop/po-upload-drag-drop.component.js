/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { convertToInt } from '../../../../utils/util';
import { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';
/** @type {?} */
var PoUploadDragDropHeightDefault = 320;
/** @type {?} */
var PoUploadDragDropHeightMin = 160;
var PoUploadDragDropComponent = /** @class */ (function () {
    function PoUploadDragDropComponent(changeDetector) {
        this.changeDetector = changeDetector;
        this._dragDropHeight = PoUploadDragDropHeightDefault;
        this.isDragOver = false;
        this.fileChange = new EventEmitter();
        this.selectFiles = new EventEmitter();
    }
    Object.defineProperty(PoUploadDragDropComponent.prototype, "dragDropHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dragDropHeight;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);
            this._dragDropHeight = (dragDropHeight < PoUploadDragDropHeightMin) ? PoUploadDragDropHeightMin : dragDropHeight;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PoUploadDragDropComponent.prototype.focus = /**
     * @return {?}
     */
    function () {
        this.dragDropAreaComponent.focus();
    };
    /**
     * @param {?} element
     * @return {?}
     */
    PoUploadDragDropComponent.prototype.onAreaElement = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        this.areaElement = element;
        // necessário para não ocorrer o erro HasBeenChecked
        this.changeDetector.detectChanges();
    };
    /**
     * @return {?}
     */
    PoUploadDragDropComponent.prototype.onDragLeave = /**
     * @return {?}
     */
    function () {
        this.isDragOver = false;
    };
    /**
     * @return {?}
     */
    PoUploadDragDropComponent.prototype.onDragOver = /**
     * @return {?}
     */
    function () {
        this.isDragOver = true;
    };
    /**
     * @param {?} files
     * @return {?}
     */
    PoUploadDragDropComponent.prototype.onFileChange = /**
     * @param {?} files
     * @return {?}
     */
    function (files) {
        this.isDragOver = false;
        this.fileChange.emit(files);
    };
    PoUploadDragDropComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-upload-drag-drop',
                    template: "<po-upload-drag-drop-area-overlay #dragDropOverlay *ngIf=\"isDragOver\"\r\n  [p-directory-compatible]=\"directoryCompatible\"\r\n  [p-disabled]=\"disabled\"\r\n  [p-literals]=\"literals\"\r\n  [p-target]=\"dragDropAreaComponent.elementRef\"\r\n  (p-area-element)=\"onAreaElement($event)\">\r\n</po-upload-drag-drop-area-overlay>\r\n\r\n<po-upload-drag-drop-area\r\n  p-upload-drag-drop\r\n  [p-area-element]=\"areaElement\"\r\n  [p-directory-compatible]=\"directoryCompatible\"\r\n  [p-disabled]=\"disabled\"\r\n  [p-height]=\"dragDropHeight\"\r\n  [p-literals]=\"literals\"\r\n  [p-overlay]=\"false\"\r\n  (p-drag-leave)=\"onDragLeave()\"\r\n  (p-drag-over)=\"onDragOver()\"\r\n  (p-file-change)=\"onFileChange($event)\"\r\n  (p-select-files)=\"selectFiles.emit()\">\r\n</po-upload-drag-drop-area>\r\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PoUploadDragDropComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    PoUploadDragDropComponent.propDecorators = {
        dragDropOverlayElement: [{ type: ViewChild, args: ['dragDropOverlay', { read: ElementRef, static: false },] }],
        dragDropAreaComponent: [{ type: ViewChild, args: [PoUploadDragDropAreaComponent, { static: true },] }],
        directoryCompatible: [{ type: Input, args: ['p-directory-compatible',] }],
        disabled: [{ type: Input, args: ['p-disabled',] }],
        dragDropHeight: [{ type: Input, args: ['p-drag-drop-height',] }],
        literals: [{ type: Input, args: ['p-literals',] }],
        fileChange: [{ type: Output, args: ['p-file-change',] }],
        selectFiles: [{ type: Output, args: ['p-select-files',] }]
    };
    return PoUploadDragDropComponent;
}());
export { PoUploadDragDropComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropComponent.prototype._dragDropHeight;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.areaElement;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.isDragOver;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.dragDropOverlayElement;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.dragDropAreaComponent;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.directoryCompatible;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.disabled;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.literals;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.fileChange;
    /** @type {?} */
    PoUploadDragDropComponent.prototype.selectFiles;
    /**
     * @type {?}
     * @private
     */
    PoUploadDragDropComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXVwbG9hZC9wby11cGxvYWQtZHJhZy1kcm9wL3BvLXVwbG9hZC1kcmFnLWRyb3AuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUksT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXRELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLCtEQUErRCxDQUFDOztJQUd4Ryw2QkFBNkIsR0FBRyxHQUFHOztJQUNuQyx5QkFBeUIsR0FBRyxHQUFHO0FBRXJDO0lBbUNFLG1DQUFvQixjQUFpQztRQUFqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7UUE1QjdDLG9CQUFlLEdBQVksNkJBQTZCLENBQUM7UUFHakUsZUFBVSxHQUFZLEtBQUssQ0FBQztRQXFCSCxlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFdkQsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUUxQixDQUFDO0lBaEIxRCxzQkFBaUMscURBQWM7Ozs7UUFNL0M7WUFDRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDOUIsQ0FBQzs7Ozs7UUFSRCxVQUFnRCxLQUFhOztnQkFDckQsY0FBYyxHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsNkJBQTZCLENBQUM7WUFFekUsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLGNBQWMsR0FBRyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDO1FBQ25ILENBQUM7OztPQUFBOzs7O0lBY0QseUNBQUs7OztJQUFMO1FBQ0UsSUFBSSxDQUFDLHFCQUFxQixDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsaURBQWE7Ozs7SUFBYixVQUFjLE9BQW9CO1FBQ2hDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDO1FBRTNCLG9EQUFvRDtRQUNwRCxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Ozs7SUFFRCwrQ0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUMxQixDQUFDOzs7O0lBRUQsOENBQVU7OztJQUFWO1FBQ0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQzs7Ozs7SUFFRCxnREFBWTs7OztJQUFaLFVBQWEsS0FBSztRQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUV4QixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDOztnQkE1REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLDh5QkFBbUQ7b0JBQ25ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7OztnQkFkaUMsaUJBQWlCOzs7eUNBc0JoRCxTQUFTLFNBQUMsaUJBQWlCLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7d0NBQ2hFLFNBQVMsU0FBQyw2QkFBNkIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7c0NBRXpELEtBQUssU0FBQyx3QkFBd0I7MkJBRTlCLEtBQUssU0FBQyxZQUFZO2lDQUVsQixLQUFLLFNBQUMsb0JBQW9COzJCQVUxQixLQUFLLFNBQUMsWUFBWTs2QkFFbEIsTUFBTSxTQUFDLGVBQWU7OEJBRXRCLE1BQU0sU0FBQyxnQkFBZ0I7O0lBNkIxQixnQ0FBQztDQUFBLEFBOURELElBOERDO1NBekRZLHlCQUF5Qjs7Ozs7O0lBRXBDLG9EQUFpRTs7SUFFakUsZ0RBQXlCOztJQUN6QiwrQ0FBNEI7O0lBRTVCLDJEQUFzRzs7SUFDdEcsMERBQWlIOztJQUVqSCx3REFBOEQ7O0lBRTlELDZDQUF1Qzs7SUFZdkMsNkNBQWdEOztJQUVoRCwrQ0FBaUY7O0lBRWpGLGdEQUFtRjs7Ozs7SUFFdkUsbURBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBjb252ZXJ0VG9JbnQgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy91dGlsJztcclxuXHJcbmltcG9ydCB7IFBvVXBsb2FkRHJhZ0Ryb3BBcmVhQ29tcG9uZW50IH0gZnJvbSAnLi9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEvcG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvVXBsb2FkTGl0ZXJhbHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXVwbG9hZC1saXRlcmFscy5pbnRlcmZhY2UnO1xyXG5cclxuY29uc3QgUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQgPSAzMjA7XHJcbmNvbnN0IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHRNaW4gPSAxNjA7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLXVwbG9hZC1kcmFnLWRyb3AnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wby11cGxvYWQtZHJhZy1kcm9wLmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9VcGxvYWREcmFnRHJvcENvbXBvbmVudCB7XHJcblxyXG4gIHByaXZhdGUgX2RyYWdEcm9wSGVpZ2h0PzogbnVtYmVyID0gUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQ7XHJcblxyXG4gIGFyZWFFbGVtZW50OiBIVE1MRWxlbWVudDtcclxuICBpc0RyYWdPdmVyOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2RyYWdEcm9wT3ZlcmxheScsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiBmYWxzZSB9KSBkcmFnRHJvcE92ZXJsYXlFbGVtZW50OiBFbGVtZW50UmVmO1xyXG4gIEBWaWV3Q2hpbGQoUG9VcGxvYWREcmFnRHJvcEFyZWFDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIGRyYWdEcm9wQXJlYUNvbXBvbmVudDogUG9VcGxvYWREcmFnRHJvcEFyZWFDb21wb25lbnQ7XHJcblxyXG4gIEBJbnB1dCgncC1kaXJlY3RvcnktY29tcGF0aWJsZScpIGRpcmVjdG9yeUNvbXBhdGlibGU6IGJvb2xlYW47XHJcblxyXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xyXG5cclxuICBASW5wdXQoJ3AtZHJhZy1kcm9wLWhlaWdodCcpIHNldCBkcmFnRHJvcEhlaWdodCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICBjb25zdCBkcmFnRHJvcEhlaWdodCA9IGNvbnZlcnRUb0ludCh2YWx1ZSwgUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQpO1xyXG5cclxuICAgIHRoaXMuX2RyYWdEcm9wSGVpZ2h0ID0gKGRyYWdEcm9wSGVpZ2h0IDwgUG9VcGxvYWREcmFnRHJvcEhlaWdodE1pbikgPyBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0TWluIDogZHJhZ0Ryb3BIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBnZXQgZHJhZ0Ryb3BIZWlnaHQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZHJhZ0Ryb3BIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFsczogUG9VcGxvYWRMaXRlcmFscztcclxuXHJcbiAgQE91dHB1dCgncC1maWxlLWNoYW5nZScpIGZpbGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIEBPdXRwdXQoJ3Atc2VsZWN0LWZpbGVzJykgc2VsZWN0RmlsZXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7IH1cclxuXHJcbiAgZm9jdXMoKSB7XHJcbiAgICB0aGlzLmRyYWdEcm9wQXJlYUNvbXBvbmVudC5mb2N1cygpO1xyXG4gIH1cclxuXHJcbiAgb25BcmVhRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCkge1xyXG4gICAgdGhpcy5hcmVhRWxlbWVudCA9IGVsZW1lbnQ7XHJcblxyXG4gICAgLy8gbmVjZXNzw6FyaW8gcGFyYSBuw6NvIG9jb3JyZXIgbyBlcnJvIEhhc0JlZW5DaGVja2VkXHJcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcclxuICB9XHJcblxyXG4gIG9uRHJhZ0xlYXZlKCkge1xyXG4gICAgdGhpcy5pc0RyYWdPdmVyID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBvbkRyYWdPdmVyKCkge1xyXG4gICAgdGhpcy5pc0RyYWdPdmVyID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIG9uRmlsZUNoYW5nZShmaWxlcykge1xyXG4gICAgdGhpcy5pc0RyYWdPdmVyID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy5maWxlQ2hhbmdlLmVtaXQoZmlsZXMpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19