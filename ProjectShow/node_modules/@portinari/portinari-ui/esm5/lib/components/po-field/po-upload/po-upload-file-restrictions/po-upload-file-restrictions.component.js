/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';
import { browserLanguage, formatBytes, poLocaleDefault } from '../../../../utils/util';
import { poUploadLiteralsDefault } from '../po-upload-base.component';
var PoUploadFileRestrictionsComponent = /** @class */ (function () {
    function PoUploadFileRestrictionsComponent(changeDetector) {
        this.changeDetector = changeDetector;
    }
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "allowedExtensions", {
        get: /**
         * @return {?}
         */
        function () {
            return this._allowedExtensions;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._allowedExtensions = this.formatAllowedExtensions((/** @type {?} */ (value)));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "maxFileSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxFileSize;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._maxFileSize = formatBytes((/** @type {?} */ (value)));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "minFileSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this._minFileSize;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._minFileSize = formatBytes((/** @type {?} */ (value)));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "language", {
        get: /**
         * @return {?}
         */
        function () {
            return browserLanguage();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PoUploadFileRestrictionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setLiterals();
    };
    /**
     * @private
     * @param {?} allowedExtensions
     * @return {?}
     */
    PoUploadFileRestrictionsComponent.prototype.formatAllowedExtensions = /**
     * @private
     * @param {?} allowedExtensions
     * @return {?}
     */
    function (allowedExtensions) {
        /** @type {?} */
        var conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y' };
        return allowedExtensions ? allowedExtensions
            .join(', ')
            .toUpperCase()
            .replace(/,(?=[^,]*$)/, " " + conjunction[this.language]) : undefined;
    };
    /**
     * @private
     * @return {?}
     */
    PoUploadFileRestrictionsComponent.prototype.setLiterals = /**
     * @private
     * @return {?}
     */
    function () {
        this.literals = tslib_1.__assign({}, poUploadLiteralsDefault[poLocaleDefault], poUploadLiteralsDefault[this.language]);
        this.changeDetector.detectChanges();
    };
    PoUploadFileRestrictionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-upload-file-restrictions',
                    template: "<p class=\"po-font-text-small\" *ngIf=\"maxFiles > 1\">\n  {{ literals?.numberOfFilesAllowed | poI18n:maxFiles }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"allowedExtensions\">\n  {{ literals?.allowedFormats | poI18n:allowedExtensions }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"minFileSize || maxFileSize\">\n  <span>{{ literals?.allowedSizes }}</span>\n\n  <span *ngIf=\"minFileSize && maxFileSize\">\n    {{ literals?.allowedFileSizeRange | poI18n:[minFileSize, maxFileSize] }}\n  </span>\n\n  <span *ngIf=\"minFileSize && !maxFileSize\">\n    {{ literals?.minFileSizeAllowed | poI18n:minFileSize }}\n  </span>\n\n  <span *ngIf=\"maxFileSize && !minFileSize\">\n    {{ literals?.maxFileSizeAllowed | poI18n:maxFileSize }}\n  </span>\n</p>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PoUploadFileRestrictionsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    PoUploadFileRestrictionsComponent.propDecorators = {
        allowedExtensions: [{ type: Input, args: ['p-allowed-extensions',] }],
        maxFiles: [{ type: Input, args: ['p-max-files',] }],
        maxFileSize: [{ type: Input, args: ['p-max-file-size',] }],
        minFileSize: [{ type: Input, args: ['p-min-file-size',] }]
    };
    return PoUploadFileRestrictionsComponent;
}());
export { PoUploadFileRestrictionsComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoUploadFileRestrictionsComponent.prototype._allowedExtensions;
    /**
     * @type {?}
     * @private
     */
    PoUploadFileRestrictionsComponent.prototype._maxFileSize;
    /**
     * @type {?}
     * @private
     */
    PoUploadFileRestrictionsComponent.prototype._minFileSize;
    /** @type {?} */
    PoUploadFileRestrictionsComponent.prototype.literals;
    /** @type {?} */
    PoUploadFileRestrictionsComponent.prototype.maxFiles;
    /**
     * @type {?}
     * @private
     */
    PoUploadFileRestrictionsComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy9wby11cGxvYWQtZmlsZS1yZXN0cmljdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFckcsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFdkYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFdEU7SUEyQ0UsMkNBQW9CLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUFJLENBQUM7SUE5QjFELHNCQUFtQyxnRUFBaUI7Ozs7UUFJcEQ7WUFDRSxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNqQyxDQUFDOzs7OztRQU5ELFVBQXFELEtBQUs7WUFDeEQsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxtQkFBSyxLQUFLLEVBQUEsQ0FBQyxDQUFDO1FBQ3JFLENBQUM7OztPQUFBO0lBUUQsc0JBQThCLDBEQUFXOzs7O1FBSXpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzNCLENBQUM7Ozs7O1FBTkQsVUFBMEMsS0FBSztZQUM3QyxJQUFJLENBQUMsWUFBWSxHQUFHLFdBQVcsQ0FBQyxtQkFBSyxLQUFLLEVBQUEsQ0FBQyxDQUFDO1FBQzlDLENBQUM7OztPQUFBO0lBTUQsc0JBQThCLDBEQUFXOzs7O1FBSXpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzNCLENBQUM7Ozs7O1FBTkQsVUFBMEMsS0FBSztZQUM3QyxJQUFJLENBQUMsWUFBWSxHQUFHLFdBQVcsQ0FBQyxtQkFBSyxLQUFLLEVBQUEsQ0FBQyxDQUFDO1FBQzlDLENBQUM7OztPQUFBO0lBTUQsc0JBQUksdURBQVE7Ozs7UUFBWjtZQUNFLE9BQU8sZUFBZSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BQUE7Ozs7SUFJRCxvREFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckIsQ0FBQzs7Ozs7O0lBRU8sbUVBQXVCOzs7OztJQUEvQixVQUFnQyxpQkFBZ0M7O1lBQ3hELFdBQVcsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFO1FBRXpELE9BQU8saUJBQWlCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQjthQUN6QyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ1YsV0FBVyxFQUFFO2FBQ2IsT0FBTyxDQUFDLGFBQWEsRUFBRSxNQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQzFFLENBQUM7Ozs7O0lBRU8sdURBQVc7Ozs7SUFBbkI7UUFDRSxJQUFJLENBQUMsUUFBUSx3QkFDUix1QkFBdUIsQ0FBQyxlQUFlLENBQUMsRUFDeEMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUMxQyxDQUFDO1FBRUYsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztnQkFqRUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLGt3QkFBMkQ7b0JBQzNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7OztnQkFWaUMsaUJBQWlCOzs7b0NBbUJoRCxLQUFLLFNBQUMsc0JBQXNCOzJCQVE1QixLQUFLLFNBQUMsYUFBYTs4QkFFbkIsS0FBSyxTQUFDLGlCQUFpQjs4QkFRdkIsS0FBSyxTQUFDLGlCQUFpQjs7SUFvQzFCLHdDQUFDO0NBQUEsQUFuRUQsSUFtRUM7U0E5RFksaUNBQWlDOzs7Ozs7SUFFNUMsK0RBQW1DOzs7OztJQUNuQyx5REFBNkI7Ozs7O0lBQzdCLHlEQUE4Qjs7SUFFOUIscURBQWM7O0lBVWQscURBQXVDOzs7OztJQXNCM0IsMkRBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgYnJvd3Nlckxhbmd1YWdlLCBmb3JtYXRCeXRlcywgcG9Mb2NhbGVEZWZhdWx0IH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IHBvVXBsb2FkTGl0ZXJhbHNEZWZhdWx0IH0gZnJvbSAnLi4vcG8tdXBsb2FkLWJhc2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVXBsb2FkRmlsZVJlc3RyaWN0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcHJpdmF0ZSBfYWxsb3dlZEV4dGVuc2lvbnM6IHN0cmluZztcbiAgcHJpdmF0ZSBfbWF4RmlsZVNpemU6IHN0cmluZztcbiAgcHJpdmF0ZSAgX21pbkZpbGVTaXplOiBzdHJpbmc7XG5cbiAgbGl0ZXJhbHM6IGFueTtcblxuICBASW5wdXQoJ3AtYWxsb3dlZC1leHRlbnNpb25zJykgc2V0IGFsbG93ZWRFeHRlbnNpb25zKHZhbHVlKSB7XG4gICAgdGhpcy5fYWxsb3dlZEV4dGVuc2lvbnMgPSB0aGlzLmZvcm1hdEFsbG93ZWRFeHRlbnNpb25zKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IGFsbG93ZWRFeHRlbnNpb25zKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2FsbG93ZWRFeHRlbnNpb25zO1xuICB9XG5cbiAgQElucHV0KCdwLW1heC1maWxlcycpIG1heEZpbGVzOiBudW1iZXI7XG5cbiAgQElucHV0KCdwLW1heC1maWxlLXNpemUnKSBzZXQgbWF4RmlsZVNpemUodmFsdWUpIHtcbiAgICB0aGlzLl9tYXhGaWxlU2l6ZSA9IGZvcm1hdEJ5dGVzKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IG1heEZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21heEZpbGVTaXplO1xuICB9XG5cbiAgQElucHV0KCdwLW1pbi1maWxlLXNpemUnKSBzZXQgbWluRmlsZVNpemUodmFsdWUpIHtcbiAgICB0aGlzLl9taW5GaWxlU2l6ZSA9IGZvcm1hdEJ5dGVzKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IG1pbkZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21pbkZpbGVTaXplO1xuICB9XG5cbiAgZ2V0IGxhbmd1YWdlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGJyb3dzZXJMYW5ndWFnZSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0TGl0ZXJhbHMoKTtcbiAgfVxuXG4gIHByaXZhdGUgZm9ybWF0QWxsb3dlZEV4dGVuc2lvbnMoYWxsb3dlZEV4dGVuc2lvbnM6IEFycmF5PHN0cmluZz4pOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvbmp1bmN0aW9uID0geyAncHQnOiAnZScsICdlbic6ICdhbmQnLCAnZXMnOiAneScgfTtcblxuICAgIHJldHVybiBhbGxvd2VkRXh0ZW5zaW9ucyA/IGFsbG93ZWRFeHRlbnNpb25zXG4gICAgICAuam9pbignLCAnKVxuICAgICAgLnRvVXBwZXJDYXNlKClcbiAgICAgIC5yZXBsYWNlKC8sKD89W14sXSokKS8sIGAgJHtjb25qdW5jdGlvblt0aGlzLmxhbmd1YWdlXX1gKSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHByaXZhdGUgc2V0TGl0ZXJhbHMoKSB7XG4gICAgdGhpcy5saXRlcmFscyA9IHtcbiAgICAgIC4uLnBvVXBsb2FkTGl0ZXJhbHNEZWZhdWx0W3BvTG9jYWxlRGVmYXVsdF0sXG4gICAgICAuLi5wb1VwbG9hZExpdGVyYWxzRGVmYXVsdFt0aGlzLmxhbmd1YWdlXSxcbiAgICB9O1xuXG4gICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxufVxuIl19