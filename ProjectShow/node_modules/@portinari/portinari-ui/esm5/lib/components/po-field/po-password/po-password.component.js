/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { Component, ElementRef, forwardRef, Input } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import { PoInputGeneric } from '../po-input-generic/po-input-generic';
/**
 * \@docsExtends PoInputBaseComponent
 *
 * \@description
 * O po-password é um input específico para senhas. Já possui tipo, estilo e ícone predefinidos.
 *
 * \@example
 *
 * <example name="po-password-basic" title="Portinari Password Basic">
 *   <file name="sample-po-password-basic/sample-po-password-basic.component.html"> </file>
 *   <file name="sample-po-password-basic/sample-po-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-password-labs" title="Portinari Password Labs">
 *   <file name="sample-po-password-labs/sample-po-password-labs.component.html"> </file>
 *   <file name="sample-po-password-labs/sample-po-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-password-reset" title="Portinari Password - Reset">
 *   <file name="sample-po-password-reset/sample-po-password-reset.component.html"> </file>
 *   <file name="sample-po-password-reset/sample-po-password-reset.component.ts"> </file>
 * </example>
 */
var PoPasswordComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoPasswordComponent, _super);
    function PoPasswordComponent(el) {
        var _this = _super.call(this, el) || this;
        _this._hidePasswordPeek = false;
        _this.type = 'password';
        _this.visiblePassword = false;
        return _this;
    }
    Object.defineProperty(PoPasswordComponent.prototype, "hidePasswordPeek", {
        get: /**
         * @return {?}
         */
        function () {
            return this._hidePasswordPeek;
        },
        /**
         * @optional
         *
         * @description
         *
         * Permite esconder a função de espiar a senha digitada.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Permite esconder a função de espiar a senha digitada.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._hidePasswordPeek = convertToBoolean(value);
            if (value) {
                this.visiblePassword = false;
                this.type = 'password';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} c
     * @return {?}
     */
    PoPasswordComponent.prototype.extraValidation = /**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        return null;
    };
    /**
     * @return {?}
     */
    PoPasswordComponent.prototype.showPassword = /**
     * @return {?}
     */
    function () {
        this.visiblePassword = !this.visiblePassword;
        this.type = this.type === 'password' ? 'text' : 'password';
    };
    PoPasswordComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-password',
                    template: "<po-field-container\n  [p-label]=\"label\"\n  [p-help]=\"help\"\n  [p-optional]=\"!required && optional\">\n\n  <div class=\"po-field-container-content\">\n    <div class=\"po-field-icon-container-left\">\n      <span class=\"po-icon po-field-icon po-icon-lock\"\n        [class.po-field-icon-disabled]=\"disabled\">\n      </span>\n    </div>\n\n    <input #inp\n      class=\"po-input po-input-icon-left\"\n      [attr.name]=\"name\"\n      [autocomplete]=\"autocomplete\"\n      [class.po-input-double-icon-right]=\"clean && inp.value && !hidePasswordPeek\"\n      [class.po-input-icon-right]=\"clean || !hidePasswordPeek\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [type]=\"disabled ? 'password' : type\"\n      (blur)=\"eventOnBlur($event)\"\n      (click)=\"eventOnClick($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"po-field-icon-container-right\">\n      <po-clean\n        class=\"po-icon po-field-icon\"\n        [p-element-ref]=\"inputEl\"\n        (p-change-event)=\"clear($event)\">\n      </po-clean>\n\n      <span *ngIf=\"!hidePasswordPeek && !disabled\"\n        class=\"po-icon po-field-icon\"\n        [ngClass]=\"visiblePassword ? 'po-icon-eye' : 'po-icon-eye-off po-field-icon-disabled'\"\n        (click)=\"showPassword()\">\n      </span>\n    </div>\n  </div>\n\n  <po-field-container-bottom\n    [p-error-pattern]=\"getErrorPattern()\">\n  </po-field-container-bottom>\n\n</po-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoPasswordComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoPasswordComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    PoPasswordComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PoPasswordComponent.propDecorators = {
        hidePasswordPeek: [{ type: Input, args: ['p-hide-password-peek',] }]
    };
    return PoPasswordComponent;
}(PoInputGeneric));
export { PoPasswordComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPasswordComponent.prototype._hidePasswordPeek;
    /** @type {?} */
    PoPasswordComponent.prototype.type;
    /** @type {?} */
    PoPasswordComponent.prototype.visiblePassword;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFzc3dvcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1wYXNzd29yZC9wby1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQW1CLGFBQWEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25GLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHNDQUFzQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QnRFO0lBZXlDLCtDQUFjO0lBNEJyRCw2QkFBWSxFQUFjO1FBQTFCLFlBQ0Usa0JBQU0sRUFBRSxDQUFDLFNBQ1Y7UUE1Qk8sdUJBQWlCLEdBQWEsS0FBSyxDQUFDO1FBRTVDLFVBQUksR0FBRyxVQUFVLENBQUM7UUFDbEIscUJBQWUsR0FBRyxLQUFLLENBQUM7O0lBeUJ4QixDQUFDO0lBZEQsc0JBQW1DLGlEQUFnQjs7OztRQVFuRDtZQUNFLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO1FBQ2hDLENBQUM7UUFuQkQ7Ozs7Ozs7O1dBUUc7Ozs7Ozs7Ozs7OztRQUNILFVBQW9ELEtBQWM7WUFDaEUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2pELElBQUksS0FBSyxFQUFFO2dCQUNULElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO2dCQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQzthQUN4QjtRQUNILENBQUM7OztPQUFBOzs7OztJQVVELDZDQUFlOzs7O0lBQWYsVUFBZ0IsQ0FBa0I7UUFDaEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsMENBQVk7OztJQUFaO1FBQ0UsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7SUFDN0QsQ0FBQzs7Z0JBdERGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsd2pEQUEyQztvQkFDM0MsU0FBUyxFQUFFO3dCQUNYOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLG1CQUFtQixFQUFuQixDQUFtQixFQUFDOzRCQUNsRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsYUFBYTs0QkFDdEIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsbUJBQW1CLEVBQW5CLENBQW1CLEVBQUM7NEJBQ2xELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUFDO2lCQUNIOzs7O2dCQTFDbUIsVUFBVTs7O21DQTJEM0IsS0FBSyxTQUFDLHNCQUFzQjs7SUF5Qi9CLDBCQUFDO0NBQUEsQUF4REQsQ0FleUMsY0FBYyxHQXlDdEQ7U0F6Q1ksbUJBQW1COzs7Ozs7SUFFOUIsZ0RBQTRDOztJQUU1QyxtQ0FBa0I7O0lBQ2xCLDhDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgTkdfVkFMSURBVE9SUywgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcbmltcG9ydCB7IFBvSW5wdXRHZW5lcmljIH0gZnJvbSAnLi4vcG8taW5wdXQtZ2VuZXJpYy9wby1pbnB1dC1nZW5lcmljJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9JbnB1dEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIE8gcG8tcGFzc3dvcmQgw6kgdW0gaW5wdXQgZXNwZWPDrWZpY28gcGFyYSBzZW5oYXMuIErDoSBwb3NzdWkgdGlwbywgZXN0aWxvIGUgw61jb25lIHByZWRlZmluaWRvcy5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYXNzd29yZC1iYXNpY1wiIHRpdGxlPVwiUG9ydGluYXJpIFBhc3N3b3JkIEJhc2ljXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFzc3dvcmQtYmFzaWMvc2FtcGxlLXBvLXBhc3N3b3JkLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYXNzd29yZC1iYXNpYy9zYW1wbGUtcG8tcGFzc3dvcmQtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcGFzc3dvcmQtbGFic1wiIHRpdGxlPVwiUG9ydGluYXJpIFBhc3N3b3JkIExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYXNzd29yZC1sYWJzL3NhbXBsZS1wby1wYXNzd29yZC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYXNzd29yZC1sYWJzL3NhbXBsZS1wby1wYXNzd29yZC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXBhc3N3b3JkLXJlc2V0XCIgdGl0bGU9XCJQb3J0aW5hcmkgUGFzc3dvcmQgLSBSZXNldFwiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhc3N3b3JkLXJlc2V0L3NhbXBsZS1wby1wYXNzd29yZC1yZXNldC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFzc3dvcmQtcmVzZXQvc2FtcGxlLXBvLXBhc3N3b3JkLXJlc2V0LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gIHtcbiAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb1Bhc3N3b3JkQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUG9QYXNzd29yZENvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWUsXG4gIH1dXG59KVxuZXhwb3J0IGNsYXNzIFBvUGFzc3dvcmRDb21wb25lbnQgZXh0ZW5kcyBQb0lucHV0R2VuZXJpYyB7XG5cbiAgcHJpdmF0ZSBfaGlkZVBhc3N3b3JkUGVlaz86IGJvb2xlYW4gPSBmYWxzZTtcblxuICB0eXBlID0gJ3Bhc3N3b3JkJztcbiAgdmlzaWJsZVBhc3N3b3JkID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogUGVybWl0ZSBlc2NvbmRlciBhIGZ1bsOnw6NvIGRlIGVzcGlhciBhIHNlbmhhIGRpZ2l0YWRhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtaGlkZS1wYXNzd29yZC1wZWVrJykgc2V0IGhpZGVQYXNzd29yZFBlZWsodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlUGFzc3dvcmRQZWVrID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnZpc2libGVQYXNzd29yZCA9IGZhbHNlO1xuICAgICAgdGhpcy50eXBlID0gJ3Bhc3N3b3JkJztcbiAgICB9XG4gIH1cblxuICBnZXQgaGlkZVBhc3N3b3JkUGVlaygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5faGlkZVBhc3N3b3JkUGVlaztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgc3VwZXIoZWwpO1xuICB9XG5cbiAgZXh0cmFWYWxpZGF0aW9uKGM6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYW55OyB9IHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHNob3dQYXNzd29yZCgpIHtcbiAgICB0aGlzLnZpc2libGVQYXNzd29yZCA9ICF0aGlzLnZpc2libGVQYXNzd29yZDtcbiAgICB0aGlzLnR5cGUgPSB0aGlzLnR5cGUgPT09ICdwYXNzd29yZCcgPyAndGV4dCcgOiAncGFzc3dvcmQnO1xuICB9XG5cbn1cbiJdfQ==