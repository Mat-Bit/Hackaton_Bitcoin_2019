/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, forwardRef, Renderer2, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { isMobile } from './../../../utils/util';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { PoMultiselectBaseComponent } from './po-multiselect-base.component';
/** @type {?} */
var poMultiselectContainerOffset = 8;
/** @type {?} */
var poMultiselectContainerPositionDefault = 'bottom';
/**
 * \@docsExtends PoMultiselectBaseComponent
 *
 * \@example
 *
 * <example name="po-multiselect-basic" title="Portinari Multiselect Basic">
 *   <file name="sample-po-multiselect-basic/sample-po-multiselect-basic.component.html"> </file>
 *   <file name="sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-multiselect-labs" title="Portinari Multiselect Labs">
 *   <file name="sample-po-multiselect-labs/sample-po-multiselect-labs.component.html"> </file>
 *   <file name="sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-multiselect-vacation" title="Portinari Multiselect - Vacation">
 *   <file name="sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html"> </file>
 *   <file name="sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts"> </file>
 * </example>
 *
 * <example name="po-multiselect-vacation-reactive-form" title="Portinari Multiselect - Vacation Reactive Form">
 *   <file name="sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html"> </file>
 *   <file name="sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts"> </file>
 * </example>
 */
var PoMultiselectComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoMultiselectComponent, _super);
    function PoMultiselectComponent(renderer, changeDetector, controlPosition, el) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.changeDetector = changeDetector;
        _this.controlPosition = controlPosition;
        _this.el = el;
        _this.disclaimerOffset = 0;
        _this.dropdownIcon = 'po-icon-arrow-down';
        _this.dropdownOpen = false;
        _this.initialized = false;
        _this.visibleElement = false;
        _this.isCalculateVisibleItems = true;
        _this.onScroll = (/**
         * @return {?}
         */
        function () {
            _this.adjustContainerPosition();
        });
        return _this;
    }
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.autofocus) {
            this.inputElement.nativeElement.focus();
        }
        this.initialized = true;
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var inputWidth = this.inputElement.nativeElement.offsetWidth;
        // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {
            this.debounceResize();
            this.visibleElement = true;
            return;
        }
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeListeners();
    };
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoMultiselectComponent } from '@portinari/portinari-ui';
     *
     * ...
     *
     * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;
     *
     * focusMultiselect() {
     *   this.multiselect.focus();
     * }
     * ```
     */
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoMultiselectComponent } from '\@portinari/portinari-ui';
     *
     * ...
     *
     * \@ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;
     *
     * focusMultiselect() {
     *   this.multiselect.focus();
     * }
     * ```
     * @return {?}
     */
    PoMultiselectComponent.prototype.focus = /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoMultiselectComponent } from '\@portinari/portinari-ui';
     *
     * ...
     *
     * \@ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;
     *
     * focusMultiselect() {
     *   this.multiselect.focus();
     * }
     * ```
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.inputElement.nativeElement.focus();
        }
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.getInputWidth = /**
     * @return {?}
     */
    function () {
        return this.el.nativeElement.querySelector('.po-input').offsetWidth - 40;
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.getDisclaimersWidth = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var disclaimers = this.el.nativeElement.querySelectorAll('po-disclaimer');
        return Array.from(disclaimers).map((/**
         * @param {?} disclaimer
         * @return {?}
         */
        function (disclaimer) { return disclaimer['offsetWidth']; }));
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.calculateVisibleItems = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var disclaimersWidth = this.getDisclaimersWidth();
        /** @type {?} */
        var inputWidth = this.getInputWidth();
        /** @type {?} */
        var extraDisclaimerSize = 38;
        /** @type {?} */
        var disclaimersVisible = disclaimersWidth[0];
        this.visibleDisclaimers = [];
        if (inputWidth > 0) {
            /** @type {?} */
            var sum = 0;
            /** @type {?} */
            var i = 0;
            for (i = 0; i < this.selectedOptions.length; i++) {
                sum += disclaimersWidth[i];
                this.visibleDisclaimers.push(this.selectedOptions[i]);
                if (sum > inputWidth) {
                    sum -= disclaimersWidth[i];
                    this.isCalculateVisibleItems = false;
                    break;
                }
            }
            if (disclaimersVisible || !this.selectedOptions.length) {
                if (i === this.selectedOptions.length) {
                    this.isCalculateVisibleItems = false;
                    return;
                }
                if (sum + extraDisclaimerSize > inputWidth) {
                    this.visibleDisclaimers.splice(-2, 2);
                    /** @type {?} */
                    var label = '+' + (this.selectedOptions.length + 1 - i).toString();
                    this.visibleDisclaimers.push({ value: '', label: label });
                }
                else {
                    this.visibleDisclaimers.splice(-1, 1);
                    /** @type {?} */
                    var label = '+' + (this.selectedOptions.length - i).toString();
                    this.visibleDisclaimers.push({ value: '', label: label });
                }
            }
        }
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.updateVisibleItems = /**
     * @return {?}
     */
    function () {
        this.visibleDisclaimers = [].concat(this.selectedOptions);
        this.debounceResize();
        // quando estiver dentro de modal
        if (!this.inputElement.nativeElement.offsetWidth) {
            this.isCalculateVisibleItems = true;
        }
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.debounceResize = /**
     * @return {?}
     */
    function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        function () {
            _this.calculateVisibleItems();
        }), 200);
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    PoMultiselectComponent.prototype.onKeyDown = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        if (event.keyCode === PoKeyCodeEnum.arrowUp || event.keyCode === PoKeyCodeEnum.arrowDown) {
            event.preventDefault();
            this.controlDropdownVisibility(true);
            return;
        }
        if (event.keyCode === PoKeyCodeEnum.tab) {
            this.controlDropdownVisibility(false);
            return;
        }
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.toggleDropdownVisibility = /**
     * @return {?}
     */
    function () {
        if (this.disabled) {
            return;
        }
        this.controlDropdownVisibility(!this.dropdownOpen);
    };
    /**
     * @param {?} toOpen
     * @return {?}
     */
    PoMultiselectComponent.prototype.openDropdown = /**
     * @param {?} toOpen
     * @return {?}
     */
    function (toOpen) {
        if (toOpen && !this.disabled) {
            this.controlDropdownVisibility(true);
        }
    };
    /**
     * @param {?} toOpen
     * @return {?}
     */
    PoMultiselectComponent.prototype.controlDropdownVisibility = /**
     * @param {?} toOpen
     * @return {?}
     */
    function (toOpen) {
        toOpen ? this.open() : this.close();
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.scrollToSelectedOptions = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.selectedOptions && this.selectedOptions.length) {
            /** @type {?} */
            var index = this.options.findIndex((/**
             * @param {?} option
             * @return {?}
             */
            function (option) { return option.value === _this.selectedOptions[0].value; }));
            this.dropdown.scrollTo(index);
        }
    };
    /**
     * @param {?} options
     * @return {?}
     */
    PoMultiselectComponent.prototype.setVisibleOptionsDropdown = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.visibleOptionsDropdown = options;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoMultiselectComponent.prototype.changeSearch = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        (event && event.value) ? this.searchByLabel(event.value, this.options, this.filterMode) : this.setVisibleOptionsDropdown(this.options);
        // timeout necessário para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.adjustContainerPosition(); }));
    };
    /**
     * @return {?}
     */
    PoMultiselectComponent.prototype.getPlaceholder = /**
     * @return {?}
     */
    function () {
        return (this.placeholder && !this.visibleDisclaimers.length) ? this.placeholder : '';
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PoMultiselectComponent.prototype.closeDisclaimer = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var index = this.selectedOptions.findIndex((/**
         * @param {?} option
         * @return {?}
         */
        function (option) { return option.value === value; }));
        this.selectedOptions.splice(index, 1);
        this.updateVisibleItems();
        this.callOnChange(this.selectedOptions);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PoMultiselectComponent.prototype.wasClickedOnToggle = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.inputElement.nativeElement.contains(event.target) &&
            !this.iconElement.nativeElement.contains(event.target) &&
            !this.dropdownElement.nativeElement.contains(event.target) &&
            !this.disclaimerContainerElement.nativeElement.contains(event.target) &&
            this.dropdownOpen) {
            this.controlDropdownVisibility(false);
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoMultiselectComponent.prototype.adjustContainerPosition = /**
     * @private
     * @return {?}
     */
    function () {
        this.controlPosition.adjustPosition(poMultiselectContainerPositionDefault);
    };
    /**
     * @private
     * @return {?}
     */
    PoMultiselectComponent.prototype.close = /**
     * @private
     * @return {?}
     */
    function () {
        this.dropdownIcon = 'po-icon-arrow-down';
        this.dropdownOpen = false;
        this.dropdown.controlVisibility(false);
        this.setVisibleOptionsDropdown(this.options);
        this.removeListeners();
    };
    /**
     * @private
     * @return {?}
     */
    PoMultiselectComponent.prototype.initializeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.clickOutListener = this.renderer.listen('document', 'click', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.wasClickedOnToggle(event);
        }));
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        function () {
            _this.updateVisibleItems();
            isMobile() ? _this.adjustContainerPosition() : _this.close();
        }));
        window.addEventListener('scroll', this.onScroll, true);
    };
    /**
     * @private
     * @return {?}
     */
    PoMultiselectComponent.prototype.open = /**
     * @private
     * @return {?}
     */
    function () {
        this.dropdownIcon = 'po-icon-arrow-up';
        this.dropdownOpen = true;
        this.dropdown.controlVisibility(true);
        this.setVisibleOptionsDropdown(this.options);
        this.initializeListeners();
        this.scrollToSelectedOptions();
        this.changeDetector.detectChanges();
        this.setPositionDropdown();
    };
    /**
     * @private
     * @return {?}
     */
    PoMultiselectComponent.prototype.removeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.clickOutListener) {
            this.clickOutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    };
    /**
     * @private
     * @return {?}
     */
    PoMultiselectComponent.prototype.setPositionDropdown = /**
     * @private
     * @return {?}
     */
    function () {
        this.controlPosition.setElements(this.dropdown.container.nativeElement, poMultiselectContainerOffset, this.inputElement, ['top', 'bottom'], true);
        this.adjustContainerPosition();
    };
    PoMultiselectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-multiselect',
                    template: "<po-field-container\n  [p-label]=\"label\"\n  [p-help]=\"help\"\n  [p-optional]=\"!required && optional\">\n\n  <div class=\"po-field-container-content\"\n    [class.po-multiselect-show]=\"dropdownOpen\">\n\n    <input #inputElement\n      class=\"po-input po-input-icon-right po-clickable\"\n      readonly\n      type=\"text\"\n      [value]=\"getPlaceholder()\"\n      [disabled]=\"disabled\"\n      (keydown)=\"onKeyDown($event)\"\n      (click)=\"toggleDropdownVisibility()\">\n\n    <div class=\"po-field-icon-container-right\">\n      <span #iconElement\n        class=\"po-icon po-field-icon {{ dropdownIcon }}\"\n        [ngClass]=\"disabled ? 'po-field-icon-disabled' : ''\"\n        (click)=\"toggleDropdownVisibility()\">\n      </span>\n    </div>\n\n    <div #disclaimerContainer\n      class=\"po-multiselect-field\"\n      [class.po-multiselect-field-disabled]=\"disabled\">\n\n      <po-disclaimer *ngFor=\"let disclaimer of visibleDisclaimers\"\n        [p-label]=\"disclaimer.label\"\n        [p-value]=\"disclaimer.value\"\n        [p-hide-close]=\"disclaimer.value === '' || disabled\"\n        [class.po-clickable]=\"disclaimer.value === '' && !disabled\"\n        (click)=\"openDropdown(disclaimer.value === '')\"\n        (p-close-action)=\"closeDisclaimer(disclaimer.value)\">\n      </po-disclaimer>\n    </div>\n  </div>\n\n  <po-multiselect-dropdown #dropdownElement\n    [p-hide-search]=\"hideSearch\"\n    [p-literals]=\"literals\"\n    [p-options]=\"visibleOptionsDropdown\"\n    [p-selected-values]=\"getValuesFromOptions(selectedOptions)\"\n    [p-placeholder-search]=\"placeholderSearch\"\n    (p-change)=\"changeItems($event)\"\n    (p-change-search)=\"changeSearch($event)\"\n    (p-close-dropdown)=\"controlDropdownVisibility(false)\">\n  </po-multiselect-dropdown>\n\n  <po-field-container-bottom></po-field-container-bottom>\n\n</po-field-container>\n",
                    providers: [
                        PoControlPositionService,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoMultiselectComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoMultiselectComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    PoMultiselectComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ChangeDetectorRef },
        { type: PoControlPositionService },
        { type: ElementRef }
    ]; };
    PoMultiselectComponent.propDecorators = {
        dropdownElement: [{ type: ViewChild, args: ['dropdownElement', { read: ElementRef, static: true },] }],
        dropdown: [{ type: ViewChild, args: ['dropdownElement', { static: true },] }],
        disclaimerContainerElement: [{ type: ViewChild, args: ['disclaimerContainer', { read: ElementRef, static: true },] }],
        iconElement: [{ type: ViewChild, args: ['iconElement', { read: ElementRef, static: true },] }],
        inputElement: [{ type: ViewChild, args: ['inputElement', { read: ElementRef, static: true },] }]
    };
    return PoMultiselectComponent;
}(PoMultiselectBaseComponent));
export { PoMultiselectComponent };
if (false) {
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdownElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdown;
    /** @type {?} */
    PoMultiselectComponent.prototype.disclaimerContainerElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.iconElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.inputElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.disclaimerOffset;
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdownIcon;
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdownOpen;
    /** @type {?} */
    PoMultiselectComponent.prototype.initialized;
    /** @type {?} */
    PoMultiselectComponent.prototype.positionDisclaimerExtra;
    /** @type {?} */
    PoMultiselectComponent.prototype.timeoutResize;
    /** @type {?} */
    PoMultiselectComponent.prototype.visibleElement;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.isCalculateVisibleItems;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.onScroll;
    /** @type {?} */
    PoMultiselectComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.controlPosition;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,