/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { convertImageToBase64 } from '../../../../utils/util';
import { PoLanguageService } from './../../../../services/po-language/po-language.service';
import { PoModalComponent } from '../../../po-modal';
import { poRichTextLiteralsDefault } from '../po-rich-text-literals';
import { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';
import { PoUploadComponent } from '../../po-upload/po-upload.component';
/** @type {?} */
var uploadRestrictions = ['.apng', '.bmp', '.gif', '.ico', '.jpeg', '.jpg', '.png', '.svg'];
var PoRichTextModalComponent = /** @class */ (function () {
    function PoRichTextModalComponent(languageService) {
        var _this = this;
        this.languageService = languageService;
        this.selection = document.getSelection();
        this.uploadRestrictions = {
            allowedExtensions: uploadRestrictions
        };
        this.literals = tslib_1.__assign({}, poRichTextLiteralsDefault[this.languageService.getShortLanguage()]);
        this.modalCancelAction = {
            label: this.literals.cancel,
            action: (/**
             * @return {?}
             */
            function () {
                _this.modal.close();
                _this.cleanUpFields();
            })
        };
        this.modalConfirmAction = {
            label: this.literals.insert,
            disabled: false,
            action: (/**
             * @return {?}
             */
            function () { return _this.insertElementRef(); })
        };
        this.modalLinkConfirmAction = {
            label: this.literals.insertLink,
            disabled: true,
            action: (/**
             * @return {?}
             */
            function () { return _this.toInsertLink(_this.urlLink, _this.urlLinkText); })
        };
        this.command = new EventEmitter();
    }
    Object.defineProperty(PoRichTextModalComponent.prototype, "modalTitle", {
        get: /**
         * @return {?}
         */
        function () {
            return this.modalType === 'image' ? this.literals.insertImage : this.literals.insertLink;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoRichTextModalComponent.prototype, "isUploadValid", {
        get: /**
         * @return {?}
         */
        function () {
            return !!(this.uploadModel && this.uploadModel.length);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoRichTextModalComponent.prototype, "isUrlValid", {
        get: /**
         * @return {?}
         */
        function () {
            return !!this.urlImage && this.modalImageForm && this.modalImageForm.valid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoRichTextModalComponent.prototype, "modalPrimaryAction", {
        get: /**
         * @return {?}
         */
        function () {
            return this.modalType === 'image' ? this.modalConfirmAction : this.modalLinkConfirmAction;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PoRichTextModalComponent.prototype.convertToBase64 = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var uploadImage;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.isUploadValid) return [3 /*break*/, 2];
                        uploadImage = this.uploadModel[0].rawFile;
                        return [4 /*yield*/, convertImageToBase64(uploadImage)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PoRichTextModalComponent.prototype.emitCommand = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var command;
        if (value && this.modalType === PoRichTextModalType.Image) {
            command = 'insertImage';
            this.command.emit(({ command: command, value: value }));
        }
    };
    /**
     * @return {?}
     */
    PoRichTextModalComponent.prototype.formModelValidate = /**
     * @return {?}
     */
    function () {
        return this.modalLinkConfirmAction.disabled = this.modalLinkForm && this.modalLinkForm.invalid;
    };
    /**
     * @return {?}
     */
    PoRichTextModalComponent.prototype.insertElementRef = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var uploadImage;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.modalType === PoRichTextModalType.Image && !this.urlImage)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.convertToBase64()];
                    case 1:
                        uploadImage = _a.sent();
                        _a.label = 2;
                    case 2:
                        this.retrieveCursorPosition();
                        this.modal.close();
                        if (this.isUrlValid || this.isUploadValid) {
                            this.emitCommand(this.urlImage || uploadImage);
                        }
                        this.cleanUpFields();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} type
     * @return {?}
     */
    PoRichTextModalComponent.prototype.openModal = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        this.modalType = type;
        if (this.modalType === PoRichTextModalType.Image) {
            this.saveCursorPosition();
        }
        else {
            this.saveSelectionTextRange();
            this.formReset(this.modalLinkForm.control);
            this.formModelValidate();
        }
        this.modal.open();
    };
    /**
     * @private
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    PoRichTextModalComponent.prototype.checkIfIsEmpty = /**
     * @private
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    function (urlLink, urlLinkText) {
        return urlLinkText === undefined || urlLinkText.trim() === '' ? urlLink : urlLinkText;
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextModalComponent.prototype.cleanUpFields = /**
     * @private
     * @return {?}
     */
    function () {
        this.urlImage = undefined;
        this.urlLink = undefined;
        this.urlLinkText = undefined;
        this.uploadModel = undefined;
    };
    /**
     * @private
     * @param {?} control
     * @return {?}
     */
    PoRichTextModalComponent.prototype.formReset = /**
     * @private
     * @param {?} control
     * @return {?}
     */
    function (control) {
        control.markAsPristine();
        control.markAsUntouched();
        control.updateValueAndValidity();
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextModalComponent.prototype.restoreSelection = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.savedSelection) {
            if (this.selection) {
                this.selection.removeAllRanges();
                this.selection.addRange(this.savedSelection);
            }
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextModalComponent.prototype.retrieveCursorPosition = /**
     * @private
     * @return {?}
     */
    function () {
        this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextModalComponent.prototype.saveCursorPosition = /**
     * @private
     * @return {?}
     */
    function () {
        this.savedCursorPosition = [this.selection.focusNode, this.selection.focusOffset];
    };
    /**
     * @private
     * @return {?}
     */
    PoRichTextModalComponent.prototype.saveSelectionTextRange = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.selection.anchorNode !== null) {
            this.savedSelection = this.selection.getRangeAt(0);
            this.urlLinkText = this.selection.toString();
        }
        else {
            return null;
        }
    };
    /**
     * @private
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    PoRichTextModalComponent.prototype.toInsertLink = /**
     * @private
     * @param {?} urlLink
     * @param {?} urlLinkText
     * @return {?}
     */
    function (urlLink, urlLinkText) {
        this.modal.close();
        this.restoreSelection();
        /** @type {?} */
        var urlLinkTextValue = this.checkIfIsEmpty(urlLink, urlLinkText);
        /** @type {?} */
        var command = 'InsertHTML';
        /** @type {?} */
        var value = { urlLink: urlLink, urlLinkText: urlLinkTextValue };
        this.command.emit({ command: command, value: value });
        this.cleanUpFields();
    };
    PoRichTextModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-rich-text-modal',
                    template: "<po-modal #modal\r\n  p-hide-close\r\n  [p-primary-action]=\"modalPrimaryAction\"\r\n  [p-secondary-action]=\"modalCancelAction\"\r\n  [p-title]=\"modalTitle\">\r\n\r\n  <ng-container *ngTemplateOutlet=\"modalType === 'image' ? modalImage : modalLink\"></ng-container>\r\n</po-modal>\r\n\r\n<ng-template #modalImage>\r\n  <form #modalImageForm=\"ngForm\">\r\n    <div class=\"po-row\">\r\n      <!-- po-upload desabilita o drag drop caso n\u00E3o tenha valor atribuido para a propriedade p-url -->\r\n      <po-upload #upload\r\n        class=\"po-md-12\"\r\n        name=\"upload\"\r\n        [(ngModel)]=\"uploadModel\"\r\n        p-drag-drop-height=\"160\"\r\n        p-hide-restrictions-info\r\n        p-hide-send-button\r\n        p-url=\"x\"\r\n        [p-drag-drop]=\"!modal.isHidden\"\r\n        [p-disabled]=\"isUrlValid\"\r\n        [p-restrictions]=\"uploadRestrictions\">\r\n      </po-upload>\r\n    </div>\r\n\r\n    <div class=\"po-row\">\r\n      <po-url\r\n        class=\"po-md-12 po-mt-3\"\r\n        name=\"url\"\r\n        [(ngModel)]=\"urlImage\"\r\n        [p-label]=\"literals.urlImage\"\r\n        [p-disabled]=\"isUploadValid\">\r\n      </po-url>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #modalLink>\r\n  <form #modalLinkForm=\"ngForm\">\r\n    <div class=\"po-row\">\r\n      <po-input class=\"po-md-12 po-mb-2\"\r\n        name=\"urlLinkText\"\r\n        [(ngModel)]=\"urlLinkText\"\r\n        p-optional\r\n        [p-label]=\"literals.linkTextLabel\"\r\n        [p-placeholder]=\"literals.linkTextLabel\">\r\n      </po-input>\r\n\r\n      <po-url class=\"po-md-12\"\r\n        name=\"urlLink\"\r\n        [(ngModel)]=\"urlLink\"\r\n        p-label=\"Link\"\r\n        p-required\r\n        [p-help]=\"literals.linkUrlTextHelper\"\r\n        [p-placeholder]=\"literals.linkUrlTextPlaceholder\"\r\n        (p-change-model)=\"formModelValidate()\">\r\n      </po-url>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n"
                }] }
    ];
    /** @nocollapse */
    PoRichTextModalComponent.ctorParameters = function () { return [
        { type: PoLanguageService }
    ]; };
    PoRichTextModalComponent.propDecorators = {
        modal: [{ type: ViewChild, args: ['modal', { static: true },] }],
        modalImageForm: [{ type: ViewChild, args: ['modalImageForm', { static: false },] }],
        upload: [{ type: ViewChild, args: ['upload', { static: true },] }],
        modalImage: [{ type: ViewChild, args: ['modalImage', { static: true },] }],
        modalLink: [{ type: ViewChild, args: ['modalLink', { static: true },] }],
        modalLinkForm: [{ type: ViewChild, args: ['modalLinkForm', { static: false },] }],
        command: [{ type: Output, args: ['p-command',] }]
    };
    return PoRichTextModalComponent;
}());
export { PoRichTextModalComponent };
if (false) {
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalType;
    /** @type {?} */
    PoRichTextModalComponent.prototype.savedCursorPosition;
    /** @type {?} */
    PoRichTextModalComponent.prototype.selection;
    /** @type {?} */
    PoRichTextModalComponent.prototype.uploadModel;
    /** @type {?} */
    PoRichTextModalComponent.prototype.uploadRestrictions;
    /** @type {?} */
    PoRichTextModalComponent.prototype.urlImage;
    /** @type {?} */
    PoRichTextModalComponent.prototype.urlLink;
    /** @type {?} */
    PoRichTextModalComponent.prototype.urlLinkText;
    /**
     * @type {?}
     * @private
     */
    PoRichTextModalComponent.prototype.savedSelection;
    /** @type {?} */
    PoRichTextModalComponent.prototype.literals;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalCancelAction;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalConfirmAction;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalLinkConfirmAction;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modal;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalImageForm;
    /** @type {?} */
    PoRichTextModalComponent.prototype.upload;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalImage;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalLink;
    /** @type {?} */
    PoRichTextModalComponent.prototype.modalLinkForm;
    /** @type {?} */
    PoRichTextModalComponent.prototype.command;
    /**
     * @type {?}
     * @private
     */
    PoRichTextModalComponent.prototype.languageService;
}
//# sourceMappingURL=data:application/json;base64,