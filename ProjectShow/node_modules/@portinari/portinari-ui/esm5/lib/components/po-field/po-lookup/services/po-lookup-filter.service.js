/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { isTypeof } from '../../../../utils/util';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Serviço padrão utilizado para filtrar os dados do componente po-lookup.
 */
var PoLookupFilterService = /** @class */ (function () {
    function PoLookupFilterService(httpClient) {
        this.httpClient = httpClient;
    }
    /**
     * @param {?} filteredItemsParams
     * @return {?}
     */
    PoLookupFilterService.prototype.getFilteredItems = /**
     * @param {?} filteredItemsParams
     * @return {?}
     */
    function (filteredItemsParams) {
        var filterParams = filteredItemsParams.filterParams, restFilteredItemsParams = tslib_1.__rest(filteredItemsParams, ["filterParams"]);
        /** @type {?} */
        var validatedFilterParams = this.validateParams(filterParams);
        /** @type {?} */
        var params = tslib_1.__assign({}, restFilteredItemsParams, validatedFilterParams);
        return this.httpClient.get(this.url, { params: params });
    };
    /**
     * @param {?} value
     * @param {?=} filterParams
     * @return {?}
     */
    PoLookupFilterService.prototype.getObjectByValue = /**
     * @param {?} value
     * @param {?=} filterParams
     * @return {?}
     */
    function (value, filterParams) {
        /** @type {?} */
        var validatedFilterParams = this.validateParams(filterParams);
        return this.httpClient.get(this.url + "/" + value, { params: validatedFilterParams });
    };
    /**
     * @param {?} url
     * @return {?}
     */
    PoLookupFilterService.prototype.setUrl = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        this.url = url;
    };
    /**
     * @private
     * @param {?} params
     * @return {?}
     */
    PoLookupFilterService.prototype.validateParams = /**
     * @private
     * @param {?} params
     * @return {?}
     */
    function (params) {
        return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;
    };
    PoLookupFilterService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PoLookupFilterService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return PoLookupFilterService;
}());
export { PoLookupFilterService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoLookupFilterService.prototype.url;
    /**
     * @type {?}
     * @private
     */
    PoLookupFilterService.prototype.httpClient;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9va3VwLWZpbHRlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1sb29rdXAvc2VydmljZXMvcG8tbG9va3VwLWZpbHRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7OztBQVlsRDtJQUtFLCtCQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQUcsQ0FBQzs7Ozs7SUFFOUMsZ0RBQWdCOzs7O0lBQWhCLFVBQWlCLG1CQUFnRDtRQUN2RCxJQUFBLCtDQUFZLEVBQUUsK0VBQTBCOztZQUUxQyxxQkFBcUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQzs7WUFFekQsTUFBTSx3QkFBUSx1QkFBdUIsRUFBSyxxQkFBcUIsQ0FBRTtRQUV2RSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7Ozs7O0lBRUQsZ0RBQWdCOzs7OztJQUFoQixVQUFpQixLQUFhLEVBQUUsWUFBa0I7O1lBQzFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO1FBRS9ELE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUksSUFBSSxDQUFDLEdBQUcsU0FBSSxLQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUscUJBQXFCLEVBQUUsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7Ozs7O0lBRUQsc0NBQU07Ozs7SUFBTixVQUFPLEdBQVc7UUFDaEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDakIsQ0FBQzs7Ozs7O0lBRU8sOENBQWM7Ozs7O0lBQXRCLFVBQXVCLE1BQVc7UUFDaEMsT0FBTyxRQUFRLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDbkYsQ0FBQzs7Z0JBN0JGLFVBQVU7Ozs7Z0JBakJGLFVBQVU7O0lBZ0RuQiw0QkFBQztDQUFBLEFBL0JELElBK0JDO1NBOUJZLHFCQUFxQjs7Ozs7O0lBRWhDLG9DQUFvQjs7Ozs7SUFFUiwyQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IGlzVHlwZW9mIH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvTG9va3VwRmlsdGVyIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby1sb29rdXAtZmlsdGVyLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb0xvb2t1cEZpbHRlcmVkSXRlbXNQYXJhbXMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLWxvb2t1cC1maWx0ZXJlZC1pdGVtcy1wYXJhbXMuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBTZXJ2acOnbyBwYWRyw6NvIHV0aWxpemFkbyBwYXJhIGZpbHRyYXIgb3MgZGFkb3MgZG8gY29tcG9uZW50ZSBwby1sb29rdXAuXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb0xvb2t1cEZpbHRlclNlcnZpY2UgaW1wbGVtZW50cyBQb0xvb2t1cEZpbHRlciB7XG5cbiAgcHJpdmF0ZSB1cmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHBDbGllbnQ6IEh0dHBDbGllbnQpIHt9XG5cbiAgZ2V0RmlsdGVyZWRJdGVtcyhmaWx0ZXJlZEl0ZW1zUGFyYW1zOiBQb0xvb2t1cEZpbHRlcmVkSXRlbXNQYXJhbXMpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIGNvbnN0IHsgZmlsdGVyUGFyYW1zLCAuLi5yZXN0RmlsdGVyZWRJdGVtc1BhcmFtcyB9ID0gZmlsdGVyZWRJdGVtc1BhcmFtcztcblxuICAgIGNvbnN0IHZhbGlkYXRlZEZpbHRlclBhcmFtcyA9IHRoaXMudmFsaWRhdGVQYXJhbXMoZmlsdGVyUGFyYW1zKTtcblxuICAgIGNvbnN0IHBhcmFtcyA9IHsgLi4ucmVzdEZpbHRlcmVkSXRlbXNQYXJhbXMsIC4uLnZhbGlkYXRlZEZpbHRlclBhcmFtcyB9O1xuXG4gICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudC5nZXQodGhpcy51cmwsIHsgcGFyYW1zIH0pO1xuICB9XG5cbiAgZ2V0T2JqZWN0QnlWYWx1ZSh2YWx1ZTogc3RyaW5nLCBmaWx0ZXJQYXJhbXM/OiBhbnkpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIGNvbnN0IHZhbGlkYXRlZEZpbHRlclBhcmFtcyA9IHRoaXMudmFsaWRhdGVQYXJhbXMoZmlsdGVyUGFyYW1zKTtcblxuICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnQuZ2V0KGAke3RoaXMudXJsfS8ke3ZhbHVlfWAsIHsgcGFyYW1zOiB2YWxpZGF0ZWRGaWx0ZXJQYXJhbXMgfSk7XG4gIH1cblxuICBzZXRVcmwodXJsOiBzdHJpbmcpIHtcbiAgICB0aGlzLnVybCA9IHVybDtcbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVQYXJhbXMocGFyYW1zOiBhbnkpIHtcbiAgICByZXR1cm4gaXNUeXBlb2YocGFyYW1zLCAnb2JqZWN0JykgJiYgIUFycmF5LmlzQXJyYXkocGFyYW1zKSA/IHBhcmFtcyA6IHVuZGVmaW5lZDtcbiAgfVxuXG59XG4iXX0=