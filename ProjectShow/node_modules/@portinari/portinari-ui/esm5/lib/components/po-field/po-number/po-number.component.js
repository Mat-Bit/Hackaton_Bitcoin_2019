/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { Component, ElementRef, forwardRef, Input } from '@angular/core';
import { minFailed, maxFailed } from '../validators';
import { PoNumberBaseComponent } from './po-number-base.component';
/**
 * \@docsExtends PoInputBaseComponent
 *
 * \@description
 *
 * po-number é um input específico para receber apenas números.
 * É possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,
 * respectivamente.
 *
 * \@example
 *
 * <example name="po-number-basic" title="Portinari Number Basic">
 *  <file name="sample-po-number-basic/sample-po-number-basic.component.html"> </file>
 *  <file name="sample-po-number-basic/sample-po-number-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-number-labs" title="Portinari Number Labs">
 *  <file name="sample-po-number-labs/sample-po-number-labs.component.html"> </file>
 *  <file name="sample-po-number-labs/sample-po-number-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-number-calculate" title="Portinari Number - Calculate">
 *  <file name="sample-po-number-calculate/sample-po-number-calculate.component.html"> </file>
 *  <file name="sample-po-number-calculate/sample-po-number-calculate.component.ts"> </file>
 * </example>
 */
var PoNumberComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoNumberComponent, _super);
    function PoNumberComponent(el) {
        var _this = _super.call(this, el) || this;
        /**
         * \@optional
         *
         * \@description
         *
         * Intervalo.
         *
         * \@default 1
         */
        _this.step = '1';
        return _this;
    }
    Object.defineProperty(PoNumberComponent.prototype, "setMin", {
        set: /**
         * @param {?} min
         * @return {?}
         */
        function (min) {
            /** @type {?} */
            var parsedInt = parseInt(min, 10);
            this.min = !isNaN(parsedInt) ? parsedInt : undefined;
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoNumberComponent.prototype, "setMax", {
        set: /**
         * @param {?} max
         * @return {?}
         */
        function (max) {
            /** @type {?} */
            var parsedInt = parseInt(max, 10);
            this.max = !isNaN(parsedInt) ? parsedInt : undefined;
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} abstractControl
     * @return {?}
     */
    PoNumberComponent.prototype.extraValidation = /**
     * @param {?} abstractControl
     * @return {?}
     */
    function (abstractControl) {
        if (minFailed(this.min, abstractControl.value)) {
            return { min: {
                    valid: false,
                } };
        }
        if (maxFailed(this.max, abstractControl.value)) {
            return { max: {
                    valid: false,
                } };
        }
        return null;
    };
    PoNumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-number',
                    template: "<po-field-container\n  [p-help]=\"help\"\n  [p-label]=\"label\"\n  [p-optional]=\"!required && optional\">\n\n  <div class=\"po-field-container-content\">\n    <input #inp\n      class=\"po-input\"\n      type=\"number\"\n      [attr.max]=\"max\"\n      [attr.min]=\"min\"\n      [attr.name]=\"name\"\n      [attr.step]=\"step\"\n      [autocomplete]=\"autocomplete\"\n      [class.po-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [tabindex]=\"disabled ? -1 : 0\"\n      (blur)=\"eventOnBlur($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"po-field-icon-container-right\">\n      <po-clean [p-default-value]=\"null\"\n        [p-element-ref]=\"inputEl\"\n        (p-change-event)=\"clear($event)\">\n      </po-clean>\n    </div>\n  </div>\n\n  <po-field-container-bottom\n    [p-error-pattern]=\"getErrorPattern()\">\n  </po-field-container-bottom>\n\n</po-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoNumberComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PoNumberComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    PoNumberComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PoNumberComponent.propDecorators = {
        setMin: [{ type: Input, args: ['p-min',] }],
        setMax: [{ type: Input, args: ['p-max',] }],
        step: [{ type: Input, args: ['p-step',] }]
    };
    return PoNumberComponent;
}(PoNumberBaseComponent));
export { PoNumberComponent };
if (false) {
    /**
     * Valor mínimo.
     * @type {?}
     */
    PoNumberComponent.prototype.min;
    /**
     * Valor máximo.
     * @type {?}
     */
    PoNumberComponent.prototype.max;
    /**
     * \@optional
     *
     * \@description
     *
     * Intervalo.
     *
     * \@default 1
     * @type {?}
     */
    PoNumberComponent.prototype.step;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbnVtYmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tbnVtYmVyL3BvLW51bWJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQW1CLGlCQUFpQixFQUFFLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25GLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCbkU7SUFldUMsNkNBQXFCO0lBNkIxRCwyQkFBWSxFQUFjO1FBQTFCLFlBQ0Usa0JBQU0sRUFBRSxDQUFDLFNBQ1Y7Ozs7Ozs7Ozs7UUFKZ0IsVUFBSSxHQUFZLEdBQUcsQ0FBQzs7SUFJckMsQ0FBQztJQTNCRCxzQkFBb0IscUNBQU07Ozs7O1FBQTFCLFVBQTJCLEdBQVc7O2dCQUM5QixTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7WUFDbkMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7WUFDckQsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7OztPQUFBO0lBSUQsc0JBQW9CLHFDQUFNOzs7OztRQUExQixVQUEyQixHQUFXOztnQkFDOUIsU0FBUyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1lBQ25DLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1lBQ3JELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDOzs7T0FBQTs7Ozs7SUFpQkQsMkNBQWU7Ozs7SUFBZixVQUFnQixlQUFnQztRQUU5QyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM5QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLEtBQUssRUFBRSxLQUFLO2lCQUNiLEVBQUMsQ0FBQztTQUNKO1FBRUQsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDOUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtvQkFDWixLQUFLLEVBQUUsS0FBSztpQkFDYixFQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBL0RGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztvQkFDckIsOGlDQUF5QztvQkFDekMsU0FBUyxFQUFFO3dCQUNYOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGlCQUFpQixFQUFqQixDQUFpQixFQUFDOzRCQUNoRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsYUFBYTs0QkFDdEIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsaUJBQWlCLEVBQWpCLENBQWlCLEVBQUM7NEJBQ2hELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUFDO2lCQUNIOzs7O2dCQTlDbUIsVUFBVTs7O3lCQW1EM0IsS0FBSyxTQUFDLE9BQU87eUJBUWIsS0FBSyxTQUFDLE9BQU87dUJBZWIsS0FBSyxTQUFDLFFBQVE7O0lBdUJqQix3QkFBQztDQUFBLEFBakVELENBZXVDLHFCQUFxQixHQWtEM0Q7U0FsRFksaUJBQWlCOzs7Ozs7SUFHNUIsZ0NBQWE7Ozs7O0lBUWIsZ0NBQWE7Ozs7Ozs7Ozs7O0lBZ0JiLGlDQUFxQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgTkdfVkFMVUVfQUNDRVNTT1IsIE5HX1ZBTElEQVRPUlMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IG1pbkZhaWxlZCwgbWF4RmFpbGVkIH0gZnJvbSAnLi4vdmFsaWRhdG9ycyc7XG5cbmltcG9ydCB7IFBvTnVtYmVyQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tbnVtYmVyLWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9JbnB1dEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBwby1udW1iZXIgw6kgdW0gaW5wdXQgZXNwZWPDrWZpY28gcGFyYSByZWNlYmVyIGFwZW5hcyBuw7ptZXJvcy5cbiAqIMOJIHBvc3PDrXZlbCBjb25maWd1cmFyIHVtIHZhbG9yIG3DrW5pbW8sIG3DoXhpbW8gZSB1bSBzdGVwIGNvbSBwLW1pbiwgcC1tYXggZSBwLXN0ZXAsXG4gKiByZXNwZWN0aXZhbWVudGUuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbnVtYmVyLWJhc2ljXCIgdGl0bGU9XCJQb3J0aW5hcmkgTnVtYmVyIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItYmFzaWMvc2FtcGxlLXBvLW51bWJlci1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItYmFzaWMvc2FtcGxlLXBvLW51bWJlci1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1udW1iZXItbGFic1wiIHRpdGxlPVwiUG9ydGluYXJpIE51bWJlciBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItbGFicy9zYW1wbGUtcG8tbnVtYmVyLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbnVtYmVyLWxhYnMvc2FtcGxlLXBvLW51bWJlci1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW51bWJlci1jYWxjdWxhdGVcIiB0aXRsZT1cIlBvcnRpbmFyaSBOdW1iZXIgLSBDYWxjdWxhdGVcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1jYWxjdWxhdGUvc2FtcGxlLXBvLW51bWJlci1jYWxjdWxhdGUuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbnVtYmVyLWNhbGN1bGF0ZS9zYW1wbGUtcG8tbnVtYmVyLWNhbGN1bGF0ZS5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1udW1iZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tbnVtYmVyLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gIHtcbiAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb051bWJlckNvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWUsXG4gIH0sXG4gIHtcbiAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBvTnVtYmVyQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZSxcbiAgfV1cbn0pXG5leHBvcnQgY2xhc3MgUG9OdW1iZXJDb21wb25lbnQgZXh0ZW5kcyBQb051bWJlckJhc2VDb21wb25lbnQge1xuXG4gIC8qKiBWYWxvciBtw61uaW1vLiAqL1xuICBtaW4/OiBudW1iZXI7XG4gIEBJbnB1dCgncC1taW4nKSBzZXQgc2V0TWluKG1pbjogc3RyaW5nKSB7XG4gICAgY29uc3QgcGFyc2VkSW50ID0gcGFyc2VJbnQobWluLCAxMCk7XG4gICAgdGhpcy5taW4gPSAhaXNOYU4ocGFyc2VkSW50KSA/IHBhcnNlZEludCA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLnZhbGlkYXRlTW9kZWwoKTtcbiAgfVxuXG4gIC8qKiBWYWxvciBtw6F4aW1vLiAqL1xuICBtYXg/OiBudW1iZXI7XG4gIEBJbnB1dCgncC1tYXgnKSBzZXQgc2V0TWF4KG1heDogc3RyaW5nKSB7XG4gICAgY29uc3QgcGFyc2VkSW50ID0gcGFyc2VJbnQobWF4LCAxMCk7XG4gICAgdGhpcy5tYXggPSAhaXNOYU4ocGFyc2VkSW50KSA/IHBhcnNlZEludCA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLnZhbGlkYXRlTW9kZWwoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEludGVydmFsby5cbiAgICpcbiAgICogQGRlZmF1bHQgMVxuICAgKi9cbiAgQElucHV0KCdwLXN0ZXAnKSBzdGVwPzogc3RyaW5nID0gJzEnO1xuXG4gIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgc3VwZXIoZWwpO1xuICB9XG5cbiAgZXh0cmFWYWxpZGF0aW9uKGFic3RyYWN0Q29udHJvbDogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBhbnk7IH0ge1xuXG4gICAgaWYgKG1pbkZhaWxlZCh0aGlzLm1pbiwgYWJzdHJhY3RDb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHsgbWluOiB7XG4gICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgIH19O1xuICAgIH1cblxuICAgIGlmIChtYXhGYWlsZWQodGhpcy5tYXgsIGFic3RyYWN0Q29udHJvbC52YWx1ZSkpIHtcbiAgICAgIHJldHVybiB7IG1heDoge1xuICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICB9fTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG59XG4iXX0=