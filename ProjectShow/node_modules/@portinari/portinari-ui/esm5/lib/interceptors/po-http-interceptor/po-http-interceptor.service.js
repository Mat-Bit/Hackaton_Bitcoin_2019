/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { PoHttpInterceptorBaseService } from './po-http-interceptor-base.service';
import { PoNotificationService } from './../../services/po-notification/po-notification.service';
import { PoDialogService } from './../../services/po-dialog/po-dialog.service';
/**
 * \@docsExtends PoHttpInterceptorBaseService
 *
 * \@example
 * <example name='po-http-interceptor-labs' title='Portinari Http Interceptor Labs'>
 *  <file name='sample-po-http-interceptor-labs.component.ts'> </file>
 *  <file name='sample-po-http-interceptor-labs.component.html'> </file>
 * </example>
 */
var PoHttpInterceptorService = /** @class */ (function (_super) {
    tslib_1.__extends(PoHttpInterceptorService, _super);
    function PoHttpInterceptorService(notification, dialog) {
        return _super.call(this, notification, dialog) || this;
    }
    PoHttpInterceptorService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PoHttpInterceptorService.ctorParameters = function () { return [
        { type: PoNotificationService },
        { type: PoDialogService }
    ]; };
    return PoHttpInterceptorService;
}(PoHttpInterceptorBaseService));
export { PoHttpInterceptorService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taHR0cC1pbnRlcmNlcHRvci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvaW50ZXJjZXB0b3JzL3BvLWh0dHAtaW50ZXJjZXB0b3IvcG8taHR0cC1pbnRlcmNlcHRvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNsRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNqRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOENBQThDLENBQUM7Ozs7Ozs7Ozs7QUFXL0U7SUFDOEMsb0RBQTRCO0lBQ3hFLGtDQUFZLFlBQW1DLEVBQUUsTUFBdUI7ZUFDdEUsa0JBQU0sWUFBWSxFQUFFLE1BQU0sQ0FBQztJQUM3QixDQUFDOztnQkFKRixVQUFVOzs7O2dCQVpGLHFCQUFxQjtnQkFDckIsZUFBZTs7SUFnQnhCLCtCQUFDO0NBQUEsQUFMRCxDQUM4Qyw0QkFBNEIsR0FJekU7U0FKWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvSHR0cEludGVyY2VwdG9yQmFzZVNlcnZpY2UgfSBmcm9tICcuL3BvLWh0dHAtaW50ZXJjZXB0b3ItYmFzZS5zZXJ2aWNlJztcbmltcG9ydCB7IFBvTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvcG8tbm90aWZpY2F0aW9uL3BvLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvRGlhbG9nU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvcG8tZGlhbG9nL3BvLWRpYWxvZy5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9IdHRwSW50ZXJjZXB0b3JCYXNlU2VydmljZVxuICpcbiAqIEBleGFtcGxlXG4gKiA8ZXhhbXBsZSBuYW1lPSdwby1odHRwLWludGVyY2VwdG9yLWxhYnMnIHRpdGxlPSdQb3J0aW5hcmkgSHR0cCBJbnRlcmNlcHRvciBMYWJzJz5cbiAqICA8ZmlsZSBuYW1lPSdzYW1wbGUtcG8taHR0cC1pbnRlcmNlcHRvci1sYWJzLmNvbXBvbmVudC50cyc+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPSdzYW1wbGUtcG8taHR0cC1pbnRlcmNlcHRvci1sYWJzLmNvbXBvbmVudC5odG1sJz4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9IdHRwSW50ZXJjZXB0b3JTZXJ2aWNlIGV4dGVuZHMgUG9IdHRwSW50ZXJjZXB0b3JCYXNlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKG5vdGlmaWNhdGlvbjogUG9Ob3RpZmljYXRpb25TZXJ2aWNlLCBkaWFsb2c6IFBvRGlhbG9nU2VydmljZSkge1xuICAgIHN1cGVyKG5vdGlmaWNhdGlvbiwgZGlhbG9nKTtcbiAgfVxufVxuIl19