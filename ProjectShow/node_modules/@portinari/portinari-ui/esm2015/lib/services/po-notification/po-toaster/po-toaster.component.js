/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { PoToasterBaseComponent } from './po-toaster-base.component';
import { PoToasterType } from './po-toaster-type.enum';
import { PoToasterOrientation } from './po-toaster-orientation.enum';
/**
 * \@docsPrivate
 *
 * \@docsExtends PoToasterBaseComponent
 */
export class PoToasterComponent extends PoToasterBaseComponent {
    /**
     * @param {?} changeDetector
     * @param {?=} elementeRef
     */
    constructor(changeDetector, elementeRef) {
        super();
        this.changeDetector = changeDetector;
        this.elementeRef = elementeRef;
        /* Margem do Toaster referênte à sua orientação e posição*/
        this.margin = 20;
        /* Observable para monitorar o Close to Toaster */
        this.observableOnClose = new Subject();
        /* Mostra ou oculta o Toaster */
        this.showToaster = true;
        /* Posição do Toaster*/
        this.toasterPosition = 'po-toaster-bottom';
    }
    /* Muda a posição do Toaster na tela*/
    /**
     * @param {?} position
     * @return {?}
     */
    changePosition(position) {
        this.elementeRef.nativeElement.style.display = 'table';
        this.margin = 6 + (44 * (position)) + position * 6;
        if (this.orientation === PoToasterOrientation.Top) {
            this.toaster.nativeElement.style.top = this.margin + 'px';
        }
        else {
            this.toaster.nativeElement.style.bottom = this.margin + 'px';
        }
    }
    /* Fecha o componente Toaster */
    /**
     * @return {?}
     */
    close() {
        this.showToaster = false;
        this.observableOnClose.next(true);
    }
    /* Configura o Toaster com os atributos passados para ele */
    /**
     * @param {?} poToaster
     * @return {?}
     */
    configToaster(poToaster) {
        this.type = poToaster.type;
        this.message = poToaster.message;
        this.orientation = poToaster.orientation;
        this.position = poToaster.position;
        this.action = poToaster.action;
        this.actionLabel = (poToaster.actionLabel) ? poToaster.actionLabel : 'Fechar';
        this.componentRef = poToaster.componentRef;
        /* Muda a orientação do Toaster */
        if (this.orientation === PoToasterOrientation.Top) {
            this.toasterPosition = 'po-toaster-top';
        }
        /* Muda a posição do Toaster */
        this.changePosition(this.position);
        /* Switch para o tipo de Toaster */
        switch (this.type) {
            case PoToasterType.Error: {
                this.toasterType = 'po-toaster-error';
                this.icon = 'po-icon-close';
                break;
            }
            case PoToasterType.Information: {
                this.toasterType = 'po-toaster-info';
                this.icon = 'po-icon-info';
                break;
            }
            case PoToasterType.Success: {
                this.toasterType = 'po-toaster-success';
                this.icon = 'po-icon-ok';
                break;
            }
            case PoToasterType.Warning: {
                this.toasterType = 'po-toaster-warning';
                this.icon = 'po-icon-warning';
                break;
            }
        }
        this.changeDetector.detectChanges();
    }
    /**
     * @return {?}
     */
    getShowToaster() {
        return this.showToaster;
    }
    /**
     * @return {?}
     */
    getIcon() {
        return this.icon;
    }
    /**
     * @return {?}
     */
    getToasterPosition() {
        return this.toasterPosition;
    }
    /**
     * @return {?}
     */
    getToasterType() {
        return this.toasterType;
    }
    /* Chama a função passada pelo atributo `action` */
    /**
     * @return {?}
     */
    poToasterAction() {
        this.action(this);
    }
}
PoToasterComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-toaster',
                template: "<div #toaster *ngIf=\"getShowToaster()\"\n  class=\"po-toaster {{ getToasterType() }} {{ getToasterPosition() }} po-clickable\"\n  (click)=\"close()\">\n\n  <div class=\"po-toaster-message\">\n    <span class=\"po-icon {{ getIcon() }}\"></span> {{ message }}\n  </div>\n\n  <div *ngIf=\"action !== undefined\" (click)=\"poToasterAction()\" class=\"po-toaster-action\">\n    {{ actionLabel }}\n  </div>\n\n</div>\n"
            }] }
];
/** @nocollapse */
PoToasterComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
PoToasterComponent.propDecorators = {
    toaster: [{ type: ViewChild, args: ['toaster', { static: false },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.icon;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.margin;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.observableOnClose;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.showToaster;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.toasterPosition;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.toasterType;
    /** @type {?} */
    PoToasterComponent.prototype.toaster;
    /** @type {?} */
    PoToasterComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    PoToasterComponent.prototype.elementeRef;
}
//# sourceMappingURL=data:application/json;base64,