/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { PoContainerModule } from '../po-container/po-container.module';
import { PoSlideCirclesComponent } from './po-slide-circles/po-slide-circles.component';
import { PoSlideComponent } from './po-slide.component';
import { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';
import { PoSlideControlComponent } from './po-slide-control/po-slide-control.component';
import { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';
/**
 * \@description
 *
 * Módulo do componente `po-slide`.
 *
 * > Para o correto funcionamento do componente `po-slide`, deve ser importado o módulo `BrowserAnimationsModule` no
 * > módulo principal da sua aplicação.
 *
 * Módulo da aplicação:
 * ```
 * import { BrowserAnimationsModule } from '\@angular/platform-browser/animations';
 * import { PoModule } from '\@portinari/portinari-ui';
 * ...
 *
 * \@NgModule({
 *   imports: [
 *     BrowserModule,
 *     BrowserAnimationsModule,
 *     ...
 *     PoModule
 *   ],
 *   declarations: [
 *     AppComponent,
 *     ...
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 */
export class PoSlideModule {
}
PoSlideModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    RouterModule,
                    PoContainerModule
                ],
                declarations: [
                    PoSlideCirclesComponent,
                    PoSlideComponent,
                    PoSlideControlComponent,
                    PoSlideContentTemplateDirective,
                    PoSlideItemComponent,
                ],
                exports: [
                    PoSlideComponent,
                    PoSlideContentTemplateDirective
                ],
                providers: [],
                schemas: []
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1zbGlkZS9wby1zbGlkZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV4RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN4RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUNuRyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN4RixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxRC9FLE1BQU0sT0FBTyxhQUFhOzs7WUFwQnpCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixZQUFZO29CQUNaLGlCQUFpQjtpQkFDbEI7Z0JBQ0QsWUFBWSxFQUFFO29CQUNaLHVCQUF1QjtvQkFDdkIsZ0JBQWdCO29CQUNoQix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0Isb0JBQW9CO2lCQUNyQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsZ0JBQWdCO29CQUNoQiwrQkFBK0I7aUJBQ2hDO2dCQUNELFNBQVMsRUFBRSxFQUFFO2dCQUNiLE9BQU8sRUFBRSxFQUFFO2FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IFBvQ29udGFpbmVyTW9kdWxlIH0gZnJvbSAnLi4vcG8tY29udGFpbmVyL3BvLWNvbnRhaW5lci5tb2R1bGUnO1xuXG5pbXBvcnQgeyBQb1NsaWRlQ2lyY2xlc0NvbXBvbmVudCB9IGZyb20gJy4vcG8tc2xpZGUtY2lyY2xlcy9wby1zbGlkZS1jaXJjbGVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1NsaWRlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1zbGlkZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9wby1zbGlkZS1jb250ZW50LXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQb1NsaWRlQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4vcG8tc2xpZGUtY29udHJvbC9wby1zbGlkZS1jb250cm9sLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1NsaWRlSXRlbUNvbXBvbmVudCB9IGZyb20gJy4vcG8tc2xpZGUtaXRlbS9wby1zbGlkZS1pdGVtLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTcOzZHVsbyBkbyBjb21wb25lbnRlIGBwby1zbGlkZWAuXG4gKlxuICogPiBQYXJhIG8gY29ycmV0byBmdW5jaW9uYW1lbnRvIGRvIGNvbXBvbmVudGUgYHBvLXNsaWRlYCwgZGV2ZSBzZXIgaW1wb3J0YWRvIG8gbcOzZHVsbyBgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGVgIG5vXG4gKiA+IG3Ds2R1bG8gcHJpbmNpcGFsIGRhIHN1YSBhcGxpY2HDp8Ojby5cbiAqXG4gKiBNw7NkdWxvIGRhIGFwbGljYcOnw6NvOlxuICogYGBgXG4gKiBpbXBvcnQgeyBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG4gKiBpbXBvcnQgeyBQb01vZHVsZSB9IGZyb20gJ0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpJztcbiAqIC4uLlxuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICBCcm93c2VyTW9kdWxlLFxuICogICAgIEJyb3dzZXJBbmltYXRpb25zTW9kdWxlLFxuICogICAgIC4uLlxuICogICAgIFBvTW9kdWxlXG4gKiAgIF0sXG4gKiAgIGRlY2xhcmF0aW9uczogW1xuICogICAgIEFwcENvbXBvbmVudCxcbiAqICAgICAuLi5cbiAqICAgXSxcbiAqICAgcHJvdmlkZXJzOiBbXSxcbiAqICAgYm9vdHN0cmFwOiBbQXBwQ29tcG9uZW50XVxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBNb2R1bGUgeyB9XG4gKiBgYGBcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUsXG4gICAgUG9Db250YWluZXJNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUG9TbGlkZUNpcmNsZXNDb21wb25lbnQsXG4gICAgUG9TbGlkZUNvbXBvbmVudCxcbiAgICBQb1NsaWRlQ29udHJvbENvbXBvbmVudCxcbiAgICBQb1NsaWRlQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIFBvU2xpZGVJdGVtQ29tcG9uZW50LFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgUG9TbGlkZUNvbXBvbmVudCxcbiAgICBQb1NsaWRlQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIHNjaGVtYXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIFBvU2xpZGVNb2R1bGUgeyB9XG4iXX0=