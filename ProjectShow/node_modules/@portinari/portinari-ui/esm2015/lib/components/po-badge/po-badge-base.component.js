/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToInt } from '../../utils/util';
/** @type {?} */
const PO_BADGE_COLORS = [
    'color-01',
    'color-02',
    'color-03',
    'color-04',
    'color-05',
    'color-06',
    'color-07',
    'color-08',
    'color-09',
    'color-10',
    'color-11',
    'color-12',
];
/** @type {?} */
const PO_BADGE_COLOR_DEFAULT = 'color-07';
/**
 * \@description
 *
 * \@docsPrivate
 *
 * Componente utilizado no `po-menu` para exibir por exemplo a quantidade de tarefas pendentes.
 */
export class PoBadgeBaseComponent {
    /**
     * \@optional
     *
     * \@description
     *
     * Define a cor de fundo do componente e aceita os valores:
     *
     * <span class="dot po-color-01"></span> `color-01`
     *
     * <span class="dot po-color-02"></span> `color-02`
     *
     * <span class="dot po-color-03"></span> `color-03`
     *
     * <span class="dot po-color-04"></span> `color-04`
     *
     * <span class="dot po-color-05"></span> `color-05`
     *
     * <span class="dot po-color-06"></span> `color-06`
     *
     * <span class="dot po-color-07"></span> `color-07`
     *
     * <span class="dot po-color-08"></span> `color-08`
     *
     * <span class="dot po-color-09"></span> `color-09`
     *
     * <span class="dot po-color-10"></span> `color-10`
     *
     * <span class="dot po-color-11"></span> `color-11`
     *
     * <span class="dot po-color-12"></span> `color-12`
     *
     * \@default `color-07`
     * @param {?} value
     * @return {?}
     */
    set color(value) {
        this._color = PO_BADGE_COLORS.includes(value) ? value : PO_BADGE_COLOR_DEFAULT;
    }
    /**
     * @return {?}
     */
    get color() {
        return this._color;
    }
    /**
     * \@description
     *
     * Número exibido no componente, caso o mesmo seja maior que 99 o valor exibido será 99+.
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = convertToInt(value);
        this.setBadgeValue(this._value);
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    setBadgeValue(value) {
        /** @type {?} */
        const validRangeValue = (value || value === 0) && (value >= 0 && value < 100);
        this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;
    }
}
PoBadgeBaseComponent.propDecorators = {
    color: [{ type: Input, args: ['p-color',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoBadgeBaseComponent.prototype._color;
    /**
     * @type {?}
     * @private
     */
    PoBadgeBaseComponent.prototype._value;
    /** @type {?} */
    PoBadgeBaseComponent.prototype.badgeValue;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYmFkZ2UtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWJhZGdlL3BvLWJhZGdlLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7TUFFMUMsZUFBZSxHQUFHO0lBQ3RCLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtDQUNYOztNQUNLLHNCQUFzQixHQUFHLFVBQVU7Ozs7Ozs7O0FBU3pDLE1BQU0sT0FBTyxvQkFBb0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXdDL0IsSUFBc0IsS0FBSyxDQUFDLEtBQWE7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDO0lBQ2pGLENBQUM7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQzs7Ozs7Ozs7SUFPRCxJQUFzQixLQUFLLENBQUMsS0FBYTtRQUN2QyxJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7Ozs7OztJQUVPLGFBQWEsQ0FBQyxLQUFhOztjQUMzQixlQUFlLEdBQUcsQ0FBQyxLQUFLLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQzdFLElBQUksQ0FBQyxVQUFVLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ3hGLENBQUM7OztvQkF6QkEsS0FBSyxTQUFDLFNBQVM7b0JBYWYsS0FBSyxTQUFDLFNBQVM7Ozs7Ozs7SUFuRGhCLHNDQUF1Qjs7Ozs7SUFDdkIsc0NBQXVCOztJQUV2QiwwQ0FBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9JbnQgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuY29uc3QgUE9fQkFER0VfQ09MT1JTID0gW1xuICAnY29sb3ItMDEnLFxuICAnY29sb3ItMDInLFxuICAnY29sb3ItMDMnLFxuICAnY29sb3ItMDQnLFxuICAnY29sb3ItMDUnLFxuICAnY29sb3ItMDYnLFxuICAnY29sb3ItMDcnLFxuICAnY29sb3ItMDgnLFxuICAnY29sb3ItMDknLFxuICAnY29sb3ItMTAnLFxuICAnY29sb3ItMTEnLFxuICAnY29sb3ItMTInLFxuXTtcbmNvbnN0IFBPX0JBREdFX0NPTE9SX0RFRkFVTFQgPSAnY29sb3ItMDcnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIENvbXBvbmVudGUgdXRpbGl6YWRvIG5vIGBwby1tZW51YCBwYXJhIGV4aWJpciBwb3IgZXhlbXBsbyBhIHF1YW50aWRhZGUgZGUgdGFyZWZhcyBwZW5kZW50ZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBQb0JhZGdlQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfY29sb3I6IHN0cmluZztcbiAgcHJpdmF0ZSBfdmFsdWU6IG51bWJlcjtcblxuICBiYWRnZVZhbHVlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIGEgY29yIGRlIGZ1bmRvIGRvIGNvbXBvbmVudGUgZSBhY2VpdGEgb3MgdmFsb3JlczpcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDFcIj48L3NwYW4+IGBjb2xvci0wMWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDJcIj48L3NwYW4+IGBjb2xvci0wMmBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDNcIj48L3NwYW4+IGBjb2xvci0wM2BcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDRcIj48L3NwYW4+IGBjb2xvci0wNGBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDVcIj48L3NwYW4+IGBjb2xvci0wNWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDZcIj48L3NwYW4+IGBjb2xvci0wNmBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDdcIj48L3NwYW4+IGBjb2xvci0wN2BcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDhcIj48L3NwYW4+IGBjb2xvci0wOGBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDlcIj48L3NwYW4+IGBjb2xvci0wOWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTBcIj48L3NwYW4+IGBjb2xvci0xMGBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTFcIj48L3NwYW4+IGBjb2xvci0xMWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTJcIj48L3NwYW4+IGBjb2xvci0xMmBcbiAgICpcbiAgICogQGRlZmF1bHQgYGNvbG9yLTA3YFxuICAgKi9cbiAgQElucHV0KCdwLWNvbG9yJykgc2V0IGNvbG9yKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9jb2xvciA9IFBPX0JBREdFX0NPTE9SUy5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IFBPX0JBREdFX0NPTE9SX0RFRkFVTFQ7XG4gIH1cblxuICBnZXQgY29sb3IoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fY29sb3I7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE7Dum1lcm8gZXhpYmlkbyBubyBjb21wb25lbnRlLCBjYXNvIG8gbWVzbW8gc2VqYSBtYWlvciBxdWUgOTkgbyB2YWxvciBleGliaWRvIHNlcsOhIDk5Ky5cbiAgICovXG4gIEBJbnB1dCgncC12YWx1ZScpIHNldCB2YWx1ZSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fdmFsdWUgPSBjb252ZXJ0VG9JbnQodmFsdWUpO1xuICAgIHRoaXMuc2V0QmFkZ2VWYWx1ZSh0aGlzLl92YWx1ZSk7XG4gIH1cblxuICBnZXQgdmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gIH1cblxuICBwcml2YXRlIHNldEJhZGdlVmFsdWUodmFsdWU6IG51bWJlcikge1xuICAgIGNvbnN0IHZhbGlkUmFuZ2VWYWx1ZSA9ICh2YWx1ZSB8fCB2YWx1ZSA9PT0gMCkgJiYgKHZhbHVlID49IDAgJiYgdmFsdWUgPCAxMDApO1xuICAgIHRoaXMuYmFkZ2VWYWx1ZSA9IHZhbGlkUmFuZ2VWYWx1ZSA/IHZhbHVlLnRvU3RyaW5nKCkgOiB2YWx1ZSA+IDk5ID8gJzk5KycgOiB1bmRlZmluZWQ7XG4gIH1cblxufVxuIl19