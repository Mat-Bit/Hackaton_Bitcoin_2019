/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';
export class PoGridCellComponent {
    /**
     * @param {?} changeDetectorRef
     */
    constructor(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this._value = '';
        this.edit = false;
        this.editValue = '';
        this.align = 'left';
        this.freeze = false;
        this.tabIndex = -1;
        this.position = '';
        this.readonly = false;
        this.required = false;
        this.valueChange = new EventEmitter();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set width(value) {
        this._width = value;
        if (this.freeze && !this._width) {
            this._width = 100;
        }
    }
    /**
     * @return {?}
     */
    get width() {
        return this._width ? `${this._width}px` : '100%';
    }
    // @Input('p-value') value?: string;
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = value;
        this.valueChange.emit(this._value);
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDownContent(event) {
        // console.log('onKeyDownContent: ', event);
        // BACKSPACE / DELETE
        if ((!event.ctrlKey) && ((event.keyCode === 8) || (event.keyCode === 46))) {
            if (this.readonly) {
                return;
            }
            event.preventDefault();
            this.value = '';
            return;
        }
        // ENTER
        if (event.keyCode === 13) {
            event.preventDefault();
            this.onEditCell(this.value);
            return;
        }
        // A..Z - 0..9
        if ((event.keyCode >= 65) && (event.keyCode <= 90) || (event.keyCode >= 48) && (event.keyCode <= 57)) {
            event.preventDefault();
            this.onEditCell(event.key);
            return;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    dblclick(event) {
        // console.log('dblclick: ', event);
        event.preventDefault();
        this.onEditCell(this.value);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onBlurInput(event) {
        // console.log('onBlurInput: ', event);
        this.value = this.editValue;
        this.editValue = undefined;
        this.edit = false;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDownInput(event) {
        // console.log('onKeyDownInput: ', event);
        // ENTER
        if (event.keyCode === 13) {
            this.value = this.editValue;
            this.editValue = undefined;
            this.edit = false;
            this.changeDetectorRef.detectChanges();
            this.contentElement.nativeElement.focus();
        }
        // ESCAPE
        if (event.keyCode === 27) {
            this.editValue = undefined;
            this.edit = false;
            this.changeDetectorRef.detectChanges();
            this.contentElement.nativeElement.focus();
            event.stopPropagation();
        }
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    onEditCell(value) {
        if (this.readonly) {
            return;
        }
        this.editValue = value;
        this.edit = true;
        this.changeDetectorRef.detectChanges();
        this.inputElement.nativeElement.focus();
    }
}
PoGridCellComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-grid-cell',
                template: "<div>\n  <ng-container *ngIf=\"edit; then input; else content\"></ng-container>\n\n  <ng-template #content>\n    <div #contentElement\n      [id]=\"position\"\n      class=\"po-grid-cell-content po-grid-cell-{{ align }} {{ !value && required ? 'po-grid-cell-required' : '' }}\"\n      (keydown)=\"onKeyDownContent($event)\"\n      tabindex=\"{{ readonly ? -1 : 0 }}\"\n      (dblclick)=dblclick($event)>\n      <span>{{ value || '&nbsp;' }}</span>\n    </div>\n  </ng-template>\n\n  <ng-template #input>\n    <input\n      [id]=\"position\"\n      #inputElement class=\"po-grid-cell-input\"\n      [(ngModel)]=\"editValue\"\n      (keydown.arrowup)=\"$event.stopPropagation()\"\n      (keydown.arrowdown)=\"$event.stopPropagation()\"\n      (keydown.arrowleft)=\"$event.stopPropagation()\"\n      (keydown.arrowright)=\"$event.stopPropagation()\"\n      (keydown)=\"onKeyDownInput($event)\"\n      (blur)=\"onBlurInput($event)\">\n\n    <!-- <po-input\n      #inputElement class=\"po-grid-cell-input\"\n      [(ngModel)]=\"editValue\"\n      (keydown)=\"onKeyDownInput($event)\"\n      (p-blur)=\"onBlurInput($event)\">\n    </po-input> -->\n  </ng-template>\n</div>\n\n",
                styles: [`
  .po-grid-cell-content, .po-grid-cell-input {
    border-bottom: 1px solid #eceeee;
    border-left: none;
    border-right: 1px solid #eceeee;
    border-top: none;
    font-family: NunitoSans;
    font-size: 14px;
    height: 44px;
    line-height: 1.71;
    margin: 0;
    overflow: hidden;
    padding: 10px 16px;
    text-align: left;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .po-grid-cell-center {
    text-align: center;
  }

  .po-grid-cell-right {
    text-align: right;
  }

  .po-grid-cell-content:focus {
    border: none;
    outline: 1px solid #0c9abe;
  }

  .po-grid-cell-required {
    border: 1px dashed red;
  }

  .po-grid-cell-input {
    border: 1px solid #0c9abe;
    box-shadow: 0px 0px 4px 4px rgba(0, 0, 0, 0.10);
    outline: none;
    position: relative;
    min-width: 100%;
    max-width: 100%;
    width: 100%;
  }
  `]
            }] }
];
/** @nocollapse */
PoGridCellComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
PoGridCellComponent.propDecorators = {
    align: [{ type: Input, args: ['p-align',] }],
    freeze: [{ type: Input, args: ['p-freeze',] }],
    tabIndex: [{ type: Input, args: ['p-tab-index',] }],
    position: [{ type: Input, args: ['p-position',] }],
    width: [{ type: Input, args: ['p-width',] }],
    readonly: [{ type: Input, args: ['p-readonly',] }],
    required: [{ type: Input, args: ['p-required',] }],
    valueChange: [{ type: Output, args: ['p-valueChange',] }],
    value: [{ type: Input, args: ['p-value',] }],
    inputElement: [{ type: ViewChild, args: ['inputElement', { static: true },] }],
    contentElement: [{ type: ViewChild, args: ['contentElement', { static: true },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoGridCellComponent.prototype._width;
    /** @type {?} */
    PoGridCellComponent.prototype._value;
    /** @type {?} */
    PoGridCellComponent.prototype.edit;
    /** @type {?} */
    PoGridCellComponent.prototype.editValue;
    /** @type {?} */
    PoGridCellComponent.prototype.align;
    /** @type {?} */
    PoGridCellComponent.prototype.freeze;
    /** @type {?} */
    PoGridCellComponent.prototype.tabIndex;
    /** @type {?} */
    PoGridCellComponent.prototype.position;
    /** @type {?} */
    PoGridCellComponent.prototype.readonly;
    /** @type {?} */
    PoGridCellComponent.prototype.required;
    /** @type {?} */
    PoGridCellComponent.prototype.valueChange;
    /** @type {?} */
    PoGridCellComponent.prototype.inputElement;
    /** @type {?} */
    PoGridCellComponent.prototype.contentElement;
    /**
     * @type {?}
     * @private
     */
    PoGridCellComponent.prototype.changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,