/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class PoGridCellActionComponent {
    constructor() {
        this.position = '';
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDownContent(event) {
        // console.log('onKeyDownContent: ', event);
        // ENTER
        if (event.keyCode === 13) {
            event.preventDefault();
            // this.openActions(this.value);
            return;
        }
    }
}
PoGridCellActionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-grid-cell-action',
                template: "<div>\n  <div #contentElement [id]=\"position\"\n    class=\"po-grid-cell-action-content\"\n    tabindex=\"0\"\n    (keydown)=\"onKeyDownContent($event)\">\n    <span>{{ value || '&nbsp;' }}</span>\n  </div>\n</div>\n\n",
                styles: [`
  .po-grid-cell-action-content {
    border-bottom: 1px solid #eceeee;
    border-left: none;
    border-right: 1px solid #eceeee;
    border-top: none;
    font-family: NunitoSans;
    font-size: 14px;
    height: 44px;
    line-height: 1.71;
    margin: 0;
    max-height: 44px;
    max-width: 56px;
    min-height: 44px;
    min-width: 56px;
    padding: 10px 16px;
    text-align: center;
    width: 56px;
  }

  .po-grid-cell-action-content:focus {
    border: none;
    outline: 1px solid #0c9abe;
  }
  `]
            }] }
];
/** @nocollapse */
PoGridCellActionComponent.ctorParameters = () => [];
PoGridCellActionComponent.propDecorators = {
    position: [{ type: Input, args: ['p-position',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
if (false) {
    /** @type {?} */
    PoGridCellActionComponent.prototype.position;
    /** @type {?} */
    PoGridCellActionComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ3JpZC1jZWxsLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWdyaWQvcG8tZ3JpZC1jZWxsLWFjdGlvbi9wby1ncmlkLWNlbGwtYWN0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFnQ2pELE1BQU0sT0FBTyx5QkFBeUI7SUFNcEM7UUFKcUIsYUFBUSxHQUFZLEVBQUUsQ0FBQztJQUk1QixDQUFDOzs7OztJQUVqQixnQkFBZ0IsQ0FBQyxLQUFLO1FBQ3BCLDRDQUE0QztRQUU1QyxRQUFRO1FBQ1IsSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLEVBQUUsRUFBRTtZQUN4QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFFdkIsZ0NBQWdDO1lBRWhDLE9BQU87U0FDUjtJQUNILENBQUM7OztZQWpERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsdU9BQW1EO3lCQUUxQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JSO2FBQ0Y7Ozs7O3VCQUdFLEtBQUssU0FBQyxZQUFZO29CQUVsQixLQUFLLFNBQUMsU0FBUzs7OztJQUZoQiw2Q0FBNEM7O0lBRTVDLDBDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tZ3JpZC1jZWxsLWFjdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1ncmlkLWNlbGwtYWN0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgLy8gc3R5bGVVcmxzOiBbJy4vcG8tZ3JpZC1jZWxsLWFjdGlvbi5jb21wb25lbnQuY3NzJ11cbiAgc3R5bGVzOiBbYFxuICAucG8tZ3JpZC1jZWxsLWFjdGlvbi1jb250ZW50IHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VjZWVlZTtcbiAgICBib3JkZXItbGVmdDogbm9uZTtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZWNlZWVlO1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6IE51bml0b1NhbnM7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICBsaW5lLWhlaWdodDogMS43MTtcbiAgICBtYXJnaW46IDA7XG4gICAgbWF4LWhlaWdodDogNDRweDtcbiAgICBtYXgtd2lkdGg6IDU2cHg7XG4gICAgbWluLWhlaWdodDogNDRweDtcbiAgICBtaW4td2lkdGg6IDU2cHg7XG4gICAgcGFkZGluZzogMTBweCAxNnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogNTZweDtcbiAgfVxuXG4gIC5wby1ncmlkLWNlbGwtYWN0aW9uLWNvbnRlbnQ6Zm9jdXMge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgIzBjOWFiZTtcbiAgfVxuICBgXVxufSlcbmV4cG9ydCBjbGFzcyBQb0dyaWRDZWxsQWN0aW9uQ29tcG9uZW50IHtcblxuICBASW5wdXQoJ3AtcG9zaXRpb24nKSBwb3NpdGlvbj86IHN0cmluZyA9ICcnO1xuXG4gIEBJbnB1dCgncC12YWx1ZScpIHZhbHVlPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgb25LZXlEb3duQ29udGVudChldmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdvbktleURvd25Db250ZW50OiAnLCBldmVudCk7XG5cbiAgICAvLyBFTlRFUlxuICAgIGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgLy8gdGhpcy5vcGVuQWN0aW9ucyh0aGlzLnZhbHVlKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=