/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
/**
 * \@description
 *
 * Este componente gera uma estrutura de navegação que apresenta ao usuário a localização
 * da URL atual, exibindo as antecessoras conforme é realizado a navegação na aplicação.
 *
 * Quando não houver espaçamento suficiente para exibi-lás, o componente se encarrega também
 * de agrupar as URLs antecessoras, gerando assim um ícone que permite a visualização em cascata.
 *
 * Caso um endereço seja especificado na propriedade `p-favorite-service`, o componente permite ao usuário
 * favoritar a URL.
 *
 * Havendo necessidade de incluir parâmetros na requisição do serviço,
 * o componente dispõe da propriedade `p-params-service` que recebe um objeto contendo as informações.
 */
export class PoBreadcrumbBaseComponent {
    constructor() {
        this.itemsView = [];
        this._items = [];
    }
    /**
     * \@description
     *
     * Lista de itens do _breadcrumb_.
     *
     * **Exemplo:**
     * ```
     * { label: 'Po Portal', link: 'portal' }
     * ```
     * @param {?} items
     * @return {?}
     */
    set items(items) {
        this._items = items;
        this.itemsView = [].concat(items);
    }
    /**
     * @return {?}
     */
    get items() {
        return this._items;
    }
}
PoBreadcrumbBaseComponent.propDecorators = {
    favoriteService: [{ type: Input, args: ['p-favorite-service',] }],
    items: [{ type: Input, args: ['p-items',] }],
    paramsService: [{ type: Input, args: ['p-params-service',] }]
};
if (false) {
    /** @type {?} */
    PoBreadcrumbBaseComponent.prototype.itemsView;
    /**
     * @type {?}
     * @private
     */
    PoBreadcrumbBaseComponent.prototype._items;
    /**
     * \@optional
     *
     * \@description
     *
     * Permite definir uma URL no componente `po-breadcrumb` para favoritar ou desfavoritar.
     * > Para utilizar esta propriedade, o último `PoBreadcrumbItem` da lista de items da propriedade `p-items` deve ter um link informado.
     *
     * > A API deve estar preparada para retornar um objeto no formato `{ isFavorite: boolean }`.
     *
     * Ao iniciar, o `po-breadcrumb` faz um GET na URL definida na propriedade `p-favorite-service` e deve retornar a propriedade
     * `{ isFavorite: boolean }` do último `PoBreadcrumbItem` definido na lista de itens da propriedade `p-items`.
     *
     * Ao clicar em favoritar ou desfavoritar o `po-breadcrumb` faz um POST com o link e a propriedade `{ isFavorite: boolean }`
     * definidos no último item da propriedade `p-items`.
     *
     * > Caso algum parâmetro seja definido na propriedade `p-params-service`, o mesmo será enviado para a API e retornará
     * após fazer um GET ou POST.
     *
     * Exemplo de URL contendo o serviço de favoritar ou desfavoritar:
     *
     * ```
     * https://portinari.io/sample/api/favorite
     * ```
     *
     * Ao fazer o GET o `po-breadcrumb` concatena o link com a URL de serviço. Exemplo:
     *
     * ```
     * GET http://<domain>/api/favorite?url=/example
     * ```
     *
     * ```
     * GET http://po.portinari.com.br/sample/api/favorite?url=/example
     * ```
     *
     * ```
     * POST
     * payload: { isFavorite: true, url: '/example' }
     * ```
     *
     * Caso possua parâmetros definidos na propriedade `p-params-service`:
     *
     * ```
     * POST
     * payload: { isFavorite: true, url: "/example", params: "{ id: 14, user: 'dev.portinari' }" }
     * ```
     *
     * Exemplos de retorno:
     *
     * ```
     * { isFavorite: true, url: "/example" }
     * ```
     *
     * ```
     * { isFavorite: false, url: "/example" }
     * ```
     *
     * ```
     * { isFavorite: false, url: "/example", params: "{ id: 14, user: 'dev.portinari' }" }
     * ```
     * @type {?}
     */
    PoBreadcrumbBaseComponent.prototype.favoriteService;
    /**
     * \@optional
     *
     * \@description
     *
     * Objeto que possibilita o envio de parâmetros adicionais à requisição.
     * @type {?}
     */
    PoBreadcrumbBaseComponent.prototype.paramsService;
    /**
     * @type {?}
     * @protected
     */
    PoBreadcrumbBaseComponent.prototype.clickoutListener;
    /**
     * @type {?}
     * @protected
     */
    PoBreadcrumbBaseComponent.prototype.resizeListener;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYnJlYWRjcnVtYi9wby1icmVhZGNydW1iLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0FBbUJ0QyxNQUFNLE9BQU8seUJBQXlCO0lBQXRDO1FBRUUsY0FBUyxHQUE0QixFQUFFLENBQUM7UUFDaEMsV0FBTSxHQUE0QixFQUFFLENBQUM7SUFpRy9DLENBQUM7Ozs7Ozs7Ozs7Ozs7SUF0QkMsSUFBc0IsS0FBSyxDQUFDLEtBQThCO1FBQ3hELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7Ozs4QkFuQkEsS0FBSyxTQUFDLG9CQUFvQjtvQkFZMUIsS0FBSyxTQUFDLFNBQVM7NEJBZ0JmLEtBQUssU0FBQyxrQkFBa0I7Ozs7SUE1RnpCLDhDQUF3Qzs7Ozs7SUFDeEMsMkNBQTZDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUErRDdDLG9EQUFzRDs7Ozs7Ozs7O0lBNEJ0RCxrREFBa0Q7Ozs7O0lBRWxELHFEQUF1Qzs7Ozs7SUFFdkMsbURBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9CcmVhZGNydW1iSXRlbSB9IGZyb20gJy4vcG8tYnJlYWRjcnVtYi1pdGVtLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0ZSBjb21wb25lbnRlIGdlcmEgdW1hIGVzdHJ1dHVyYSBkZSBuYXZlZ2HDp8OjbyBxdWUgYXByZXNlbnRhIGFvIHVzdcOhcmlvIGEgbG9jYWxpemHDp8Ojb1xuICogZGEgVVJMIGF0dWFsLCBleGliaW5kbyBhcyBhbnRlY2Vzc29yYXMgY29uZm9ybWUgw6kgcmVhbGl6YWRvIGEgbmF2ZWdhw6fDo28gbmEgYXBsaWNhw6fDo28uXG4gKlxuICogUXVhbmRvIG7Do28gaG91dmVyIGVzcGHDp2FtZW50byBzdWZpY2llbnRlIHBhcmEgZXhpYmktbMOhcywgbyBjb21wb25lbnRlIHNlIGVuY2FycmVnYSB0YW1iw6ltXG4gKiBkZSBhZ3J1cGFyIGFzIFVSTHMgYW50ZWNlc3NvcmFzLCBnZXJhbmRvIGFzc2ltIHVtIMOtY29uZSBxdWUgcGVybWl0ZSBhIHZpc3VhbGl6YcOnw6NvIGVtIGNhc2NhdGEuXG4gKlxuICogQ2FzbyB1bSBlbmRlcmXDp28gc2VqYSBlc3BlY2lmaWNhZG8gbmEgcHJvcHJpZWRhZGUgYHAtZmF2b3JpdGUtc2VydmljZWAsIG8gY29tcG9uZW50ZSBwZXJtaXRlIGFvIHVzdcOhcmlvXG4gKiBmYXZvcml0YXIgYSBVUkwuXG4gKlxuICogSGF2ZW5kbyBuZWNlc3NpZGFkZSBkZSBpbmNsdWlyIHBhcsOibWV0cm9zIG5hIHJlcXVpc2nDp8OjbyBkbyBzZXJ2acOnbyxcbiAqIG8gY29tcG9uZW50ZSBkaXNww7VlIGRhIHByb3ByaWVkYWRlIGBwLXBhcmFtcy1zZXJ2aWNlYCBxdWUgcmVjZWJlIHVtIG9iamV0byBjb250ZW5kbyBhcyBpbmZvcm1hw6fDtWVzLlxuICovXG5leHBvcnQgY2xhc3MgUG9CcmVhZGNydW1iQmFzZUNvbXBvbmVudCB7XG5cbiAgaXRlbXNWaWV3OiBBcnJheTxQb0JyZWFkY3J1bWJJdGVtPiA9IFtdO1xuICBwcml2YXRlIF9pdGVtczogQXJyYXk8UG9CcmVhZGNydW1iSXRlbT4gPSBbXTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBQZXJtaXRlIGRlZmluaXIgdW1hIFVSTCBubyBjb21wb25lbnRlIGBwby1icmVhZGNydW1iYCBwYXJhIGZhdm9yaXRhciBvdSBkZXNmYXZvcml0YXIuXG4gICAqID4gUGFyYSB1dGlsaXphciBlc3RhIHByb3ByaWVkYWRlLCBvIMO6bHRpbW8gYFBvQnJlYWRjcnVtYkl0ZW1gIGRhIGxpc3RhIGRlIGl0ZW1zIGRhIHByb3ByaWVkYWRlIGBwLWl0ZW1zYCBkZXZlIHRlciB1bSBsaW5rIGluZm9ybWFkby5cbiAgICpcbiAgICogPiBBIEFQSSBkZXZlIGVzdGFyIHByZXBhcmFkYSBwYXJhIHJldG9ybmFyIHVtIG9iamV0byBubyBmb3JtYXRvIGB7IGlzRmF2b3JpdGU6IGJvb2xlYW4gfWAuXG4gICAqXG4gICAqIEFvIGluaWNpYXIsIG8gYHBvLWJyZWFkY3J1bWJgIGZheiB1bSBHRVQgbmEgVVJMIGRlZmluaWRhIG5hIHByb3ByaWVkYWRlIGBwLWZhdm9yaXRlLXNlcnZpY2VgIGUgZGV2ZSByZXRvcm5hciBhIHByb3ByaWVkYWRlXG4gICAqIGB7IGlzRmF2b3JpdGU6IGJvb2xlYW4gfWAgZG8gw7psdGltbyBgUG9CcmVhZGNydW1iSXRlbWAgZGVmaW5pZG8gbmEgbGlzdGEgZGUgaXRlbnMgZGEgcHJvcHJpZWRhZGUgYHAtaXRlbXNgLlxuICAgKlxuICAgKiBBbyBjbGljYXIgZW0gZmF2b3JpdGFyIG91IGRlc2Zhdm9yaXRhciBvIGBwby1icmVhZGNydW1iYCBmYXogdW0gUE9TVCBjb20gbyBsaW5rIGUgYSBwcm9wcmllZGFkZSBgeyBpc0Zhdm9yaXRlOiBib29sZWFuIH1gXG4gICAqIGRlZmluaWRvcyBubyDDumx0aW1vIGl0ZW0gZGEgcHJvcHJpZWRhZGUgYHAtaXRlbXNgLlxuICAgKlxuICAgKiA+IENhc28gYWxndW0gcGFyw6JtZXRybyBzZWphIGRlZmluaWRvIG5hIHByb3ByaWVkYWRlIGBwLXBhcmFtcy1zZXJ2aWNlYCwgbyBtZXNtbyBzZXLDoSBlbnZpYWRvIHBhcmEgYSBBUEkgZSByZXRvcm5hcsOhXG4gICAqIGFww7NzIGZhemVyIHVtIEdFVCBvdSBQT1NULlxuICAgKlxuICAgKiBFeGVtcGxvIGRlIFVSTCBjb250ZW5kbyBvIHNlcnZpw6dvIGRlIGZhdm9yaXRhciBvdSBkZXNmYXZvcml0YXI6XG4gICAqXG4gICAqIGBgYFxuICAgKiBodHRwczovL3BvcnRpbmFyaS5pby9zYW1wbGUvYXBpL2Zhdm9yaXRlXG4gICAqIGBgYFxuICAgKlxuICAgKiBBbyBmYXplciBvIEdFVCBvIGBwby1icmVhZGNydW1iYCBjb25jYXRlbmEgbyBsaW5rIGNvbSBhIFVSTCBkZSBzZXJ2acOnby4gRXhlbXBsbzpcbiAgICpcbiAgICogYGBgXG4gICAqIEdFVCBodHRwOi8vPGRvbWFpbj4vYXBpL2Zhdm9yaXRlP3VybD0vZXhhbXBsZVxuICAgKiBgYGBcbiAgICpcbiAgICogYGBgXG4gICAqIEdFVCBodHRwOi8vcG8ucG9ydGluYXJpLmNvbS5ici9zYW1wbGUvYXBpL2Zhdm9yaXRlP3VybD0vZXhhbXBsZVxuICAgKiBgYGBcbiAgICpcbiAgICogYGBgXG4gICAqIFBPU1RcbiAgICogcGF5bG9hZDogeyBpc0Zhdm9yaXRlOiB0cnVlLCB1cmw6ICcvZXhhbXBsZScgfVxuICAgKiBgYGBcbiAgICpcbiAgICogQ2FzbyBwb3NzdWEgcGFyw6JtZXRyb3MgZGVmaW5pZG9zIG5hIHByb3ByaWVkYWRlIGBwLXBhcmFtcy1zZXJ2aWNlYDpcbiAgICpcbiAgICogYGBgXG4gICAqIFBPU1RcbiAgICogcGF5bG9hZDogeyBpc0Zhdm9yaXRlOiB0cnVlLCB1cmw6IFwiL2V4YW1wbGVcIiwgcGFyYW1zOiBcInsgaWQ6IDE0LCB1c2VyOiAnZGV2LnBvcnRpbmFyaScgfVwiIH1cbiAgICogYGBgXG4gICAqXG4gICAqIEV4ZW1wbG9zIGRlIHJldG9ybm86XG4gICAqXG4gICAqIGBgYFxuICAgKiB7IGlzRmF2b3JpdGU6IHRydWUsIHVybDogXCIvZXhhbXBsZVwiIH1cbiAgICogYGBgXG4gICAqXG4gICAqIGBgYFxuICAgKiB7IGlzRmF2b3JpdGU6IGZhbHNlLCB1cmw6IFwiL2V4YW1wbGVcIiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBgYGBcbiAgICogeyBpc0Zhdm9yaXRlOiBmYWxzZSwgdXJsOiBcIi9leGFtcGxlXCIsIHBhcmFtczogXCJ7IGlkOiAxNCwgdXNlcjogJ2Rldi5wb3J0aW5hcmknIH1cIiB9XG4gICAqIGBgYFxuICAgKi9cbiAgQElucHV0KCdwLWZhdm9yaXRlLXNlcnZpY2UnKSBmYXZvcml0ZVNlcnZpY2U/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBMaXN0YSBkZSBpdGVucyBkbyBfYnJlYWRjcnVtYl8uXG4gICAqXG4gICAqICoqRXhlbXBsbzoqKlxuICAgKiBgYGBcbiAgICogeyBsYWJlbDogJ1BvIFBvcnRhbCcsIGxpbms6ICdwb3J0YWwnIH1cbiAgICogYGBgXG4gICAqL1xuICBASW5wdXQoJ3AtaXRlbXMnKSBzZXQgaXRlbXMoaXRlbXM6IEFycmF5PFBvQnJlYWRjcnVtYkl0ZW0+KSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLml0ZW1zVmlldyA9IFtdLmNvbmNhdChpdGVtcyk7XG4gIH1cblxuICBnZXQgaXRlbXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2l0ZW1zO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogT2JqZXRvIHF1ZSBwb3NzaWJpbGl0YSBvIGVudmlvIGRlIHBhcsOibWV0cm9zIGFkaWNpb25haXMgw6AgcmVxdWlzacOnw6NvLlxuICAgKi9cbiAgQElucHV0KCdwLXBhcmFtcy1zZXJ2aWNlJykgcGFyYW1zU2VydmljZT86IG9iamVjdDtcblxuICBwcm90ZWN0ZWQgY2xpY2tvdXRMaXN0ZW5lcjogKCkgPT4gdm9pZDtcblxuICBwcm90ZWN0ZWQgcmVzaXplTGlzdGVuZXI6ICgpID0+IHZvaWQ7XG5cbn1cbiJdfQ==