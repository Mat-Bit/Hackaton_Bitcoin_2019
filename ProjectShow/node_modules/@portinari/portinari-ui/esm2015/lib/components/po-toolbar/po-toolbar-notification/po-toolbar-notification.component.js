/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';
/**
 * \@docsPrivate
 *
 * \@usedBy PoToolbarComponent
 *
 * \@description
 *
 * O componente `po-toolbar-notification` tem como objetivo notificar o usuário de novas ações da aplicação que necessitam de atenção,
 * como por exemplo um alerta de nova mensagem.
 *
 * O mesmo também permite que a cada nova notificação seja incrementado e exibido, ou não, este número em uma *tag* ao lado do
 * ícone de notificações.
 */
export class PoToolbarNotificationComponent {
    constructor() {
        this._notificationNumber = 0;
    }
    /**
     * Define o número de notificações.
     * @param {?} value
     * @return {?}
     */
    set notificationNumber(value) {
        this._notificationNumber = Number.isInteger(value) ? value : 0;
    }
    /**
     * @return {?}
     */
    get notificationNumber() {
        return this._notificationNumber;
    }
}
PoToolbarNotificationComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-toolbar-notification',
                template: "<div class=\"po-toolbar-notification po-clickable\" (click)=\"popup.toggle()\">\n  <span #notification class=\"po-icon po-icon-notification po-toolbar-icon\"></span>\n  <div *ngIf=\"notificationNumber\" class=\"po-toolbar-notification-badge\">\n    {{ notificationNumber }}\n  </div>\n</div>\n\n<po-popup #popup\n  [p-actions]=\"notificationActions\"\n  [p-target]=\"notification\">\n</po-popup>\n",
                providers: [PoControlPositionService]
            }] }
];
PoToolbarNotificationComponent.propDecorators = {
    notificationActions: [{ type: Input, args: ['p-notification-actions',] }],
    notificationNumber: [{ type: Input, args: ['p-notification-number',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoToolbarNotificationComponent.prototype._notificationNumber;
    /**
     * Define uma lista de ações.
     * @type {?}
     */
    PoToolbarNotificationComponent.prototype.notificationActions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbGJhci1ub3RpZmljYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10b29sYmFyL3BvLXRvb2xiYXItbm90aWZpY2F0aW9uL3BvLXRvb2xiYXItbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sbUVBQW1FLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBc0I3RyxNQUFNLE9BQU8sOEJBQThCO0lBTDNDO1FBT1Usd0JBQW1CLEdBQVksQ0FBQyxDQUFDO0lBYzNDLENBQUM7Ozs7OztJQVJDLElBQW9DLGtCQUFrQixDQUFDLEtBQWE7UUFDbEUsSUFBSSxDQUFDLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7Ozs7SUFFRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUNsQyxDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLHlaQUF1RDtnQkFDdkQsU0FBUyxFQUFFLENBQUUsd0JBQXdCLENBQUU7YUFDeEM7OztrQ0FNRSxLQUFLLFNBQUMsd0JBQXdCO2lDQUc5QixLQUFLLFNBQUMsdUJBQXVCOzs7Ozs7O0lBTjlCLDZEQUF5Qzs7Ozs7SUFHekMsNkRBQThFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0NvbnRyb2xQb3NpdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9wby1jb250cm9sLXBvc2l0aW9uL3BvLWNvbnRyb2wtcG9zaXRpb24uc2VydmljZSc7XG5cbmltcG9ydCB7IFBvVG9vbGJhckFjdGlvbiB9IGZyb20gJy4uL3BvLXRvb2xiYXItYWN0aW9uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQHVzZWRCeSBQb1Rvb2xiYXJDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLXRvb2xiYXItbm90aWZpY2F0aW9uYCB0ZW0gY29tbyBvYmpldGl2byBub3RpZmljYXIgbyB1c3XDoXJpbyBkZSBub3ZhcyBhw6fDtWVzIGRhIGFwbGljYcOnw6NvIHF1ZSBuZWNlc3NpdGFtIGRlIGF0ZW7Dp8OjbyxcbiAqIGNvbW8gcG9yIGV4ZW1wbG8gdW0gYWxlcnRhIGRlIG5vdmEgbWVuc2FnZW0uXG4gKlxuICogTyBtZXNtbyB0YW1iw6ltIHBlcm1pdGUgcXVlIGEgY2FkYSBub3ZhIG5vdGlmaWNhw6fDo28gc2VqYSBpbmNyZW1lbnRhZG8gZSBleGliaWRvLCBvdSBuw6NvLCBlc3RlIG7Dum1lcm8gZW0gdW1hICp0YWcqIGFvIGxhZG8gZG9cbiAqIMOtY29uZSBkZSBub3RpZmljYcOnw7Vlcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdG9vbGJhci1ub3RpZmljYXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdG9vbGJhci1ub3RpZmljYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFsgUG9Db250cm9sUG9zaXRpb25TZXJ2aWNlIF1cbn0pXG5leHBvcnQgY2xhc3MgUG9Ub29sYmFyTm90aWZpY2F0aW9uQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9ub3RpZmljYXRpb25OdW1iZXI/OiBudW1iZXIgPSAwO1xuXG4gIC8qKiBEZWZpbmUgdW1hIGxpc3RhIGRlIGHDp8O1ZXMuICovXG4gIEBJbnB1dCgncC1ub3RpZmljYXRpb24tYWN0aW9ucycpIG5vdGlmaWNhdGlvbkFjdGlvbnM/OiBBcnJheTxQb1Rvb2xiYXJBY3Rpb24+O1xuXG4gIC8qKiBEZWZpbmUgbyBuw7ptZXJvIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xuICBASW5wdXQoJ3Atbm90aWZpY2F0aW9uLW51bWJlcicpIHNldCBub3RpZmljYXRpb25OdW1iZXIodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX25vdGlmaWNhdGlvbk51bWJlciA9IE51bWJlci5pc0ludGVnZXIodmFsdWUpID8gdmFsdWUgOiAwO1xuICB9XG5cbiAgZ2V0IG5vdGlmaWNhdGlvbk51bWJlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fbm90aWZpY2F0aW9uTnVtYmVyO1xuICB9XG5cbn1cbiJdfQ==