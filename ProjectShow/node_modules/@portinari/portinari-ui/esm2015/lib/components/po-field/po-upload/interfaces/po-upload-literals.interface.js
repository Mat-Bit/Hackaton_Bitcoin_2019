/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * \@usedBy PoUploadComponent
 *
 * \@description
 *
 * Interface para definição das literais usadas no `po-upload`.
 * @record
 */
export function PoUploadLiterals() { }
if (false) {
    /**
     * @deprecated 3.X.X
     * \@description
     *
     * **Deprecated**
     *
     * Texto exibido no label para cancelar o envio.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.cancel;
    /**
     * @deprecated 3.X.X
     * \@description
     *
     * **Deprecated**
     *
     * Texto exibido no label para excluir o arquivo.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.deleteFile;
    /**
     * Texto indicativo para a área onde os arquivos devem ser arrastados quando utilizada a propriedade `p-drag-drop`.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.dragFilesHere;
    /**
     * Texto indicativo para a área onde os diretórios devem ser arrastados quando utilizada a propriedade `p-drag-drop`.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.dragFoldersHere;
    /**
     * Texto indicativo para a área onde os arquivos devem ser soltos quando utilizada a propriedade `p-drag-drop`
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.dropFilesHere;
    /**
     * Texto indicativo para a área onde os diretórios devem ser soltos quando utilizada a propriedade `p-drag-drop`.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.dropFoldersHere;
    /**
     * Parâmetro *files* para o texto de exibição quando arrastado um arquivo para um local inválido com a opção de *dragDrop*.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.files;
    /**
     * Parâmetro *folders* para o texto de exibição quando arrastado um arquivo para um local inválido com a opção de *dragDrop*.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.folders;
    /**
     * Texto exibido caso o usuário arrastar um arquivo para um local inválido ao utilizar a opção de *dragDrop*.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.invalidDropArea;
    /**
     * Texto exibido no label do botão de seleção dos arquivos.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.selectFile;
    /**
     * Texto exibido no label do botão de seleção dos arquivos ao utilizar a propriedade `p-multiple`.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.selectFiles;
    /**
     * Texto exibido no label do botão de seleção dos arquivos ao utilizar a propriedade `p-directory`.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.selectFolder;
    /**
     * Texto utilizado para indicar a possibilidade de seleção de arquivos na área onde podem ser arrastados os arquivos
     * ao utilizar a opção de *dragDrop*.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.selectFilesOnComputer;
    /**
     * Texto utilizado para indicar a possibilidade de seleção de diretório na área onde podem ser arrastados os arquivos
     * ao utilizar a opção de *dragDrop*.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.selectFolderOnComputer;
    /**
     * Texto exibido no label do botão para iniciar o envio dos arquivos.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.startSending;
    /**
     * @deprecated 3.X.X
     * \@description
     *
     * **Deprecated**
     *
     * Texto exibido no label para tentar novamente.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.tryAgain;
    /**
     * Texto a ser exibido quando ocorrer erro no envio do arquivo.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.errorOccurred;
    /**
     * Texto a ser exibido quando o envio do arquivo for realizado com sucesso.
     * @type {?|undefined}
     */
    PoUploadLiterals.prototype.sentWithSuccess;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWxpdGVyYWxzLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL2ludGVyZmFjZXMvcG8tdXBsb2FkLWxpdGVyYWxzLmludGVyZmFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFPQSxzQ0FtRkM7Ozs7Ozs7Ozs7O0lBekVDLGtDQUFnQjs7Ozs7Ozs7OztJQVVoQixzQ0FBb0I7Ozs7O0lBR3BCLHlDQUF1Qjs7Ozs7SUFHdkIsMkNBQXlCOzs7OztJQUd6Qix5Q0FBdUI7Ozs7O0lBR3ZCLDJDQUF5Qjs7Ozs7SUFHekIsaUNBQWU7Ozs7O0lBR2YsbUNBQWlCOzs7OztJQUdqQiwyQ0FBeUI7Ozs7O0lBR3pCLHNDQUFvQjs7Ozs7SUFHcEIsdUNBQXFCOzs7OztJQUdyQix3Q0FBc0I7Ozs7OztJQU10QixpREFBK0I7Ozs7OztJQU0vQixrREFBZ0M7Ozs7O0lBR2hDLHdDQUFzQjs7Ozs7Ozs7OztJQVV0QixvQ0FBa0I7Ozs7O0lBR2xCLHlDQUF1Qjs7Ozs7SUFHdkIsMkNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB1c2VkQnkgUG9VcGxvYWRDb21wb25lbnRcclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIEludGVyZmFjZSBwYXJhIGRlZmluacOnw6NvIGRhcyBsaXRlcmFpcyB1c2FkYXMgbm8gYHBvLXVwbG9hZGAuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFBvVXBsb2FkTGl0ZXJhbHMge1xyXG5cclxuICAvKipcclxuICAgKiBAZGVwcmVjYXRlZCAzLlguWFxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqXHJcbiAgICogKipEZXByZWNhdGVkKipcclxuICAgKlxyXG4gICAqIFRleHRvIGV4aWJpZG8gbm8gbGFiZWwgcGFyYSBjYW5jZWxhciBvIGVudmlvLlxyXG4gICAqL1xyXG4gIGNhbmNlbD86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogQGRlcHJlY2F0ZWQgMy5YLlhcclxuICAgKiBAZGVzY3JpcHRpb25cclxuICAgKlxyXG4gICAqICoqRGVwcmVjYXRlZCoqXHJcbiAgICpcclxuICAgKiBUZXh0byBleGliaWRvIG5vIGxhYmVsIHBhcmEgZXhjbHVpciBvIGFycXVpdm8uXHJcbiAgICovXHJcbiAgZGVsZXRlRmlsZT86IHN0cmluZztcclxuXHJcbiAgLyoqIFRleHRvIGluZGljYXRpdm8gcGFyYSBhIMOhcmVhIG9uZGUgb3MgYXJxdWl2b3MgZGV2ZW0gc2VyIGFycmFzdGFkb3MgcXVhbmRvIHV0aWxpemFkYSBhIHByb3ByaWVkYWRlIGBwLWRyYWctZHJvcGAuICovXHJcbiAgZHJhZ0ZpbGVzSGVyZT86IHN0cmluZztcclxuXHJcbiAgLyoqIFRleHRvIGluZGljYXRpdm8gcGFyYSBhIMOhcmVhIG9uZGUgb3MgZGlyZXTDs3Jpb3MgZGV2ZW0gc2VyIGFycmFzdGFkb3MgcXVhbmRvIHV0aWxpemFkYSBhIHByb3ByaWVkYWRlIGBwLWRyYWctZHJvcGAuICovXHJcbiAgZHJhZ0ZvbGRlcnNIZXJlPzogc3RyaW5nO1xyXG5cclxuICAvKiogVGV4dG8gaW5kaWNhdGl2byBwYXJhIGEgw6FyZWEgb25kZSBvcyBhcnF1aXZvcyBkZXZlbSBzZXIgc29sdG9zIHF1YW5kbyB1dGlsaXphZGEgYSBwcm9wcmllZGFkZSBgcC1kcmFnLWRyb3BgICovXHJcbiAgZHJvcEZpbGVzSGVyZT86IHN0cmluZztcclxuXHJcbiAgLyoqIFRleHRvIGluZGljYXRpdm8gcGFyYSBhIMOhcmVhIG9uZGUgb3MgZGlyZXTDs3Jpb3MgZGV2ZW0gc2VyIHNvbHRvcyBxdWFuZG8gdXRpbGl6YWRhIGEgcHJvcHJpZWRhZGUgYHAtZHJhZy1kcm9wYC4gKi9cclxuICBkcm9wRm9sZGVyc0hlcmU/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBQYXLDom1ldHJvICpmaWxlcyogcGFyYSBvIHRleHRvIGRlIGV4aWJpw6fDo28gcXVhbmRvIGFycmFzdGFkbyB1bSBhcnF1aXZvIHBhcmEgdW0gbG9jYWwgaW52w6FsaWRvIGNvbSBhIG9ww6fDo28gZGUgKmRyYWdEcm9wKi4gKi9cclxuICBmaWxlcz86IHN0cmluZztcclxuXHJcbiAgLyoqIFBhcsOibWV0cm8gKmZvbGRlcnMqIHBhcmEgbyB0ZXh0byBkZSBleGliacOnw6NvIHF1YW5kbyBhcnJhc3RhZG8gdW0gYXJxdWl2byBwYXJhIHVtIGxvY2FsIGludsOhbGlkbyBjb20gYSBvcMOnw6NvIGRlICpkcmFnRHJvcCouICovXHJcbiAgZm9sZGVycz86IHN0cmluZztcclxuXHJcbiAgLyoqIFRleHRvIGV4aWJpZG8gY2FzbyBvIHVzdcOhcmlvIGFycmFzdGFyIHVtIGFycXVpdm8gcGFyYSB1bSBsb2NhbCBpbnbDoWxpZG8gYW8gdXRpbGl6YXIgYSBvcMOnw6NvIGRlICpkcmFnRHJvcCouICovXHJcbiAgaW52YWxpZERyb3BBcmVhPzogc3RyaW5nO1xyXG5cclxuICAvKiogVGV4dG8gZXhpYmlkbyBubyBsYWJlbCBkbyBib3TDo28gZGUgc2VsZcOnw6NvIGRvcyBhcnF1aXZvcy4gKi9cclxuICBzZWxlY3RGaWxlPzogc3RyaW5nO1xyXG5cclxuICAvKiogVGV4dG8gZXhpYmlkbyBubyBsYWJlbCBkbyBib3TDo28gZGUgc2VsZcOnw6NvIGRvcyBhcnF1aXZvcyBhbyB1dGlsaXphciBhIHByb3ByaWVkYWRlIGBwLW11bHRpcGxlYC4gKi9cclxuICBzZWxlY3RGaWxlcz86IHN0cmluZztcclxuXHJcbiAgLyoqIFRleHRvIGV4aWJpZG8gbm8gbGFiZWwgZG8gYm90w6NvIGRlIHNlbGXDp8OjbyBkb3MgYXJxdWl2b3MgYW8gdXRpbGl6YXIgYSBwcm9wcmllZGFkZSBgcC1kaXJlY3RvcnlgLiAqL1xyXG4gIHNlbGVjdEZvbGRlcj86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogVGV4dG8gdXRpbGl6YWRvIHBhcmEgaW5kaWNhciBhIHBvc3NpYmlsaWRhZGUgZGUgc2VsZcOnw6NvIGRlIGFycXVpdm9zIG5hIMOhcmVhIG9uZGUgcG9kZW0gc2VyIGFycmFzdGFkb3Mgb3MgYXJxdWl2b3NcclxuICAgKiBhbyB1dGlsaXphciBhIG9ww6fDo28gZGUgKmRyYWdEcm9wKi5cclxuICAgKi9cclxuICBzZWxlY3RGaWxlc09uQ29tcHV0ZXI/OiBzdHJpbmc7XHJcblxyXG4gIC8qKlxyXG4gICAqIFRleHRvIHV0aWxpemFkbyBwYXJhIGluZGljYXIgYSBwb3NzaWJpbGlkYWRlIGRlIHNlbGXDp8OjbyBkZSBkaXJldMOzcmlvIG5hIMOhcmVhIG9uZGUgcG9kZW0gc2VyIGFycmFzdGFkb3Mgb3MgYXJxdWl2b3NcclxuICAgKiBhbyB1dGlsaXphciBhIG9ww6fDo28gZGUgKmRyYWdEcm9wKi5cclxuICAgKi9cclxuICBzZWxlY3RGb2xkZXJPbkNvbXB1dGVyPzogc3RyaW5nO1xyXG5cclxuICAvKiogVGV4dG8gZXhpYmlkbyBubyBsYWJlbCBkbyBib3TDo28gcGFyYSBpbmljaWFyIG8gZW52aW8gZG9zIGFycXVpdm9zLiAqL1xyXG4gIHN0YXJ0U2VuZGluZz86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogQGRlcHJlY2F0ZWQgMy5YLlhcclxuICAgKiBAZGVzY3JpcHRpb25cclxuICAgKlxyXG4gICAqICoqRGVwcmVjYXRlZCoqXHJcbiAgICpcclxuICAgKiBUZXh0byBleGliaWRvIG5vIGxhYmVsIHBhcmEgdGVudGFyIG5vdmFtZW50ZS5cclxuICAgKi9cclxuICB0cnlBZ2Fpbj86IHN0cmluZztcclxuXHJcbiAgLyoqIFRleHRvIGEgc2VyIGV4aWJpZG8gcXVhbmRvIG9jb3JyZXIgZXJybyBubyBlbnZpbyBkbyBhcnF1aXZvLiAqL1xyXG4gIGVycm9yT2NjdXJyZWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBUZXh0byBhIHNlciBleGliaWRvIHF1YW5kbyBvIGVudmlvIGRvIGFycXVpdm8gZm9yIHJlYWxpemFkbyBjb20gc3VjZXNzby4gKi9cclxuICBzZW50V2l0aFN1Y2Nlc3M/OiBzdHJpbmc7XHJcblxyXG59XHJcbiJdfQ==