/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
export class PoCalendarLangService {
    constructor() {
        this.months = [
            {
                pt: 'Janeiro',
                en: 'January',
                es: 'Enero'
            },
            {
                pt: 'Fevereiro',
                en: 'February',
                es: 'Febrero'
            },
            {
                pt: 'Março',
                en: 'March',
                es: 'Marzo'
            },
            {
                pt: 'Abril',
                en: 'April',
                es: 'Abril'
            },
            {
                pt: 'Maio',
                en: 'May',
                es: 'Mayo'
            },
            {
                pt: 'Junho',
                en: 'June',
                es: 'Junio'
            },
            {
                pt: 'Julho',
                en: 'July',
                es: 'Julio'
            },
            {
                pt: 'Agosto',
                en: 'August',
                es: 'Agosto'
            },
            {
                pt: 'Setembro',
                en: 'September',
                es: 'Setiembre'
            },
            {
                pt: 'Outubro',
                en: 'October',
                es: 'Octubre'
            },
            {
                pt: 'Novembro',
                en: 'November',
                es: 'Noviembre'
            },
            {
                pt: 'Dezembro',
                en: 'December',
                es: 'Diciembre'
            }
        ];
        this.shortWeekDays = [
            {
                pt: 'Dom',
                en: 'Sun',
                es: 'Dom'
            },
            {
                pt: 'Seg',
                en: 'Mon',
                es: 'Lun'
            },
            {
                pt: 'Ter',
                en: 'Tue',
                es: 'Mar'
            },
            {
                pt: 'Qua',
                en: 'Wed',
                es: 'Mié'
            },
            {
                pt: 'Qui',
                en: 'Thu',
                es: 'Jue'
            },
            {
                pt: 'Sex',
                en: 'Fri',
                es: 'Vie'
            },
            {
                pt: 'Sáb',
                en: 'Sat',
                es: 'Sáb'
            }
        ];
        this.wordMonth = {
            pt: 'Mês',
            en: 'Month',
            es: 'Mes'
        };
        this.wordYear = {
            pt: 'Ano',
            en: 'Year',
            es: 'Año'
        };
        this.lang = 'pt';
    }
    /**
     * @param {?} lang
     * @return {?}
     */
    setLanguage(lang) {
        if (lang && lang.length >= 2) {
            lang = lang.toLowerCase().slice(0, 2);
            this.lang = (lang === 'pt' || lang === 'en' || lang === 'es') ? lang : 'pt';
        }
    }
    /**
     * @return {?}
     */
    getWordMonth() {
        return this.wordMonth[this.lang];
    }
    /**
     * @return {?}
     */
    getWordYear() {
        return this.wordYear[this.lang];
    }
    /**
     * @param {?} month
     * @return {?}
     */
    getMonth(month) {
        return this.months[month][this.lang];
    }
    /**
     * @return {?}
     */
    getArrayMonths() {
        /** @type {?} */
        const arrMonths = Array();
        for (let i = 0; i < this.months.length; i++) {
            arrMonths.push(this.months[i][this.lang]);
        }
        return arrMonths;
    }
    /**
     * @param {?} day
     * @return {?}
     */
    getWeedDays(day) {
        return this.shortWeekDays[day][this.lang];
    }
    /**
     * @return {?}
     */
    getArrayWeekDays() {
        /** @type {?} */
        const arrWeekDays = Array();
        for (let i = 0; i < this.shortWeekDays.length; i++) {
            arrWeekDays.push(this.shortWeekDays[i][this.lang]);
        }
        return arrWeekDays;
    }
}
PoCalendarLangService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
PoCalendarLangService.ctorParameters = () => [];
if (false) {
    /** @type {?} */
    PoCalendarLangService.prototype.months;
    /** @type {?} */
    PoCalendarLangService.prototype.shortWeekDays;
    /** @type {?} */
    PoCalendarLangService.prototype.wordMonth;
    /** @type {?} */
    PoCalendarLangService.prototype.wordYear;
    /** @type {?} */
    PoCalendarLangService.prototype.lang;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2FsZW5kYXIubGFuZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1kYXRlcGlja2VyL3BvLWNhbGVuZGFyL3BvLWNhbGVuZGFyLmxhbmcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxNQUFNLE9BQU8scUJBQXFCO0lBcUhoQztRQW5IQSxXQUFNLEdBQUc7WUFDUDtnQkFDRSxFQUFFLEVBQUUsU0FBUztnQkFDYixFQUFFLEVBQUUsU0FBUztnQkFDYixFQUFFLEVBQUUsT0FBTzthQUNaO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLFdBQVc7Z0JBQ2YsRUFBRSxFQUFFLFVBQVU7Z0JBQ2QsRUFBRSxFQUFFLFNBQVM7YUFDZDtZQUNEO2dCQUNFLEVBQUUsRUFBRSxPQUFPO2dCQUNYLEVBQUUsRUFBRSxPQUFPO2dCQUNYLEVBQUUsRUFBRSxPQUFPO2FBQ1o7WUFDRDtnQkFDRSxFQUFFLEVBQUUsT0FBTztnQkFDWCxFQUFFLEVBQUUsT0FBTztnQkFDWCxFQUFFLEVBQUUsT0FBTzthQUNaO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLE1BQU07Z0JBQ1YsRUFBRSxFQUFFLEtBQUs7Z0JBQ1QsRUFBRSxFQUFFLE1BQU07YUFDWDtZQUNEO2dCQUNFLEVBQUUsRUFBRSxPQUFPO2dCQUNYLEVBQUUsRUFBRSxNQUFNO2dCQUNWLEVBQUUsRUFBRSxPQUFPO2FBQ1o7WUFDRDtnQkFDRSxFQUFFLEVBQUUsT0FBTztnQkFDWCxFQUFFLEVBQUUsTUFBTTtnQkFDVixFQUFFLEVBQUUsT0FBTzthQUNaO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLFFBQVE7Z0JBQ1osRUFBRSxFQUFFLFFBQVE7Z0JBQ1osRUFBRSxFQUFFLFFBQVE7YUFDYjtZQUNEO2dCQUNFLEVBQUUs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SUFBSSxDQUFDLENBQUMsQ0FBQztTQUMzQztRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLEdBQVc7UUFDckIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QyxDQUFDOzs7O0lBRUQsZ0JBQWdCOztjQUNSLFdBQVcsR0FBRyxLQUFLLEVBQUU7UUFDM0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xELFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUNwRDtRQUNELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7OztZQTdKRixVQUFVOzs7Ozs7SUFHVCx1Q0E2REU7O0lBRUYsOENBb0NFOztJQUVGLDBDQUlFOztJQUVGLHlDQUlFOztJQUVGLHFDQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9DYWxlbmRhckxhbmdTZXJ2aWNlIHtcblxuICBtb250aHMgPSBbXG4gICAge1xuICAgICAgcHQ6ICdKYW5laXJvJyxcbiAgICAgIGVuOiAnSmFudWFyeScsXG4gICAgICBlczogJ0VuZXJvJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdGZXZlcmVpcm8nLFxuICAgICAgZW46ICdGZWJydWFyeScsXG4gICAgICBlczogJ0ZlYnJlcm8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ01hcsOnbycsXG4gICAgICBlbjogJ01hcmNoJyxcbiAgICAgIGVzOiAnTWFyem8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0FicmlsJyxcbiAgICAgIGVuOiAnQXByaWwnLFxuICAgICAgZXM6ICdBYnJpbCdcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnTWFpbycsXG4gICAgICBlbjogJ01heScsXG4gICAgICBlczogJ01heW8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0p1bmhvJyxcbiAgICAgIGVuOiAnSnVuZScsXG4gICAgICBlczogJ0p1bmlvJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdKdWxobycsXG4gICAgICBlbjogJ0p1bHknLFxuICAgICAgZXM6ICdKdWxpbydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnQWdvc3RvJyxcbiAgICAgIGVuOiAnQXVndXN0JyxcbiAgICAgIGVzOiAnQWdvc3RvJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdTZXRlbWJybycsXG4gICAgICBlbjogJ1NlcHRlbWJlcicsXG4gICAgICBlczogJ1NldGllbWJyZSdcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnT3V0dWJybycsXG4gICAgICBlbjogJ09jdG9iZXInLFxuICAgICAgZXM6ICdPY3R1YnJlJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdOb3ZlbWJybycsXG4gICAgICBlbjogJ05vdmVtYmVyJyxcbiAgICAgIGVzOiAnTm92aWVtYnJlJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdEZXplbWJybycsXG4gICAgICBlbjogJ0RlY2VtYmVyJyxcbiAgICAgIGVzOiAnRGljaWVtYnJlJ1xuICAgIH1cbiAgXTtcblxuICBzaG9ydFdlZWtEYXlzID0gW1xuICAgIHtcbiAgICAgIHB0OiAnRG9tJyxcbiAgICAgIGVuOiAnU3VuJyxcbiAgICAgIGVzOiAnRG9tJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdTZWcnLFxuICAgICAgZW46ICdNb24nLFxuICAgICAgZXM6ICdMdW4nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1RlcicsXG4gICAgICBlbjogJ1R1ZScsXG4gICAgICBlczogJ01hcidcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnUXVhJyxcbiAgICAgIGVuOiAnV2VkJyxcbiAgICAgIGVzOiAnTWnDqSdcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnUXVpJyxcbiAgICAgIGVuOiAnVGh1JyxcbiAgICAgIGVzOiAnSnVlJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdTZXgnLFxuICAgICAgZW46ICdGcmknLFxuICAgICAgZXM6ICdWaWUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1PDoWInLFxuICAgICAgZW46ICdTYXQnLFxuICAgICAgZXM6ICdTw6FiJ1xuICAgIH1cbiAgXTtcblxuICB3b3JkTW9udGggPSB7XG4gICAgcHQ6ICdNw6pzJyxcbiAgICBlbjogJ01vbnRoJyxcbiAgICBlczogJ01lcydcbiAgfTtcblxuICB3b3JkWWVhciA9IHtcbiAgICBwdDogJ0FubycsXG4gICAgZW46ICdZZWFyJyxcbiAgICBlczogJ0HDsW8nXG4gIH07XG5cbiAgbGFuZyA9ICdwdCc7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBzZXRMYW5ndWFnZShsYW5nOiBzdHJpbmcpIHtcbiAgICBpZiAobGFuZyAmJiBsYW5nLmxlbmd0aCA+PSAyKSB7XG4gICAgICBsYW5nID0gbGFuZy50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsIDIpO1xuICAgICAgdGhpcy5sYW5nID0gKGxhbmcgPT09ICdwdCcgfHwgbGFuZyA9PT0gJ2VuJyB8fCBsYW5nID09PSAnZXMnKSA/IGxhbmcgOiAncHQnO1xuICAgIH1cbiAgfVxuXG4gIGdldFdvcmRNb250aCgpIHtcbiAgICByZXR1cm4gdGhpcy53b3JkTW9udGhbdGhpcy5sYW5nXTtcbiAgfVxuXG4gIGdldFdvcmRZZWFyKCkge1xuICAgIHJldHVybiB0aGlzLndvcmRZZWFyW3RoaXMubGFuZ107XG4gIH1cblxuICBnZXRNb250aChtb250aDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHRoaXMubW9udGhzW21vbnRoXVt0aGlzLmxhbmddO1xuICB9XG5cbiAgZ2V0QXJyYXlNb250aHMoKSB7XG4gICAgY29uc3QgYXJyTW9udGhzID0gQXJyYXkoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubW9udGhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnJNb250aHMucHVzaCh0aGlzLm1vbnRoc1tpXVt0aGlzLmxhbmddKTtcbiAgICB9XG4gICAgcmV0dXJuIGFyck1vbnRocztcbiAgfVxuXG4gIGdldFdlZWREYXlzKGRheTogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHRoaXMuc2hvcnRXZWVrRGF5c1tkYXldW3RoaXMubGFuZ107XG4gIH1cblxuICBnZXRBcnJheVdlZWtEYXlzKCkge1xuICAgIGNvbnN0IGFycldlZWtEYXlzID0gQXJyYXkoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2hvcnRXZWVrRGF5cy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJyV2Vla0RheXMucHVzaCh0aGlzLnNob3J0V2Vla0RheXNbaV1bdGhpcy5sYW5nXSk7XG4gICAgfVxuICAgIHJldHVybiBhcnJXZWVrRGF5cztcbiAgfVxufVxuIl19