/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { convertToBoolean, getShortBrowserLanguage } from '../../../utils/util';
/**
 * \@docsPrivate
 *
 * Componente de uso interno, responsável por atribuir uma label para o campo
 */
export class PoFieldContainerComponent {
    constructor() {
        this._optional = false;
    }
    /**
     * Indica se o campo será opcional.
     * @param {?} value
     * @return {?}
     */
    set optional(value) {
        this._optional = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get optional() {
        return this._optional;
    }
    /**
     * @return {?}
     */
    getOptionalText() {
        /** @type {?} */
        const browserLanguage = getShortBrowserLanguage();
        /** @type {?} */
        const optional = {
            pt: '(Opcional)',
            en: '(Optional)',
            es: '(Opcional)'
        };
        return optional[browserLanguage];
    }
}
PoFieldContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-field-container',
                template: "<div class=\"po-field-container\">\n  <div class=\"po-field-container-title\">\n    <span class=\"po-field-title\">{{ label }}</span>\n    <span class=\"po-field-optional\" *ngIf=\"optional && (label || help)\">{{ getOptionalText() }}</span>\n  </div>\n\n  <div class=\"po-field-help\" *ngIf=\"help\">{{ help }}</div>\n\n  <ng-content></ng-content>\n</div>\n"
            }] }
];
PoFieldContainerComponent.propDecorators = {
    label: [{ type: Input, args: ['p-label',] }],
    help: [{ type: Input, args: ['p-help',] }],
    optional: [{ type: Input, args: ['p-optional',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoFieldContainerComponent.prototype._optional;
    /**
     * Label do campo.
     * @type {?}
     */
    PoFieldContainerComponent.prototype.label;
    /**
     * Texto de apoio do campo.
     * @type {?}
     */
    PoFieldContainerComponent.prototype.help;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZmllbGQtY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tZmllbGQtY29udGFpbmVyL3BvLWZpZWxkLWNvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7QUFXaEYsTUFBTSxPQUFPLHlCQUF5QjtJQUp0QztRQU1VLGNBQVMsR0FBWSxLQUFLLENBQUM7SUE2QnJDLENBQUM7Ozs7OztJQXBCQyxJQUF5QixRQUFRLENBQUMsS0FBYztRQUM5QyxJQUFJLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVELGVBQWU7O2NBQ1AsZUFBZSxHQUFHLHVCQUF1QixFQUFFOztjQUUzQyxRQUFRLEdBQUc7WUFDZixFQUFFLEVBQUUsWUFBWTtZQUNoQixFQUFFLEVBQUUsWUFBWTtZQUNoQixFQUFFLEVBQUUsWUFBWTtTQUNqQjtRQUVELE9BQU8sUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ25DLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsa1hBQWtEO2FBQ25EOzs7b0JBTUUsS0FBSyxTQUFDLFNBQVM7bUJBR2YsS0FBSyxTQUFDLFFBQVE7dUJBR2QsS0FBSyxTQUFDLFlBQVk7Ozs7Ozs7SUFUbkIsOENBQW1DOzs7OztJQUduQywwQ0FBaUM7Ozs7O0lBR2pDLHlDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiwgZ2V0U2hvcnRCcm93c2VyTGFuZ3VhZ2UgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBDb21wb25lbnRlIGRlIHVzbyBpbnRlcm5vLCByZXNwb25zw6F2ZWwgcG9yIGF0cmlidWlyIHVtYSBsYWJlbCBwYXJhIG8gY2FtcG9cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tZmllbGQtY29udGFpbmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLWZpZWxkLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9GaWVsZENvbnRhaW5lckNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfb3B0aW9uYWw6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKiogTGFiZWwgZG8gY2FtcG8uICovXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsPzogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBkZSBhcG9pbyBkbyBjYW1wby4gKi9cbiAgQElucHV0KCdwLWhlbHAnKSBoZWxwOiBzdHJpbmc7XG5cbiAgLyoqIEluZGljYSBzZSBvIGNhbXBvIHNlcsOhIG9wY2lvbmFsLiAqL1xuICBASW5wdXQoJ3Atb3B0aW9uYWwnKSBzZXQgb3B0aW9uYWwodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9vcHRpb25hbCA9IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IG9wdGlvbmFsKCkge1xuICAgIHJldHVybiB0aGlzLl9vcHRpb25hbDtcbiAgfVxuXG4gIGdldE9wdGlvbmFsVGV4dCgpIHtcbiAgICBjb25zdCBicm93c2VyTGFuZ3VhZ2UgPSBnZXRTaG9ydEJyb3dzZXJMYW5ndWFnZSgpO1xuXG4gICAgY29uc3Qgb3B0aW9uYWwgPSB7XG4gICAgICBwdDogJyhPcGNpb25hbCknLFxuICAgICAgZW46ICcoT3B0aW9uYWwpJyxcbiAgICAgIGVzOiAnKE9wY2lvbmFsKSdcbiAgICB9O1xuXG4gICAgcmV0dXJuIG9wdGlvbmFsW2Jyb3dzZXJMYW5ndWFnZV07XG4gIH1cblxufVxuIl19