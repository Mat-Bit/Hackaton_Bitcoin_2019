/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, forwardRef, Renderer2, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { isMobile } from './../../../utils/util';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { PoMultiselectBaseComponent } from './po-multiselect-base.component';
/** @type {?} */
const poMultiselectContainerOffset = 8;
/** @type {?} */
const poMultiselectContainerPositionDefault = 'bottom';
/**
 * \@docsExtends PoMultiselectBaseComponent
 *
 * \@example
 *
 * <example name="po-multiselect-basic" title="Portinari Multiselect Basic">
 *   <file name="sample-po-multiselect-basic/sample-po-multiselect-basic.component.html"> </file>
 *   <file name="sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-multiselect-labs" title="Portinari Multiselect Labs">
 *   <file name="sample-po-multiselect-labs/sample-po-multiselect-labs.component.html"> </file>
 *   <file name="sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-multiselect-vacation" title="Portinari Multiselect - Vacation">
 *   <file name="sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html"> </file>
 *   <file name="sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts"> </file>
 * </example>
 *
 * <example name="po-multiselect-vacation-reactive-form" title="Portinari Multiselect - Vacation Reactive Form">
 *   <file name="sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html"> </file>
 *   <file name="sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts"> </file>
 * </example>
 */
export class PoMultiselectComponent extends PoMultiselectBaseComponent {
    /**
     * @param {?} renderer
     * @param {?} changeDetector
     * @param {?} controlPosition
     * @param {?} el
     */
    constructor(renderer, changeDetector, controlPosition, el) {
        super();
        this.renderer = renderer;
        this.changeDetector = changeDetector;
        this.controlPosition = controlPosition;
        this.el = el;
        this.disclaimerOffset = 0;
        this.dropdownIcon = 'po-icon-arrow-down';
        this.dropdownOpen = false;
        this.initialized = false;
        this.visibleElement = false;
        this.isCalculateVisibleItems = true;
        this.onScroll = (/**
         * @return {?}
         */
        () => {
            this.adjustContainerPosition();
        });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.autofocus) {
            this.inputElement.nativeElement.focus();
        }
        this.initialized = true;
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        /** @type {?} */
        const inputWidth = this.inputElement.nativeElement.offsetWidth;
        // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {
            this.debounceResize();
            this.visibleElement = true;
            return;
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.removeListeners();
    }
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoMultiselectComponent } from '\@portinari/portinari-ui';
     *
     * ...
     *
     * \@ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;
     *
     * focusMultiselect() {
     *   this.multiselect.focus();
     * }
     * ```
     * @return {?}
     */
    focus() {
        if (!this.disabled) {
            this.inputElement.nativeElement.focus();
        }
    }
    /**
     * @return {?}
     */
    getInputWidth() {
        return this.el.nativeElement.querySelector('.po-input').offsetWidth - 40;
    }
    /**
     * @return {?}
     */
    getDisclaimersWidth() {
        /** @type {?} */
        const disclaimers = this.el.nativeElement.querySelectorAll('po-disclaimer');
        return Array.from(disclaimers).map((/**
         * @param {?} disclaimer
         * @return {?}
         */
        disclaimer => disclaimer['offsetWidth']));
    }
    /**
     * @return {?}
     */
    calculateVisibleItems() {
        /** @type {?} */
        const disclaimersWidth = this.getDisclaimersWidth();
        /** @type {?} */
        const inputWidth = this.getInputWidth();
        /** @type {?} */
        const extraDisclaimerSize = 38;
        /** @type {?} */
        const disclaimersVisible = disclaimersWidth[0];
        this.visibleDisclaimers = [];
        if (inputWidth > 0) {
            /** @type {?} */
            let sum = 0;
            /** @type {?} */
            let i = 0;
            for (i = 0; i < this.selectedOptions.length; i++) {
                sum += disclaimersWidth[i];
                this.visibleDisclaimers.push(this.selectedOptions[i]);
                if (sum > inputWidth) {
                    sum -= disclaimersWidth[i];
                    this.isCalculateVisibleItems = false;
                    break;
                }
            }
            if (disclaimersVisible || !this.selectedOptions.length) {
                if (i === this.selectedOptions.length) {
                    this.isCalculateVisibleItems = false;
                    return;
                }
                if (sum + extraDisclaimerSize > inputWidth) {
                    this.visibleDisclaimers.splice(-2, 2);
                    /** @type {?} */
                    const label = '+' + (this.selectedOptions.length + 1 - i).toString();
                    this.visibleDisclaimers.push({ value: '', label: label });
                }
                else {
                    this.visibleDisclaimers.splice(-1, 1);
                    /** @type {?} */
                    const label = '+' + (this.selectedOptions.length - i).toString();
                    this.visibleDisclaimers.push({ value: '', label: label });
                }
            }
        }
    }
    /**
     * @return {?}
     */
    updateVisibleItems() {
        this.visibleDisclaimers = [].concat(this.selectedOptions);
        this.debounceResize();
        // quando estiver dentro de modal
        if (!this.inputElement.nativeElement.offsetWidth) {
            this.isCalculateVisibleItems = true;
        }
    }
    /**
     * @return {?}
     */
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        () => {
            this.calculateVisibleItems();
        }), 200);
    }
    /**
     * @param {?=} event
     * @return {?}
     */
    onKeyDown(event) {
        if (event.keyCode === PoKeyCodeEnum.arrowUp || event.keyCode === PoKeyCodeEnum.arrowDown) {
            event.preventDefault();
            this.controlDropdownVisibility(true);
            return;
        }
        if (event.keyCode === PoKeyCodeEnum.tab) {
            this.controlDropdownVisibility(false);
            return;
        }
    }
    /**
     * @return {?}
     */
    toggleDropdownVisibility() {
        if (this.disabled) {
            return;
        }
        this.controlDropdownVisibility(!this.dropdownOpen);
    }
    /**
     * @param {?} toOpen
     * @return {?}
     */
    openDropdown(toOpen) {
        if (toOpen && !this.disabled) {
            this.controlDropdownVisibility(true);
        }
    }
    /**
     * @param {?} toOpen
     * @return {?}
     */
    controlDropdownVisibility(toOpen) {
        toOpen ? this.open() : this.close();
    }
    /**
     * @return {?}
     */
    scrollToSelectedOptions() {
        if (this.selectedOptions && this.selectedOptions.length) {
            /** @type {?} */
            const index = this.options.findIndex((/**
             * @param {?} option
             * @return {?}
             */
            option => option.value === this.selectedOptions[0].value));
            this.dropdown.scrollTo(index);
        }
    }
    /**
     * @param {?} options
     * @return {?}
     */
    setVisibleOptionsDropdown(options) {
        this.visibleOptionsDropdown = options;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    changeSearch(event) {
        (event && event.value) ? this.searchByLabel(event.value, this.options, this.filterMode) : this.setVisibleOptionsDropdown(this.options);
        // timeout necessário para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input
        setTimeout((/**
         * @return {?}
         */
        () => this.adjustContainerPosition()));
    }
    /**
     * @return {?}
     */
    getPlaceholder() {
        return (this.placeholder && !this.visibleDisclaimers.length) ? this.placeholder : '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    closeDisclaimer(value) {
        /** @type {?} */
        const index = this.selectedOptions.findIndex((/**
         * @param {?} option
         * @return {?}
         */
        option => option.value === value));
        this.selectedOptions.splice(index, 1);
        this.updateVisibleItems();
        this.callOnChange(this.selectedOptions);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    wasClickedOnToggle(event) {
        if (!this.inputElement.nativeElement.contains(event.target) &&
            !this.iconElement.nativeElement.contains(event.target) &&
            !this.dropdownElement.nativeElement.contains(event.target) &&
            !this.disclaimerContainerElement.nativeElement.contains(event.target) &&
            this.dropdownOpen) {
            this.controlDropdownVisibility(false);
        }
    }
    /**
     * @private
     * @return {?}
     */
    adjustContainerPosition() {
        this.controlPosition.adjustPosition(poMultiselectContainerPositionDefault);
    }
    /**
     * @private
     * @return {?}
     */
    close() {
        this.dropdownIcon = 'po-icon-arrow-down';
        this.dropdownOpen = false;
        this.dropdown.controlVisibility(false);
        this.setVisibleOptionsDropdown(this.options);
        this.removeListeners();
    }
    /**
     * @private
     * @return {?}
     */
    initializeListeners() {
        this.clickOutListener = this.renderer.listen('document', 'click', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.wasClickedOnToggle(event);
        }));
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        () => {
            this.updateVisibleItems();
            isMobile() ? this.adjustContainerPosition() : this.close();
        }));
        window.addEventListener('scroll', this.onScroll, true);
    }
    /**
     * @private
     * @return {?}
     */
    open() {
        this.dropdownIcon = 'po-icon-arrow-up';
        this.dropdownOpen = true;
        this.dropdown.controlVisibility(true);
        this.setVisibleOptionsDropdown(this.options);
        this.initializeListeners();
        this.scrollToSelectedOptions();
        this.changeDetector.detectChanges();
        this.setPositionDropdown();
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        if (this.clickOutListener) {
            this.clickOutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    }
    /**
     * @private
     * @return {?}
     */
    setPositionDropdown() {
        this.controlPosition.setElements(this.dropdown.container.nativeElement, poMultiselectContainerOffset, this.inputElement, ['top', 'bottom'], true);
        this.adjustContainerPosition();
    }
}
PoMultiselectComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-multiselect',
                template: "<po-field-container\n  [p-label]=\"label\"\n  [p-help]=\"help\"\n  [p-optional]=\"!required && optional\">\n\n  <div class=\"po-field-container-content\"\n    [class.po-multiselect-show]=\"dropdownOpen\">\n\n    <input #inputElement\n      class=\"po-input po-input-icon-right po-clickable\"\n      readonly\n      type=\"text\"\n      [value]=\"getPlaceholder()\"\n      [disabled]=\"disabled\"\n      (keydown)=\"onKeyDown($event)\"\n      (click)=\"toggleDropdownVisibility()\">\n\n    <div class=\"po-field-icon-container-right\">\n      <span #iconElement\n        class=\"po-icon po-field-icon {{ dropdownIcon }}\"\n        [ngClass]=\"disabled ? 'po-field-icon-disabled' : ''\"\n        (click)=\"toggleDropdownVisibility()\">\n      </span>\n    </div>\n\n    <div #disclaimerContainer\n      class=\"po-multiselect-field\"\n      [class.po-multiselect-field-disabled]=\"disabled\">\n\n      <po-disclaimer *ngFor=\"let disclaimer of visibleDisclaimers\"\n        [p-label]=\"disclaimer.label\"\n        [p-value]=\"disclaimer.value\"\n        [p-hide-close]=\"disclaimer.value === '' || disabled\"\n        [class.po-clickable]=\"disclaimer.value === '' && !disabled\"\n        (click)=\"openDropdown(disclaimer.value === '')\"\n        (p-close-action)=\"closeDisclaimer(disclaimer.value)\">\n      </po-disclaimer>\n    </div>\n  </div>\n\n  <po-multiselect-dropdown #dropdownElement\n    [p-hide-search]=\"hideSearch\"\n    [p-literals]=\"literals\"\n    [p-options]=\"visibleOptionsDropdown\"\n    [p-selected-values]=\"getValuesFromOptions(selectedOptions)\"\n    [p-placeholder-search]=\"placeholderSearch\"\n    (p-change)=\"changeItems($event)\"\n    (p-change-search)=\"changeSearch($event)\"\n    (p-close-dropdown)=\"controlDropdownVisibility(false)\">\n  </po-multiselect-dropdown>\n\n  <po-field-container-bottom></po-field-container-bottom>\n\n</po-field-container>\n",
                providers: [
                    PoControlPositionService,
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => PoMultiselectComponent)),
                        multi: true,
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => PoMultiselectComponent)),
                        multi: true,
                    }
                ]
            }] }
];
/** @nocollapse */
PoMultiselectComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: PoControlPositionService },
    { type: ElementRef }
];
PoMultiselectComponent.propDecorators = {
    dropdownElement: [{ type: ViewChild, args: ['dropdownElement', { read: ElementRef, static: true },] }],
    dropdown: [{ type: ViewChild, args: ['dropdownElement', { static: true },] }],
    disclaimerContainerElement: [{ type: ViewChild, args: ['disclaimerContainer', { read: ElementRef, static: true },] }],
    iconElement: [{ type: ViewChild, args: ['iconElement', { read: ElementRef, static: true },] }],
    inputElement: [{ type: ViewChild, args: ['inputElement', { read: ElementRef, static: true },] }]
};
if (false) {
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdownElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdown;
    /** @type {?} */
    PoMultiselectComponent.prototype.disclaimerContainerElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.iconElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.inputElement;
    /** @type {?} */
    PoMultiselectComponent.prototype.disclaimerOffset;
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdownIcon;
    /** @type {?} */
    PoMultiselectComponent.prototype.dropdownOpen;
    /** @type {?} */
    PoMultiselectComponent.prototype.initialized;
    /** @type {?} */
    PoMultiselectComponent.prototype.positionDisclaimerExtra;
    /** @type {?} */
    PoMultiselectComponent.prototype.timeoutResize;
    /** @type {?} */
    PoMultiselectComponent.prototype.visibleElement;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.isCalculateVisibleItems;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.onScroll;
    /** @type {?} */
    PoMultiselectComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.controlPosition;
    /**
     * @type {?}
     * @private
     */
    PoMultiselectComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,