/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
export class PoMultiselectItemComponent {
    constructor() {
        /**
         * Esta propriedade indica se o campo está selecionado ou não.
         */
        this.selected = false;
        /**
         * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
         */
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    itemClicked() {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    }
}
PoMultiselectItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-multiselect-item',
                template: "<li [class.po-multiselect-item-selected]=\"selected\" (click)=\"itemClicked()\">\n\n  <a class=\"po-multiselect-item\">\n    <input\n      [checked]=\"selected\"\n      class=\"po-multiselect-checkbox-input\"\n      [class.po-multiselect-checkbox-input-checked]=\"selected\"\n      type=\"checkbox\">\n\n    <label class=\"po-multiselect-checkbox-label po-clickable\">\n      {{ label }}\n    </label>\n  </a>\n</li>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
PoMultiselectItemComponent.propDecorators = {
    label: [{ type: Input, args: ['p-label',] }],
    selected: [{ type: Input, args: ['p-selected',] }],
    change: [{ type: Output, args: ['p-change',] }]
};
if (false) {
    /**
     * Rótulo do item.
     * @type {?}
     */
    PoMultiselectItemComponent.prototype.label;
    /**
     * Esta propriedade indica se o campo está selecionado ou não.
     * @type {?}
     */
    PoMultiselectItemComponent.prototype.selected;
    /**
     * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
     * @type {?}
     */
    PoMultiselectItemComponent.prototype.change;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLW11bHRpc2VsZWN0L3BvLW11bHRpc2VsZWN0LWl0ZW0vcG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBY2hHLE1BQU0sT0FBTywwQkFBMEI7SUFMdkM7Ozs7UUFXdUIsYUFBUSxHQUFhLEtBQUssQ0FBQzs7OztRQUc1QixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQU1sRCxDQUFDOzs7O0lBSkMsV0FBVztRQUNULElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLDhhQUFtRDtnQkFDbkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7OztvQkFJRSxLQUFLLFNBQUMsU0FBUzt1QkFHZixLQUFLLFNBQUMsWUFBWTtxQkFHbEIsTUFBTSxTQUFDLFVBQVU7Ozs7Ozs7SUFObEIsMkNBQWdDOzs7OztJQUdoQyw4Q0FBZ0Q7Ozs7O0lBR2hELDRDQUFnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIGNvbnN0csOzaSBjYWRhIGl0ZW0gbm8gZHJvcGRvd24sIGNvbnRlbmRvIG8gY2hlY2tib3ggZSBvIGxhYmVsLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1tdWx0aXNlbGVjdC1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW11bHRpc2VsZWN0LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb011bHRpc2VsZWN0SXRlbUNvbXBvbmVudCB7XG5cbiAgLyoqIFLDs3R1bG8gZG8gaXRlbS4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICAvKiogRXN0YSBwcm9wcmllZGFkZSBpbmRpY2Egc2UgbyBjYW1wbyBlc3TDoSBzZWxlY2lvbmFkbyBvdSBuw6NvLiAqL1xuICBASW5wdXQoJ3Atc2VsZWN0ZWQnKSBzZWxlY3RlZD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKiogRXZlbnRvIHF1ZSBzZXLDoSBkaXNwYXJhZG8gdG9kYSB2ZXogcXVlIG8gdXN1w6FyaW8gbWFyY2FyIG91IGRlc21hcmNhciB1bSBpdGVtLiAqL1xuICBAT3V0cHV0KCdwLWNoYW5nZScpIGNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBpdGVtQ2xpY2tlZCgpIHtcbiAgICB0aGlzLnNlbGVjdGVkID0gIXRoaXMuc2VsZWN0ZWQ7XG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkKTtcbiAgfVxufVxuIl19