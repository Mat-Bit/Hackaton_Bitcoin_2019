/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { PoInfoOrientation } from './po-info-orietation.enum';
/** @type {?} */
const poInfoOrientationDefault = PoInfoOrientation.Vertical;
export class PoInfoBaseComponent {
    constructor() {
        this._orientation = poInfoOrientationDefault;
        this.poInfoOrientation = PoInfoOrientation;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `p-label` quando o componente for
     * utilizado na orientação horizontal.
     *
     * Valores válidos:
     *  - `[1 .. 11]`
     *
     * > A propriedade `p-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.
     * @param {?} value
     * @return {?}
     */
    set labelSize(value) {
        if (isNaN(parseInt((/** @type {?} */ (value)), 10))) {
            this._labelSize = undefined;
        }
        else {
            value = parseInt((/** @type {?} */ (value)), 10);
            this._labelSize = (value < 1 || value > 11) ? undefined : value;
        }
    }
    /**
     * @return {?}
     */
    get labelSize() {
        return this._labelSize;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Define o layout de exibição.
     *
     * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informações exibidas.
     *
     * \@default `vertical`
     * @param {?} value
     * @return {?}
     */
    set orientation(value) {
        this._orientation = ((/** @type {?} */ (Object))).values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;
    }
    /**
     * @return {?}
     */
    get orientation() {
        return this._orientation;
    }
}
PoInfoBaseComponent.propDecorators = {
    label: [{ type: Input, args: ['p-label',] }],
    labelSize: [{ type: Input, args: ['p-label-size',] }],
    orientation: [{ type: Input, args: ['p-orientation',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoInfoBaseComponent.prototype._labelSize;
    /**
     * @type {?}
     * @private
     */
    PoInfoBaseComponent.prototype._orientation;
    /** @type {?} */
    PoInfoBaseComponent.prototype.poInfoOrientation;
    /**
     * Valor do rótulo a ser exibido.
     * @type {?}
     */
    PoInfoBaseComponent.prototype.label;
    /**
     * Valor do conteúdo a ser exibido.
     * @type {?}
     */
    PoInfoBaseComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taW5mby1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8taW5mby9wby1pbmZvLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDOztNQUV4RCx3QkFBd0IsR0FBRyxpQkFBaUIsQ0FBQyxRQUFRO0FBRTNELE1BQU0sT0FBTyxtQkFBbUI7SUFBaEM7UUFHVSxpQkFBWSxHQUFzQix3QkFBd0IsQ0FBQztRQUVuRCxzQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztJQXFEeEQsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7OztJQW5DQyxJQUEyQixTQUFTLENBQUMsS0FBYTtRQUNoRCxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsbUJBQUssS0FBSyxFQUFBLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRTtZQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztTQUM3QjthQUFNO1lBQ0wsS0FBSyxHQUFHLFFBQVEsQ0FBQyxtQkFBSyxLQUFLLEVBQUEsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUVqQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQ2pFO0lBQ0gsQ0FBQzs7OztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDOzs7Ozs7Ozs7Ozs7OztJQWFELElBQTRCLFdBQVcsQ0FBQyxLQUF3QjtRQUM5RCxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsbUJBQUssTUFBTSxFQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsd0JBQXdCLENBQUM7SUFDakgsQ0FBQzs7OztJQUNELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUMzQixDQUFDOzs7b0JBN0NBLEtBQUssU0FBQyxTQUFTO3dCQWVmLEtBQUssU0FBQyxjQUFjOzBCQXlCcEIsS0FBSyxTQUFDLGVBQWU7b0JBUXJCLEtBQUssU0FBQyxTQUFTOzs7Ozs7O0lBdERoQix5Q0FBMkI7Ozs7O0lBQzNCLDJDQUFtRTs7SUFFbkUsZ0RBQXNEOzs7OztJQUd0RCxvQ0FBZ0M7Ozs7O0lBZ0RoQyxvQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0luZm9PcmllbnRhdGlvbiB9IGZyb20gJy4vcG8taW5mby1vcmlldGF0aW9uLmVudW0nO1xuXG5jb25zdCBwb0luZm9PcmllbnRhdGlvbkRlZmF1bHQgPSBQb0luZm9PcmllbnRhdGlvbi5WZXJ0aWNhbDtcblxuZXhwb3J0IGNsYXNzIFBvSW5mb0Jhc2VDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX2xhYmVsU2l6ZTogbnVtYmVyO1xuICBwcml2YXRlIF9vcmllbnRhdGlvbjogUG9JbmZvT3JpZW50YXRpb24gPSBwb0luZm9PcmllbnRhdGlvbkRlZmF1bHQ7XG5cbiAgcHVibGljIHJlYWRvbmx5IHBvSW5mb09yaWVudGF0aW9uID0gUG9JbmZvT3JpZW50YXRpb247XG5cbiAgLyoqIFZhbG9yIGRvIHLDs3R1bG8gYSBzZXIgZXhpYmlkby4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBRdWFudGlkYWRlIGRlIFtjb2x1bmFzXSgvZ3VpZGVzL2dyaWQtc3lzdGVtKSB1c2FkYXMgcGFyYSBhIGV4aWJpw6fDo28gZGEgYHAtbGFiZWxgIHF1YW5kbyBvIGNvbXBvbmVudGUgZm9yXG4gICAqIHV0aWxpemFkbyBuYSBvcmllbnRhw6fDo28gaG9yaXpvbnRhbC5cbiAgICpcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICogIC0gYFsxIC4uIDExXWBcbiAgICpcbiAgICogPiBBIHByb3ByaWVkYWRlIGBwLXZhbHVlYCByZWNlYmUgbyBuw7ptZXJvIGRlIGNvbHVuYXMgcmVzdGFudGVzLCBwb3IgZXhlbXBsbywgc2UgZGVmaW5pZG8gMyBjb2x1bmFzIGEgbWVzbWEgYXNzdW1lIDkgY29sdW5hcy5cbiAgICovXG4gIEBJbnB1dCgncC1sYWJlbC1zaXplJykgc2V0IGxhYmVsU2l6ZSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgaWYgKGlzTmFOKHBhcnNlSW50KDxhbnk+dmFsdWUsIDEwKSkpIHtcbiAgICAgIHRoaXMuX2xhYmVsU2l6ZSA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSBwYXJzZUludCg8YW55PnZhbHVlLCAxMCk7XG5cbiAgICAgIHRoaXMuX2xhYmVsU2l6ZSA9ICh2YWx1ZSA8IDEgfHwgdmFsdWUgPiAxMSkgPyB1bmRlZmluZWQgOiB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBnZXQgbGFiZWxTaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2xhYmVsU2l6ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSBvIGxheW91dCBkZSBleGliacOnw6NvLlxuICAgKlxuICAgKiA+IFF1YW5kbyBkZWZpbmlkbyBuYSBob3Jpem9udGFsLCBwb2RlLXNlIHV0aWxpemFyIGEgcHJvcHJpZWRhZGUgYHAtbGFiZWwtc2l6ZWAgcGFyYSB1bSBtYWlvciBjb250cm9sZSBkYXMgaW5mb3JtYcOnw7VlcyBleGliaWRhcy5cbiAgICpcbiAgICogQGRlZmF1bHQgYHZlcnRpY2FsYFxuICAgKi9cbiAgQElucHV0KCdwLW9yaWVudGF0aW9uJykgc2V0IG9yaWVudGF0aW9uKHZhbHVlOiBQb0luZm9PcmllbnRhdGlvbikge1xuICAgIHRoaXMuX29yaWVudGF0aW9uID0gKDxhbnk+T2JqZWN0KS52YWx1ZXMoUG9JbmZvT3JpZW50YXRpb24pLmluY2x1ZGVzKHZhbHVlKSA/IHZhbHVlIDogcG9JbmZvT3JpZW50YXRpb25EZWZhdWx0O1xuICB9XG4gIGdldCBvcmllbnRhdGlvbigpOiBQb0luZm9PcmllbnRhdGlvbiB7XG4gICAgcmV0dXJuIHRoaXMuX29yaWVudGF0aW9uO1xuICB9XG5cbiAgLyoqIFZhbG9yIGRvIGNvbnRlw7pkbyBhIHNlciBleGliaWRvLiAqL1xuICBASW5wdXQoJ3AtdmFsdWUnKSB2YWx1ZT86IHN0cmluZztcblxufVxuIl19