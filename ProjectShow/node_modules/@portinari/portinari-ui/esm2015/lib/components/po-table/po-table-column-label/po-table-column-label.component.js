/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação da representação da legenda, em formato de texto .
 */
export class PoTableColumnLabelComponent {
    /**
     * @param {?} poColorPaletteService
     */
    constructor(poColorPaletteService) {
        this.poColorPaletteService = poColorPaletteService;
    }
    /**
     * Objeto com os dados do label
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        if (value) {
            value.color = this.poColorPaletteService.getColor(value);
        }
        this._value = value;
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
}
PoTableColumnLabelComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-column-label',
                template: "<span\n  [class]=\"'po-table-column-label po-' + value?.color\">\n  {{ value?.label }}\n</span>\n"
            }] }
];
/** @nocollapse */
PoTableColumnLabelComponent.ctorParameters = () => [
    { type: PoColorPaletteService }
];
PoTableColumnLabelComponent.propDecorators = {
    value: [{ type: Input, args: ['p-value',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTableColumnLabelComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    PoTableColumnLabelComponent.prototype.poColorPaletteService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWxhYmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtY29sdW1uLWxhYmVsL3BvLXRhYmxlLWNvbHVtbi1sYWJlbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtEQUErRCxDQUFDOzs7Ozs7OztBQWV0RyxNQUFNLE9BQU8sMkJBQTJCOzs7O0lBZ0J0QyxZQUFvQixxQkFBNEM7UUFBNUMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtJQUFJLENBQUM7Ozs7OztJQVhyRSxJQUFzQixLQUFLLENBQUMsS0FBeUI7UUFDbkQsSUFBSSxLQUFLLEVBQUU7WUFDVCxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDMUQ7UUFFRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN0QixDQUFDOzs7O0lBQ0QsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7OztZQWxCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsNkdBQXFEO2FBQ3REOzs7O1lBZFEscUJBQXFCOzs7b0JBb0IzQixLQUFLLFNBQUMsU0FBUzs7Ozs7OztJQUhoQiw2Q0FBbUM7Ozs7O0lBY3ZCLDREQUFvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Db2xvclBhbGV0dGVTZXJ2aWNlIH0gZnJvbSAnLi8uLi8uLi8uLi9zZXJ2aWNlcy9wby1jb2xvci1wYWxldHRlL3BvLWNvbG9yLXBhbGV0dGUuc2VydmljZSc7XG5pbXBvcnQgeyBQb1RhYmxlQ29sdW1uTGFiZWwgfSBmcm9tICcuL3BvLXRhYmxlLWNvbHVtbi1sYWJlbC5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBhIGNyaWHDp8OjbyBkYSByZXByZXNlbnRhw6fDo28gZGEgbGVnZW5kYSwgZW0gZm9ybWF0byBkZSB0ZXh0byAuXG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFibGUtY29sdW1uLWxhYmVsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYmxlLWNvbHVtbi1sYWJlbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJsZUNvbHVtbkxhYmVsQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF92YWx1ZTogUG9UYWJsZUNvbHVtbkxhYmVsO1xuXG4gIC8qKiBPYmpldG8gY29tIG9zIGRhZG9zIGRvIGxhYmVsICovXG4gIEBJbnB1dCgncC12YWx1ZScpIHNldCB2YWx1ZSh2YWx1ZTogUG9UYWJsZUNvbHVtbkxhYmVsKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB2YWx1ZS5jb2xvciA9IHRoaXMucG9Db2xvclBhbGV0dGVTZXJ2aWNlLmdldENvbG9yKHZhbHVlKTtcbiAgICB9XG5cbiAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICB9XG4gIGdldCB2YWx1ZSgpOiBQb1RhYmxlQ29sdW1uTGFiZWwge1xuICAgIHJldHVybiB0aGlzLl92YWx1ZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcG9Db2xvclBhbGV0dGVTZXJ2aWNlOiBQb0NvbG9yUGFsZXR0ZVNlcnZpY2UpIHsgfVxuXG59XG4iXX0=