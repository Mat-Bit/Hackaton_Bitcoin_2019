/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação de um botão e modal para visualização de todas as legendas.
 */
export class PoTableShowSubtitleComponent {
}
PoTableShowSubtitleComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-show-subtitle',
                template: "<div class=\"po-table-footer-show-subtitle\" (click)=\"modal.open()\">\n  <div class=\"po-table-footer-show-subtitle-container\">\n    <span class=\"po-table-show-subtitle\">{{ literals.seeCompleteSubtitle }}</span>\n  </div>\n</div>\n\n<po-modal #modal\n  p-size=\"sm\"\n  [p-title]=\"literals.completeSubtitle\">\n\n  <div *ngFor=\"let subtitle of subtitles\" class=\"po-table-subtitle-footer-modal po-row\">\n    <po-table-subtitle-circle\n      p-hide-title=\"true\"\n      [p-subtitle]=\"subtitle\">\n    </po-table-subtitle-circle>\n    <span class=\"po-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n</po-modal>\n"
            }] }
];
PoTableShowSubtitleComponent.propDecorators = {
    subtitles: [{ type: Input, args: ['p-subtitles',] }],
    literals: [{ type: Input, args: ['p-literals',] }]
};
if (false) {
    /**
     * Objeto com os dados da legenda.
     * @type {?}
     */
    PoTableShowSubtitleComponent.prototype.subtitles;
    /**
     * Propriedade que recebe as literais definidas no `po-table`.
     * @type {?}
     */
    PoTableShowSubtitleComponent.prototype.literals;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtc2hvdy1zdWJ0aXRsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLXNob3ctc3VidGl0bGUvcG8tdGFibGUtc2hvdy1zdWJ0aXRsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQWVqRCxNQUFNLE9BQU8sNEJBQTRCOzs7WUFKeEMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLHNvQkFBc0Q7YUFDdkQ7Ozt3QkFJRSxLQUFLLFNBQUMsYUFBYTt1QkFHbkIsS0FBSyxTQUFDLFlBQVk7Ozs7Ozs7SUFIbkIsaURBQThEOzs7OztJQUc5RCxnREFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVGFibGVTdWJ0aXRsZUNvbHVtbiB9IGZyb20gJy4uL3BvLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci9wby10YWJsZS1zdWJ0aXRsZS1jb2x1bW4uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgYSBjcmlhw6fDo28gZGUgdW0gYm90w6NvIGUgbW9kYWwgcGFyYSB2aXN1YWxpemHDp8OjbyBkZSB0b2RhcyBhcyBsZWdlbmRhcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFibGUtc2hvdy1zdWJ0aXRsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1zaG93LXN1YnRpdGxlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1RhYmxlU2hvd1N1YnRpdGxlQ29tcG9uZW50IHtcblxuICAvKiogT2JqZXRvIGNvbSBvcyBkYWRvcyBkYSBsZWdlbmRhLiAqL1xuICBASW5wdXQoJ3Atc3VidGl0bGVzJykgc3VidGl0bGVzOiBBcnJheTxQb1RhYmxlU3VidGl0bGVDb2x1bW4+O1xuXG4gIC8qKiBQcm9wcmllZGFkZSBxdWUgcmVjZWJlIGFzIGxpdGVyYWlzIGRlZmluaWRhcyBubyBgcG8tdGFibGVgLiAqL1xuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFscztcblxufVxuIl19