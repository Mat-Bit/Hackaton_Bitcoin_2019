/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ContentChild, ElementRef, IterableDiffers, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { Router } from '@angular/router';
import { capitalizeFirstLetter, convertToBoolean } from '../../utils/util';
import { PoDateService } from '../../services/po-date/po-date.service';
import { PoPopupComponent } from '../po-popup/po-popup.component';
import { PoTableBaseComponent } from './po-table-base.component';
import { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';
/**
 * \@docsExtends PoTableBaseComponent
 *
 * \@example
 *
 * <example name="po-table-basic" title="Portinari Table Basic">
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.ts"> </file>
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.html"> </file>
 * </example>
 *
 * <example name="po-table-labs" title="Portinari Table Labs">
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.html"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.po.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-transport" title="Portinari Table - Transport">
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.ts"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.html"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-airfare" title="Portinari Table - Airfare">
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.ts"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.html"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-components" title="Portinari Table - Po Field Components">
 *  <file name="sample-po-table-components/sample-po-table-components.component.ts"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.component.html"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.service.ts"> </file>
 * </example>
 */
export class PoTableComponent extends PoTableBaseComponent {
    /**
     * @param {?} poDate
     * @param {?} differs
     * @param {?} viewRef
     * @param {?} renderer
     * @param {?} changeDetector
     * @param {?} decimalPipe
     * @param {?} router
     */
    constructor(poDate, differs, viewRef, renderer, changeDetector, decimalPipe, router) {
        super(poDate);
        this.changeDetector = changeDetector;
        this.decimalPipe = decimalPipe;
        this.router = router;
        this.tableOpacity = 0;
        this.initialized = false;
        this.visibleElement = false;
        this.parentRef = viewRef['_view']['component'];
        this.differ = differs.find([]).create(null);
        // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas não sofrem
        // alteração de largura, pois o ngDoCheck não é executado.
        this.clickListener = renderer.listen('document', 'click', (/**
         * @return {?}
         */
        () => { }));
        this.resizeListener = renderer.listen('window', 'resize', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.debounceResize();
        }));
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set columnManagerTarget(value) {
        this._columnManagerTarget = value;
        this.changeDetector.detectChanges();
    }
    /**
     * @return {?}
     */
    get columnManagerTarget() {
        return this._columnManagerTarget;
    }
    /**
     * @return {?}
     */
    get detailHideSelect() {
        /** @type {?} */
        const masterDetail = this.getColumnMasterDetail();
        return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;
    }
    /**
     * @return {?}
     */
    get displayColumnManagerCell() {
        return !this.visibleActions.length;
    }
    /**
     * @return {?}
     */
    get firstAction() {
        return this.visibleActions && this.visibleActions[0];
    }
    /**
     * @return {?}
     */
    get hasCheckboxColumn() {
        return this.checkbox && this.hasItems() && this.hasMainColumns;
    }
    /**
     * @return {?}
     */
    get hasFooter() {
        return this.hasItems() && this.hasVisibleSubtitleColumns;
    }
    /**
     * @return {?}
     */
    get hasMainColumns() {
        return !!this.mainColumns.length;
    }
    /**
     * @return {?}
     */
    get hasMasterDetailColumn() {
        return this.hasMainColumns &&
            this.hasItems() && !this.hideDetail && (this.getColumnMasterDetail() !== undefined || this.hasRowTemplate);
    }
    /**
     * @return {?}
     */
    get hasRowTemplate() {
        return !!this.tableRowTemplate;
    }
    /**
     * @return {?}
     */
    get hasValidColumns() {
        return !!this.validColumns.length;
    }
    /**
     * @return {?}
     */
    get hasVisibleSubtitleColumns() {
        return this.getSubtitleColumns().some((/**
         * @param {?} column
         * @return {?}
         */
        column => column.visible !== false));
    }
    /**
     * @return {?}
     */
    get isSingleAction() {
        return this.visibleActions.length === 1;
    }
    // Colunas que são inseridas no <head> da tabela
    /**
     * @return {?}
     */
    get mainColumns() {
        return this.validColumns.filter((/**
         * @param {?} col
         * @return {?}
         */
        col => col.visible !== false));
    }
    /**
     * @return {?}
     */
    get validColumns() {
        /** @type {?} */
        const typesValid = ['string', 'number', 'boolean', 'date', 'time', 'dateTime', 'currency', 'subtitle', 'link', 'label', 'icon'];
        return this.columns.filter((/**
         * @param {?} col
         * @return {?}
         */
        col => !col.type || typesValid.includes(col.type)));
    }
    /**
     * @return {?}
     */
    get visibleActions() {
        return this.actions && this.actions.filter((/**
         * @param {?} action
         * @return {?}
         */
        action => action.visible !== false));
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.initialized = true;
        if (!this.container) {
            this.hideContainer();
        }
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        this.checkChangesItems();
        this.verifyCalculateHeightTableContainer();
        // Permite que os cabeçalhos sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if (this.tableWrapperElement.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {
            this.debounceResize();
            this.visibleElement = true;
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.removeListeners();
    }
    /**
     * @param {?} row
     * @param {?} column
     * @return {?}
     */
    checkDisabled(row, column) {
        return column.disabled ? column.disabled(row) : false;
    }
    /**
     * @param {?} row
     * @param {?} tableAction
     * @return {?}
     */
    executeTableAction(row, tableAction) {
        if (!row.disabled && !this.validateTableAction(row, tableAction)) {
            tableAction.action.call(this.parentRef, row);
            this.toggleRowAction(row);
        }
    }
    /**
     * @return {?}
     */
    columnCountForMasterDetail() {
        /** @type {?} */
        const columnManager = 1;
        return (this.mainColumns.length + 1) + (this.actions.length > 0 ? 1 : 0) + (this.checkbox ? 1 : 0) + columnManager;
    }
    /**
     * @return {?}
     */
    columnCount() {
        return (this.mainColumns.length +
            (this.actions.length > 0 ? 1 : 0) +
            (this.checkbox ? 1 : 0) +
            (!this.hideDetail && this.getColumnMasterDetail() !== undefined ? 1 : 0));
    }
    /**
     * @param {?} value
     * @param {?} format
     * @return {?}
     */
    formatNumber(value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    }
    /**
     * @param {?} row
     * @param {?} subtitleColumn
     * @return {?}
     */
    getSubtitleColumn(row, subtitleColumn) {
        return subtitleColumn.subtitles.find((/**
         * @param {?} subtitleItem
         * @return {?}
         */
        subtitleItem => row[subtitleColumn.property] === subtitleItem.value));
    }
    /**
     * @param {?} rowValue
     * @param {?} columnBoolean
     * @return {?}
     */
    getBooleanLabel(rowValue, columnBoolean) {
        if (rowValue || rowValue === false || rowValue === 0) {
            rowValue = convertToBoolean(rowValue);
            if (columnBoolean.boolean) {
                return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'Não';
            }
            else {
                return rowValue ? 'Sim' : 'Não';
            }
        }
        return rowValue;
    }
    /**
     * @param {?} row
     * @param {?} column
     * @return {?}
     */
    getColumnIcons(row, column) {
        if (column.icons && column.icons.length) {
            return column.icons;
        }
        /** @type {?} */
        const rowIcons = row[column.property];
        if (rowIcons && rowIcons.length) {
            return this.getColumnIconsFromProperty(rowIcons, column);
        }
    }
    /**
     * @param {?} row
     * @param {?} columnLabel
     * @return {?}
     */
    getColumnLabel(row, columnLabel) {
        return columnLabel.labels.find((/**
         * @param {?} labelItem
         * @return {?}
         */
        labelItem => row[columnLabel.property] === labelItem.value));
    }
    /**
     * @param {?} column
     * @return {?}
     */
    getColumnTitleLabel(column) {
        return column.label || capitalizeFirstLetter(column.property);
    }
    /**
     * @return {?}
     */
    verifyWidthColumnsPixels() {
        return this.hasMainColumns ? this.mainColumns.every((/**
         * @param {?} column
         * @return {?}
         */
        column => column.width && column.width.includes('px'))) : false;
    }
    /**
     * @return {?}
     */
    calculateWidthHeaders() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.height) {
                this.headersTable.forEach((/**
                 * @param {?} header
                 * @return {?}
                 */
                header => {
                    /** @type {?} */
                    const divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');
                    if (divHeader) {
                        divHeader.style.width = `${header.nativeElement.offsetWidth}px`;
                    }
                }));
            }
        }));
    }
    /**
     * @param {?} row
     * @return {?}
     */
    containsMasterDetail(row) {
        return row[this.getNameColumnDetail()] && row[this.getNameColumnDetail()].length;
    }
    /**
     * @param {?} row
     * @param {?} index
     * @return {?}
     */
    isShowRowTemplate(row, index) {
        if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {
            return this.tableRowTemplate.poTableRowTemplateShow(row, index);
        }
        return true;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    isShowMasterDetail(row) {
        return !this.hideDetail &&
            this.getNameColumnDetail() &&
            row.$showDetail &&
            this.containsMasterDetail(row) &&
            !this.hasRowTemplate;
    }
    /**
     * @param {?} columns
     * @return {?}
     */
    onVisibleColumnsChange(columns) {
        this.columns = columns;
        this.changeDetector.detectChanges();
    }
    /**
     * @param {?} event
     * @param {?=} column
     * @param {?=} row
     * @return {?}
     */
    tooltipMouseEnter(event, column, row) {
        this.tooltipText = undefined;
        if (this.hideTextOverflow &&
            event.target.offsetWidth < event.target.scrollWidth &&
            event.target.innerText.trim()) {
            return this.tooltipText = event.target.innerText;
        }
        if (column) {
            this.checkingIfColumnHasTooltip(column, row);
        }
    }
    /**
     * @return {?}
     */
    tooltipMouseLeave() {
        this.tooltipText = undefined;
    }
    /**
     * @return {?}
     */
    verifyChangeHeightInFooter() {
        return this.footerHeight !== this.getHeightTableFooter();
    }
    /**
     * @return {?}
     */
    verifyCalculateHeightTableContainer() {
        if (this.height && this.verifyChangeHeightInFooter()) {
            this.footerHeight = this.getHeightTableFooter();
            this.calculateHeightTableContainer(this.height);
        }
    }
    /**
     * @param {?} height
     * @return {?}
     */
    calculateHeightTableContainer(height) {
        /** @type {?} */
        const value = parseFloat(height);
        this.heightTableContainer = value ? (value - this.getHeightTableFooter()) : undefined;
        this.setTableOpacity(1);
        this.changeDetector.detectChanges();
    }
    /**
     * @param {?} row
     * @param {?} targetRef
     * @return {?}
     */
    togglePopup(row, targetRef) {
        this.popupTarget = targetRef;
        this.changeDetector.detectChanges();
        this.poPopupComponent.toggle(row);
    }
    /**
     * @param {?} row
     * @param {?} tableAction
     * @return {?}
     */
    validateTableAction(row, tableAction) {
        if (typeof tableAction.disabled === 'function') {
            return tableAction.disabled.call(this.parentRef, row);
        }
        else {
            return tableAction.disabled;
        }
    }
    /**
     * @protected
     * @param {?} container
     * @return {?}
     */
    showContainer(container) {
        /** @type {?} */
        const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;
        containerClassList.add('po-container');
        container === 'border' ? containerClassList.add('po-container-no-shadow') : containerClassList.remove('po-container-no-shadow');
    }
    /**
     * @private
     * @return {?}
     */
    checkChangesItems() {
        /** @type {?} */
        const changesItems = this.differ.diff(this.items);
        if (changesItems && this.selectAll) {
            this.selectAll = null;
        }
        if (changesItems && !this.hasColumns && this.hasItems()) {
            this.columns = this.getDefaultColumns(this.items[0]);
        }
    }
    /**
     * @private
     * @param {?} column
     * @param {?} row
     * @return {?}
     */
    checkingIfColumnHasTooltip(column, row) {
        if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {
            return this.tooltipText = column.tooltip;
        }
        if (column.type === 'label') {
            /** @type {?} */
            const columnLabel = this.getColumnLabel(row, column);
            return this.tooltipText = columnLabel.tooltip;
        }
    }
    /**
     * @private
     * @return {?}
     */
    getHeightTableFooter() {
        return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;
    }
    /**
     * @private
     * @return {?}
     */
    hideContainer() {
        /** @type {?} */
        const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;
        containerClassList.remove('po-container');
    }
    /**
     * @private
     * @return {?}
     */
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        () => {
            this.calculateWidthHeaders();
            // show the table
            this.setTableOpacity(1);
        }));
    }
    /**
     * @private
     * @param {?} rowIcons
     * @param {?} column
     * @return {?}
     */
    getColumnIconsFromProperty(rowIcons, column) {
        /** @type {?} */
        const icons = [];
        const { action, color, disabled } = column;
        /** @type {?} */
        const icon = { action, color, disabled };
        rowIcons.forEach((/**
         * @param {?} value
         * @return {?}
         */
        value => icons.push(typeof value === 'string' ? Object.assign({}, icon, { value }) : value)));
        return icons;
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        if (this.resizeListener) {
            this.resizeListener();
        }
        if (this.clickListener) {
            this.clickListener();
        }
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    setTableOpacity(value) {
        this.tableOpacity = value;
    }
}
PoTableComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table',
                template: "<po-container #tableContainer p-no-padding>\n  <div [class.po-table-container-relative]=\"loading\">\n    <div *ngIf=\"loading\" class=\"po-table-overlay\">\n      <po-loading class=\"po-table-overlay-content\" [p-text]=\"literals.loadingData\"></po-loading>\n    </div>\n\n    <div class=\"po-table-main-container\">\n      <div #tableWrapper\n        class=\"po-table-wrapper\"\n        [class.po-table-header-fixed-columns-pixels]=\"verifyWidthColumnsPixels()\"\n        [style.opacity]=\"tableOpacity\">\n\n        <div class=\"po-table-container\" *ngIf=\"height\" [style.height.px]=\"heightTableContainer\">\n          <div class=\"po-table-header-fixed po-table-header\"></div>\n          <div class=\"po-table-container-fixed-inner\">\n            <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n          </div>\n        </div>\n\n        <div *ngIf=\"!height\">\n          <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"po-table-footer\" *ngIf=\"hasFooter\">\n    <div *ngFor=\"let column of getSubtitleColumns()\">\n      <po-table-subtitle-footer [p-literals]=\"literals\" [p-subtitles]=\"column.subtitles\"></po-table-subtitle-footer>\n    </div>\n  </div>\n</po-container>\n\n<div class=\"po-row po-table-footer-show-more\" [class.po-invisible]=\"showMore.observers.length === 0\" #tableFooter>\n  <po-button\n    class=\"po-offset-xl-4 po-offset-lg-4 po-offset-md-3 po-lg-4 po-md-6\"\n    [p-disabled]=\"showMoreDisabled\"\n    [p-label]=\"literals.loadMoreData\"\n    (p-click)=\"onShowMore()\">\n  </po-button>\n</div>\n\n<ng-template #tableTemplate>\n  <table class=\"po-table\"\n    [class.po-table-striped]=\"striped\"\n    [class.po-table-layout-fixed]=\"hideTextOverflow\">\n    <thead>\n      <tr [class.po-table-header]=\"!height\">\n\n        <th *ngIf=\"hasCheckboxColumn\" class=\"po-table-column-checkbox\">\n          <div [class.po-table-header-fixed-inner]=\"height\">\n            <input *ngIf=\"!hideSelectAll\" type=\"checkbox\" class=\"po-table-checkbox\"\n            [class.po-table-checkbox-checked]=\"selectAll\"\n            [class.po-table-checkbox-indeterminate]=\"selectAll === null\">\n            <label *ngIf=\"!hideSelectAll\" class=\"po-table-checkbox-label po-clickable\" (click)=\"selectAllRows()\"></label>\n          </div>\n        </th>\n\n        <th *ngIf=\"hasMasterDetailColumn\"\n          class=\"po-table-header-column po-table-header-master-detail\">\n        </th>\n\n        <th *ngIf=\"!hasMainColumns\" #noColumnsHeader class=\"po-table-header-column po-text-center\">\n          <ng-container *ngIf=\"height; then noColumnsWithHeight; else noColumnsWithoutHeight\"> </ng-container>\n\n          <ng-template #noColumnsWithHeight>\n            <div class=\"po-table-header-fixed-inner\" [style.width.px]=\"noColumnsHeader.offsetWidth\">\n              {{ hasValidColumns ? literals.noVisibleColumn : literals.noColumns }}\n            </div>\n          </ng-template>\n\n          <ng-template #noColumnsWithoutHeight>\n            {{ hasValidColumns ? literals.noVisibleColumn : literals.noColumns }}\n          </ng-template>\n\n        </th>\n\n        <th *ngFor=\"let column of mainColumns; let i = index\" #headersTable\n          class=\"po-table-header-ellipsis\"\n          [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\"\n          [class.po-clickable]=\"sort\"\n          [class.po-table-column-right]= \"column.type === 'currency' || column.type === 'number'\"\n          [class.po-table-header-subtitle]=\"column.type === 'subtitle'\"\n          (click)=\"sortColumn(column)\">\n            <div *ngIf=\"height\" class=\"po-table-header-fixed-inner\">\n              <ng-container *ngTemplateOutlet=\"contentHeaderTemplate\"></ng-container>\n            </div>\n            <div *ngIf=\"!height\">\n              <ng-container *ngTemplateOutlet=\"contentHeaderTemplate\"></ng-container>\n            </div>\n            <ng-template #contentHeaderTemplate>\n              <span *ngIf=\"sort\"\n                [class.po-table-header-icon-unselected]= \"sortedColumn?.property !== column\"\n                [class.po-table-header-icon-descending]= \"sortedColumn?.property === column && sortedColumn.ascending\"\n                [class.po-table-header-icon-ascending]= \"sortedColumn?.property === column && !sortedColumn.ascending\">\n              </span>\n              <span\n                class=\"po-table-header-ellipsis po-table-header-block\"\n                [p-tooltip]=\"tooltipText\"\n                (mouseenter)=\"tooltipMouseEnter($event)\"\n                (mouseleave)=\"tooltipMouseLeave()\">\n                {{ getColumnTitleLabel(column) }}\n              </span>\n            </ng-template>\n        </th>\n\n        <th #columnManager *ngIf=\"hasValidColumns\"\n          [class.po-table-header-column-manager]=\"!isSingleAction\"\n          [class.po-table-header-column-manager-border]=\"!height && container\"\n          [class.po-table-header-single-action]=\"isSingleAction\">\n          <div\n            [class.po-table-header-column-manager-border]=\"height && container\"\n            [class.po-table-header-column-manager-fixed-inner]=\"height\"\n            [style.width.px]=\"height && visibleActions.length ? columnManager.offsetWidth : undefined\">\n            <button #columnManagerTarget\n              class=\"po-table-header-column-manager-button po-icon po-icon-settings po-clickable\"\n              p-tooltip-position=\"left\"\n              [p-tooltip]=\"literals.columnsManager\">\n            </button>\n          </div>\n        </th>\n\n      </tr>\n    </thead>\n\n    <tbody class=\"po-table-group-row\" *ngIf=\"!hasItems() || !hasMainColumns\">\n      <tr class=\"po-table-row\">\n        <td [colSpan]=\"columnCount()\" class=\"po-table-no-data po-text-center\">\n          <span> {{ literals.noData }} </span>\n        </td>\n      </tr>\n    </tbody>\n\n    <ng-container *ngIf=\"hasMainColumns\">\n      <tbody class=\"po-table-group-row\" *ngFor=\"let row of items, let rowIndex = index;\">\n        <tr class=\"po-table-row\" [class.po-table-row-active]=\"row.$selected || row.$selected === null && checkbox\">\n          <td *ngIf=\"checkbox\" class=\"po-table-column po-table-column-checkbox\">\n            <ng-container *ngIf=\"singleSelect; then inputRadio; else inputCheckbox\"> </ng-container>\n\n            <ng-template #inputRadio>\n              <input type=\"radio\" class=\"po-radio-group-input\" [class.po-radio-group-input-checked]=\"row.$selected\">\n              <label class=\"po-radio-group-label po-clickable\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"></label>\n            </ng-template>\n\n            <ng-template #inputCheckbox>\n              <input type=\"checkbox\" class=\"po-table-checkbox\" [class.po-table-checkbox-checked]=\"row.$selected\">\n              <label class=\"po-table-checkbox-label po-clickable\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"></label>\n            </ng-template>\n\n          </td>\n          <td *ngIf=\"(getColumnMasterDetail() !== undefined) && !hideDetail || hasRowTemplate\"\n            class=\"po-table-column-detail-toggle\"\n            (click)=\"row.$showDetail = !row.$showDetail\">\n            <span *ngIf=\"(containsMasterDetail(row) && !hasRowTemplate) || isShowRowTemplate(row, rowIndex) && hasRowTemplate\"\n              class=\"po-icon po-clickable\"\n              [class.po-icon-arrow-up]=\"row.$showDetail\"\n              [class.po-icon-arrow-down]=\"!row.$showDetail\">\n            </span>\n          </td>\n\n          <td *ngFor=\"let column of mainColumns, let columnIndex = index;\"\n            [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\"\n            [class.po-table-column]=\"column.type !== 'icon'\"\n            [class.po-table-column-right]=\"column.type == 'currency' || column.type == 'number'\"\n            [class.po-table-column-center]=\"column.type === 'subtitle'\"\n            [class.po-table-column-icons]=\"column.type === 'icon'\"\n            [ngClass]=\"getClassColor(row, column)\"\n            (click)=\"checkbox ? selectRow(row) : 'javascript:;'\">\n\n            <div class=\"po-table-column-cell\"\n              [class.po-table-body-ellipsis]=\"hideTextOverflow\"\n              [ngSwitch]=\"column.type\"\n              [p-tooltip]=\"tooltipText\"\n              (mouseenter)=\"tooltipMouseEnter($event, column, row)\"\n              (mouseleave)=\"tooltipMouseLeave()\">\n              <span *ngSwitchCase=\"'boolean'\">{{ getBooleanLabel(row[column.property], column) }}</span>\n              <span *ngSwitchCase=\"'currency'\">{{ row[column.property] | currency:column.format:'symbol':'1.2-2' }}</span>\n              <span *ngSwitchCase=\"'date'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy' }}</span>\n              <span *ngSwitchCase=\"'time'\" >{{ row[column.property] | po_time: column.format || 'HH:mm:ss.ffffff' }}</span>\n              <span *ngSwitchCase=\"'dateTime'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy HH:mm:ss' }}</span>\n              <span *ngSwitchCase=\"'number'\">{{ formatNumber(row[column.property], column.format) }}</span>\n              <po-table-column-link *ngSwitchCase=\"'link'\"\n                [p-action]=\"column.action\"\n                [p-disabled]=\"checkDisabled(row, column)\"\n                [p-link]=\"row[column.link]\"\n                [p-row]=\"row\"\n                [p-value]=\"row[column.property]\">\n              </po-table-column-link>\n\n              <po-table-column-icon *ngSwitchCase=\"'icon'\"\n                [p-icons]=\"getColumnIcons(row, column)\"\n                [p-row]=\"row\">\n              </po-table-column-icon>\n\n              <span *ngSwitchCase=\"'subtitle'\">\n                <po-table-subtitle-circle [p-subtitle]=\"getSubtitleColumn(row, column)\"></po-table-subtitle-circle>\n              </span>\n              <span *ngSwitchCase=\"'label'\">\n                <po-table-column-label [p-value]=\"getColumnLabel(row, column)\"></po-table-column-label>\n              </span>\n              <span *ngSwitchDefault>{{ row[column.property] }}</span>\n            </div>\n          </td>\n          <td *ngIf=\"isSingleAction\" class=\"po-table-column po-table-column-single-action\">\n            <div *ngIf=\"firstAction.visible !== false\"\n              class=\"po-table-single-action po-clickable\"\n              [class.po-table-action-disabled]= \"firstAction.disabled ? validateTableAction(row, firstAction) : false\"\n              (click)=\"executeTableAction(row, firstAction)\">\n\n              <span *ngIf=\"firstAction.icon\" class=\"po-icon {{ firstAction.icon }}\"></span>\n              {{ firstAction.label }}\n            </div>\n          </td>\n          <td *ngIf=\"visibleActions.length > 1\" class=\"po-table-column-actions\">\n            <span #popupTarget class=\"po-icon po-icon-more po-clickable\" (click)=\"togglePopup(row, popupTarget)\">\n            </span>\n          </td>\n          <!-- Column Manager -->\n          <td *ngIf=\"displayColumnManagerCell\" class=\"po-table-column\"></td>\n        </tr>\n\n        <tr *ngIf=\"hasMainColumns && hasRowTemplate && row.$showDetail && isShowRowTemplate(row, rowIndex)\">\n          <td class=\"po-table-row-template-container\" [colSpan]=\"columnCountForMasterDetail()\">\n\n            <ng-template\n              [ngTemplateOutlet]=\"tableRowTemplate.templateRef\"\n              [ngTemplateOutletContext]=\"{ $implicit: row, rowIndex: rowIndex }\">\n            </ng-template>\n\n          </td>\n        </tr>\n\n        <tr *ngIf=\"hasMainColumns && isShowMasterDetail(row)\">\n          <td class=\"po-table-column-detail\" [colSpan]=\"columnCountForMasterDetail()\">\n\n            <po-table-detail\n              [p-checkbox]=\"checkbox && !detailHideSelect\"\n              [p-detail]=\"getColumnMasterDetail().detail\"\n              [p-items]=\"row[getNameColumnDetail()]\"\n              (p-select-row)=\"selectDetailRow($event)\">\n            </po-table-detail>\n\n          </td>\n        </tr>\n      </tbody>\n    </ng-container>\n  </table>\n</ng-template>\n\n<po-popup #popup\n  [p-actions]=\"actions\"\n  [p-target]=\"popupTarget\">\n</po-popup>\n\n<po-table-column-manager\n  [p-columns]=\"columns\"\n  [p-max-columns]=\"maxColumns\"\n  [p-target]=\"columnManagerTarget\"\n  (p-visible-columns-change)=\"onVisibleColumnsChange($event)\">\n</po-table-column-manager>\n",
                providers: [PoDateService]
            }] }
];
/** @nocollapse */
PoTableComponent.ctorParameters = () => [
    { type: PoDateService },
    { type: IterableDiffers },
    { type: ViewContainerRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: DecimalPipe },
    { type: Router }
];
PoTableComponent.propDecorators = {
    tableRowTemplate: [{ type: ContentChild, args: [PoTableRowTemplateDirective, { static: true },] }],
    poPopupComponent: [{ type: ViewChild, args: ['popup', { static: false },] }],
    columnManagerTarget: [{ type: ViewChild, args: ['columnManagerTarget', { static: false },] }],
    tableContainerElement: [{ type: ViewChild, args: ['tableContainer', { read: ElementRef, static: true },] }],
    tableFooterElement: [{ type: ViewChild, args: ['tableFooter', { read: ElementRef, static: true },] }],
    tableWrapperElement: [{ type: ViewChild, args: ['tableWrapper', { read: ElementRef, static: true },] }],
    actionsIconElement: [{ type: ViewChildren, args: ['actionsIconElement', { read: ElementRef },] }],
    actionsElement: [{ type: ViewChildren, args: ['actionsElement', { read: ElementRef },] }],
    headersTable: [{ type: ViewChildren, args: ['headersTable',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype._columnManagerTarget;
    /** @type {?} */
    PoTableComponent.prototype.heightTableContainer;
    /** @type {?} */
    PoTableComponent.prototype.parentRef;
    /** @type {?} */
    PoTableComponent.prototype.popupTarget;
    /** @type {?} */
    PoTableComponent.prototype.tableOpacity;
    /** @type {?} */
    PoTableComponent.prototype.tooltipText;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.differ;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.footerHeight;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.initialized;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.timeoutResize;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.visibleElement;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.clickListener;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.resizeListener;
    /** @type {?} */
    PoTableComponent.prototype.tableRowTemplate;
    /** @type {?} */
    PoTableComponent.prototype.poPopupComponent;
    /** @type {?} */
    PoTableComponent.prototype.tableContainerElement;
    /** @type {?} */
    PoTableComponent.prototype.tableFooterElement;
    /** @type {?} */
    PoTableComponent.prototype.tableWrapperElement;
    /** @type {?} */
    PoTableComponent.prototype.actionsIconElement;
    /** @type {?} */
    PoTableComponent.prototype.actionsElement;
    /** @type {?} */
    PoTableComponent.prototype.headersTable;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.decimalPipe;
    /**
     * @type {?}
     * @private
     */
    PoTableComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,