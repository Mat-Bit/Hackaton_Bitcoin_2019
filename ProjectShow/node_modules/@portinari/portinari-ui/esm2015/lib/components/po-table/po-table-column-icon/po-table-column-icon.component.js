/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por exibir ícones nas colunas.
 */
export class PoTableColumnIconComponent {
    constructor() {
        this._icons = [];
    }
    /**
     * Lista de colunas com ícones.
     * @param {?} icons
     * @return {?}
     */
    set icons(icons) {
        this._icons = icons || [];
    }
    /**
     * @return {?}
     */
    get icons() {
        return this._icons;
    }
    /**
     * @param {?} column
     * @return {?}
     */
    click(column) {
        column.action(this.row, column);
    }
    /**
     * @param {?} column
     * @return {?}
     */
    getColor(column) {
        /** @type {?} */
        const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;
        if (color) {
            return `po-text-${color}`;
        }
    }
    /**
     * @param {?} column
     * @return {?}
     */
    getIcon(column) {
        return column.icon || column.value;
    }
    /**
     * @param {?} column
     * @return {?}
     */
    isClickable(column) {
        return column.action && !this.isDisabled(column);
    }
    /**
     * @param {?} column
     * @return {?}
     */
    isDisabled(column) {
        return column.disabled ? column.disabled(this.row) : false;
    }
    /**
     * @param {?} index
     * @return {?}
     */
    trackByFunction(index) {
        return index;
    }
}
PoTableColumnIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-column-icon',
                template: "<po-table-icon *ngFor=\"let column of icons trackBy: trackByFunction\"\n  [p-clickable]=\"isClickable(column)\"\n  [p-color]=\"getColor(column)\"\n  [p-disabled]=\"isDisabled(column)\"\n  [p-icon]=\"getIcon(column)\"\n  [p-icon-tooltip]=\"column.tooltip\"\n  (p-click)=\"click(column)\">\n</po-table-icon>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
PoTableColumnIconComponent.propDecorators = {
    icons: [{ type: Input, args: ['p-icons',] }],
    row: [{ type: Input, args: ['p-row',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTableColumnIconComponent.prototype._icons;
    /**
     * Dados da linha da tabela.
     * @type {?}
     */
    PoTableColumnIconComponent.prototype.row;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10YWJsZS9wby10YWJsZS1jb2x1bW4taWNvbi9wby10YWJsZS1jb2x1bW4taWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQWlCMUUsTUFBTSxPQUFPLDBCQUEwQjtJQU52QztRQVFVLFdBQU0sR0FBNkIsRUFBRSxDQUFDO0lBMENoRCxDQUFDOzs7Ozs7SUF2Q0MsSUFBc0IsS0FBSyxDQUFDLEtBQStCO1FBQ3pELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxJQUFJLEVBQUUsQ0FBQztJQUM1QixDQUFDOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7Ozs7O0lBS0QsS0FBSyxDQUFDLE1BQXlCO1FBQzdCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVELFFBQVEsQ0FBQyxNQUF5Qjs7Y0FDMUIsS0FBSyxHQUFJLE9BQU8sTUFBTSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFFakcsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLFdBQVcsS0FBSyxFQUFFLENBQUM7U0FDM0I7SUFDSCxDQUFDOzs7OztJQUVELE9BQU8sQ0FBQyxNQUF5QjtRQUMvQixPQUFPLE1BQU0sQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNyQyxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxNQUF5QjtRQUNuQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25ELENBQUM7Ozs7O0lBRUQsVUFBVSxDQUFDLE1BQXlCO1FBQ2xDLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUM3RCxDQUFDOzs7OztJQUVELGVBQWUsQ0FBQyxLQUFLO1FBQ25CLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7O1lBaERGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQywrVEFBb0Q7Z0JBQ3BELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7b0JBT0UsS0FBSyxTQUFDLFNBQVM7a0JBU2YsS0FBSyxTQUFDLE9BQU87Ozs7Ozs7SUFaZCw0Q0FBOEM7Ozs7O0lBWTlDLHlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVGFibGVDb2x1bW5JY29uIH0gZnJvbSAnLi9wby10YWJsZS1jb2x1bW4taWNvbi5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcmVzcG9uc8OhdmVsIHBvciBleGliaXIgw61jb25lcyBuYXMgY29sdW5hcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFibGUtY29sdW1uLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcblxuZXhwb3J0IGNsYXNzIFBvVGFibGVDb2x1bW5JY29uQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9pY29uczogQXJyYXk8UG9UYWJsZUNvbHVtbkljb24+ID0gW107XG5cbiAgLyoqIExpc3RhIGRlIGNvbHVuYXMgY29tIMOtY29uZXMuICovXG4gIEBJbnB1dCgncC1pY29ucycpIHNldCBpY29ucyhpY29uczogQXJyYXk8UG9UYWJsZUNvbHVtbkljb24+KSB7XG4gICAgdGhpcy5faWNvbnMgPSBpY29ucyB8fCBbXTtcbiAgfVxuXG4gIGdldCBpY29ucygpIHtcbiAgICByZXR1cm4gdGhpcy5faWNvbnM7XG4gIH1cblxuICAvKiogRGFkb3MgZGEgbGluaGEgZGEgdGFiZWxhLiAqL1xuICBASW5wdXQoJ3Atcm93Jykgcm93OiBhbnk7XG5cbiAgY2xpY2soY29sdW1uOiBQb1RhYmxlQ29sdW1uSWNvbik6IHZvaWQge1xuICAgIGNvbHVtbi5hY3Rpb24odGhpcy5yb3csIGNvbHVtbik7XG4gIH1cblxuICBnZXRDb2xvcihjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKTogc3RyaW5nIHtcbiAgICBjb25zdCBjb2xvciA9ICB0eXBlb2YgY29sdW1uLmNvbG9yID09PSAnZnVuY3Rpb24nID8gY29sdW1uLmNvbG9yKHRoaXMucm93LCBjb2x1bW4pIDogY29sdW1uLmNvbG9yO1xuXG4gICAgaWYgKGNvbG9yKSB7XG4gICAgICByZXR1cm4gYHBvLXRleHQtJHtjb2xvcn1gO1xuICAgIH1cbiAgfVxuXG4gIGdldEljb24oY29sdW1uOiBQb1RhYmxlQ29sdW1uSWNvbikge1xuICAgIHJldHVybiBjb2x1bW4uaWNvbiB8fCBjb2x1bW4udmFsdWU7XG4gIH1cblxuICBpc0NsaWNrYWJsZShjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGNvbHVtbi5hY3Rpb24gJiYgIXRoaXMuaXNEaXNhYmxlZChjb2x1bW4pO1xuICB9XG5cbiAgaXNEaXNhYmxlZChjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGNvbHVtbi5kaXNhYmxlZCA/IGNvbHVtbi5kaXNhYmxlZCh0aGlzLnJvdykgOiBmYWxzZTtcbiAgfVxuXG4gIHRyYWNrQnlGdW5jdGlvbihpbmRleCkge1xuICAgIHJldHVybiBpbmRleDtcbiAgfVxuXG59XG4iXX0=