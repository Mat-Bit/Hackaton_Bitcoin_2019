/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Renderer2 } from '@angular/core';
import { PoPageContentBaseComponent } from './po-page-content-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends PoPageContentBaseComponent
 */
export class PoPageContentComponent extends PoPageContentBaseComponent {
    /**
     * @param {?} renderer
     */
    constructor(renderer) {
        super();
        this.renderer = renderer;
        this.contentOpacity = 0;
        this.height = '90%';
        this.overflowY = 'none';
        this.initializeListeners();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.recalculateHeaderSize();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.removeListeners();
    }
    /**
     * @return {?}
     */
    recalculateHeaderSize() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const pageHeaderElement = document.querySelector('div.po-page-header');
            this.setHeightContent(pageHeaderElement);
            this.contentOpacity = 1;
        }));
    }
    /**
     * @param {?} poPageHeader
     * @return {?}
     */
    setHeightContent(poPageHeader) {
        /** @type {?} */
        const bodyHeight = document.body.clientHeight;
        /** @type {?} */
        const pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;
        /** @type {?} */
        const newHeight = bodyHeight - pageHeaderHeight;
        this.height = `${newHeight}px`;
    }
    /**
     * @private
     * @return {?}
     */
    initializeListeners() {
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        () => {
            this.recalculateHeaderSize();
        }));
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        this.resizeListener();
    }
}
PoPageContentComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-content',
                template: "<div class=\"po-page-content\"\n  [style.height]=\"height\"\n  [style.opacity]=\"contentOpacity\"\n  [style.overflow-y]=\"overflowY\">\n  <ng-content></ng-content>\n</div>\n"
            }] }
];
/** @nocollapse */
PoPageContentComponent.ctorParameters = () => [
    { type: Renderer2 }
];
if (false) {
    /** @type {?} */
    PoPageContentComponent.prototype.contentOpacity;
    /** @type {?} */
    PoPageContentComponent.prototype.height;
    /** @type {?} */
    PoPageContentComponent.prototype.overflowY;
    /** @type {?} */
    PoPageContentComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS9wby1wYWdlLWNvbnRlbnQvcG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFpQixTQUFTLEVBQWEsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9FLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDOzs7Ozs7QUFXOUUsTUFBTSxPQUFPLHNCQUF1QixTQUFRLDBCQUEwQjs7OztJQU1wRSxZQUFtQixRQUFtQjtRQUNwQyxLQUFLLEVBQUUsQ0FBQztRQURTLGFBQVEsR0FBUixRQUFRLENBQVc7UUFKdEMsbUJBQWMsR0FBVyxDQUFDLENBQUM7UUFDM0IsV0FBTSxHQUFXLEtBQUssQ0FBQztRQUN2QixjQUFTLEdBQVcsTUFBTSxDQUFDO1FBSXpCLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQzs7OztJQUVELHFCQUFxQjtRQUNuQixVQUFVOzs7UUFBQyxHQUFHLEVBQUU7O2tCQUNSLGlCQUFpQixHQUFnQixRQUFRLENBQUMsYUFBYSxDQUFDLG9CQUFvQixDQUFDO1lBRW5GLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxnQkFBZ0IsQ0FBQyxZQUF5Qjs7Y0FDbEMsVUFBVSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWTs7Y0FDdkMsZ0JBQWdCLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7O2NBQ3hGLFNBQVMsR0FBRyxVQUFVLEdBQUcsZ0JBQWdCO1FBRS9DLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxTQUFTLElBQUksQ0FBQztJQUNqQyxDQUFDOzs7OztJQUVPLG1CQUFtQjtRQUN6QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFROzs7UUFBRSxHQUFHLEVBQUU7WUFDbEUsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDL0IsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVPLGVBQWU7UUFDckIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7OztZQWhERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IseUxBQStDO2FBQ2hEOzs7O1lBWjZDLFNBQVM7Ozs7SUFlckQsZ0RBQTJCOztJQUMzQix3Q0FBdUI7O0lBQ3ZCLDJDQUEyQjs7SUFFZiwwQ0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvUGFnZUNvbnRlbnRCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1wYWdlLWNvbnRlbnQtYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkb2NzRXh0ZW5kcyBQb1BhZ2VDb250ZW50QmFzZUNvbXBvbmVudFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1wYWdlLWNvbnRlbnQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1BhZ2VDb250ZW50Q29tcG9uZW50IGV4dGVuZHMgUG9QYWdlQ29udGVudEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuXG4gIGNvbnRlbnRPcGFjaXR5OiBudW1iZXIgPSAwO1xuICBoZWlnaHQ6IHN0cmluZyA9ICc5MCUnO1xuICBvdmVyZmxvd1k6IHN0cmluZyA9ICdub25lJztcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5pbml0aWFsaXplTGlzdGVuZXJzKCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5yZWNhbGN1bGF0ZUhlYWRlclNpemUoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXJzKCk7XG4gIH1cblxuICByZWNhbGN1bGF0ZUhlYWRlclNpemUoKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCBwYWdlSGVhZGVyRWxlbWVudDogSFRNTEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYucG8tcGFnZS1oZWFkZXInKTtcblxuICAgICAgdGhpcy5zZXRIZWlnaHRDb250ZW50KHBhZ2VIZWFkZXJFbGVtZW50KTtcbiAgICAgIHRoaXMuY29udGVudE9wYWNpdHkgPSAxO1xuICAgIH0pO1xuICB9XG5cbiAgc2V0SGVpZ2h0Q29udGVudChwb1BhZ2VIZWFkZXI6IEhUTUxFbGVtZW50KSB7XG4gICAgY29uc3QgYm9keUhlaWdodCA9IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0O1xuICAgIGNvbnN0IHBhZ2VIZWFkZXJIZWlnaHQgPSBwb1BhZ2VIZWFkZXIgPyBwb1BhZ2VIZWFkZXIub2Zmc2V0VG9wICsgcG9QYWdlSGVhZGVyLm9mZnNldEhlaWdodCA6IDA7XG4gICAgY29uc3QgbmV3SGVpZ2h0ID0gYm9keUhlaWdodCAtIHBhZ2VIZWFkZXJIZWlnaHQ7XG5cbiAgICB0aGlzLmhlaWdodCA9IGAke25ld0hlaWdodH1weGA7XG4gIH1cblxuICBwcml2YXRlIGluaXRpYWxpemVMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lciA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAncmVzaXplJywgKCkgPT4ge1xuICAgICAgdGhpcy5yZWNhbGN1bGF0ZUhlYWRlclNpemUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgIHRoaXMucmVzaXplTGlzdGVuZXIoKTtcbiAgfVxuXG59XG4iXX0=