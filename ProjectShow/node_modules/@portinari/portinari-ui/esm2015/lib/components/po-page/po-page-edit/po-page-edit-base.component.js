/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input, ViewChild } from '@angular/core';
import { browserLanguage, poLocaleDefault } from './../../../utils/util';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
/** @type {?} */
export const poPageEditLiteralsDefault = {
    en: (/** @type {?} */ ({
        cancel: 'Cancel',
        save: 'Save',
        saveNew: 'Save and New'
    })),
    es: (/** @type {?} */ ({
        cancel: 'Cancelar',
        save: 'Guardar',
        saveNew: 'Guardar y Nuevo'
    })),
    pt: (/** @type {?} */ ({
        cancel: 'Cancelar',
        save: 'Salvar',
        saveNew: 'Salvar e Novo'
    })),
    ru: (/** @type {?} */ ({
        cancel: 'отменить',
        save: 'экономить',
        saveNew: 'Сохранить и новый'
    }))
};
/**
 * \@description
 *
 * O componente **po-page-edit** é utilizado como container principal para tela de edição ou adição de um
 * registro.
 * Por padrão possui 3 ações, cada ação na tela executa uma função no componente que está utilizando o po-page-edit,
 * são elas:
 *  - Cancelar (função: cancel);
 *  - Salvar e Novo (função: saveNew);
 *  - Salvar (função: save);
 *
 * Caso não estiver implementado alguma função, listado anteriormente, o mesmo não será apresentado.
 *
 * Os botões "Salvar" e "Salvar e Novo" podem ser habilitados/desabilitados utilizando a propriedade p-disable-submit.
 * Esta propriedade pode ser utilizada para desabilitar os botões caso exista um formulário inválido na página ou alguma
 * regra de negócio não tenha sido atendida.
 */
export class PoPageEditBaseComponent {
    /**
     * \@optional
     *
     * \@description
     *
     * Objeto com as literais usadas no `po-page-edit`.
     *
     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
     *
     * ```
     *  const customLiterals: PoPageEditLiterals = {
     *    cancel: 'Voltar',
     *    save: 'Confirmar',
     *    saveNew: 'Confirmar e criar um novo'
     *  };
     * ```
     *
     * Ou passando apenas as literais que deseja customizar:
     *
     * ```
     *  const customLiterals: PoPageEditLiterals = {
     *    cancel: 'Cancelar processo'
     *  };
     * ```
     *
     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
     *
     * ```
     * <po-page-edit
     *   [p-literals]="customLiterals">
     * </po-page-edit>
     * ```
     *
     *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
     * @param {?} value
     * @return {?}
     */
    set literals(value) {
        if (value instanceof Object && !(value instanceof Array)) {
            this._literals = Object.assign({}, poPageEditLiteralsDefault[poLocaleDefault], poPageEditLiteralsDefault[browserLanguage()], value);
        }
        else {
            this._literals = poPageEditLiteralsDefault[browserLanguage()];
        }
    }
    /**
     * @return {?}
     */
    get literals() {
        return this._literals || poPageEditLiteralsDefault[browserLanguage()];
    }
    /**
     * Título da página.
     * @param {?} title
     * @return {?}
     */
    set title(title) {
        this._title = title;
        this.poPageContent.recalculateHeaderSize();
    }
    /**
     * @return {?}
     */
    get title() {
        return this._title;
    }
}
PoPageEditBaseComponent.propDecorators = {
    poPageContent: [{ type: ViewChild, args: [PoPageContentComponent, { static: true },] }],
    breadcrumb: [{ type: Input, args: ['p-breadcrumb',] }],
    disableSubmit: [{ type: Input, args: ['p-disable-submit',] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    title: [{ type: Input, args: ['p-title',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageEditBaseComponent.prototype._literals;
    /**
     * @type {?}
     * @private
     */
    PoPageEditBaseComponent.prototype._title;
    /** @type {?} */
    PoPageEditBaseComponent.prototype.poPageContent;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    PoPageEditBaseComponent.prototype.breadcrumb;
    /**
     * Desabilita botões de submissão (save e saveNew)
     * @type {?}
     */
    PoPageEditBaseComponent.prototype.disableSubmit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1lZGl0LWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlL3BvLXBhZ2UtZWRpdC9wby1wYWdlLWVkaXQtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHekUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOENBQThDLENBQUM7O0FBR3RGLE1BQU0sT0FBTyx5QkFBeUIsR0FBRztJQUN2QyxFQUFFLEVBQUUsbUJBQXFCO1FBQ3ZCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLElBQUksRUFBRSxNQUFNO1FBQ1osT0FBTyxFQUFFLGNBQWM7S0FDeEIsRUFBQTtJQUNELEVBQUUsRUFBRSxtQkFBcUI7UUFDdkIsTUFBTSxFQUFFLFVBQVU7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixPQUFPLEVBQUUsaUJBQWlCO0tBQzNCLEVBQUE7SUFDRCxFQUFFLEVBQUUsbUJBQXFCO1FBQ3ZCLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFLGVBQWU7S0FDekIsRUFBQTtJQUNELEVBQUUsRUFBRSxtQkFBcUI7UUFDdkIsTUFBTSxFQUFFLFVBQVU7UUFDbEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsT0FBTyxFQUFFLG1CQUFtQjtLQUM3QixFQUFBO0NBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CRCxNQUFNLE9BQU8sdUJBQXVCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWdEbEMsSUFBeUIsUUFBUSxDQUFDLEtBQXlCO1FBQ3pELElBQUksS0FBSyxZQUFZLE1BQU0sSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLEtBQUssQ0FBQyxFQUFFO1lBQ3hELElBQUksQ0FBQyxTQUFTLHFCQUNULHlCQUF5QixDQUFDLGVBQWUsQ0FBQyxFQUMxQyx5QkFBeUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxFQUM1QyxLQUFLLENBQ1QsQ0FBQztTQUNIO2FBQU07WUFDTCxJQUFJLENBQUMsU0FBUyxHQUFHLHlCQUF5QixDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7U0FDL0Q7SUFDSCxDQUFDOzs7O0lBQ0QsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLHlCQUF5QixDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7SUFDeEUsQ0FBQzs7Ozs7O0lBR0QsSUFBc0IsS0FBSyxDQUFDLEtBQWE7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQzdDLENBQUM7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQzs7OzRCQWxFQSxTQUFTLFNBQUMsc0JBQXNCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO3lCQUdsRCxLQUFLLFNBQUMsY0FBYzs0QkFHcEIsS0FBSyxTQUFDLGtCQUFrQjt1QkFxQ3hCLEtBQUssU0FBQyxZQUFZO29CQWdCbEIsS0FBSyxTQUFDLFNBQVM7Ozs7Ozs7SUE5RGhCLDRDQUFzQzs7Ozs7SUFDdEMseUNBQXVCOztJQUV2QixnREFBMkY7Ozs7O0lBRzNGLDZDQUFpRDs7Ozs7SUFHakQsZ0RBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIHBvTG9jYWxlRGVmYXVsdCB9IGZyb20gJy4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvQnJlYWRjcnVtYiB9IGZyb20gJy4uLy4uL3BvLWJyZWFkY3J1bWIvcG8tYnJlYWRjcnVtYi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QYWdlQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL3BvLXBhZ2UtY29udGVudC9wby1wYWdlLWNvbnRlbnQuY29tcG9uZW50JztcbmltcG9ydCB7IFBvUGFnZUVkaXRMaXRlcmFscyB9IGZyb20gJy4vcG8tcGFnZS1lZGl0LWxpdGVyYWxzLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjb25zdCBwb1BhZ2VFZGl0TGl0ZXJhbHNEZWZhdWx0ID0ge1xuICBlbjogPFBvUGFnZUVkaXRMaXRlcmFscz4ge1xuICAgIGNhbmNlbDogJ0NhbmNlbCcsXG4gICAgc2F2ZTogJ1NhdmUnLFxuICAgIHNhdmVOZXc6ICdTYXZlIGFuZCBOZXcnXG4gIH0sXG4gIGVzOiA8UG9QYWdlRWRpdExpdGVyYWxzPiB7XG4gICAgY2FuY2VsOiAnQ2FuY2VsYXInLFxuICAgIHNhdmU6ICdHdWFyZGFyJyxcbiAgICBzYXZlTmV3OiAnR3VhcmRhciB5IE51ZXZvJ1xuICB9LFxuICBwdDogPFBvUGFnZUVkaXRMaXRlcmFscz4ge1xuICAgIGNhbmNlbDogJ0NhbmNlbGFyJyxcbiAgICBzYXZlOiAnU2FsdmFyJyxcbiAgICBzYXZlTmV3OiAnU2FsdmFyIGUgTm92bydcbiAgfSxcbiAgcnU6IDxQb1BhZ2VFZGl0TGl0ZXJhbHM+IHtcbiAgICBjYW5jZWw6ICfQvtGC0LzQtdC90LjRgtGMJyxcbiAgICBzYXZlOiAn0Y3QutC+0L3QvtC80LjRgtGMJyxcbiAgICBzYXZlTmV3OiAn0KHQvtGF0YDQsNC90LjRgtGMINC4INC90L7QstGL0LknXG4gIH1cbn07XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlICoqcG8tcGFnZS1lZGl0Kiogw6kgdXRpbGl6YWRvIGNvbW8gY29udGFpbmVyIHByaW5jaXBhbCBwYXJhIHRlbGEgZGUgZWRpw6fDo28gb3UgYWRpw6fDo28gZGUgdW1cbiAqIHJlZ2lzdHJvLlxuICogUG9yIHBhZHLDo28gcG9zc3VpIDMgYcOnw7VlcywgY2FkYSBhw6fDo28gbmEgdGVsYSBleGVjdXRhIHVtYSBmdW7Dp8OjbyBubyBjb21wb25lbnRlIHF1ZSBlc3TDoSB1dGlsaXphbmRvIG8gcG8tcGFnZS1lZGl0LFxuICogc8OjbyBlbGFzOlxuICogIC0gQ2FuY2VsYXIgKGZ1bsOnw6NvOiBjYW5jZWwpO1xuICogIC0gU2FsdmFyIGUgTm92byAoZnVuw6fDo286IHNhdmVOZXcpO1xuICogIC0gU2FsdmFyIChmdW7Dp8Ojbzogc2F2ZSk7XG4gKlxuICogQ2FzbyBuw6NvIGVzdGl2ZXIgaW1wbGVtZW50YWRvIGFsZ3VtYSBmdW7Dp8OjbywgbGlzdGFkbyBhbnRlcmlvcm1lbnRlLCBvIG1lc21vIG7Do28gc2Vyw6EgYXByZXNlbnRhZG8uXG4gKlxuICogT3MgYm90w7VlcyBcIlNhbHZhclwiIGUgXCJTYWx2YXIgZSBOb3ZvXCIgcG9kZW0gc2VyIGhhYmlsaXRhZG9zL2Rlc2FiaWxpdGFkb3MgdXRpbGl6YW5kbyBhIHByb3ByaWVkYWRlIHAtZGlzYWJsZS1zdWJtaXQuXG4gKiBFc3RhIHByb3ByaWVkYWRlIHBvZGUgc2VyIHV0aWxpemFkYSBwYXJhIGRlc2FiaWxpdGFyIG9zIGJvdMO1ZXMgY2FzbyBleGlzdGEgdW0gZm9ybXVsw6FyaW8gaW52w6FsaWRvIG5hIHDDoWdpbmEgb3UgYWxndW1hXG4gKiByZWdyYSBkZSBuZWfDs2NpbyBuw6NvIHRlbmhhIHNpZG8gYXRlbmRpZGEuXG4gKi9cbmV4cG9ydCBjbGFzcyBQb1BhZ2VFZGl0QmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfbGl0ZXJhbHM6IFBvUGFnZUVkaXRMaXRlcmFscztcbiAgcHJpdmF0ZSBfdGl0bGU6IHN0cmluZztcblxuICBAVmlld0NoaWxkKFBvUGFnZUNvbnRlbnRDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIHBvUGFnZUNvbnRlbnQ6IFBvUGFnZUNvbnRlbnRDb21wb25lbnQ7XG5cbiAgLyoqIE9iamV0byBjb20gcHJvcHJpZWRhZGVzIGRvIGJyZWFkY3J1bWIuICovXG4gIEBJbnB1dCgncC1icmVhZGNydW1iJykgYnJlYWRjcnVtYj86IFBvQnJlYWRjcnVtYjtcblxuICAvKiogRGVzYWJpbGl0YSBib3TDtWVzIGRlIHN1Ym1pc3PDo28gKHNhdmUgZSBzYXZlTmV3KSAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZS1zdWJtaXQnKSBkaXNhYmxlU3VibWl0PzogYm9vbGVhbjtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBPYmpldG8gY29tIGFzIGxpdGVyYWlzIHVzYWRhcyBubyBgcG8tcGFnZS1lZGl0YC5cbiAgICpcbiAgICogRXhpc3RlbSBkdWFzIG1hbmVpcmFzIGRlIGN1c3RvbWl6YXIgbyBjb21wb25lbnRlLCBwYXNzYW5kbyB1bSBvYmpldG8gY29tIHRvZGFzIGFzIGxpdGVyYWlzIGRpc3BvbsOtdmVpczpcbiAgICpcbiAgICogYGBgXG4gICAqICBjb25zdCBjdXN0b21MaXRlcmFsczogUG9QYWdlRWRpdExpdGVyYWxzID0ge1xuICAgKiAgICBjYW5jZWw6ICdWb2x0YXInLFxuICAgKiAgICBzYXZlOiAnQ29uZmlybWFyJyxcbiAgICogICAgc2F2ZU5ldzogJ0NvbmZpcm1hciBlIGNyaWFyIHVtIG5vdm8nXG4gICAqICB9O1xuICAgKiBgYGBcbiAgICpcbiAgICogT3UgcGFzc2FuZG8gYXBlbmFzIGFzIGxpdGVyYWlzIHF1ZSBkZXNlamEgY3VzdG9taXphcjpcbiAgICpcbiAgICogYGBgXG4gICAqICBjb25zdCBjdXN0b21MaXRlcmFsczogUG9QYWdlRWRpdExpdGVyYWxzID0ge1xuICAgKiAgICBjYW5jZWw6ICdDYW5jZWxhciBwcm9jZXNzbydcbiAgICogIH07XG4gICAqIGBgYFxuICAgKlxuICAgKiBFIHBhcmEgY2FycmVnYXIgYXMgbGl0ZXJhaXMgY3VzdG9taXphZGFzLCBiYXN0YSBhcGVuYXMgcGFzc2FyIG8gb2JqZXRvIHBhcmEgbyBjb21wb25lbnRlLlxuICAgKlxuICAgKiBgYGBcbiAgICogPHBvLXBhZ2UtZWRpdFxuICAgKiAgIFtwLWxpdGVyYWxzXT1cImN1c3RvbUxpdGVyYWxzXCI+XG4gICAqIDwvcG8tcGFnZS1lZGl0PlxuICAgKiBgYGBcbiAgICpcbiAgICogID4gTyBvYmpldG8gcGFkcsOjbyBkZSBsaXRlcmFpcyBzZXLDoSB0cmFkdXppZG8gZGUgYWNvcmRvIGNvbSBvIGlkaW9tYSBkbyBicm93c2VyIChwdCwgZW4sIGVzKS5cbiAgICovXG4gIEBJbnB1dCgncC1saXRlcmFscycpIHNldCBsaXRlcmFscyh2YWx1ZTogUG9QYWdlRWRpdExpdGVyYWxzKSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgT2JqZWN0ICYmICEodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICAgIHRoaXMuX2xpdGVyYWxzID0ge1xuICAgICAgICAuLi5wb1BhZ2VFZGl0TGl0ZXJhbHNEZWZhdWx0W3BvTG9jYWxlRGVmYXVsdF0sXG4gICAgICAgIC4uLnBvUGFnZUVkaXRMaXRlcmFsc0RlZmF1bHRbYnJvd3Nlckxhbmd1YWdlKCldLFxuICAgICAgICAuLi52YWx1ZVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fbGl0ZXJhbHMgPSBwb1BhZ2VFZGl0TGl0ZXJhbHNEZWZhdWx0W2Jyb3dzZXJMYW5ndWFnZSgpXTtcbiAgICB9XG4gIH1cbiAgZ2V0IGxpdGVyYWxzKCkge1xuICAgIHJldHVybiB0aGlzLl9saXRlcmFscyB8fCBwb1BhZ2VFZGl0TGl0ZXJhbHNEZWZhdWx0W2Jyb3dzZXJMYW5ndWFnZSgpXTtcbiAgfVxuXG4gIC8qKiBUw610dWxvIGRhIHDDoWdpbmEuICovXG4gIEBJbnB1dCgncC10aXRsZScpIHNldCB0aXRsZSh0aXRsZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLnBvUGFnZUNvbnRlbnQucmVjYWxjdWxhdGVIZWFkZXJTaXplKCk7XG4gIH1cblxuICBnZXQgdGl0bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RpdGxlO1xuICB9XG5cbn1cbiJdfQ==