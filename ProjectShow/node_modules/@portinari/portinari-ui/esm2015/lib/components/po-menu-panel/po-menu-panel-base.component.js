/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { isExternalLink } from '../../utils/util';
/**
 * \@description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
export class PoMenuPanelBaseComponent {
    /**
     * Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio.
     * @param {?} menus
     * @return {?}
     */
    set menus(menus) {
        this._menus = Array.isArray(menus) ? menus : [];
        this.setMenuExtraProperties(this._menus);
        this.validateMenus(this._menus);
    }
    /**
     * @return {?}
     */
    get menus() {
        return this._menus;
    }
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    setMenuExtraProperties(menus) {
        menus.forEach((/**
         * @param {?} menuItem
         * @return {?}
         */
        menuItem => this.setMenuItemProperties((/** @type {?} */ (menuItem)))));
    }
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    setMenuItemProperties(menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    }
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    setMenuType(menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    validateMenu(menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');
        }
    }
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    validateMenus(menus) {
        menus.forEach((/**
         * @param {?} menu
         * @return {?}
         */
        menu => this.validateMenu(menu)));
    }
}
PoMenuPanelBaseComponent.propDecorators = {
    menus: [{ type: Input, args: ['p-menus',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoMenuPanelBaseComponent.prototype._menus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbWVudS1wYW5lbC9wby1tZW51LXBhbmVsLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7Ozs7OztBQWNsRCxNQUFNLE9BQU8sd0JBQXdCOzs7Ozs7SUFLbkMsSUFBc0IsS0FBSyxDQUFDLEtBQTZCO1FBQ3ZELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFFaEQsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7Ozs7OztJQUVPLHNCQUFzQixDQUFDLEtBQTZCO1FBQzFELEtBQUssQ0FBQyxPQUFPOzs7O1FBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsbUJBQTBCLFFBQVEsRUFBQSxDQUFDLEVBQUMsQ0FBQztJQUM1RixDQUFDOzs7Ozs7SUFFTyxxQkFBcUIsQ0FBQyxRQUFpQztRQUM3RCxRQUFRLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQyxFQUFFLElBQUksSUFBSSxFQUFFLENBQUM7UUFDcEMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7OztJQUVPLFdBQVcsQ0FBQyxRQUF5QjtRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqQyxPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7Ozs7OztJQUVPLFlBQVksQ0FBQyxRQUF5QjtRQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRTtZQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLHNEQUFzRCxDQUFDLENBQUM7U0FDekU7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7U0FDeEU7SUFDSCxDQUFDOzs7Ozs7SUFFTyxhQUFhLENBQUMsS0FBSztRQUN6QixLQUFLLENBQUMsT0FBTzs7OztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDO0lBQ2pELENBQUM7OztvQkE1Q0EsS0FBSyxTQUFDLFNBQVM7Ozs7Ozs7SUFIaEIsMENBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyB2NCBhcyB1dWlkIH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgeyBpc0V4dGVybmFsTGluayB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb01lbnVQYW5lbEl0ZW0gfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbUludGVybmFsIH0gZnJvbSAnLi9wby1tZW51LXBhbmVsLWl0ZW0vcG8tbWVudS1wYW5lbC1pdGVtLWludGVybmFsLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0ZSDDqSB1bSBjb21wb25lbnRlIGRlIG1lbnUgbGF0ZXJhbCBjb21wb3N0byBhcGVuYXMgcG9yIMOtY29uZXMgZSBjb20gdW0gbsOtdmVsLCB1dGlsaXphZG8gcGFyYSBuYXZlZ2HDp8Ojb1xuICogZW0gcMOhZ2luYXMgaW50ZXJuYXMsIGV4dGVybmFzIGRhIGFwbGljYcOnw6NvIG91IGFjaW9uYSB1bWEgYcOnw6NvLlxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tbWVudS1wYW5lbGAgcmVjZWJlIHVtYSBsaXN0YSBkZSBvYmpldG9zIGRvIHRpcG8gYE1lbnVQYW5lbEl0ZW1gIGNvbSBhcyBpbmZvcm1hw6fDtWVzIGRvc1xuICogaXRlbnMgZGUgbWVudSBjb21vIHRleHRvcywgbGlua3MgcGFyYSByZWRpcmVjaW9uYW1lbnRvLCBhw6fDtWVzIGUgw61jb25lcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFBvTWVudVBhbmVsQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfbWVudXM7XG5cbiAgLyoqIExpc3RhIGRvcyBpdGVucyBkbyBgcG8tbWVudS1wYW5lbGAuIFNlIG8gdmFsb3IgZXN0aXZlciBpbmRlZmluaWRvIG91IGludsOhbGlkbywgc2Vyw6EgaW5pY2lhbGl6YWRvIGNvbW8gdW0gYXJyYXkgdmF6aW8uICovXG4gIEBJbnB1dCgncC1tZW51cycpIHNldCBtZW51cyhtZW51czogQXJyYXk8UG9NZW51UGFuZWxJdGVtPikge1xuICAgIHRoaXMuX21lbnVzID0gQXJyYXkuaXNBcnJheShtZW51cykgPyBtZW51cyA6IFtdO1xuXG4gICAgdGhpcy5zZXRNZW51RXh0cmFQcm9wZXJ0aWVzKHRoaXMuX21lbnVzKTtcbiAgICB0aGlzLnZhbGlkYXRlTWVudXModGhpcy5fbWVudXMpO1xuICB9XG5cbiAgZ2V0IG1lbnVzKCkge1xuICAgIHJldHVybiB0aGlzLl9tZW51cztcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudUV4dHJhUHJvcGVydGllcyhtZW51czogQXJyYXk8UG9NZW51UGFuZWxJdGVtPikge1xuICAgIG1lbnVzLmZvckVhY2gobWVudUl0ZW0gPT4gdGhpcy5zZXRNZW51SXRlbVByb3BlcnRpZXMoPFBvTWVudVBhbmVsSXRlbUludGVybmFsPiBtZW51SXRlbSkpO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRNZW51SXRlbVByb3BlcnRpZXMobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbUludGVybmFsKSB7XG4gICAgbWVudUl0ZW0uaWQgPSBtZW51SXRlbS5pZCB8fCB1dWlkKCk7XG4gICAgbWVudUl0ZW0udHlwZSA9IHRoaXMuc2V0TWVudVR5cGUobWVudUl0ZW0pO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRNZW51VHlwZShtZW51SXRlbTogUG9NZW51UGFuZWxJdGVtKTogc3RyaW5nIHtcbiAgICBpZiAoIW1lbnVJdGVtLmxpbmspIHtcbiAgICAgIHJldHVybiAnbm9MaW5rJztcbiAgICB9XG5cbiAgICBpZiAoaXNFeHRlcm5hbExpbmsobWVudUl0ZW0ubGluaykpIHtcbiAgICAgIHJldHVybiAnZXh0ZXJuYWxMaW5rJztcbiAgICB9XG5cbiAgICByZXR1cm4gJ2ludGVybmFsTGluayc7XG4gIH1cblxuICBwcml2YXRlIHZhbGlkYXRlTWVudShtZW51SXRlbTogUG9NZW51UGFuZWxJdGVtKSB7XG4gICAgaWYgKCFtZW51SXRlbS5sYWJlbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdPIGF0cmlidXRvIFBvTWVudVBhbmVsSXRlbS5sYWJlbCBuw6NvIHBvZGUgc2VyIHZhemlvLicpO1xuICAgIH1cblxuICAgIGlmICghbWVudUl0ZW0uaWNvbikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdPIGF0cmlidXRvIFBvTWVudVBhbmVsSXRlbS5pY29uIG7Do28gcG9kZSBzZXIgdmF6aW8uJyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSB2YWxpZGF0ZU1lbnVzKG1lbnVzKTogdm9pZCB7XG4gICAgbWVudXMuZm9yRWFjaChtZW51ID0+IHRoaXMudmFsaWRhdGVNZW51KG1lbnUpKTtcbiAgfVxuXG59XG4iXX0=