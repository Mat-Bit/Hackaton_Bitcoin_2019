/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { PoMenuPanelItemsService } from '../services/po-menu-panel-items.service';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que implementa cada item do po-menu-panel.
 */
export class PoMenuPanelItemComponent {
    /**
     * @param {?} menuItemsService
     */
    constructor(menuItemsService) {
        this.menuItemsService = menuItemsService;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.itemsSubscription.unsubscribe();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // subscribe to menu component messages
        this.subscribeMenuClickedFromParent();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    clickMenuItem(event) {
        if (!(event.ctrlKey || event.metaKey)) {
            event.preventDefault();
            // Emmit to parent
            this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);
        }
    }
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    activateMenu(menu) {
        this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;
    }
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    processMenuItem(menu) {
        if (this.menuItemInternal.type === 'internalLink') {
            this.activateMenu(menu.active);
        }
    }
    /**
     * @private
     * @return {?}
     */
    subscribeMenuClickedFromParent() {
        this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe((/**
         * @param {?} menu
         * @return {?}
         */
        menu => {
            this.processMenuItem(menu);
        }));
    }
}
PoMenuPanelItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-menu-panel-item',
                template: "<!-- menu com link interno -->\n<a *ngIf=\"menuItemInternal.type === 'internalLink'\" [routerLink]=\"menuItemInternal.link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<!-- menu com link externo -->\n<a *ngIf=\"menuItemInternal.type === 'externalLink'\" [href]=\"menuItemInternal.link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<!-- menu sem link -->\n<a *ngIf=\"menuItemInternal.type === 'noLink'\" href=\"javascript:;\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<ng-template #menuItemTemplate>\n  <div class=\"po-menu-panel-item\"\n    p-tooltip-position=\"right\"\n    [class.po-menu-panel-item-selected]=\"menuItemInternal.isSelected\"\n    [p-tooltip]=\"menuItemInternal.label\"\n    (click)=\"clickMenuItem($event);\">\n    <span class=\"po-icon {{menuItemInternal.icon}}\"></span>\n  </div>\n</ng-template>\n"
            }] }
];
/** @nocollapse */
PoMenuPanelItemComponent.ctorParameters = () => [
    { type: PoMenuPanelItemsService }
];
PoMenuPanelItemComponent.propDecorators = {
    menuItemInternal: [{ type: Input, args: ['p-menu-item-internal',] }]
};
if (false) {
    /** @type {?} */
    PoMenuPanelItemComponent.prototype.itemsSubscription;
    /** @type {?} */
    PoMenuPanelItemComponent.prototype.menuItemInternal;
    /**
     * @type {?}
     * @private
     */
    PoMenuPanelItemComponent.prototype.menuItemsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbWVudS1wYW5lbC9wby1tZW51LXBhbmVsLWl0ZW0vcG8tbWVudS1wYW5lbC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBS3BFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7Ozs7OztBQWFsRixNQUFNLE9BQU8sd0JBQXdCOzs7O0lBTW5DLFlBQW9CLGdCQUF5QztRQUF6QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXlCO0lBQUksQ0FBQzs7OztJQUVsRSxXQUFXO1FBQ1QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sdUNBQXVDO1FBQ3ZDLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxDQUFDO0lBQ3hDLENBQUM7Ozs7O0lBRUQsYUFBYSxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDckMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBRXZCLGtCQUFrQjtZQUNsQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDdEU7SUFDSCxDQUFDOzs7Ozs7SUFFTyxZQUFZLENBQUMsSUFBNkI7UUFDaEQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDMUUsQ0FBQzs7Ozs7O0lBRU8sZUFBZSxDQUFDLElBQUk7UUFDMUIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxLQUFLLGNBQWMsRUFBRTtZQUNqRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7Ozs7O0lBRU8sOEJBQThCO1FBQ3JDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsNEJBQTRCLEVBQUUsQ0FBQyxTQUFTOzs7O1FBQUMsSUFBSSxDQUFDLEVBQUU7WUFDNUYsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsbTdCQUFrRDthQUNuRDs7OztZQVpRLHVCQUF1Qjs7OytCQWlCN0IsS0FBSyxTQUFDLHNCQUFzQjs7OztJQUY3QixxREFBZ0M7O0lBRWhDLG9EQUF5RTs7Ozs7SUFFN0Qsb0RBQWlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbUludGVybmFsIH0gZnJvbSAnLi9wby1tZW51LXBhbmVsLWl0ZW0taW50ZXJuYWwuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbXNTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvcG8tbWVudS1wYW5lbC1pdGVtcy5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSBpbXBsZW1lbnRhIGNhZGEgaXRlbSBkbyBwby1tZW51LXBhbmVsLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1tZW51LXBhbmVsLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tbWVudS1wYW5lbC1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb01lbnVQYW5lbEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG5cbiAgaXRlbXNTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBASW5wdXQoJ3AtbWVudS1pdGVtLWludGVybmFsJykgbWVudUl0ZW1JbnRlcm5hbDogUG9NZW51UGFuZWxJdGVtSW50ZXJuYWw7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtZW51SXRlbXNTZXJ2aWNlOiBQb01lbnVQYW5lbEl0ZW1zU2VydmljZSkgeyB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5pdGVtc1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gc3Vic2NyaWJlIHRvIG1lbnUgY29tcG9uZW50IG1lc3NhZ2VzXG4gICAgdGhpcy5zdWJzY3JpYmVNZW51Q2xpY2tlZEZyb21QYXJlbnQoKTtcbiAgfVxuXG4gIGNsaWNrTWVudUl0ZW0oZXZlbnQpIHtcbiAgICBpZiAoIShldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAvLyBFbW1pdCB0byBwYXJlbnRcbiAgICAgIHRoaXMubWVudUl0ZW1zU2VydmljZS5zZW5kVG9QYXJlbnRNZW51Q2xpY2tlZCh0aGlzLm1lbnVJdGVtSW50ZXJuYWwpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYWN0aXZhdGVNZW51KG1lbnU6IFBvTWVudVBhbmVsSXRlbUludGVybmFsKSB7XG4gICAgdGhpcy5tZW51SXRlbUludGVybmFsLmlzU2VsZWN0ZWQgPSB0aGlzLm1lbnVJdGVtSW50ZXJuYWwuaWQgPT09IG1lbnUuaWQ7XG4gIH1cblxuICBwcml2YXRlIHByb2Nlc3NNZW51SXRlbShtZW51KSB7XG4gICAgaWYgKHRoaXMubWVudUl0ZW1JbnRlcm5hbC50eXBlID09PSAnaW50ZXJuYWxMaW5rJykge1xuICAgICAgdGhpcy5hY3RpdmF0ZU1lbnUobWVudS5hY3RpdmUpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc3Vic2NyaWJlTWVudUNsaWNrZWRGcm9tUGFyZW50KCkge1xuICAgdGhpcy5pdGVtc1N1YnNjcmlwdGlvbiA9IHRoaXMubWVudUl0ZW1zU2VydmljZS5yZWNlaXZlRnJvbVBhcmVudE1lbnVDbGlja2VkKCkuc3Vic2NyaWJlKG1lbnUgPT4ge1xuICAgICAgdGhpcy5wcm9jZXNzTWVudUl0ZW0obWVudSk7XG4gICAgfSk7XG4gIH1cblxufVxuIl19