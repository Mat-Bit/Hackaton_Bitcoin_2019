/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { isKeyCodeEnter } from './../../utils/util';
import { PoDropdownBaseComponent } from './po-dropdown-base.component';
/**
 * \@docsExtends PoDropdownBaseComponent
 *
 * \@example
 *
 * <example name="po-dropdown-basic" title="Portinari Dropdown Basic" >
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.html"> </file>
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.ts"> </file>
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-dropdown-labs" title="Portinari Dropdown Labs" >
 *  <file name="sample-po-dropdown-labs/sample-po-dropdown-labs.component.html"> </file>
 *  <file name="sample-po-dropdown-labs/sample-po-dropdown-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-dropdown-social-network" title="Portinari Dropdown - Social Network" >
 *  <file name="sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.html"> </file>
 *  <file name="sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.ts"> </file>
 * </example>
 */
export class PoDropdownComponent extends PoDropdownBaseComponent {
    /**
     * @param {?} renderer
     */
    constructor(renderer) {
        super();
        this.renderer = renderer;
        this.onScroll = (/**
         * @return {?}
         */
        () => {
            if (this.open) {
                this.hideDropdown();
            }
        });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDown(event) {
        if (isKeyCodeEnter(event)) {
            this.toggleDropdown();
        }
    }
    /**
     * @return {?}
     */
    toggleDropdown() {
        this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    checkClickArea(event) {
        return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);
    }
    /**
     * @private
     * @return {?}
     */
    hideDropdown() {
        this.icon = 'po-icon-arrow-down';
        this.removeListeners();
        this.popupRef.close();
        this.open = false;
    }
    /**
     * @private
     * @return {?}
     */
    initializeListeners() {
        this.clickoutListener = this.renderer.listen('document', 'click', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.wasClickedOnDropdown(event);
        }));
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        () => {
            this.hideDropdown();
        }));
        window.addEventListener('scroll', this.onScroll, true);
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    }
    /**
     * @private
     * @return {?}
     */
    showDropdown() {
        this.icon = 'po-icon-arrow-up';
        this.initializeListeners();
        this.popupRef.open();
        this.open = true;
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    wasClickedOnDropdown(event) {
        /** @type {?} */
        const clickedOnDropdown = this.checkClickArea(event);
        if (!clickedOnDropdown) {
            this.hideDropdown();
        }
    }
}
PoDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-dropdown',
                template: "<div #dropdownRef\n  class=\"po-dropdown\"\n  tabindex=\"{{ disabled ? -1 : 0 }}\"\n  (click)=\"toggleDropdown()\"\n  (keydown)=\"onKeyDown($event)\">\n\n  <div class=\"po-dropdown-button\" [ngClass]=\"{'po-dropdown-button-disabled' : disabled}\">\n    {{ label }}\n    <div class=\"po-dropdown-icon po-icon {{icon}}\"></div>\n  </div>\n\n  <po-popup #popupRef\n    p-hide-arrow\n    p-is-corner-align\n    p-position=\"bottom-left\"\n    [p-actions]=\"actions\"\n    [p-custom-positions]=\"['bottom-left', 'top-left']\"\n    [p-target]=\"dropdownRef\">\n  </po-popup>\n\n</div>\n"
            }] }
];
/** @nocollapse */
PoDropdownComponent.ctorParameters = () => [
    { type: Renderer2 }
];
PoDropdownComponent.propDecorators = {
    dropdownRef: [{ type: ViewChild, args: ['dropdownRef', { read: ElementRef, static: true },] }],
    popupRef: [{ type: ViewChild, args: ['popupRef', { static: false },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoDropdownComponent.prototype.clickoutListener;
    /**
     * @type {?}
     * @private
     */
    PoDropdownComponent.prototype.resizeListener;
    /** @type {?} */
    PoDropdownComponent.prototype.dropdownRef;
    /** @type {?} */
    PoDropdownComponent.prototype.popupRef;
    /**
     * @type {?}
     * @private
     */
    PoDropdownComponent.prototype.onScroll;
    /**
     * @type {?}
     * @private
     */
    PoDropdownComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1kcm9wZG93bi9wby1kcm9wZG93bi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXBELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCdkUsTUFBTSxPQUFPLG1CQUFvQixTQUFRLHVCQUF1Qjs7OztJQVE5RCxZQUFvQixRQUFtQjtRQUNyQyxLQUFLLEVBQUUsQ0FBQztRQURVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFxQy9CLGFBQVE7OztRQUFHLEdBQVMsRUFBRTtZQUM1QixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ3JCO1FBQ0gsQ0FBQyxFQUFBO0lBdkNELENBQUM7Ozs7O0lBRUQsU0FBUyxDQUFDLEtBQVU7UUFDbEIsSUFBSSxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDekIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3ZCO0lBQ0gsQ0FBQzs7OztJQUVELGNBQWM7UUFDWixJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQy9GLENBQUM7Ozs7OztJQUVPLGNBQWMsQ0FBQyxLQUFpQjtRQUN0QyxPQUFPLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuRixDQUFDOzs7OztJQUVPLFlBQVk7UUFDbEIsSUFBSSxDQUFDLElBQUksR0FBRyxvQkFBb0IsQ0FBQztRQUNqQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7OztJQUVPLG1CQUFtQjtRQUN6QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLE9BQU87Ozs7UUFBRSxDQUFDLEtBQWlCLEVBQUUsRUFBRTtZQUN0RixJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkMsQ0FBQyxFQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFROzs7UUFBRSxHQUFHLEVBQUU7WUFDbEUsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3RCLENBQUMsRUFBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Ozs7O0lBUU8sZUFBZTtRQUNyQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN6QixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUN6QjtRQUVELElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN2QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDdkI7UUFFRCxNQUFNLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUQsQ0FBQzs7Ozs7SUFFTyxZQUFZO1FBQ2xCLElBQUksQ0FBQyxJQUFJLEdBQUcsa0JBQWtCLENBQUM7UUFDL0IsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDOzs7Ozs7SUFFTyxvQkFBb0IsQ0FBQyxLQUFpQjs7Y0FDdEMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUM7UUFFcEQsSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQ3RCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNyQjtJQUNILENBQUM7OztZQWhGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLGdsQkFBMkM7YUFDNUM7Ozs7WUEvQitCLFNBQVM7OzswQkFxQ3RDLFNBQVMsU0FBQyxhQUFhLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7dUJBQzNELFNBQVMsU0FBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOzs7Ozs7O0lBSnhDLCtDQUFxQzs7Ozs7SUFDckMsNkNBQW1DOztJQUVuQywwQ0FBc0Y7O0lBQ3RGLHVDQUF3RDs7Ozs7SUF1Q3hELHVDQUlDOzs7OztJQXpDVyx1Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzS2V5Q29kZUVudGVyIH0gZnJvbSAnLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9Ecm9wZG93bkJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWRyb3Bkb3duLWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9Ecm9wZG93bkJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kcm9wZG93bi1iYXNpY1wiIHRpdGxlPVwiUG9ydGluYXJpIERyb3Bkb3duIEJhc2ljXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tYmFzaWMvc2FtcGxlLXBvLWRyb3Bkb3duLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRyb3Bkb3duLWJhc2ljL3NhbXBsZS1wby1kcm9wZG93bi1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tYmFzaWMvc2FtcGxlLXBvLWRyb3Bkb3duLWJhc2ljLmNvbXBvbmVudC5lMmUtc3BlYy50c1wiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kcm9wZG93bi1iYXNpYy9zYW1wbGUtcG8tZHJvcGRvd24tYmFzaWMuY29tcG9uZW50LnBvLnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZHJvcGRvd24tbGFic1wiIHRpdGxlPVwiUG9ydGluYXJpIERyb3Bkb3duIExhYnNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kcm9wZG93bi1sYWJzL3NhbXBsZS1wby1kcm9wZG93bi1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRyb3Bkb3duLWxhYnMvc2FtcGxlLXBvLWRyb3Bkb3duLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZHJvcGRvd24tc29jaWFsLW5ldHdvcmtcIiB0aXRsZT1cIlBvcnRpbmFyaSBEcm9wZG93biAtIFNvY2lhbCBOZXR3b3JrXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tc29jaWFsLW5ldHdvcmsvc2FtcGxlLXBvLWRyb3Bkb3duLXNvY2lhbC1uZXR3b3JrLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRyb3Bkb3duLXNvY2lhbC1uZXR3b3JrL3NhbXBsZS1wby1kcm9wZG93bi1zb2NpYWwtbmV0d29yay5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1kcm9wZG93bicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1kcm9wZG93bi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9Ecm9wZG93bkNvbXBvbmVudCBleHRlbmRzIFBvRHJvcGRvd25CYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIGNsaWNrb3V0TGlzdGVuZXI6ICgpID0+IHZvaWQ7XG4gIHByaXZhdGUgcmVzaXplTGlzdGVuZXI6ICgpID0+IHZvaWQ7XG5cbiAgQFZpZXdDaGlsZCgnZHJvcGRvd25SZWYnLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBkcm9wZG93blJlZjogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZCgncG9wdXBSZWYnLCB7IHN0YXRpYzogZmFsc2UgfSkgcG9wdXBSZWY6IGFueTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgb25LZXlEb3duKGV2ZW50OiBhbnkpIHtcbiAgICBpZiAoaXNLZXlDb2RlRW50ZXIoZXZlbnQpKSB7XG4gICAgICB0aGlzLnRvZ2dsZURyb3Bkb3duKCk7XG4gICAgfVxuICB9XG5cbiAgdG9nZ2xlRHJvcGRvd24oKTogdm9pZCB7XG4gICAgdGhpcy5kcm9wZG93blJlZiAmJiAhdGhpcy5vcGVuICYmICF0aGlzLmRpc2FibGVkID8gdGhpcy5zaG93RHJvcGRvd24oKSA6IHRoaXMuaGlkZURyb3Bkb3duKCk7XG4gIH1cblxuICBwcml2YXRlIGNoZWNrQ2xpY2tBcmVhKGV2ZW50OiBNb3VzZUV2ZW50KSB7XG4gICAgcmV0dXJuIHRoaXMuZHJvcGRvd25SZWYgJiYgdGhpcy5kcm9wZG93blJlZi5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCk7XG4gIH1cblxuICBwcml2YXRlIGhpZGVEcm9wZG93bigpIHtcbiAgICB0aGlzLmljb24gPSAncG8taWNvbi1hcnJvdy1kb3duJztcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVycygpO1xuICAgIHRoaXMucG9wdXBSZWYuY2xvc2UoKTtcbiAgICB0aGlzLm9wZW4gPSBmYWxzZTtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdGlhbGl6ZUxpc3RlbmVycygpIHtcbiAgICB0aGlzLmNsaWNrb3V0TGlzdGVuZXIgPSB0aGlzLnJlbmRlcmVyLmxpc3RlbignZG9jdW1lbnQnLCAnY2xpY2snLCAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIHRoaXMud2FzQ2xpY2tlZE9uRHJvcGRvd24oZXZlbnQpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lciA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAncmVzaXplJywgKCkgPT4ge1xuICAgICAgdGhpcy5oaWRlRHJvcGRvd24oKTtcbiAgICB9KTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLm9uU2Nyb2xsLCB0cnVlKTtcbiAgfVxuXG4gIHByaXZhdGUgb25TY3JvbGwgPSAoKTogdm9pZCA9PiB7XG4gICAgaWYgKHRoaXMub3Blbikge1xuICAgICAgdGhpcy5oaWRlRHJvcGRvd24oKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICBpZiAodGhpcy5jbGlja291dExpc3RlbmVyKSB7XG4gICAgICB0aGlzLmNsaWNrb3V0TGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZXNpemVMaXN0ZW5lcikge1xuICAgICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICAgIH1cblxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLm9uU2Nyb2xsLCB0cnVlKTtcbiAgfVxuXG4gIHByaXZhdGUgc2hvd0Ryb3Bkb3duKCkge1xuICAgIHRoaXMuaWNvbiA9ICdwby1pY29uLWFycm93LXVwJztcbiAgICB0aGlzLmluaXRpYWxpemVMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLnBvcHVwUmVmLm9wZW4oKTtcbiAgICB0aGlzLm9wZW4gPSB0cnVlO1xuICB9XG5cbiAgcHJpdmF0ZSB3YXNDbGlja2VkT25Ecm9wZG93bihldmVudDogTW91c2VFdmVudCkge1xuICAgIGNvbnN0IGNsaWNrZWRPbkRyb3Bkb3duID0gdGhpcy5jaGVja0NsaWNrQXJlYShldmVudCk7XG5cbiAgICBpZiAoIWNsaWNrZWRPbkRyb3Bkb3duKSB7XG4gICAgICB0aGlzLmhpZGVEcm9wZG93bigpO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=