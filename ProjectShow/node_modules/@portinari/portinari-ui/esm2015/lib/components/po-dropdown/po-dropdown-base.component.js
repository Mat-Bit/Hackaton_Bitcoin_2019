/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToBoolean } from './../../utils/util';
/**
 * \@description
 *
 * O componente `po-dropdown` pode ser utilizado como um agrupador de ações e / ou opções.
 *
 * > Caso não haja configuração de rotas em sua aplicação, se faz necessário importar o `RouterModule`
 * no módulo principal para o correto funcionamento deste componente:
 *
 * ```
 * import { RouterModule } from '\@angular/router';
 *
 * \@NgModule({
 *   imports: [
 *     ...
 *     RouterModule.forRoot([]),
 *     PoModule
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   exports: [],
 *   providers: [],
 *   bootstrap: [
 *     AppComponent
 *   ]
 * })
 * export class AppModule { }
 * ```
 * > Para maiores dúvidas referente à configuração de rotas, acesse em nosso portal /Guias /Começando
 * [/Configurando as rotas do po-menu](/guides/getting-started).
 */
export class PoDropdownBaseComponent {
    constructor() {
        this._disabled = false;
        this.icon = 'po-icon-arrow-down';
        this.open = false;
    }
    /**
     * Lista de ações que serão exibidas no componente.
     * @param {?} value
     * @return {?}
     */
    set actions(value) {
        this._actions = Array.isArray(value) ? value : [];
    }
    /**
     * @return {?}
     */
    get actions() {
        return this._actions;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Desabilita o campo.
     *
     * \@default `false`
     * @param {?} value
     * @return {?}
     */
    set disabled(value) {
        this._disabled = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this._disabled;
    }
}
PoDropdownBaseComponent.propDecorators = {
    actions: [{ type: Input, args: ['p-actions',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    label: [{ type: Input, args: ['p-label',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoDropdownBaseComponent.prototype._actions;
    /**
     * @type {?}
     * @private
     */
    PoDropdownBaseComponent.prototype._disabled;
    /** @type {?} */
    PoDropdownBaseComponent.prototype.icon;
    /** @type {?} */
    PoDropdownBaseComponent.prototype.open;
    /**
     * Adiciona um rótulo ao `dropdown`.
     * @type {?}
     */
    PoDropdownBaseComponent.prototype.label;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHJvcGRvd24tYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWRyb3Bkb3duL3BvLWRyb3Bkb3duLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DdEQsTUFBTSxPQUFPLHVCQUF1QjtJQUFwQztRQUdVLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFFbkMsU0FBSSxHQUFXLG9CQUFvQixDQUFDO1FBQ3BDLFNBQUksR0FBWSxLQUFLLENBQUM7SUErQnhCLENBQUM7Ozs7OztJQTVCQyxJQUF3QixPQUFPLENBQUMsS0FBOEI7UUFDNUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNwRCxDQUFDOzs7O0lBRUQsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Ozs7Ozs7Ozs7OztJQVdELElBQXlCLFFBQVEsQ0FBQyxLQUFjO1FBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQzs7OztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDOzs7c0JBdkJBLEtBQUssU0FBQyxXQUFXO3VCQWlCakIsS0FBSyxTQUFDLFlBQVk7b0JBU2xCLEtBQUssU0FBQyxTQUFTOzs7Ozs7O0lBakNoQiwyQ0FBMEM7Ozs7O0lBQzFDLDRDQUFtQzs7SUFFbkMsdUNBQW9DOztJQUNwQyx1Q0FBc0I7Ozs7O0lBNkJ0Qix3Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9Ecm9wZG93bkFjdGlvbiB9IGZyb20gJy4vcG8tZHJvcGRvd24tYWN0aW9uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1kcm9wZG93bmAgcG9kZSBzZXIgdXRpbGl6YWRvIGNvbW8gdW0gYWdydXBhZG9yIGRlIGHDp8O1ZXMgZSAvIG91IG9ww6fDtWVzLlxuICpcbiAqID4gQ2FzbyBuw6NvIGhhamEgY29uZmlndXJhw6fDo28gZGUgcm90YXMgZW0gc3VhIGFwbGljYcOnw6NvLCBzZSBmYXogbmVjZXNzw6FyaW8gaW1wb3J0YXIgbyBgUm91dGVyTW9kdWxlYFxuICogbm8gbcOzZHVsbyBwcmluY2lwYWwgcGFyYSBvIGNvcnJldG8gZnVuY2lvbmFtZW50byBkZXN0ZSBjb21wb25lbnRlOlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLi4uXG4gKiAgICAgUm91dGVyTW9kdWxlLmZvclJvb3QoW10pLFxuICogICAgIFBvTW9kdWxlXG4gKiAgIF0sXG4gKiAgIGRlY2xhcmF0aW9uczogW1xuICogICAgIEFwcENvbXBvbmVudFxuICogICBdLFxuICogICBleHBvcnRzOiBbXSxcbiAqICAgcHJvdmlkZXJzOiBbXSxcbiAqICAgYm9vdHN0cmFwOiBbXG4gKiAgICAgQXBwQ29tcG9uZW50XG4gKiAgIF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKiA+IFBhcmEgbWFpb3JlcyBkw7p2aWRhcyByZWZlcmVudGUgw6AgY29uZmlndXJhw6fDo28gZGUgcm90YXMsIGFjZXNzZSBlbSBub3NzbyBwb3J0YWwgL0d1aWFzIC9Db21lw6dhbmRvXG4gKiBbL0NvbmZpZ3VyYW5kbyBhcyByb3RhcyBkbyBwby1tZW51XSgvZ3VpZGVzL2dldHRpbmctc3RhcnRlZCkuXG4gKi9cblxuZXhwb3J0IGNsYXNzIFBvRHJvcGRvd25CYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9hY3Rpb25zOiBBcnJheTxQb0Ryb3Bkb3duQWN0aW9uPjtcbiAgcHJpdmF0ZSBfZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBpY29uOiBzdHJpbmcgPSAncG8taWNvbi1hcnJvdy1kb3duJztcbiAgb3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBMaXN0YSBkZSBhw6fDtWVzIHF1ZSBzZXLDo28gZXhpYmlkYXMgbm8gY29tcG9uZW50ZS4gKi9cbiAgQElucHV0KCdwLWFjdGlvbnMnKSBzZXQgYWN0aW9ucyh2YWx1ZTogQXJyYXk8UG9Ecm9wZG93bkFjdGlvbj4pIHtcbiAgICB0aGlzLl9hY3Rpb25zID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFtdO1xuICB9XG5cbiAgZ2V0IGFjdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGlvbnM7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIG8gY2FtcG8uXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG5cbiAgLyoqIEFkaWNpb25hIHVtIHLDs3R1bG8gYW8gYGRyb3Bkb3duYC4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxufVxuIl19