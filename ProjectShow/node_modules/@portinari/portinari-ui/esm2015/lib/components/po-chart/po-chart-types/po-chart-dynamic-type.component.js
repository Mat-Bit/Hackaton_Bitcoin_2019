/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
/** @type {?} */
const Padding = 24;
/**
 * @abstract
 */
export class PoChartDynamicTypeComponent {
    constructor() {
        this.innerRadius = 0;
        this.onSerieClick = new Subject();
        this.onSerieHover = new Subject();
        this.series = [];
    }
    /**
     * @param {?} chartWrapperElement
     * @param {?} chartHeaderElement
     * @param {?} chartLegendElement
     * @return {?}
     */
    calculateSVGContainerDimensions(chartWrapperElement, chartHeaderElement, chartLegendElement) {
        /** @type {?} */
        const svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - (Padding * 2);
        this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;
        this.centerX = chartWrapperElement / 2;
    }
    /**
     * @return {?}
     */
    calculateTotalValue() {
        this.totalValue = this.series.reduce((/**
         * @param {?} previousValue
         * @param {?} serie
         * @return {?}
         */
        (previousValue, serie) => previousValue + serie.value), 0);
    }
}
PoChartDynamicTypeComponent.propDecorators = {
    chartBody: [{ type: ViewChild, args: ['chartBody', { static: true },] }],
    svgContainer: [{ type: ViewChild, args: ['svgContainer', { static: true },] }]
};
if (false) {
    /**
     * @type {?}
     * @protected
     */
    PoChartDynamicTypeComponent.prototype.windowResizeListener;
    /**
     * @type {?}
     * @protected
     */
    PoChartDynamicTypeComponent.prototype.windowScrollListener;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.centerX;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.chartElementCategory;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.chartElementValue;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.chartHeader;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.chartLegend;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.chartWrapper;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.colors;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.height;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.innerRadius;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.onSerieClick;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.onSerieHover;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.series;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.svgElement;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.svgHeight;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.target;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.tooltipElement;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.tooltipText;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.totalValue;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.type;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.chartBody;
    /** @type {?} */
    PoChartDynamicTypeComponent.prototype.svgContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtZHluYW1pYy10eXBlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tY2hhcnQvcG8tY2hhcnQtdHlwZXMvcG8tY2hhcnQtZHluYW1pYy10eXBlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7TUFNekIsT0FBTyxHQUFXLEVBQUU7Ozs7QUFFMUIsTUFBTSxPQUFnQiwyQkFBMkI7SUFBakQ7UUFhRSxnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixpQkFBWSxHQUFtRCxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQzdFLGlCQUFZLEdBQW1ELElBQUksT0FBTyxFQUFFLENBQUM7UUFDN0UsV0FBTSxHQUFlLEVBQUUsQ0FBQztJQXlCMUIsQ0FBQzs7Ozs7OztJQVpDLCtCQUErQixDQUFDLG1CQUEyQixFQUFFLGtCQUEwQixFQUFFLGtCQUEwQjs7Y0FDM0csc0JBQXNCLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0IsR0FBRyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFFcEcsSUFBSSxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsc0JBQXNCLENBQUM7UUFDMUUsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQzs7OztJQUVELG1CQUFtQjtRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTTs7Ozs7UUFDbEMsQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLEtBQUssR0FBRSxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7d0JBZEEsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7MkJBRXZDLFNBQVMsU0FBQyxjQUFjLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzs7Ozs7O0lBekIzQywyREFBMkM7Ozs7O0lBQzNDLDJEQUEyQzs7SUFFM0MsOENBQWdCOztJQUNoQiwyREFBMEI7O0lBQzFCLHdEQUF1Qjs7SUFDdkIsa0RBQW9COztJQUNwQixrREFBb0I7O0lBQ3BCLG1EQUFxQjs7SUFDckIsNkNBQXNCOztJQUN0Qiw2Q0FBZTs7SUFDZixrREFBd0I7O0lBQ3hCLG1EQUE2RTs7SUFDN0UsbURBQTZFOztJQUM3RSw2Q0FBd0I7O0lBQ3hCLGlEQUE4Qjs7SUFDOUIsZ0RBQWtCOztJQUNsQiw2Q0FBdUM7O0lBQ3ZDLHFEQUFrQzs7SUFDbEMsa0RBQW9COztJQUNwQixpREFBbUI7O0lBQ25CLDJDQUFrQjs7SUFFbEIsZ0RBQWdFOztJQUVoRSxtREFBc0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb0NoYXJ0VHlwZSB9IGZyb20gJy4uL2VudW1zL3BvLWNoYXJ0LXR5cGUuZW51bSc7XG5pbXBvcnQgeyBQb0RvbnV0Q2hhcnRTZXJpZXMgfSBmcm9tICcuL3BvLWNoYXJ0LWRvbnV0L3BvLWNoYXJ0LWRvbnV0LXNlcmllcy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QaWVDaGFydFNlcmllcyB9IGZyb20gJy4vcG8tY2hhcnQtcGllL3BvLWNoYXJ0LXBpZS1zZXJpZXMuaW50ZXJmYWNlJztcblxuY29uc3QgUGFkZGluZzogbnVtYmVyID0gMjQ7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQb0NoYXJ0RHluYW1pY1R5cGVDb21wb25lbnQge1xuXG4gIHByb3RlY3RlZCB3aW5kb3dSZXNpemVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcbiAgcHJvdGVjdGVkIHdpbmRvd1Njcm9sbExpc3RlbmVyOiAoKSA9PiB2b2lkO1xuXG4gIGNlbnRlclg6IG51bWJlcjtcbiAgY2hhcnRFbGVtZW50Q2F0ZWdvcnk6IGFueTtcbiAgY2hhcnRFbGVtZW50VmFsdWU6IGFueTtcbiAgY2hhcnRIZWFkZXI6IG51bWJlcjtcbiAgY2hhcnRMZWdlbmQ6IG51bWJlcjtcbiAgY2hhcnRXcmFwcGVyOiBudW1iZXI7XG4gIGNvbG9yczogQXJyYXk8c3RyaW5nPjtcbiAgaGVpZ2h0OiBudW1iZXI7XG4gIGlubmVyUmFkaXVzOiBudW1iZXIgPSAwO1xuICBvblNlcmllQ2xpY2s6IFN1YmplY3Q8UG9Eb251dENoYXJ0U2VyaWVzIHwgUG9QaWVDaGFydFNlcmllcz4gPSBuZXcgU3ViamVjdCgpO1xuICBvblNlcmllSG92ZXI6IFN1YmplY3Q8UG9Eb251dENoYXJ0U2VyaWVzIHwgUG9QaWVDaGFydFNlcmllcz4gPSBuZXcgU3ViamVjdCgpO1xuICBzZXJpZXM6IEFycmF5PGFueT4gPSBbXTtcbiAgc3ZnRWxlbWVudDogSFRNTE9iamVjdEVsZW1lbnQ7XG4gIHN2Z0hlaWdodDogbnVtYmVyO1xuICB0YXJnZXQ6IEhUTUxJbnB1dEVsZW1lbnQgJiBFdmVudFRhcmdldDtcbiAgdG9vbHRpcEVsZW1lbnQ6IEhUTUxPYmplY3RFbGVtZW50O1xuICB0b29sdGlwVGV4dDogc3RyaW5nO1xuICB0b3RhbFZhbHVlOiBudW1iZXI7XG4gIHR5cGU6IFBvQ2hhcnRUeXBlO1xuXG4gIEBWaWV3Q2hpbGQoJ2NoYXJ0Qm9keScsIHsgc3RhdGljOiB0cnVlIH0pIGNoYXJ0Qm9keTogRWxlbWVudFJlZjtcblxuICBAVmlld0NoaWxkKCdzdmdDb250YWluZXInLCB7IHN0YXRpYzogdHJ1ZSB9KSBzdmdDb250YWluZXI6IEVsZW1lbnRSZWY7XG5cbiAgY2FsY3VsYXRlU1ZHQ29udGFpbmVyRGltZW5zaW9ucyhjaGFydFdyYXBwZXJFbGVtZW50OiBudW1iZXIsIGNoYXJ0SGVhZGVyRWxlbWVudDogbnVtYmVyLCBjaGFydExlZ2VuZEVsZW1lbnQ6IG51bWJlcikge1xuICAgIGNvbnN0IHN2Z0NvbnRhaW5lckhlaWdodENhbGMgPSB0aGlzLmhlaWdodCAtIGNoYXJ0SGVhZGVyRWxlbWVudCAtIGNoYXJ0TGVnZW5kRWxlbWVudCAtIChQYWRkaW5nICogMik7XG5cbiAgICB0aGlzLnN2Z0hlaWdodCA9IHN2Z0NvbnRhaW5lckhlaWdodENhbGMgPD0gMCA/IDAgOiBzdmdDb250YWluZXJIZWlnaHRDYWxjO1xuICAgIHRoaXMuY2VudGVyWCA9IGNoYXJ0V3JhcHBlckVsZW1lbnQgLyAyO1xuICB9XG5cbiAgY2FsY3VsYXRlVG90YWxWYWx1ZSgpIHtcbiAgICB0aGlzLnRvdGFsVmFsdWUgPSB0aGlzLnNlcmllcy5yZWR1Y2UoXG4gICAgICAocHJldmlvdXNWYWx1ZSwgc2VyaWUpID0+IHByZXZpb3VzVmFsdWUgKyBzZXJpZS52YWx1ZSwgMCk7XG4gIH1cblxufVxuIl19