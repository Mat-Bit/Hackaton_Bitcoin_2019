/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { PoProgressBaseComponent } from './po-progress-base.component';
import { PoProgressStatus } from './enums/po-progress-status.enum';
/**
 * \@docsExtends PoProgressBaseComponent
 *
 * \@example
 * <example name="po-progress-basic" title="Portinari Progress Basic">
 *   <file name="sample-po-progress-basic/sample-po-progress-basic.component.html"> </file>
 *   <file name="sample-po-progress-basic/sample-po-progress-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-progress-labs" title="Portinari Progress Labs">
 *   <file name="sample-po-progress-labs/sample-po-progress-labs.component.html"> </file>
 *   <file name="sample-po-progress-labs/sample-po-progress-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-progress-publication" title="Portinari Progress - Publication">
 *   <file name="sample-po-progress-publication/sample-po-progress-publication.component.html"> </file>
 *   <file name="sample-po-progress-publication/sample-po-progress-publication.component.ts"> </file>
 * </example>
 */
export class PoProgressComponent extends PoProgressBaseComponent {
    /**
     * @return {?}
     */
    get isAllowCancel() {
        return !!this.cancel.observers.length && this.status !== PoProgressStatus.Success;
    }
    /**
     * @return {?}
     */
    get isAllowProgressInfo() {
        return !!(this.info || this.infoIcon || this.isAllowCancel || this.isAllowRetry);
    }
    /**
     * @return {?}
     */
    get isAllowRetry() {
        return !!this.retry.observers.length && this.status === PoProgressStatus.Error;
    }
    /**
     * @return {?}
     */
    get statusClass() {
        if (this.status === PoProgressStatus.Success) {
            return 'po-progress-success';
        }
        if (this.status === PoProgressStatus.Error) {
            return 'po-progress-error';
        }
        return 'po-progress-default';
    }
    /**
     * @return {?}
     */
    emitCancellation() {
        this.cancel.emit(this.status);
    }
    /**
     * @return {?}
     */
    emitRetry() {
        this.retry.emit();
    }
}
PoProgressComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-progress',
                template: "<div class=\"po-progress\" [ngClass]=\"statusClass\">\n\n  <label *ngIf=\"text\" class=\"po-progress-description-mobile po-progress-description-text\">\n    {{ text }}\n  </label>\n\n  <po-progress-bar\n    class=\"po-progress-bar\"\n    [p-indeterminate]=\"indeterminate\"\n    [p-value]=\"value\">\n  </po-progress-bar>\n\n  <div *ngIf=\"text\" class=\"po-progress-description\">\n    <label class=\"po-progress-description-text\">\n      {{ text }}\n    </label>\n  </div>\n\n  <div *ngIf=\"isAllowProgressInfo\" class=\"po-progress-info\">\n    <span *ngIf=\"infoIcon\" class=\"po-progress-info-icon po-icon {{ infoIcon }}\"></span>\n    <span *ngIf=\"info\" class=\"po-progress-info-text\">{{ info }}</span>\n\n    <button *ngIf=\"isAllowRetry\"\n      class=\"po-progress-info-icon-action po-icon po-icon-refresh po-clickable\"\n      (click)=\"emitRetry()\">\n    </button>\n\n    <button *ngIf=\"isAllowCancel\"\n      class=\"po-progress-info-icon-action po-icon po-icon-close po-clickable\"\n      (click)=\"emitCancellation()\">\n    </button>\n\n  </div>\n\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wcm9ncmVzcy9wby1wcm9ncmVzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJuRSxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsdUJBQXVCOzs7O0lBRTlELElBQUksYUFBYTtRQUNmLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLE9BQU8sQ0FBQztJQUNwRixDQUFDOzs7O0lBRUQsSUFBSSxtQkFBbUI7UUFDckIsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbkYsQ0FBQzs7OztJQUVELElBQUksWUFBWTtRQUNkLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLEtBQUssQ0FBQztJQUNqRixDQUFDOzs7O0lBRUQsSUFBSSxXQUFXO1FBRWIsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLE9BQU8sRUFBRTtZQUM1QyxPQUFPLHFCQUFxQixDQUFDO1NBQzlCO1FBRUQsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLEtBQUssRUFBRTtZQUMxQyxPQUFPLG1CQUFtQixDQUFDO1NBQzVCO1FBRUQsT0FBTyxxQkFBcUIsQ0FBQztJQUMvQixDQUFDOzs7O0lBRUQsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxTQUFTO1FBQ1AsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDOzs7WUF0Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2Qixra0NBQTJDO2dCQUMzQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Qcm9ncmVzc0Jhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXByb2dyZXNzLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvUHJvZ3Jlc3NTdGF0dXMgfSBmcm9tICcuL2VudW1zL3BvLXByb2dyZXNzLXN0YXR1cy5lbnVtJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9Qcm9ncmVzc0Jhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICogPGV4YW1wbGUgbmFtZT1cInBvLXByb2dyZXNzLWJhc2ljXCIgdGl0bGU9XCJQb3J0aW5hcmkgUHJvZ3Jlc3MgQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wcm9ncmVzcy1iYXNpYy9zYW1wbGUtcG8tcHJvZ3Jlc3MtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXByb2dyZXNzLWJhc2ljL3NhbXBsZS1wby1wcm9ncmVzcy1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wcm9ncmVzcy1sYWJzXCIgdGl0bGU9XCJQb3J0aW5hcmkgUHJvZ3Jlc3MgTGFic1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXByb2dyZXNzLWxhYnMvc2FtcGxlLXBvLXByb2dyZXNzLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXByb2dyZXNzLWxhYnMvc2FtcGxlLXBvLXByb2dyZXNzLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcHJvZ3Jlc3MtcHVibGljYXRpb25cIiB0aXRsZT1cIlBvcnRpbmFyaSBQcm9ncmVzcyAtIFB1YmxpY2F0aW9uXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcHJvZ3Jlc3MtcHVibGljYXRpb24vc2FtcGxlLXBvLXByb2dyZXNzLXB1YmxpY2F0aW9uLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wcm9ncmVzcy1wdWJsaWNhdGlvbi9zYW1wbGUtcG8tcHJvZ3Jlc3MtcHVibGljYXRpb24uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tcHJvZ3Jlc3MnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tcHJvZ3Jlc3MuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1Byb2dyZXNzQ29tcG9uZW50IGV4dGVuZHMgUG9Qcm9ncmVzc0Jhc2VDb21wb25lbnQge1xuXG4gIGdldCBpc0FsbG93Q2FuY2VsKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhIXRoaXMuY2FuY2VsLm9ic2VydmVycy5sZW5ndGggJiYgdGhpcy5zdGF0dXMgIT09IFBvUHJvZ3Jlc3NTdGF0dXMuU3VjY2VzcztcbiAgfVxuXG4gIGdldCBpc0FsbG93UHJvZ3Jlc3NJbmZvKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhISh0aGlzLmluZm8gfHwgdGhpcy5pbmZvSWNvbiB8fCB0aGlzLmlzQWxsb3dDYW5jZWwgfHwgdGhpcy5pc0FsbG93UmV0cnkpO1xuICB9XG5cbiAgZ2V0IGlzQWxsb3dSZXRyeSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISF0aGlzLnJldHJ5Lm9ic2VydmVycy5sZW5ndGggJiYgdGhpcy5zdGF0dXMgPT09IFBvUHJvZ3Jlc3NTdGF0dXMuRXJyb3I7XG4gIH1cblxuICBnZXQgc3RhdHVzQ2xhc3MoKTogc3RyaW5nIHtcblxuICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gUG9Qcm9ncmVzc1N0YXR1cy5TdWNjZXNzKSB7XG4gICAgICByZXR1cm4gJ3BvLXByb2dyZXNzLXN1Y2Nlc3MnO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gUG9Qcm9ncmVzc1N0YXR1cy5FcnJvcikge1xuICAgICAgcmV0dXJuICdwby1wcm9ncmVzcy1lcnJvcic7XG4gICAgfVxuXG4gICAgcmV0dXJuICdwby1wcm9ncmVzcy1kZWZhdWx0JztcbiAgfVxuXG4gIGVtaXRDYW5jZWxsYXRpb24oKSB7XG4gICAgdGhpcy5jYW5jZWwuZW1pdCh0aGlzLnN0YXR1cyk7XG4gIH1cblxuICBlbWl0UmV0cnkoKSB7XG4gICAgdGhpcy5yZXRyeS5lbWl0KCk7XG4gIH1cblxufVxuIl19