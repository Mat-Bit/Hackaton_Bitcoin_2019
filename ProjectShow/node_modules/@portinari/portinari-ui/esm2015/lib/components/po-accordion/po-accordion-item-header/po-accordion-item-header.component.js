/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
export class PoAccordionItemHeaderComponent {
    constructor() {
        this.expanded = false;
        this.toggle = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onClick() {
        this.expanded = !this.expanded;
        this.toggle.emit(this.expanded);
    }
}
PoAccordionItemHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-accordion-item-header',
                template: "<header class=\"po-accordion-item-header\">\n  <button class=\"po-accordion-item-header-button po-clickable\" (click)=\"onClick()\">\n    <div class=\"po-text-ellipsis po-accordion-item-header-title\">{{ label }}</div>\n    <span #icon class=\"po-icon po-accordion-item-header-icon po-icon-arrow-down\">\n    </span>\n  </button>\n</header>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
PoAccordionItemHeaderComponent.propDecorators = {
    expanded: [{ type: Input, args: ['p-expanded',] }],
    label: [{ type: Input, args: ['p-label',] }],
    toggle: [{ type: Output, args: ['p-toggle',] }]
};
if (false) {
    /** @type {?} */
    PoAccordionItemHeaderComponent.prototype.expanded;
    /** @type {?} */
    PoAccordionItemHeaderComponent.prototype.label;
    /** @type {?} */
    PoAccordionItemHeaderComponent.prototype.toggle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYWNjb3JkaW9uL3BvLWFjY29yZGlvbi1pdGVtLWhlYWRlci9wby1hY2NvcmRpb24taXRlbS1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT2hHLE1BQU0sT0FBTyw4QkFBOEI7SUFMM0M7UUFPdUIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUkzQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQVEzRCxDQUFDOzs7O0lBTkMsT0FBTztRQUNMLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBRS9CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7WUFqQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwwQkFBMEI7Z0JBQ3BDLGtXQUFzRDtnQkFDdEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7Ozt1QkFHRSxLQUFLLFNBQUMsWUFBWTtvQkFFbEIsS0FBSyxTQUFDLFNBQVM7cUJBRWYsTUFBTSxTQUFDLFVBQVU7Ozs7SUFKbEIsa0RBQStDOztJQUUvQywrQ0FBZ0M7O0lBRWhDLGdEQUF5RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1hY2NvcmRpb24taXRlbS1oZWFkZXInLFxuICB0ZW1wbGF0ZVVybDogJ3BvLWFjY29yZGlvbi1pdGVtLWhlYWRlci5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvQWNjb3JkaW9uSXRlbUhlYWRlckNvbXBvbmVudCB7XG5cbiAgQElucHV0KCdwLWV4cGFuZGVkJykgZXhwYW5kZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIEBPdXRwdXQoJ3AtdG9nZ2xlJykgdG9nZ2xlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIG9uQ2xpY2soKSB7XG4gICAgdGhpcy5leHBhbmRlZCA9ICF0aGlzLmV4cGFuZGVkO1xuXG4gICAgdGhpcy50b2dnbGUuZW1pdCh0aGlzLmV4cGFuZGVkKTtcbiAgfVxuXG59XG4iXX0=