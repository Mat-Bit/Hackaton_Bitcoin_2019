/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, QueryList } from '@angular/core';
import { PoAccordionBaseComponent } from './po-accordion-base.component';
import { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';
import { PoAccordionService } from './services/po-accordion.service';
/**
 * \@docsExtends PoAccordionBaseComponent
 *
 * \@example
 *
 * <example name="po-accordion-basic" title="Portinari Accordion Basic" >
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.html"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-labs" title="Portinari Accordion Labs" >
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.html"> </file>
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-faq" title="Portinari Accordion - FAQs" >
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.html"> </file>
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.ts"> </file>
 * </example>
 */
export class PoAccordionComponent extends PoAccordionBaseComponent {
    /**
     * @param {?} accordionService
     */
    constructor(accordionService) {
        super();
        this.accordionService = accordionService;
        this.receiveFromChildAccordionSubscription();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.accordionServiceSubscription.unsubscribe();
    }
    /**
     * @param {?} event
     * @param {?} poAccordionItem
     * @return {?}
     */
    headerToggle(event, poAccordionItem) {
        poAccordionItem.expanded = event;
        this.toggle(poAccordionItem);
    }
    /**
     * @private
     * @return {?}
     */
    receiveFromChildAccordionSubscription() {
        this.accordionServiceSubscription = this.accordionService.receiveFromChildAccordionClicked()
            .subscribe((/**
         * @param {?} poAccordionItem
         * @return {?}
         */
        poAccordionItem => this.toggle(poAccordionItem)));
    }
    /**
     * @private
     * @param {?} poAccordionItem
     * @return {?}
     */
    toggle(poAccordionItem) {
        /** @type {?} */
        const isCurrentAccordionCollapsed = !poAccordionItem.expanded;
        if (isCurrentAccordionCollapsed) {
            this.expandedActiveAccordionItem = null;
            return;
        }
        if (this.expandedActiveAccordionItem) {
            this.expandedActiveAccordionItem.collapse();
        }
        this.expandedActiveAccordionItem = poAccordionItem;
    }
}
PoAccordionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-accordion',
                template: "<div class=\"po-accordion po-container po-container-no-padding\">\n\n  <section *ngFor=\"let poAccordionItem of poAccordionItems\"\n    class=\"po-accordion-item\"\n    [class.po-accordion-item-active]=\"poAccordionItem.expanded\">\n\n    <po-accordion-item-header\n      [p-expanded]=\"poAccordionItem.expanded\"\n      [p-label]=\"poAccordionItem.label\"\n      (p-toggle)=\"headerToggle($event, poAccordionItem)\">\n    </po-accordion-item-header>\n\n    <po-accordion-item-body [p-expanded]=\"poAccordionItem.expanded\">\n      <ng-container *ngTemplateOutlet=\"poAccordionItem.templateRef\"></ng-container>\n    </po-accordion-item-body>\n  </section>\n\n</div>\n",
                providers: [PoAccordionService]
            }] }
];
/** @nocollapse */
PoAccordionComponent.ctorParameters = () => [
    { type: PoAccordionService }
];
PoAccordionComponent.propDecorators = {
    poAccordionItems: [{ type: ContentChildren, args: [PoAccordionItemComponent,] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoAccordionComponent.prototype.accordionServiceSubscription;
    /**
     * @type {?}
     * @private
     */
    PoAccordionComponent.prototype.expandedActiveAccordionItem;
    /** @type {?} */
    PoAccordionComponent.prototype.poAccordionItems;
    /**
     * @type {?}
     * @private
     */
    PoAccordionComponent.prototype.accordionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYWNjb3JkaW9uL3BvLWFjY29yZGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUlqRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QnJFLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSx3QkFBd0I7Ozs7SUFPaEUsWUFBb0IsZ0JBQW9DO1FBQ3RELEtBQUssRUFBRSxDQUFDO1FBRFUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFvQjtRQUV0RCxJQUFJLENBQUMscUNBQXFDLEVBQUUsQ0FBQztJQUMvQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsRCxDQUFDOzs7Ozs7SUFFRCxZQUFZLENBQUMsS0FBYyxFQUFFLGVBQXlDO1FBQ3BFLGVBQWUsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFTyxxQ0FBcUM7UUFDM0MsSUFBSSxDQUFDLDRCQUE0QixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQ0FBZ0MsRUFBRTthQUN6RixTQUFTOzs7O1FBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxFQUFDLENBQUM7SUFDaEUsQ0FBQzs7Ozs7O0lBRU8sTUFBTSxDQUFDLGVBQXlDOztjQUNoRCwyQkFBMkIsR0FBRyxDQUFDLGVBQWUsQ0FBQyxRQUFRO1FBRTdELElBQUksMkJBQTJCLEVBQUU7WUFDL0IsSUFBSSxDQUFDLDJCQUEyQixHQUFHLElBQUksQ0FBQztZQUN4QyxPQUFPO1NBQ1I7UUFFRCxJQUFJLElBQUksQ0FBQywyQkFBMkIsRUFBRTtZQUNwQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDN0M7UUFFRCxJQUFJLENBQUMsMkJBQTJCLEdBQUcsZUFBZSxDQUFDO0lBQ3JELENBQUM7OztZQTdDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLHdxQkFBMEM7Z0JBQzFDLFNBQVMsRUFBRSxDQUFFLGtCQUFrQixDQUFFO2FBQ2xDOzs7O1lBNUJRLGtCQUFrQjs7OytCQWtDeEIsZUFBZSxTQUFDLHdCQUF3Qjs7Ozs7OztJQUh6Qyw0REFBbUQ7Ozs7O0lBQ25ELDJEQUE4RDs7SUFFOUQsZ0RBQWlHOzs7OztJQUVyRixnREFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgUXVlcnlMaXN0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFBvQWNjb3JkaW9uQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tYWNjb3JkaW9uLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCB9IGZyb20gJy4vcG8tYWNjb3JkaW9uLWl0ZW0vcG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IFBvQWNjb3JkaW9uU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcG8tYWNjb3JkaW9uLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb0FjY29yZGlvbkJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1hY2NvcmRpb24tYmFzaWNcIiB0aXRsZT1cIlBvcnRpbmFyaSBBY2NvcmRpb24gQmFzaWNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMvc2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMvc2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljL3NhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMuY29tcG9uZW50LmUyZS1zcGVjLnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy9zYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljLmNvbXBvbmVudC5wby50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWFjY29yZGlvbi1sYWJzXCIgdGl0bGU9XCJQb3J0aW5hcmkgQWNjb3JkaW9uIExhYnNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tbGFicy9zYW1wbGUtcG8tYWNjb3JkaW9uLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWxhYnMvc2FtcGxlLXBvLWFjY29yZGlvbi1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWFjY29yZGlvbi1mYXFcIiB0aXRsZT1cIlBvcnRpbmFyaSBBY2NvcmRpb24gLSBGQVFzXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWZhcS9zYW1wbGUtcG8tYWNjb3JkaW9uLWZhcS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tZmFxL3NhbXBsZS1wby1hY2NvcmRpb24tZmFxLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWFjY29yZGlvbicsXG4gIHRlbXBsYXRlVXJsOiAncG8tYWNjb3JkaW9uLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbIFBvQWNjb3JkaW9uU2VydmljZSBdXG59KVxuZXhwb3J0IGNsYXNzIFBvQWNjb3JkaW9uQ29tcG9uZW50IGV4dGVuZHMgUG9BY2NvcmRpb25CYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcblxuICBwcml2YXRlIGFjY29yZGlvblNlcnZpY2VTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgcHJpdmF0ZSBleHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW06IFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudDtcblxuICBAQ29udGVudENoaWxkcmVuKFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCkgcG9BY2NvcmRpb25JdGVtczogUXVlcnlMaXN0PFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudD47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhY2NvcmRpb25TZXJ2aWNlOiBQb0FjY29yZGlvblNlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucmVjZWl2ZUZyb21DaGlsZEFjY29yZGlvblN1YnNjcmlwdGlvbigpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5hY2NvcmRpb25TZXJ2aWNlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBoZWFkZXJUb2dnbGUoZXZlbnQ6IGJvb2xlYW4sIHBvQWNjb3JkaW9uSXRlbTogUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50KSB7XG4gICAgcG9BY2NvcmRpb25JdGVtLmV4cGFuZGVkID0gZXZlbnQ7XG5cbiAgICB0aGlzLnRvZ2dsZShwb0FjY29yZGlvbkl0ZW0pO1xuICB9XG5cbiAgcHJpdmF0ZSByZWNlaXZlRnJvbUNoaWxkQWNjb3JkaW9uU3Vic2NyaXB0aW9uKCkge1xuICAgIHRoaXMuYWNjb3JkaW9uU2VydmljZVN1YnNjcmlwdGlvbiA9IHRoaXMuYWNjb3JkaW9uU2VydmljZS5yZWNlaXZlRnJvbUNoaWxkQWNjb3JkaW9uQ2xpY2tlZCgpXG4gICAgICAuc3Vic2NyaWJlKHBvQWNjb3JkaW9uSXRlbSA9PiB0aGlzLnRvZ2dsZShwb0FjY29yZGlvbkl0ZW0pKTtcbiAgfVxuXG4gIHByaXZhdGUgdG9nZ2xlKHBvQWNjb3JkaW9uSXRlbTogUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50KSB7XG4gICAgY29uc3QgaXNDdXJyZW50QWNjb3JkaW9uQ29sbGFwc2VkID0gIXBvQWNjb3JkaW9uSXRlbS5leHBhbmRlZDtcblxuICAgIGlmIChpc0N1cnJlbnRBY2NvcmRpb25Db2xsYXBzZWQpIHtcbiAgICAgIHRoaXMuZXhwYW5kZWRBY3RpdmVBY2NvcmRpb25JdGVtID0gbnVsbDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5leHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW0pIHtcbiAgICAgIHRoaXMuZXhwYW5kZWRBY3RpdmVBY2NvcmRpb25JdGVtLmNvbGxhcHNlKCk7XG4gICAgfVxuXG4gICAgdGhpcy5leHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW0gPSBwb0FjY29yZGlvbkl0ZW07XG4gIH1cblxufVxuIl19