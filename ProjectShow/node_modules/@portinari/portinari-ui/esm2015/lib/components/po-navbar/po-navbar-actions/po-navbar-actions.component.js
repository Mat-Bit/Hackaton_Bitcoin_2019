/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class PoNavbarActionsComponent {
    /**
     * @param {?} actions
     * @return {?}
     */
    set iconActions(actions) {
        this._iconActions = actions.map((/**
         * @param {?} action
         * @return {?}
         */
        action => (Object.assign({}, action, { separator: true, url: action.link }))));
    }
    /**
     * @return {?}
     */
    get iconActions() {
        return this._iconActions;
    }
}
PoNavbarActionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-navbar-actions',
                template: "<po-navbar-action *ngFor=\"let iconAction of iconActions\"\n  class=\"po-navbar-action\"\n  [p-action]=\"iconAction.action\"\n  [p-icon]=\"iconAction.icon\"\n  [p-label]=\"iconAction.label\"\n  [p-link]=\"iconAction.link\"\n  [p-tooltip-text]=\"iconAction.tooltip\">\n</po-navbar-action>\n\n<po-navbar-action-popup\n  class=\"po-navbar-action-popup\"\n  [p-icon-actions]=\"iconActions\">\n</po-navbar-action-popup>\n\n\n"
            }] }
];
PoNavbarActionsComponent.propDecorators = {
    iconActions: [{ type: Input, args: ['p-icon-actions',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoNavbarActionsComponent.prototype._iconActions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLWFjdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1uYXZiYXIvcG8tbmF2YmFyLWFjdGlvbnMvcG8tbmF2YmFyLWFjdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFqRCxNQUFNLE9BQU8sd0JBQXdCOzs7OztJQUluQyxJQUE2QixXQUFXLENBQUMsT0FBa0M7UUFDekUsSUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRzs7OztRQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsbUJBQU0sTUFBTSxJQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxJQUFJLElBQUcsRUFBQyxDQUFDO0lBQ2hHLENBQUM7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQzs7O1lBZEYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLGdiQUFpRDthQUNsRDs7OzBCQUtFLEtBQUssU0FBQyxnQkFBZ0I7Ozs7Ozs7SUFGdkIsZ0RBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb05hdmJhckljb25BY3Rpb24gfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLW5hdmJhci1pY29uLWFjdGlvbi5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1uYXZiYXItYWN0aW9ucycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1uYXZiYXItYWN0aW9ucy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9OYXZiYXJBY3Rpb25zQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9pY29uQWN0aW9uczogQXJyYXk8UG9OYXZiYXJJY29uQWN0aW9uPjtcblxuICBASW5wdXQoJ3AtaWNvbi1hY3Rpb25zJykgc2V0IGljb25BY3Rpb25zKGFjdGlvbnM6IEFycmF5PFBvTmF2YmFySWNvbkFjdGlvbj4pIHtcbiAgICB0aGlzLl9pY29uQWN0aW9ucyA9IGFjdGlvbnMubWFwKGFjdGlvbiA9PiAoeyAuLi5hY3Rpb24sIHNlcGFyYXRvcjogdHJ1ZSwgdXJsOiBhY3Rpb24ubGluayB9KSk7XG4gIH1cblxuICBnZXQgaWNvbkFjdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ljb25BY3Rpb25zO1xuICB9XG5cbn1cbiJdfQ==