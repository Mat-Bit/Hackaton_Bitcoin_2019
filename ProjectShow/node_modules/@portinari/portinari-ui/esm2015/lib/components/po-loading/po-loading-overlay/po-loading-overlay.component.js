/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectorRef } from '@angular/core';
import { PoLanguageService } from './../../../services/po-language/po-language.service';
import { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';
/**
 *
 * \@docsExtends PoLoadingOverlayBaseComponent
 *
 * \@example
 *
 * <example name="po-loading-overlay-basic" title="Portinari Loading Overlay Basic">
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html"> </file>
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-labs" title="Portinari Loading Overlay Labs">
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html"> </file>
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-connection-test" title="Portinari Loading Overlay - Connection Test">
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html"> </file>
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts"> </file>
 * </example>
 */
export class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {
    /**
     * @param {?} changeDetector
     * @param {?} languageService
     */
    constructor(changeDetector, languageService) {
        super(languageService);
        this.changeDetector = changeDetector;
    }
}
PoLoadingOverlayComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-loading-overlay',
                template: "<div\n  [class.po-overlay-absolute]=\"!screenLock\"\n  [class.po-overlay-fixed]=\"screenLock\">\n  <po-loading class=\"po-loading-overlay-content\" [p-text]=\"text\"></po-loading>\n</div>\n"
            }] }
];
/** @nocollapse */
PoLoadingOverlayComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: PoLanguageService }
];
if (false) {
    /** @type {?} */
    PoLoadingOverlayComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbG9hZGluZy9wby1sb2FkaW5nLW92ZXJsYXkvcG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUV4RixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCcEYsTUFBTSxPQUFPLHlCQUEwQixTQUFRLDZCQUE2Qjs7Ozs7SUFFMUUsWUFBbUIsY0FBaUMsRUFBRSxlQUFrQztRQUN0RixLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7UUFETixtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7SUFFcEQsQ0FBQzs7O1lBUkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLHlNQUFnRDthQUNqRDs7OztZQTlCbUIsaUJBQWlCO1lBRTVCLGlCQUFpQjs7OztJQStCWixtREFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvTGFuZ3VhZ2VTZXJ2aWNlIH0gZnJvbSAnLi8uLi8uLi8uLi9zZXJ2aWNlcy9wby1sYW5ndWFnZS9wby1sYW5ndWFnZS5zZXJ2aWNlJztcblxuaW1wb3J0IHsgUG9Mb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWxvYWRpbmctb3ZlcmxheS1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICpcbiAqIEBkb2NzRXh0ZW5kcyBQb0xvYWRpbmdPdmVybGF5QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWxvYWRpbmctb3ZlcmxheS1iYXNpY1wiIHRpdGxlPVwiUG9ydGluYXJpIExvYWRpbmcgT3ZlcmxheSBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbG9hZGluZy1vdmVybGF5LWxhYnNcIiB0aXRsZT1cIlBvcnRpbmFyaSBMb2FkaW5nIE92ZXJsYXkgTGFic1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWxhYnMvc2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1sYWJzL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0XCIgdGl0bGU9XCJQb3J0aW5hcmkgTG9hZGluZyBPdmVybGF5IC0gQ29ubmVjdGlvbiBUZXN0XCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0L3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0LmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3Qvc2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3QuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tbG9hZGluZy1vdmVybGF5JyxcbiAgdGVtcGxhdGVVcmw6ICdwby1sb2FkaW5nLW92ZXJsYXkuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvTG9hZGluZ092ZXJsYXlDb21wb25lbnQgZXh0ZW5kcyBQb0xvYWRpbmdPdmVybGF5QmFzZUNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgbGFuZ3VhZ2VTZXJ2aWNlOiBQb0xhbmd1YWdlU2VydmljZSkge1xuICAgIHN1cGVyKGxhbmd1YWdlU2VydmljZSk7XG4gIH1cblxufVxuIl19