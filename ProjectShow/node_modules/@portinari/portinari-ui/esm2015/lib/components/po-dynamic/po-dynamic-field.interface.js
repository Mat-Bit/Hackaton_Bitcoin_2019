/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function PoDynamicField() { }
if (false) {
    /**
     * Identificador
     * @type {?|undefined}
     */
    PoDynamicField.prototype.key;
    /**
     * Nome de referência do campo.
     * @type {?}
     */
    PoDynamicField.prototype.property;
    /**
     * Rótulo do campo exibido.
     * @type {?|undefined}
     */
    PoDynamicField.prototype.label;
    /**
     * Tamanho de exibição do campo em telas.
     *
     * Deve ser usado o sistema de **grid** do PO (1 ... 12 colunas).
     *
     * > Esta propriedade é generica, aplica o valor em todos os tamanhos de telas.
     * @type {?|undefined}
     */
    PoDynamicField.prototype.gridColumns;
    /**
     * Tamanho de exibição do campo em telas menores (sm).
     *
     * Deve ser usado o sistema de **grid** do PO (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `12`
     * @type {?|undefined}
     */
    PoDynamicField.prototype.gridSmColumns;
    /**
     * Tamanho de exibição do campo em telas médias (md).
     *
     * Deve ser usado o sistema de **grid** do PO (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `6`
     * @type {?|undefined}
     */
    PoDynamicField.prototype.gridMdColumns;
    /**
     * Tamanho de exibição do campo em telas grandes (lg).
     *
     * Deve ser usado o sistema de **grid** do PO (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `4`
     * @type {?|undefined}
     */
    PoDynamicField.prototype.gridLgColumns;
    /**
     * Tamanho de exibição do campo em telas extra grandes (xl).
     *
     * Deve ser usado o sistema de **grid** do PO (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `3`
     * @type {?|undefined}
     */
    PoDynamicField.prototype.gridXlColumns;
    /**
     * Indica se o campo será visível.
     *
     * \@default `true`
     * @type {?|undefined}
     */
    PoDynamicField.prototype.visible;
    /**
     * Exibirá um divisor acima, utilizando o seu conteudo como título.
     * @type {?|undefined}
     */
    PoDynamicField.prototype.divider;
    /**
     * Tipo do valor campo.
     *
     * Valores válidos:
     *
     * - `boolean`: Valores *booleanos*.
     * - `currency`: Valores monetários.
     * - `date`: Valores de datas.
     *  + Aceita os tipos **string** e **Date** padrão do Javascript,
     *  por exemplo: `'2017-11-28'` ou `new Date(2017, 10, 28)`.
     * - `dateTime`: Valor de data com horário.
     *  + Aceita o tipo _string_ no formato **ISO-8601** extendido **'yyyy-mm-ddThh:mm:ss+|-hh:mm'**
     * e o tipo **Date** padrão do Javascript, por exemplo: `'2017-11-28T00:00:00-02:00'` ou `new Date(2017, 10, 28)`.
     * - `number`: Valores numéricos.
     * - `string`: Textos.
     * - `time`: Valor do horário.
     *  + Aceita o tipo **string** nos formatos **'HH:mm:ss'** ou **'HH:mm:ss.ffffff'**, por exemplo: `'23:12:45'`.
     *
     * \@default `string`
     * @type {?|undefined}
     */
    PoDynamicField.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy1maWVsZC5pbnRlcmZhY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWR5bmFtaWMvcG8tZHluYW1pYy1maWVsZC5pbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBLG9DQWdHQzs7Ozs7O0lBN0ZDLDZCQUFjOzs7OztJQUdkLGtDQUFpQjs7Ozs7SUFHakIsK0JBQWU7Ozs7Ozs7OztJQVNmLHFDQUFxQjs7Ozs7Ozs7Ozs7SUFXckIsdUNBQXVCOzs7Ozs7Ozs7OztJQVd2Qix1Q0FBdUI7Ozs7Ozs7Ozs7O0lBV3ZCLHVDQUF1Qjs7Ozs7Ozs7Ozs7SUFXdkIsdUNBQXVCOzs7Ozs7O0lBT3ZCLGlDQUFrQjs7Ozs7SUFHbEIsaUNBQWlCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBc0JqQiw4QkFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb0R5bmFtaWNGaWVsZFR5cGUgfSBmcm9tICcuL3BvLWR5bmFtaWMtZmllbGQtdHlwZS5lbnVtJztcblxuZXhwb3J0IGludGVyZmFjZSBQb0R5bmFtaWNGaWVsZCB7XG5cbiAgLyoqIElkZW50aWZpY2Fkb3IgKi9cbiAga2V5PzogYm9vbGVhbjtcblxuICAvKiogTm9tZSBkZSByZWZlcsOqbmNpYSBkbyBjYW1wby4gKi9cbiAgcHJvcGVydHk6IHN0cmluZztcblxuICAvKiogUsOzdHVsbyBkbyBjYW1wbyBleGliaWRvLiAqL1xuICBsYWJlbD86IHN0cmluZztcblxuICAvKipcbiAgICogVGFtYW5obyBkZSBleGliacOnw6NvIGRvIGNhbXBvIGVtIHRlbGFzLlxuICAgKlxuICAgKiBEZXZlIHNlciB1c2FkbyBvIHNpc3RlbWEgZGUgKipncmlkKiogZG8gUE8gKDEgLi4uIDEyIGNvbHVuYXMpLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgw6kgZ2VuZXJpY2EsIGFwbGljYSBvIHZhbG9yIGVtIHRvZG9zIG9zIHRhbWFuaG9zIGRlIHRlbGFzLlxuICAgKi9cbiAgZ3JpZENvbHVtbnM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjYW1wbyBlbSB0ZWxhcyBtZW5vcmVzIChzbSkuXG4gICAqXG4gICAqIERldmUgc2VyIHVzYWRvIG8gc2lzdGVtYSBkZSAqKmdyaWQqKiBkbyBQTyAoMSAuLi4gMTIgY29sdW5hcykuXG4gICAqXG4gICAqID4gRXN0YSBwcm9wcmllZGFkZSBzb2JyZXNjcmV2ZSBvIHZhbG9yIGRlZmluaWRvIHBhcmEgbyB0YW1hbmhvIGRlbGEgbmEgYGdyaWRDb2x1bW5zYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYDEyYFxuICAgKi9cbiAgZ3JpZFNtQ29sdW1ucz86IG51bWJlcjtcblxuICAvKipcbiAgICogVGFtYW5obyBkZSBleGliacOnw6NvIGRvIGNhbXBvIGVtIHRlbGFzIG3DqWRpYXMgKG1kKS5cbiAgICpcbiAgICogRGV2ZSBzZXIgdXNhZG8gbyBzaXN0ZW1hIGRlICoqZ3JpZCoqIGRvIFBPICgxIC4uLiAxMiBjb2x1bmFzKS5cbiAgICpcbiAgICogPiBFc3RhIHByb3ByaWVkYWRlIHNvYnJlc2NyZXZlIG8gdmFsb3IgZGVmaW5pZG8gcGFyYSBvIHRhbWFuaG8gZGVsYSBuYSBgZ3JpZENvbHVtbnNgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgNmBcbiAgICovXG4gIGdyaWRNZENvbHVtbnM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjYW1wbyBlbSB0ZWxhcyBncmFuZGVzIChsZykuXG4gICAqXG4gICAqIERldmUgc2VyIHVzYWRvIG8gc2lzdGVtYSBkZSAqKmdyaWQqKiBkbyBQTyAoMSAuLi4gMTIgY29sdW5hcykuXG4gICAqXG4gICAqID4gRXN0YSBwcm9wcmllZGFkZSBzb2JyZXNjcmV2ZSBvIHZhbG9yIGRlZmluaWRvIHBhcmEgbyB0YW1hbmhvIGRlbGEgbmEgYGdyaWRDb2x1bW5zYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYDRgXG4gICAqL1xuICBncmlkTGdDb2x1bW5zPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUYW1hbmhvIGRlIGV4aWJpw6fDo28gZG8gY2FtcG8gZW0gdGVsYXMgZXh0cmEgZ3JhbmRlcyAoeGwpLlxuICAgKlxuICAgKiBEZXZlIHNlciB1c2FkbyBvIHNpc3RlbWEgZGUgKipncmlkKiogZG8gUE8gKDEgLi4uIDEyIGNvbHVuYXMpLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgc29icmVzY3JldmUgbyB2YWxvciBkZWZpbmlkbyBwYXJhIG8gdGFtYW5obyBkZWxhIG5hIGBncmlkQ29sdW1uc2AuXG4gICAqXG4gICAqIEBkZWZhdWx0IGAzYFxuICAgKi9cbiAgZ3JpZFhsQ29sdW1ucz86IG51bWJlcjtcblxuICAvKipcbiAgICogSW5kaWNhIHNlIG8gY2FtcG8gc2Vyw6Egdmlzw612ZWwuXG4gICAqXG4gICAqIEBkZWZhdWx0IGB0cnVlYFxuICAgKi9cbiAgdmlzaWJsZT86IGJvb2xlYW47XG5cbiAgLyoqIEV4aWJpcsOhIHVtIGRpdmlzb3IgYWNpbWEsIHV0aWxpemFuZG8gbyBzZXUgY29udGV1ZG8gY29tbyB0w610dWxvLiAqL1xuICBkaXZpZGVyPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaXBvIGRvIHZhbG9yIGNhbXBvLlxuICAgKlxuICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgKlxuICAgKiAtIGBib29sZWFuYDogVmFsb3JlcyAqYm9vbGVhbm9zKi5cbiAgICogLSBgY3VycmVuY3lgOiBWYWxvcmVzIG1vbmV0w6FyaW9zLlxuICAgKiAtIGBkYXRlYDogVmFsb3JlcyBkZSBkYXRhcy5cbiAgICogICsgQWNlaXRhIG9zIHRpcG9zICoqc3RyaW5nKiogZSAqKkRhdGUqKiBwYWRyw6NvIGRvIEphdmFzY3JpcHQsXG4gICAqICBwb3IgZXhlbXBsbzogYCcyMDE3LTExLTI4J2Agb3UgYG5ldyBEYXRlKDIwMTcsIDEwLCAyOClgLlxuICAgKiAtIGBkYXRlVGltZWA6IFZhbG9yIGRlIGRhdGEgY29tIGhvcsOhcmlvLlxuICAgKiAgKyBBY2VpdGEgbyB0aXBvIF9zdHJpbmdfIG5vIGZvcm1hdG8gKipJU08tODYwMSoqIGV4dGVuZGlkbyAqKid5eXl5LW1tLWRkVGhoOm1tOnNzK3wtaGg6bW0nKipcbiAgICogZSBvIHRpcG8gKipEYXRlKiogcGFkcsOjbyBkbyBKYXZhc2NyaXB0LCBwb3IgZXhlbXBsbzogYCcyMDE3LTExLTI4VDAwOjAwOjAwLTAyOjAwJ2Agb3UgYG5ldyBEYXRlKDIwMTcsIDEwLCAyOClgLlxuICAgKiAtIGBudW1iZXJgOiBWYWxvcmVzIG51bcOpcmljb3MuXG4gICAqIC0gYHN0cmluZ2A6IFRleHRvcy5cbiAgICogLSBgdGltZWA6IFZhbG9yIGRvIGhvcsOhcmlvLlxuICAgKiAgKyBBY2VpdGEgbyB0aXBvICoqc3RyaW5nKiogbm9zIGZvcm1hdG9zICoqJ0hIOm1tOnNzJyoqIG91ICoqJ0hIOm1tOnNzLmZmZmZmZicqKiwgcG9yIGV4ZW1wbG86IGAnMjM6MTI6NDUnYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYHN0cmluZ2BcbiAgICovXG4gIHR5cGU/OiBzdHJpbmcgfCBQb0R5bmFtaWNGaWVsZFR5cGU7XG5cbn1cbiJdfQ==