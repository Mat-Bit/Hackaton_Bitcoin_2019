/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { PoKeyCodeEnum } from '../../enums/po-key-code.enum';
import { PoTagBaseComponent } from './po-tag-base.component';
import { PoTagIcon } from './enums/po-tag-icon.enum';
import { PoTagType } from './enums/po-tag-type.enum';
/** @type {?} */
const poTagTypeDefault = 'po-tag-' + PoTagType.Info;
/**
 * \@docsExtends PoTagBaseComponent
 *
 * \@example
 *
 * <example name="po-tag-basic" title="Portinari Tag Basic">
 *  <file name="sample-po-tag-basic/sample-po-tag-basic.component.html"> </file>
 *  <file name="sample-po-tag-basic/sample-po-tag-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tag-labs" title="Portinari Tag Labs">
 *  <file name="sample-po-tag-labs/sample-po-tag-labs.component.html"> </file>
 *  <file name="sample-po-tag-labs/sample-po-tag-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tag-bank-account" title="Portinari Tag - Bank Account">
 *  <file name="sample-po-tag-bank-account/sample-po-tag-bank-account.component.html"> </file>
 *  <file name="sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts"> </file>
 * </example>
 */
export class PoTagComponent extends PoTagBaseComponent {
    /**
     * @return {?}
     */
    ngOnInit() {
        this.isClickable = this.click.observers.length > 0;
    }
    /**
     * @return {?}
     */
    get iconFromType() {
        switch (this.type) {
            case PoTagType.Danger: return PoTagIcon.Danger;
            case PoTagType.Info: return PoTagIcon.Info;
            case PoTagType.Success: return PoTagIcon.Success;
            case PoTagType.Warning: return PoTagIcon.Warning;
        }
    }
    /**
     * @return {?}
     */
    get iconTypeString() {
        return typeof this.icon === 'string';
    }
    /**
     * @return {?}
     */
    get tagColor() {
        if (this.type) {
            return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;
        }
        if (this.color && !this.type) {
            return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;
        }
        if (!this.type && !this.color) {
            return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;
        }
    }
    /**
     * @return {?}
     */
    get tagOrientation() {
        return this.orientation === this.poTagOrientation.Horizontal;
    }
    /**
     * @return {?}
     */
    onClick() {
        /** @type {?} */
        const submittedTagItem = { value: this.value, type: this.type };
        this.click.emit(submittedTagItem);
    }
    /**
     * @param {?} event
     * @param {?} keyCode
     * @return {?}
     */
    onKeyPressed(event, keyCode) {
        /** @type {?} */
        const isValidKey = event.keyCode === PoKeyCodeEnum[keyCode];
        if (isValidKey) {
            event.preventDefault();
            event.stopPropagation();
            this.onClick();
        }
    }
}
PoTagComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-tag',
                template: "<div class=\"po-tag-container\" [class.po-tag-container-horizontal]=\"tagOrientation\">\n  <div *ngIf=\"label\" class=\"po-tag-title po-text-nowrap\">\n    <span class=\"po-tag-label\">{{ tagOrientation ? label + ':' : label }}</span>\n  </div>\n\n  <div class=\"po-tag-sub-container\">\n    <div class=\"po-tag\"\n      [class.po-clickable]=\"isClickable\"\n      [class.po-tag-inverse]=\"inverse\"\n      [ngClass]=\"tagColor\"\n      tabindex=\"0\"\n      (click)=\"onClick()\"\n      (keydown)=\"onKeyPressed($event, 'enter')\"\n      (keyup)=\"onKeyPressed($event, 'space')\">\n\n      <span *ngIf=\"icon\" class=\"po-icon\" [ngClass]=\"!type && iconTypeString ? icon : iconFromType\"></span>\n      <span class=\"po-tag-value\">{{value}}</span>\n    </div>\n  </div>\n</div>\n"
            }] }
];
if (false) {
    /** @type {?} */
    PoTagComponent.prototype.isClickable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFnL3BvLXRhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTdELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7O01BRS9DLGdCQUFnQixHQUFHLFNBQVMsR0FBRyxTQUFTLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJuRCxNQUFNLE9BQU8sY0FBZSxTQUFRLGtCQUFrQjs7OztJQUlwRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDZCxRQUFRLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDakIsS0FBSyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDO1lBRS9DLEtBQUssU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQztZQUUzQyxLQUFLLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFFakQsS0FBSyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDO1NBQ2xEO0lBQ0gsQ0FBQzs7OztJQUVELElBQUksY0FBYztRQUNoQixPQUFPLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLENBQUM7SUFDdkMsQ0FBQzs7OztJQUVELElBQUksUUFBUTtRQUNWLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsVUFBVSxJQUFJLENBQUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQzdFO1FBRUQsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUM1QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFdBQVcsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUNwRTtRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUM3QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsZ0JBQWdCLFVBQVUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUM7U0FDeEU7SUFDSCxDQUFDOzs7O0lBRUQsSUFBSSxjQUFjO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDO0lBQy9ELENBQUM7Ozs7SUFFRCxPQUFPOztjQUNDLGdCQUFnQixHQUFjLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDMUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNwQyxDQUFDOzs7Ozs7SUFFRCxZQUFZLENBQUMsS0FBVSxFQUFFLE9BQWU7O2NBQ2hDLFVBQVUsR0FBRyxLQUFLLENBQUMsT0FBTyxLQUFLLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFFM0QsSUFBSSxVQUFVLEVBQUU7WUFDZCxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7OztZQTNERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFFBQVE7Z0JBQ2xCLDB4QkFBc0M7YUFDdkM7Ozs7SUFHQyxxQ0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0tleUNvZGVFbnVtIH0gZnJvbSAnLi4vLi4vZW51bXMvcG8ta2V5LWNvZGUuZW51bSc7XG5cbmltcG9ydCB7IFBvVGFnQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tdGFnLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvVGFnSWNvbiB9IGZyb20gJy4vZW51bXMvcG8tdGFnLWljb24uZW51bSc7XG5pbXBvcnQgeyBQb1RhZ0l0ZW0gfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tdGFnLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvVGFnVHlwZSB9IGZyb20gJy4vZW51bXMvcG8tdGFnLXR5cGUuZW51bSc7XG5cbmNvbnN0IHBvVGFnVHlwZURlZmF1bHQgPSAncG8tdGFnLScgKyBQb1RhZ1R5cGUuSW5mbztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9UYWdCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tdGFnLWJhc2ljXCIgdGl0bGU9XCJQb3J0aW5hcmkgVGFnIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctYmFzaWMvc2FtcGxlLXBvLXRhZy1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctYmFzaWMvc2FtcGxlLXBvLXRhZy1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby10YWctbGFic1wiIHRpdGxlPVwiUG9ydGluYXJpIFRhZyBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctbGFicy9zYW1wbGUtcG8tdGFnLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdGFnLWxhYnMvc2FtcGxlLXBvLXRhZy1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRhZy1iYW5rLWFjY291bnRcIiB0aXRsZT1cIlBvcnRpbmFyaSBUYWcgLSBCYW5rIEFjY291bnRcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRhZy1iYW5rLWFjY291bnQvc2FtcGxlLXBvLXRhZy1iYW5rLWFjY291bnQuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdGFnLWJhbmstYWNjb3VudC9zYW1wbGUtcG8tdGFnLWJhbmstYWNjb3VudC5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWcnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFnLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1RhZ0NvbXBvbmVudCBleHRlbmRzIFBvVGFnQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgaXNDbGlja2FibGU6IGJvb2xlYW47XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pc0NsaWNrYWJsZSA9IHRoaXMuY2xpY2sub2JzZXJ2ZXJzLmxlbmd0aCA+IDA7XG4gIH1cblxuICBnZXQgaWNvbkZyb21UeXBlKCkge1xuICAgIHN3aXRjaCAodGhpcy50eXBlKSB7XG4gICAgICBjYXNlIFBvVGFnVHlwZS5EYW5nZXI6IHJldHVybiBQb1RhZ0ljb24uRGFuZ2VyO1xuXG4gICAgICBjYXNlIFBvVGFnVHlwZS5JbmZvOiByZXR1cm4gUG9UYWdJY29uLkluZm87XG5cbiAgICAgIGNhc2UgUG9UYWdUeXBlLlN1Y2Nlc3M6IHJldHVybiBQb1RhZ0ljb24uU3VjY2VzcztcblxuICAgICAgY2FzZSBQb1RhZ1R5cGUuV2FybmluZzogcmV0dXJuIFBvVGFnSWNvbi5XYXJuaW5nO1xuICAgIH1cbiAgfVxuXG4gIGdldCBpY29uVHlwZVN0cmluZygpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMuaWNvbiA9PT0gJ3N0cmluZyc7XG4gIH1cblxuICBnZXQgdGFnQ29sb3IoKSB7XG4gICAgaWYgKHRoaXMudHlwZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaW52ZXJzZSA/IGBwby10YWctJHt0aGlzLnR5cGV9LWludmVyc2VgIDogYHBvLXRhZy0ke3RoaXMudHlwZX1gO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbG9yICYmICF0aGlzLnR5cGUpIHtcbiAgICAgIHJldHVybiB0aGlzLmludmVyc2UgPyBgcG8tdGV4dC0ke3RoaXMuY29sb3J9YCA6IGBwby0ke3RoaXMuY29sb3J9YDtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMudHlwZSAmJiAhdGhpcy5jb2xvcikge1xuICAgICAgcmV0dXJuIHRoaXMuaW52ZXJzZSA/IGAke3BvVGFnVHlwZURlZmF1bHR9LWludmVyc2VgIDogcG9UYWdUeXBlRGVmYXVsdDtcbiAgICB9XG4gIH1cblxuICBnZXQgdGFnT3JpZW50YXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMub3JpZW50YXRpb24gPT09IHRoaXMucG9UYWdPcmllbnRhdGlvbi5Ib3Jpem9udGFsO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICBjb25zdCBzdWJtaXR0ZWRUYWdJdGVtOiBQb1RhZ0l0ZW0gPSB7IHZhbHVlOiB0aGlzLnZhbHVlLCB0eXBlOiB0aGlzLnR5cGUgfTtcbiAgICB0aGlzLmNsaWNrLmVtaXQoc3VibWl0dGVkVGFnSXRlbSk7XG4gIH1cblxuICBvbktleVByZXNzZWQoZXZlbnQ6IGFueSwga2V5Q29kZTogc3RyaW5nKSB7XG4gICAgY29uc3QgaXNWYWxpZEtleSA9IGV2ZW50LmtleUNvZGUgPT09IFBvS2V5Q29kZUVudW1ba2V5Q29kZV07XG5cbiAgICBpZiAoaXNWYWxpZEtleSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgdGhpcy5vbkNsaWNrKCk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==