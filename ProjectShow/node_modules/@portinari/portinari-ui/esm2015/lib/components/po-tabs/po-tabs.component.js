/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';
import { isMobile } from './../../utils/util';
import { PoTabComponent } from './po-tab/po-tab.component';
import { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';
import { PoTabsBaseComponent } from './po-tabs-base.component';
/** @type {?} */
const poTabsMaxNumberOfTabs = 5;
/**
 * \@docsExtends PoTabsBaseComponent
 *
 * \@example
 *
 * <example name="po-tabs-basic" title="Portinari Tabs Basic">
 *  <file name="sample-po-tabs-basic/sample-po-tabs-basic.component.html"> </file>
 *  <file name="sample-po-tabs-basic/sample-po-tabs-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tabs-labs" title="Portinari Tabs Labs">
 *  <file name="sample-po-tabs-labs/sample-po-tabs-labs.component.html"> </file>
 *  <file name="sample-po-tabs-labs/sample-po-tabs-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tabs-travel" title="Portinari Tabs - Travel">
 *  <file name="sample-po-tabs-travel/sample-po-tabs-travel.component.html"> </file>
 *  <file name="sample-po-tabs-travel/sample-po-tabs-travel.component.ts"> </file>
 * </example>
 *
 * <example name="po-tabs-business-conf" title="Portinari Tabs - Business Conference">
 *  <file name="sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.html"> </file>
 *  <file name="sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.ts"> </file>
 * </example>
 */
export class PoTabsComponent extends PoTabsBaseComponent {
    /**
     * @param {?} changeDetector
     */
    constructor(changeDetector) {
        super();
        this.changeDetector = changeDetector;
        this.maxNumberOfTabs = poTabsMaxNumberOfTabs;
    }
    /**
     * @return {?}
     */
    get isMobileDevice() {
        return isMobile();
    }
    /**
     * @return {?}
     */
    get isShowTabDropdown() {
        return !this.isMobileDevice && this.visibleTabs.length > this.maxNumberOfTabs;
    }
    // tabs que serão apresentadas na aba "Mais"
    /**
     * @return {?}
     */
    get overflowedTabs() {
        return this.visibleTabs.filter((/**
         * @param {?} _tab
         * @param {?} index
         * @return {?}
         */
        (_tab, index) => index > (this.maxNumberOfTabs - 2)));
    }
    /**
     * @return {?}
     */
    get visibleTabs() {
        return this.tabs.filter((/**
         * @param {?} tab
         * @return {?}
         */
        tab => !tab.hide));
    }
    /**
     * @return {?}
     */
    closePopover() {
        /** @type {?} */
        const containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;
        if (containsPopoverVisible) {
            this.tabDropdown.popover.close();
        }
    }
    /**
     * @param {?} tab
     * @return {?}
     */
    isVisibleTab(tab) {
        if (this.isMobileDevice) {
            return true;
        }
        /** @type {?} */
        const visibleTabIndex = this.visibleTabs.findIndex((/**
         * @param {?} visibleTab
         * @return {?}
         */
        visibleTab => visibleTab.id === tab.id));
        return (this.visibleTabs.length <= this.maxNumberOfTabs) || (visibleTabIndex < (this.maxNumberOfTabs - 1));
    }
    // Função disparada quando alguma tab ficar ativa
    /**
     * @param {?} tab
     * @return {?}
     */
    onTabActive(tab) {
        this.previousActiveTab = this.tabs.find((/**
         * @param {?} tabChild
         * @return {?}
         */
        tabChild => tabChild.active && tabChild.id !== tab.id));
        this.deactivateTab();
    }
    // funcao será disparada quando mudar o estado do poTab para desabilitado ou escondido.
    /**
     * @param {?} tab
     * @return {?}
     */
    onTabChangeState(tab) {
        if (tab.active) {
            tab.active = false;
            this.activeDistinctTab();
            this.changeDetector.detectChanges();
        }
    }
    // selectiona a aba informada por parametro, caso houver click faz a emição do evento.
    /**
     * @param {?} tab
     * @return {?}
     */
    selectedTab(tab) {
        tab.active = true;
        if (tab.click) {
            tab.click.emit(tab);
        }
        this.changeDetector.detectChanges();
    }
    /**
     * @param {?} _i
     * @param {?} tab
     * @return {?}
     */
    trackByFn(_i, tab) {
        return tab.id;
    }
    // ativa a previousActiveTab ou primeira tab encontrada.
    /**
     * @private
     * @return {?}
     */
    activeDistinctTab() {
        if (this.previousActiveTab) {
            this.previousActiveTab.active = true;
        }
        else {
            this.activeFirstTab();
        }
    }
    // Ativa a primeira Tab que não estiver desabilitada ou escondida.
    /**
     * @private
     * @return {?}
     */
    activeFirstTab() {
        this.tabs.some((/**
         * @param {?} tabChild
         * @return {?}
         */
        tabChild => {
            if (!tabChild.disabled && !tabChild.hide) {
                tabChild.active = true;
                return true;
            }
        }));
    }
    // desativa previousActiveTab e dispara a detecção de mudança.
    /**
     * @private
     * @return {?}
     */
    deactivateTab() {
        if (this.previousActiveTab) {
            this.previousActiveTab.active = false;
            this.changeDetector.detectChanges();
        }
    }
}
PoTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-tabs',
                template: "<div class=\"po-tabs-container\"\n  [class.po-tabs-container-mobile]=\"isMobileDevice\">\n  <div class=\"po-tabs-header\">\n\n    <ng-container *ngFor=\"let tab of tabs; trackBy: trackByFn\">\n      <po-tab-button *ngIf=\"isVisibleTab(tab)\"\n        class=\"po-tab-button\"\n        [class.po-tab-button-mobile]=\"isMobileDevice\"\n        [p-active]=\"tab.active\"\n        [p-disabled]=\"tab.disabled\"\n        [p-hide]=\"tab.hide\"\n        [p-id]=\"tab.id\"\n        [p-label]=\"tab.label\"\n        [p-small]=\"small\"\n        (keyup.enter)=\"closePopover()\"\n        (p-activated)=\"onTabActive(tab)\"\n        (p-change-state)=\"onTabChangeState(tab)\"\n        (p-click)=\"selectedTab(tab)\">\n      </po-tab-button>\n    </ng-container>\n\n    <po-tab-dropdown #tabDropdown\n      *ngIf=\"isShowTabDropdown\"\n      class=\"po-tab-button po-tab-dropdown\"\n      p-label=\"Mais\"\n      [p-small]=\"small\"\n      [p-tabs]=\"overflowedTabs\"\n      (p-activated)=\"onTabActive($event)\"\n      (p-change-state)=\"onTabChangeState($event)\"\n      (p-click)=\"selectedTab($event)\">\n    </po-tab-dropdown>\n  </div>\n</div>\n\n<div class=\"po-tabs-content\">\n  <ng-content></ng-content>\n</div>\n\n"
            }] }
];
/** @nocollapse */
PoTabsComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
PoTabsComponent.propDecorators = {
    tabs: [{ type: ContentChildren, args: [PoTabComponent,] }],
    tabDropdown: [{ type: ViewChild, args: ['tabDropdown', { static: true },] }]
};
if (false) {
    /** @type {?} */
    PoTabsComponent.prototype.maxNumberOfTabs;
    /**
     * @type {?}
     * @private
     */
    PoTabsComponent.prototype.previousActiveTab;
    /** @type {?} */
    PoTabsComponent.prototype.tabs;
    /** @type {?} */
    PoTabsComponent.prototype.tabDropdown;
    /**
     * @type {?}
     * @private
     */
    PoTabsComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,