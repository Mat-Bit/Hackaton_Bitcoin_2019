/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean, uuid } from '../../../utils/util';
/**
 * \@description
 *
 * O componente `po-tab` renderiza uma aba na qual envolve um conteúdo HTML.
 *
 * Com este componente é possível atribuir um rótulo para auxiliar na identificação do conteúdo, ativar para que o mesmo seja exibido,
 * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.
 *
 * > Para controlar a navegação entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).
 * @abstract
 */
export class PoTabBaseComponent {
    constructor() {
        this._active = false;
        this._disabled = false;
        this._hide = false;
        // ID da aba
        this.id = uuid();
        /**
         * Método disparado ao clicar na aba.
         */
        this.click = new EventEmitter();
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Ativa a aba exibindo seu conteúdo.
     *
     * > Sugere-se utilizar na aba de conteúdo inicial.
     *
     * \@default `false`
     * @param {?} active
     * @return {?}
     */
    set active(active) {
        this._active = convertToBoolean(active);
        this.setDisplayOnActive();
    }
    /**
     * @return {?}
     */
    get active() {
        return this._active;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Desabilita a aba.
     *
     * \@default `false`
     * @param {?} disabled
     * @return {?}
     */
    set disabled(disabled) {
        this._disabled = convertToBoolean(disabled);
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this._disabled;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Oculta a aba.
     *
     * \@default `false`
     * @param {?} hide
     * @return {?}
     */
    set hide(hide) {
        this._hide = convertToBoolean(hide);
    }
    /**
     * @return {?}
     */
    get hide() {
        return this._hide;
    }
}
PoTabBaseComponent.propDecorators = {
    active: [{ type: Input, args: ['p-active',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    hide: [{ type: Input, args: ['p-hide',] }],
    label: [{ type: Input, args: ['p-label',] }],
    click: [{ type: Output, args: ['p-click',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoTabBaseComponent.prototype._active;
    /**
     * @type {?}
     * @private
     */
    PoTabBaseComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    PoTabBaseComponent.prototype._hide;
    /** @type {?} */
    PoTabBaseComponent.prototype.id;
    /**
     * Rótulo da aba.
     * @type {?}
     */
    PoTabBaseComponent.prototype.label;
    /**
     * Método disparado ao clicar na aba.
     * @type {?}
     */
    PoTabBaseComponent.prototype.click;
    /**
     * @abstract
     * @protected
     * @return {?}
     */
    PoTabBaseComponent.prototype.setDisplayOnActive = function () { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10YWJzL3BvLXRhYi9wby10YWItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7Ozs7Ozs7OztBQVk3RCxNQUFNLE9BQWdCLGtCQUFrQjtJQUF4QztRQUVVLFlBQU8sR0FBYSxLQUFLLENBQUM7UUFDMUIsY0FBUyxHQUFhLEtBQUssQ0FBQztRQUM1QixVQUFLLEdBQWEsS0FBSyxDQUFDOztRQUdoQyxPQUFFLEdBQVksSUFBSSxFQUFFLENBQUM7Ozs7UUE0REYsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFJaEQsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7SUFuREMsSUFBdUIsTUFBTSxDQUFDLE1BQWU7UUFDM0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM1QixDQUFDOzs7O0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Ozs7Ozs7Ozs7OztJQVdELElBQXlCLFFBQVEsQ0FBQyxRQUFpQjtRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7Ozs7Ozs7Ozs7O0lBV0QsSUFBcUIsSUFBSSxDQUFDLElBQWE7UUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7OztxQkF6Q0EsS0FBSyxTQUFDLFVBQVU7dUJBa0JoQixLQUFLLFNBQUMsWUFBWTttQkFpQmxCLEtBQUssU0FBQyxRQUFRO29CQVNkLEtBQUssU0FBQyxTQUFTO29CQUdmLE1BQU0sU0FBQyxTQUFTOzs7Ozs7O0lBakVqQixxQ0FBa0M7Ozs7O0lBQ2xDLHVDQUFvQzs7Ozs7SUFDcEMsbUNBQWdDOztJQUdoQyxnQ0FBcUI7Ozs7O0lBeURyQixtQ0FBZ0M7Ozs7O0lBR2hDLG1DQUE4Qzs7Ozs7O0lBRTlDLGtFQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuLCB1dWlkIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby10YWJgIHJlbmRlcml6YSB1bWEgYWJhIG5hIHF1YWwgZW52b2x2ZSB1bSBjb250ZcO6ZG8gSFRNTC5cbiAqXG4gKiBDb20gZXN0ZSBjb21wb25lbnRlIMOpIHBvc3PDrXZlbCBhdHJpYnVpciB1bSByw7N0dWxvIHBhcmEgYXV4aWxpYXIgbmEgaWRlbnRpZmljYcOnw6NvIGRvIGNvbnRlw7pkbywgYXRpdmFyIHBhcmEgcXVlIG8gbWVzbW8gc2VqYSBleGliaWRvLFxuICogZGVzYWJpbGl0YXIgcGFyYSBpbXBvc3NpYmlsaXRhciBvIGFjZXNzbywgYmVtIGNvbW8gb2N1bHRhciBwYXJhIGluZGlzcG9uaWJpbGl6YXIgYSBhYmEuXG4gKlxuICogPiBQYXJhIGNvbnRyb2xhciBhIG5hdmVnYcOnw6NvIGVudHJlIGRpdmVyc2FzIGFiYXMsIHV0aWxpemFyIG8gY29tcG9uZW50ZSBbYHBvLXRhYnNgXSgvZG9jdW1lbnRhdGlvbi9wby10YWJzKS5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBvVGFiQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfYWN0aXZlPzogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9kaXNhYmxlZD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfaGlkZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvLyBJRCBkYSBhYmFcbiAgaWQ/OiBzdHJpbmcgPSB1dWlkKCk7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogQXRpdmEgYSBhYmEgZXhpYmluZG8gc2V1IGNvbnRlw7pkby5cbiAgICpcbiAgICogPiBTdWdlcmUtc2UgdXRpbGl6YXIgbmEgYWJhIGRlIGNvbnRlw7pkbyBpbmljaWFsLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtYWN0aXZlJykgc2V0IGFjdGl2ZShhY3RpdmU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9hY3RpdmUgPSBjb252ZXJ0VG9Cb29sZWFuKGFjdGl2ZSk7XG4gICAgdGhpcy5zZXREaXNwbGF5T25BY3RpdmUoKTtcbiAgfVxuXG4gIGdldCBhY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlc2FiaWxpdGEgYSBhYmEuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIHNldCBkaXNhYmxlZChkaXNhYmxlZDogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gY29udmVydFRvQm9vbGVhbihkaXNhYmxlZCk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogT2N1bHRhIGEgYWJhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtaGlkZScpIHNldCBoaWRlKGhpZGU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlID0gY29udmVydFRvQm9vbGVhbihoaWRlKTtcbiAgfVxuXG4gIGdldCBoaWRlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9oaWRlO1xuICB9XG5cbiAgLyoqIFLDs3R1bG8gZGEgYWJhLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKiBNw6l0b2RvIGRpc3BhcmFkbyBhbyBjbGljYXIgbmEgYWJhLiAqL1xuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IHNldERpc3BsYXlPbkFjdGl2ZSgpO1xuXG59XG4iXX0=