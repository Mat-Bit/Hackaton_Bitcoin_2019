import { ElementRef, EventEmitter } from '@angular/core';
import { NgForm } from '@angular/forms';
import { PoLanguageService } from './../../../../services/po-language/po-language.service';
import { PoModalAction, PoModalComponent } from '../../../po-modal';
import { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';
import { PoUploadComponent } from '../../po-upload/po-upload.component';
import { PoUploadFileRestrictions } from '../../po-upload/interfaces/po-upload-file-restriction.interface';
export declare class PoRichTextModalComponent {
    private languageService;
    modalType: PoRichTextModalType;
    savedCursorPosition: any;
    selection: Selection;
    uploadModel: Array<any>;
    uploadRestrictions: PoUploadFileRestrictions;
    urlImage: string;
    urlLink: string;
    urlLinkText: string;
    private savedSelection;
    readonly literals: any;
    modalCancelAction: PoModalAction;
    modalConfirmAction: PoModalAction;
    modalLinkConfirmAction: {
        label: any;
        disabled: boolean;
        action: () => void;
    };
    readonly modalTitle: string;
    readonly isUploadValid: boolean;
    readonly isUrlValid: boolean;
    readonly modalPrimaryAction: PoModalAction | {
        label: any;
        disabled: boolean;
        action: () => void;
    };
    modal: PoModalComponent;
    modalImageForm: NgForm;
    upload: PoUploadComponent;
    modalImage: ElementRef;
    modalLink: PoModalComponent;
    modalLinkForm: NgForm;
    command: EventEmitter<string | {
        command: string;
        value: any;
    }>;
    constructor(languageService: PoLanguageService);
    convertToBase64(): Promise<any>;
    emitCommand(value: any): void;
    formModelValidate(): boolean;
    insertElementRef(): Promise<void>;
    openModal(type: PoRichTextModalType): void;
    private checkIfIsEmpty;
    private cleanUpFields;
    private formReset;
    private restoreSelection;
    private retrieveCursorPosition;
    private saveCursorPosition;
    private saveSelectionTextRange;
    private toInsertLink;
}
