{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/services/po-accordion.service.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-item/po-accordion-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-item-body/po-accordion-item-body.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-item-header/po-accordion-item-header.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion.module.ts","ng://@portinari/portinari-ui/lib/components/po-avatar/po-avatar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-avatar/po-avatar.component.ts","ng://@portinari/portinari-ui/lib/components/po-avatar/po-avatar.module.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-dropdown/po-breadcrumb-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.service.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-item/po-breadcrumb-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb.module.ts","ng://@portinari/portinari-ui/lib/utils/util.ts","ng://@portinari/portinari-ui/lib/services/po-language/po-language.service.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-overlay/po-loading-overlay-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-overlay/po-loading-overlay.component.ts","ng://@portinari/portinari-ui/lib/services/po-language/po-language.module.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-icon/po-loading-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading.module.ts","ng://@portinari/portinari-ui/lib/components/po-button/po-button-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-button/po-button.component.ts","ng://@portinari/portinari-ui/lib/components/po-button/po-button.module.ts","ng://@portinari/portinari-ui/lib/services/po-control-position/po-control-position.service.ts","ng://@portinari/portinari-ui/lib/services/po-control-position/po-control-position.constants.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip-base.directive.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip.directive.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip.module.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group-toggle.enum.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group.module.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/po-calendar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/services/po-calendar.lang.service.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/services/po-calendar.service.ts","ng://@portinari/portinari-ui/lib/services/po-date/po-date.service.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/po-calendar.component.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/po-calendar.module.ts","ng://@portinari/portinari-ui/lib/components/po-chart/enums/po-chart-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-colors.constant.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.constant.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-dynamic-type.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-donut/po-chart-donut.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-pie/po-chart-pie.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart.module.ts","ng://@portinari/portinari-ui/lib/components/po-container/po-container-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-container/po-container.component.ts","ng://@portinari/portinari-ui/lib/components/po-container/po-container.module.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer/po-disclaimer-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer/po-disclaimer.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer/po-disclaimer.module.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-remove/po-disclaimer-remove.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-group.module.ts","ng://@portinari/portinari-ui/lib/components/po-divider/po-divider-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-divider/po-divider.component.ts","ng://@portinari/portinari-ui/lib/components/po-divider/po-divider.module.ts","ng://@portinari/portinari-ui/lib/components/po-popup/po-popup-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-popup/po-popup.component.ts","ng://@portinari/portinari-ui/lib/components/po-popup/po-popup.module.ts","ng://@portinari/portinari-ui/lib/components/po-dropdown/po-dropdown-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dropdown/po-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-dropdown/po-dropdown.module.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field-container/po-field-container-bottom/po-field-container-bottom.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field-container/po-field-container.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field-container/po-field-container.module.ts","ng://@portinari/portinari-ui/lib/components/po-field/validators.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox-group/po-checkbox-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox-group/po-checkbox-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox-group/po-checkbox-group.module.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal-service.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal.component.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal.module.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress-bar/po-progress-bar.component.ts","ng://@portinari/portinari-ui/lib/components/po-progress/enums/po-progress-status.enum.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress.component.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress.module.ts","ng://@portinari/portinari-ui/lib/enums/po-color-palette.enum.ts","ng://@portinari/portinari-ui/lib/services/po-color-palette/po-color-palette.service.ts","ng://@portinari/portinari-ui/lib/services/po-color-palette/po-color-palette.module.ts","ng://@portinari/portinari-ui/lib/services/po-component-injector/po-component-injector.service.ts","ng://@portinari/portinari-ui/lib/services/po-component-injector/po-component-injector.module.ts","ng://@portinari/portinari-ui/lib/services/po-control-position/po-control-position.module.ts","ng://@portinari/portinari-ui/lib/services/po-date/po-date.module.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.enum.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.component.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog-base.service.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.service.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.module.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n-base.pipe.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n.pipe.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster-orientation.enum.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster-base.component.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster-type.enum.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster.component.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-notification.module.ts","ng://@portinari/portinari-ui/lib/services/services.module.ts","ng://@portinari/portinari-ui/lib/components/po-popover/po-popover-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-popover/po-popover.component.ts","ng://@portinari/portinari-ui/lib/components/po-popover/po-popover.module.ts","ng://@portinari/portinari-ui/lib/pipes/po-time/po-time.pipe.ts","ng://@portinari/portinari-ui/lib/pipes/po-time/po-time.module.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-icon/po-table-column-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-label/po-table-column-label.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-link/po-table-column-link.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-manager/po-table-column-manager.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/enums/po-table-column-sort-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-row-template/po-table-row-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-detail/po-table-detail.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-icon/po-table-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-show-subtitle/po-table-show-subtitle.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-subtitle-circle/po-table-subtitle-circle.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-subtitle-footer/po-table-subtitle-footer.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table.module.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-calendar/po-calendar.lang.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-calendar/po-calendar.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-calendar/po-calendar.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-clean/po-clean-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-clean/po-clean.component.ts","ng://@portinari/portinari-ui/lib/enums/po-key-code.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-filter-mode.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-filter.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-option-template/po-combo-option-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input/po-mask.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-datepicker-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-datepicker.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker-range/po-datepicker-range-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker-range/po-datepicker-range.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input/po-input-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-decimal/po-decimal.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input-generic/po-input-generic.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-email/po-email.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-login/po-login.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/services/po-lookup-filter.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/services/po-lookup-modal.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-search/po-multiselect-search.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-filter-mode.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-item/po-multiselect-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-body/po-rich-text-body.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-literals.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/enums/po-rich-text-modal-type.enum.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-notification-base.service.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-notification.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-status.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-file.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-base.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-modal/po-rich-text-modal.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input/po-input.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-number/po-number-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-number/po-number.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-password/po-password.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-radio-group/po-radio-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-radio-group/po-radio-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-select/po-select-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-select/po-select-option-template/po-select-option-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-select/po-select.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-switch/po-switch-label-position.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-switch/po-switch-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-switch/po-switch.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-textarea/po-textarea-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-textarea/po-textarea.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.directive.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-url/po-url.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field.module.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info-orietation.enum.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info.component.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info.module.ts","ng://@portinari/portinari-ui/lib/components/po-tag/enums/po-tag-orientation.enum.ts","ng://@portinari/portinari-ui/lib/components/po-tag/enums/po-tag-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-tag/po-tag-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tag/enums/po-tag-icon.enum.ts","ng://@portinari/portinari-ui/lib/components/po-tag/po-tag.component.ts","ng://@portinari/portinari-ui/lib/components/po-tag/po-tag.module.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic.util.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-field-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic.module.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid-cell-action/po-grid-cell-action.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid-cell/po-grid-cell.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid-head/po-grid-head.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid.module.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view-content-template/po-list-view-content-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view-detail-template/po-list-view-detail-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view.component.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view.module.ts","ng://@portinari/portinari-ui/lib/components/po-badge/po-badge-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-badge/po-badge.component.ts","ng://@portinari/portinari-ui/lib/components/po-badge/po-badge.module.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-header-template/po-menu-header-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-menu/services/po-menu-items.service.ts","ng://@portinari/portinari-ui/lib/components/po-menu/services/po-menu.service.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-filter/po-menu-filter.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-item/po-menu-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu.module.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/services/po-menu-panel-items.service.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel-item/po-menu-panel-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-action/po-navbar-action.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-action-popup/po-navbar-action-popup.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-items/po-navbar-item/po-navbar-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-items/po-navbar-items.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-items/po-navbar-items.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-logo/po-navbar-logo.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar.module.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-content/po-page-content-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-content/po-page-content.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-default/po-page-default-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-default/po-page-default.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-detail/po-page-detail-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-util/po-page-util.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-detail/po-page-detail.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-edit/po-page-edit-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-edit/po-page-edit.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-header/po-page-header-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-header/po-page-header.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-list/po-page-list-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-list/po-page-list.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page.module.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-circles/po-slide-circles.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/directives/po-slide-content-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-item/po-slide-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-control/po-slide-control.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide.module.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/enums/po-stepper-status.enum.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-step/po-step.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-circle/po-stepper-circle.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/enums/po-stepper-orientation.enum.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-label/po-stepper-label.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-step/po-stepper-step.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper.module.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab-button/po-tab-button.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab/po-tab-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab/po-tab.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab-dropdown/po-tab-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tabs-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tabs.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tabs.module.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-actions/po-toolbar-actions.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-notification/po-toolbar-notification.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-profile/po-toolbar-profile.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar.module.ts","ng://@portinari/portinari-ui/lib/components/po-widget/po-widget-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-widget/po-widget.component.ts","ng://@portinari/portinari-ui/lib/components/po-widget/po-widget.module.ts","ng://@portinari/portinari-ui/lib/components/components.module.ts","ng://@portinari/portinari-ui/lib/directives/directives.module.ts","ng://@portinari/portinari-ui/lib/guards/guards.module.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor-base.service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor.service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor.module.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-request/po-http-request-control-service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-request/po-http-request-interceptor.service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-request/po-http-request.module.ts","ng://@portinari/portinari-ui/lib/interceptors/interceptors.module.ts","ng://@portinari/portinari-ui/lib/pipes/pipes.module.ts","ng://@portinari/portinari-ui/lib/po.module.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n-config-injection-token.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n-base.service.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n.service.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","PoAccordionService","subjectChild","Subject","receiveFromChildAccordionClicked","asObservable","sendToParentAccordionItemClicked","accordionItem","Injectable","PoAccordionItemComponent","accordionService","collapse","expanded","expand","Component","args","selector","template","Input","ViewChild","TemplateRef","static","PoAccordionComponent","_super","_this","receiveFromChildAccordionSubscription","tslib_1.__extends","ngOnDestroy","accordionServiceSubscription","unsubscribe","headerToggle","event","poAccordionItem","toggle","subscribe","expandedActiveAccordionItem","providers","ContentChildren","PoAccordionBaseComponent","PoAccordionItemBodyComponent","animations","trigger","transition","style","height","animate","PoAccordionItemHeaderComponent","EventEmitter","onClick","emit","changeDetection","ChangeDetectionStrategy","OnPush","Output","PoAccordionModule","NgModule","imports","CommonModule","declarations","exports","PO_AVATAR_SIZES","PoAvatarBaseComponent","_size","defineProperty","includes","PoAvatarComponent","ngOnInit","src","undefined","onError","PoAvatarModule","PoBreadcrumbBaseComponent","itemsView","_items","items","PoBreadcrumbComponent","differs","element","renderer","showDropdown","showDropdownToggle","_breadcrumbItemsLenght","calculatedElement","hiddenWithoutResize","initialized","wasClickedonDropdown","checkClickOutElement","dropdownIcon","removeClickoutListener","differ","find","ngAfterViewInit","initializeResizeListener","ngDoCheck","breadcrumbElement","nativeElement","offsetWidth","initBreadcrumbSize","debounceResize","checkChangeOnItems","removeResizeListener","toggleDropdown","initializeClickoutListener","contains","target","diff","calcBreadcrumbItemsWidth","calcBreadcrumb","breadcrumbFavorite","getBreadcrumbFavoriteWidth","getBreadcrumbWidth","enableBreadcrumbResponsive","disableBreadcrumbResponsive","favoriteService","querySelector","breadcrumbItem","querySelectorAll","from","map","breadcrumb","reduce","a","slice","dropdownItems","reverse","clearTimeout","timeoutResize","setTimeout","clickoutListener","listen","resizeListener","IterableDiffers","ElementRef","Renderer2","read","PoBreadcrumbDropdownComponent","PoBreadcrumbFavoriteService","http","_url","_bodyParams","configService","url","params","item","isFavorite","link","sendStatusFavorite","status","bodyParams","post","getFavorite","get","responseType","HttpClient","PoBreadcrumbFavoriteComponent","service","favorite","paramsService","itemActive","getStatusFavorite","getSubscription","setSubscription","toggleFavoriteAction","setStatusFavorite","PoBreadcrumbItemComponent","PoBreadcrumbModule","RouterModule","poLocales","poLocaleDefault","browserLanguage","getShortBrowserLanguage","formatBytes","bytes","decimals","Math","floor","log","parseFloat","pow","toFixed","getBrowserLanguage","language","navigator","shortLanguage","getShortLanguage","toLowerCase","substring","isLanguage","RegExp","test","convertToBoolean","val","trim","convertToInt","valueDefault","validNumber","parseInt","validDefaultValue","isTypeof","object","type","callFunction","fn","context","param","convertIsoToDate","start","end","date","day","month","year","setYearFrom0To100","Date","milliseconds","parse","timezone","getTimezoneOffset","convertDateToISOExtended","time","getMonth","getDate","formatYear","getFullYear","dateString","toString","isIE","userAgent","window","isMobile","match","isKeyCodeEnter","keyCode","which","setFullYear","removeDuplicatedOptions","list","findIndex","splice","out_i_1","removeUndefinedAndNullOptions","validValue","isExternalLink","startsWith","openExternalLink","open","getFormattedLink","formattedLink","replace","sortValues","leftSide","rightSide","ascending","left","right","validateDateRange","dateStart","dateEnd","uuid","hex4","random","capitalizeFirstLetter","text","charAt","toUpperCase","PoLanguageService","localStorage","getItem","setItem","getLanguage","languageDefault","getLanguageDefault","setLanguage","setLanguageDefault","providedIn","poLoadingOverlayLiteralsDefault","en","loading","es","pt","ru","PoLoadingOverlayBaseComponent","languageService","_screenLock","getTextDefault","screenLock","_text","PoLoadingOverlayComponent","changeDetector","ChangeDetectorRef","PoLanguageModule","PoLoadingBaseComponent","PoLoadingComponent","PoLoadingIconComponent","_neutralColor","PoLoadingModule","PO_BUTTON_TYPES","PoButtonBaseComponent","_disabled","_loading","_small","_type","click","PoButtonComponent","focus","disabled","buttonElement","PoButtonModule","poControlPositionSidesDefault","PoControlPositionService","differenceDiagonalToWidthArrow","isSetElementWidth","offsetArrow","adjustPosition","position","elementPosition","customPositions","adjustCustomPosition","adjustDefaultPosition","getArrowDirection","arrowDirection","setElements","elementOffset","targetElement","isCornerAligned","positionLength","sidesCount","overflowAllSides","nextPosition","mainPositions","getMainPositions","mainPositionLength","mainSidesCount","mainPosition","getMainPosition","overflowMain","verifySubPositions","setAlignedElementPosition","setElementPosition","getMainPositionsByCustomPositions","customPositionsLength","getOverflows","sizesAndPositions","getSizesAndPositions","innerWidth","top","bottom","innerHeight","scrollY","scrollX","getBoundingClientRect","positions","index","nextIndex","overflows","setAlignedArrowDirection","setAlignedBottomPositions","displacement","setElementWidth","width","setAlignedTopPositions","setArrowDirection","setBottomPositions","setTopPositions","setRightPositions","setLeftPositions","clientWidth","align","PO_CONTROL_POSITIONS","PoTooltipBaseDirective","_tooltip","_tooltipPosition","tooltip","PoTooltipDirective","elementRef","poControlPosition","tooltipOffset","initScrollEventListenerFunction","onMouseEnter","tooltipContent","showTooltip","createTooltip","removeArrow","tooltipPosition","addArrow","lastTooltipText","onMouseLeave","hideTooltip","addClass","divArrow","addScrollEventListener","addEventListener","eventListenerFunction","createElement","divContent","textContent","createText","appendChild","isHidden","removeScrollEventListener","removeClass","removeEventListener","updateTextContent","removeChild","Directive","HostListener","PoTooltipModule","Multiple","None","Single","PO_TOGGLE_TYPE_DEFAULT","PoButtonGroupBaseComponent","_toggle","buttons","values","PoButtonGroupToggle","checkSelecteds","onButtonClick","buttonClicked","buttonIndex","forEach","button","selected","toggleMode","deselectAllButtons","filter","PoButtonGroupComponent","viewRef","parentRef","ViewContainerRef","PoButtonGroupModule","poCalendarLocales","PoCalendarBaseComponent","poDate","poCalendarLangService","dayVisible","displayMonths","displayWeekDays","monthVisible","yearVisible","onTouched","propagateChange","today","change","_locale","locale","initializeLanguage","_maxDate","maxDate","getDateForDateRange","_minDate","minDate","getWeekDaysArray","getMonthsArray","displayMonth","displayMonthNumber","PoCalendarLangService","months","shortWeekDays","monthLabel","yearLabel","getMonthLabel","arrMonths","getWeekDays","arrWeekDays","getYearLabel","PoCalendarService","monthDates","dayFormatter","weekFormatter","Error","weeks","week","weekStartDate","getTime","setDate","monthDays","startDate","getDay","PoDateService","dateRegex","isoRegex","_a","getDateFromIso","miliseconds","convertDateToISO","fullYear","isoDate","isMinDate","lastHour","splitDate","validDate","bind","isValidIso","isDateRangeValid","dateA","dateB","dateASplitted","split","dateBSplitted","stringDate","sortDate","validateDate","PoCalendarComponent","poCalendarService","init","getBackgroundColor","displayValue","propertyValue","getDayBackgroundColor","getDayColor","getDayForegroundColor","getForegroundColor","onNextMonth","updateDisplay","displayYear","onPreviousMonth","onSelectDate","dateIso","onSelectMonth","selectDay","onSelectYear","lastDisplay","selectMonth","currentYear","registerOnChange","registerOnTouched","func","registerOnValidatorChange","validatorChange","selectYear","updateYear","validateModel","model","validate","c","writeValue","writeDate","updateDate","addAllYearsInDecade","displayDecade","equalsDate","date1","date2","getDecadeArray","updateDecade","getColorForDate","local","getColorForDateRange","getColorForToday","selectDateFromDate","selectDateFromIso","currentMonthNumber","displayStartDecade","displayFinalDecade","calendarArray","displayDays","writeDateIso","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","PoCalendarModule","Donut","Pie","poChartDefaultHeight","poChartTypeDefault","PoChartType","PoChartBaseComponent","_height","poChartType","seriesClick","seriesHover","intValue","rebuildComponent","onSeriesClick","onSeriesHover","PoChartColors","PoSeriesTextBlack","poChartAngleStepInterval","PI","poChartAnimationDurationTime","poChartStartAngle","PoChartDynamicTypeComponent","innerRadius","onSerieClick","onSerieHover","series","calculateSVGContainerDimensions","chartWrapperElement","chartHeaderElement","chartLegendElement","svgContainerHeightCalc","svgHeight","centerX","calculateTotalValue","totalValue","previousValue","serie","PoChartCircular","el","ngZone","chartItemsEndAngleList","svgPathElementsList","svgTextElementsList","_series","getSeriesWithValue","calculateEndAngle","removeWindowResizeListener","removeWindowScrollListener","animationRunning","chartInitSetup","setEventListeners","animationSetup","chartItemStartAngle","chartItemEndAngle","drawPathInit","calculateAngleRadians","calculateCurrentEndAngle","angleCurrentPosition","calculateSVGDimensions","chartWrapper","chartHeader","chartLegend","setInnerRadius","changeTooltipPosition","tooltipElement","classList","tooltipPositions","setTooltipPositions","setStyle","createSVGElements","checkingIfScrollsWithPoPage","poPageContent","document","getElementsByClassName","createPath","svgPathsWrapper","svgPath","setAttribute","color","setTooltipAttributes","svgElement","createPaths","svgG","svgText","fontSize","getFontSize","textColor","getTextColor","getPercentValue","createTexts","poChartPadding","svgContainer","drawPath","path","largeArc","sinAlpha","sin","cosAlpha","cos","sinBeta","cosBeta","startX","startY","endX","endY","startInnerX","startInnerY","endInnerX","endInnerY","pathCoordinates","join","runOutsideAngular","drawSeries","currentSerieIndex","isFinishedDrawingCurrentSeries","setTextProperties","requestAnimationFrame","emitEventOnEnter","percentValue","floatPercentValue","isMoreThanTwoDecimalsPlaces","String","newSeries","colors","getTooltipValue","valueAfterDot","onMouseClick","serieOnClick","category","chartElementCategory","chartElementValue","chartBody","lastChild","getAttributeNS","tooltipText","serieOnEnter","onWindowResize","removeTooltip","windowResizeListener","windowScrollListener","chartSeries","startAngle","endAngle","centerAngle","textBox","getBBox","halfTextWidth","halfTextHeight","radius","xCoordinate","yCoordinate","clientX","clientY","offsetHeight","tooltipValue","PoChartDonutComponent","NgZone","PoChartPieComponent","PoChartComponent","componentFactoryResolver","mappings","onResize","getSeriesColor","dynamicComponentSetting","checkingForSerieChanges","componentRef","destroy","createComponent","componentType","getComponentType","factory","resolveComponentFactory","chartContainer","instance","setChartProperties","setResizeListenerSubscribe","detectChanges","setClickSubscribe","setHoverSubscribe","typeName","colorsLength","seriesLength","quantityDuplicates","isArray","ComponentFactoryResolver","PoChartModule","entryComponents","PoContainerBaseComponent","_noBorder","_noPadding","_noShadow","PoContainerComponent","PoContainerModule","PO_DISCLAIMER_TYPES","PoDisclaimerBaseComponent","_hideClose","showDisclaimer","closeAction","close","property","getLabel","PoDisclaimerComponent","onKeyPress","PoDisclaimerModule","poDisclaimerGroupLiteralsDefault","removeAll","PoDisclaimerGroupBaseComponent","_disclaimers","_hideRemoveAll","previousDisclaimers","literals","disclaimers","checkDisclaimers","checkChanges","closeItem","disclaimer","emitChange","itemIndex","emitChangeDisclaimers","isRemoveAll","hideRemoveAll","hideClose","removeAllItems","removeItems","disclaimersAreChanged","currentValues","some","PoDisclaimerGroupComponent","PoDisclaimerRemoveComponent","removeAllAction","removeAction","PoDisclaimerGroupModule","PoDividerBaseComponent","PoDividerComponent","PoDividerModule","poPopupDefaultPosition","PoPopupBaseComponent","_hideArrow","_isCornerAlign","_position","showPopup","_actions","_customPositions","_target","PoPopupComponent","viewContainerRef","router","onScroll","removeListeners","onActionClick","popupAction","actionNoDisabled","returnBooleanValue","action","openUrl","oldTarget","validateInitialContent","clickedOutDisabledItem","elementContains","parentElement","clickedOutHeaderTemplate","popupHeaderTemplate","popupRef","clickedOutTarget","closePopupOnClickout","className","hasContentToShow","clientHeight","initializeListeners","navigate","setPosition","isCornerAlign","Router","PoPopupModule","schemas","PoDropdownBaseComponent","icon","PoDropdownComponent","hideDropdown","onKeyDown","dropdownRef","checkClickArea","wasClickedOnDropdown","PoDropdownModule","PoFieldContainerBottomComponent","errorPattern","PoFieldContainerComponent","_optional","getOptionalText","PoFieldContainerModule","requiredFailed","required","valid","maxlengpoailed","maxlength","validMaxlength","Number","minlengpoailed","minlength","validMinlength","poCheckboxGroupColumnsDefaultLength","PoCheckboxGroupBaseComponent","checkedOptions","checkedOptionsList","mdColumns","_columns","_indeterminate","_required","ngModelChange","columns","getGridSystemColumns","checkIndeterminate","indeterminate","_options","setCheckboxGroupOptionsView","options","changeValue","checkOption","checkOptionModel","optionsModel","generateCheckOptions","abstractControl","isInvalidIndeterminate","checkColumnsRange","maxColumns","optionChecked","option","gridSystemColumns","every","optionFind","optionsList","checkboxGroupOptionsView","id","PoCheckboxGroupComponent","ngAfterViewChecked","checkboxLabels","checkboxLabel","preventDefault","trackByFn","ViewChildren","PoCheckboxGroupModule","FormsModule","PoModalBaseComponent","clickOut","onXClosed","xClosed","validPrimaryAction","primaryAction","PoModalService","PoModalComponent","poModalService","focusableElements","modalActive","removeEventListeners","sourceElement","closeModalOnEscapeKey","stopPropagation","getPrimaryActionButtonType","danger","getSecondaryActionButtonType","secondaryAction","onClickOut","modalContent","activeElement","handleFocus","initFocus","focusFunction","firstElement","setFirstElement","PoModalModule","PoProgressBarComponent","Default","Success","PoProgressBaseComponent","_value","PoProgressStatus","cancel","retry","integerValue","isProgressRangeValue","PoProgressComponent","observers","info","infoIcon","isAllowCancel","isAllowRetry","emitCancellation","emitRetry","PoProgressModule","Color01","Color02","Color03","Color04","Color05","Color06","Color07","Color08","Color09","Color10","Color11","Color12","PoColorPaletteService","getColor","PoColorPaletteEnum","getColorFromType","PoColorPaletteModule","bootstrap","PoComponentInjectorService","componentResolver","applicationRef","injector","createComponentInApplication","component","attachView","hostView","domElem","rootNodes","destroyComponentInApplication","detachView","ApplicationRef","Injector","PoComponentInjectorModule","PoControlPositionModule","PoDateTimeModule","Alert","Confirm","poDialogAlertLiteralsDefault","ok","poDialogConfirmLiteralsDefault","confirm","PoDialogComponent","closeSubscription","poModal","configDialog","primaryLabel","secondaryLabel","dialogOptions","dialogType","title","message","setDialogLiterals","PoDialogType","literalsConfirm","literalsAlert","alertLiterals","confirmLiterals","PoDialogBaseService","confirmOptions","openDialog","alert","alertOptions","PoDialogService","poComponentInjector","changeDetectorRef","PoDialogModule","PoI18nBasePipe","transform","args_1","tslib_1.__values","args_1_1","arg","PoI18nPipe","Pipe","name","Bottom","Top","orientation","PoToasterOrientation","Information","Warning","PoToasterComponent","elementeRef","margin","observableOnClose","showToaster","toasterPosition","changePosition","display","toaster","configToaster","poToaster","actionLabel","PoToasterType","toasterType","getShowToaster","getIcon","getToasterPosition","getToasterType","poToasterAction","PoToasterBaseComponent","PoNotificationModule","PoServicesModule","PO_POPOVER_DEFAULT_POSITION","PO_POPOVER_DEFAULT_TRIGGER","PO_POPOVER_TRIGGERS","PoPopoverBaseComponent","_trigger","PoPopoverComponent","initEventListenerFunction","setElementsControlPosition","setRendererListenInit","setPopoverPosition","setOpacity","popoverElement","opacity","mouseEnterListener","mouseLeaveListener","togglePopup","hidden","PoPopoverModule","PoTimePipe","format","amountOfF","lastIndexOf","addDotMiliseconds","formatMiliseconds","getFormatMiliseconds","formatValue","hour","minutes","seconds","PoTimeModule","PoTableColumnIconComponent","_icons","icons","column","row","isClickable","isDisabled","trackByFunction","PoTableColumnLabelComponent","poColorPaletteService","PoTableColumnLinkComponent","PoTableColumnManagerMaxColumnsDefault","poTableColumnManagerLiteralsDefault","columnsManager","restoreDefault","PoTableColumnManagerComponent","_maxColumns","columnsOptions","visibleColumns","defaultColumns","visibleColumnsChange","updateColumnsOptions","ngOnChanges","changes","firstChange","onChangeColumns","onChangeVisibleColumns","checkedColumns","disableColumnsOptions","visibleTableColumns","getVisibleTableColumns","restore","isDisableColumn","getColumnTitleLabel","getVisibleColumns","visible","popover","mapTableColumnsToCheckboxOptions","currentValue","_b","Ascending","Descending","poTableContainer","poTableLiteralsDefault","noColumns","noData","noVisibleColumn","loadingData","loadMoreData","seeCompleteSubtitle","completeSubtitle","PoTableBaseComponent","_hideDetail","_hideTextOverflow","allSelected","allUnselected","showMore","sortBy","unselected","selectAll","sortedColumn","hasItems","hasColumns","getDefaultColumns","setColumnLink","calculateWidthHeaders","_container","showContainer","hideTextOverflow","calculateHeightTableContainer","hideDetail","_literals","_checkbox","checkbox","actions","sort","showMoreDisabled","striped","hideSelectAll","singleSelect","PoTableColumnSortType","selectAllRows","$selected","emitSelectAllEvents","selectRow","emitSelectEvents","configAfterSelectRow","selectDetailRow","getColumnMasterDetail","col","getClassColor","getColumnColor","columnColor","getSubtitleColumns","getIconColumns","getNameColumnDetail","detail","getSelectedRows","getUnselectedRows","toggleRowAction","toggleShowAction","$showAction","sortColumn","sortArray","sortType","onShowMore","keys","key","rows","unselectOtherRows","isEverySelected","PoTableRowTemplateDirective","templateRef","PoTableComponent","decimalPipe","tableOpacity","visibleElement","clickListener","_columnManagerTarget","masterDetail","hideSelect","visibleActions","hasMainColumns","hasVisibleSubtitleColumns","mainColumns","hasRowTemplate","tableRowTemplate","validColumns","typesValid","container","hideContainer","checkChangesItems","verifyCalculateHeightTableContainer","tableWrapperElement","checkDisabled","executeTableAction","tableAction","validateTableAction","columnCountForMasterDetail","columnCount","formatNumber","getSubtitleColumn","subtitleColumn","subtitles","subtitleItem","getBooleanLabel","rowValue","columnBoolean","boolean","trueLabel","falseLabel","getColumnIcons","rowIcons","getColumnIconsFromProperty","getColumnLabel","columnLabel","labels","labelItem","verifyWidthColumnsPixels","headersTable","header","divHeader","containsMasterDetail","isShowRowTemplate","poTableRowTemplateShow","isShowMasterDetail","$showDetail","onVisibleColumnsChange","tooltipMouseEnter","scrollWidth","innerText","checkingIfColumnHasTooltip","tooltipMouseLeave","verifyChangeHeightInFooter","footerHeight","getHeightTableFooter","heightTableContainer","setTableOpacity","targetRef","popupTarget","poPopupComponent","containerClassList","tableContainerElement","firstChild","add","remove","changesItems","tableFooterElement","DecimalPipe","ContentChild","PoTableDetailComponent","hasCheckbox","_detail","returnPoTableDetailObject","formatNumberDetail","onSelectRow","PoTableIconComponent","iconTooltip","clickable","allowTooltip","PoTableShowSubtitleComponent","PoTableSubtitleCircleComponent","hideTitle","_subtitle","subtitle","PoTableSubtitleFooterComponent","isVisible","getContainerSize","toggleShowCompleteSubtitle","getItemsSize","containerSize","itemsSize","showSubtitle","PoTableModule","PoCalendarLangService$1","wordMonth","wordYear","lang","getWordMonth","getWordYear","getArrayMonths","getWeedDays","getArrayWeekDays","PoCalendarService$1","firstWeekDay","PoCalendarComponent$1","displayWeedDays","overlayInvisible","selectedDateChange","submit","_dateEnd","_selectedDate","selectedDate","_dateStart","getArrayDecade","onPrevMonth","setMobileVisualization","PoCleanBaseComponent","defaultValue","changeEvent","clear","setInputValue","showIcon","getInputValue","hasCleanAttr","isReadonly","parentComponent","clean","readonly","PoCleanComponent","inputRef","arrowDown","arrowUp","backspace","delete","enter","esc","keyL","space","tab","endsWith","poComboLiteralsDefault","PoComboBaseComponent","_changeOnEnter","_debounceTime","_disabledInitFilter","_fieldLabel","_fieldValue","_filterMinlength","_filterMode","PoComboFilterMode","cacheOptions","cacheStaticOptions","firstInWriteValue","isFirstFilter","isFiltering","previousSearchValue","visibleOptions","placeholder","_filterService","configAfterSetFilterService","parsedValue","isNaN","unsubscribeKeyupObservable","initInputObservable","filterService","fieldValue","fieldLabel","parseValue","isInteger","selectedValue","changeOnEnter","validAndSortOptions","updateComboList","filterMode","_filterParams","filterParams","onInitService","setService","defaultService","configProperties","sortOptions","compareOptions","compareMethod","search","getOptionFromValue","isEqual","getOptionFromLabel","updateSelectedValue","isUpdateModel","isWriteValue","optionLabel","updateInternalVariables","optionValue","updateModel","callModelChange","onModelChange","inputValue","searchForLabel","newOptions_1","selectedView","copyOptions","newOptions","selectedOption","getNextOption","optionFound","found","getIndexSelectedView","compareObjects","obj1","obj2","JSON","stringify","verifyValidOption","updateSelectedValueWithOldOption","isInputValueDiffSelectedLabel","getObjectByValue","onModelTouched","keyupSubscribe","fromWriteValue","oldOption","PoComboFilterService","getFilteredData","HttpParams","fromString","pipe","response","parseToArrayComboOption","parseToComboOption","PoComboOptionTemplateDirective","PoComboComponent","controlPosition","sanitized","_isServerSearching","comboIcon","comboOpen","isProcessingGetObjectByValue","scrollTop","shouldMarkLetters","adjustContainerPosition","setContainerPosition","filterSubscription","inputElement","PoKeyCodeEnum","controlComboVisibility","selectPreviousOption","selectNextOption","onKeyUp","useDefaultOptionsService","keyupObservable","fromEvent","isValidCharacterToSearch","currentTarget","distinctUntilChanged","tap","debounceTime","filterMinlength","controlApplyFilter","applyFilter","isServerSearching","setOptionsByApplyFilter","updateOptionByFilteredValue","onOptionClick","currentViewValue","nextOption","visibleOption","toggleComboVisibility","disabledInitFilter","applyFilterInFirstClick","toOpen","scrollTo","setScrollTop","wasClickedOnToggle","iconElement","contentElement","getLabelFormatted","labelInput","labelLowerCase","openTagBold","safeHtml","bypassSecurityTrustHtml","searchOnEnter","eventResizeListener","containerElement","DomSanitizer","PoMask","mask","formatModel","initialPosition","finalPosition","pattern","getRegexFromMask","valueToInput","valueToModel","keyup","$event","controlFormatting","resetPositions","setPositionNotShiftKey","setSelectionRange","shiftKey","setPositions","keydown","ctrlKey","metaKey","isKeyValid","revertPositions","getPosition","checkMaskBefore","clearRangeSelection","checkMaskAfter","isBackspace","selectionStart","selectionEnd","blur","tempPosition","valueProcessed","maskTmp","arrMasks","contMasks","hasOptionalNumber","replaceOptionalNumber","formattingEnds","guide","listValidKeys","contGuide","removeFormattingValue","charValue","isFixedCharacterGuide","isKeyValidMask","testRegex","getFixedCharacterGuide","isKeyCodeValid","keyMask","replaceMask","regex","char","poDatepickerFormatDefault","PoDatepickerBaseComponent","_format","_noAutocomplete","_placeholder","firstStart","isExtendedISO","onChangeModel","onTouchedModel","onblur","onchange","_autofocus","autofocus","objMask","buildMask","refreshValue","getDateFromString","formatToDate","dateFormatted","controlModel","callOnChange","convertDateToISODate","poCalendarPositionDefault","PoDatepickerComponent","noAutocomplete","setDialogPickerStyleDisplay","inputEl","togglePicker","calendar","closeCalendar","setCalendarPosition","dateSelected","verifyMobile","controlChangeEmitter","wasClickedOnPicker","dialogPicker","iconDatepicker","hasOverlayClass","hasAttrCalendar","onKeyup","onKeydown","hasInvalidClass","getErrorPattern","valueBeforeChange","eventOnBlur","newDate","eventOnClick","isValidDateIso","isValidExtendedIso","dateTemp","dateModelFormatted","timeoutChange","hasAttribute","poDatepickerRangeLiteralsDefault","invalidFormat","startDateGreaterThanEndDate","PoDatepickerRangeBaseComponent","poDateService","errorMessage","_clean","_readonly","dateRange","isDateRangeInputFormatValid","isStartDateRangeInputValid","onChange","_endDate","convertPatternDateFormat","endDate","updateScreenByModel","_startDate","control","requiredDateRangeFailed","dateRangeObjectFailed","dateRangeFormatFailed","dateRangeFailed","resetDateRangeInputValidation","isDateRangeObject","dateFormatFailed","isDateRangeInputValid","PoDatepickerRangeComponent","poDatepickerRangeElement","startDateInputValue","endDateInputValue","endDateInput","startDateInput","getKeyCode","getTargetElement","srcElement","isValidKey","poMaskObject","onBlur","removeFocusFromDatePickerRangeField","onFocus","applyFocusOnDatePickerRangeField","isSetFocusOnBackspace","setFocusOnBackspace","isStartDateTargetEvent","startDateInputName","setFocus","updateModelByScreen","isStartDateValid","isDateValid","endDateFormated","formatModelToScreen","startDateFormated","dateRangeField","formatDate","formatScreenToModel","getDateRangeFormatValidation","setDateRangeInputValidation","isValid","dateRangeModel","getValidatedModel","isEqualBeforeValue","endDateInputName","inputName","setFocusOnArrowLeft","setFocusOnArrowRight","setFocusOnStartDateCompleted","setFocusAndPosition","selectionRange","focusOnElement","isCursorAtStartOfInput","inputLength","isCursorAtEndOfInput","isLastKeyPressed","isNewDateCompleted","endDateFormatted","startDateFormatted","isDateRangeInputUncompleted","isDirtyDateRangeInput","dateFormatValidation","PoInputBaseComponent","passedWriteValue","maskFormatModel","changeModel","onChangePropagate","_maxlength","_minlength","controlChangeModelEmitter","callUpdateModelWithTimeout","modelLastUpdate","getScreenValue","reg","patternFailed","validatePatternOnWriteValue","extraValidation","writeValueModel","PO_DECIMAL_DEFAULT_DECIMALS_LENGTH","PO_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH","PoDecimalComponent","_decimalsLength","_thousandMaxlength","decimalSeparator","fireChange","isKeyboardAndroid","minusSign","oldDotsLength","thousandSeparator","thousand","decimal","thousandMaxlength","putFocus","setPaddingInput","hasLetters","isValidNumber","keyValue","fromCharCode","validKey","containsMoreThanOneComma","setViewValue","valueWithoutThousandSeparator","formatValueWithoutThousandSeparator","formatToViewValue","onInput","modelValue","viewValue","onInputKeyboardAndroid","addZeroBefore","formatMask","setCursorInput","formatToModelValue","setPositionValue","paddingRight","formatedViewValue","containsComma","foundComma","elementValue","formattedValue","replaceCommaToDot","decimalsLength","formatedNumber","numberValue","valueBeforeDot","getValueBeforeSeparator","getValueAfterSeparator","separator","hasLessDot","dots","dotsLength","hasMoreDot","hasMinusSignInvalidPosition","keyIsMinusSign","isInvalidKey","charCode","isInvalidNumber","verifyInsertComma","verifyThousandLength","verifyValueAfterComma","verifyInsertMinusSign","validateCursorPositionBeforeSeparator","verifyDecimalLengthIsZeroAndKeyPressedIsComma","isKeyDecimalSeparator","isPositionAfterDecimalSeparator","positionCursor","indexComma","isSelectionStartDifferentSelectionEnd","setInitialSelectionRange","replaceAt","substr","originalValue","valueBeforeSeparator","valueBeforeSeparatorOriginal","indexMinusSign","positionMinusSign","occurancesMinusSign","valueAfterSeparator","PoInputGeneric","afterViewInit","eventOnInput","validMaxLength","eventOnFocus","validateClassesForPattern","verifyPattern","screenValue","PoEmailComponent","listener","PoLoginComponent","PoLookupBaseComponent","oldValue","initializeColumn","keysDescription","selectValue","valueSelected","searchById","getFormattedLabel","cleanModel","cleanViewValue","selectModel","setUrl","PoLookupFilterService","httpClient","getFilteredItems","filteredItemsParams","restFilteredItemsParams","validatedFilterParams","validateParams","poLookupLiteralsDefault","modalPrimaryActionLabel","modalSecondaryActionLabel","modalPlaceholder","modalTitle","modalTableNoColumns","modalTableNoData","modalTableLoadingData","modalTableLoadMoreData","PoLookupModalBaseComponent","hasNext","isLoading","page","pageSize","searchValue","setTableLiterals","_title","searchSubscription","showMoreSubscription","initializeData","data","showMoreEvent","filteredParams","getFilteredParams","order","getOrderParam","tableLiterals","PoLookupModalComponent","keyUpObservable","containerHeight","tableHeight","initializeEventInput","setTableHeight","inputSearchEl","validateEnterPressed","openModal","PoLookupModalService","selectValueEvent","PoLookupComponent","poLookupFilterService","poLookupModalService","modalSubscription","openLookup","isAllowedOpenModal","fieldFormat","setInputValueWipoieldFormat","getViewValue","searchEvent","console","warn","objectSelected","isEmpty","fieldFormated","PoMultiselectSearchComponent","placeholderSearch","PoMultiselectDropdownComponent","show","haveOptions","hideSearch","selectedValues","changeSearch","closeDropdown","isSelectedItem","selectedItem","clickItem","check","updateSelectedValues","searchElement","checked","indexSelectedValues","callChangeSearch","controlVisibility","checkInitialOptions","poMultiselectLiteralsDefault","PoMultiselectBaseComponent","PoMultiselectFilterMode","_hideSearch","_sort","readyToValidation","selectedOptions","visibleOptionsDropdown","visibleDisclaimers","updateModelToValidate","updateVisibleItems","updateList","ngAfterContentChecked","setUndefinedLabels","optionA","optionB","getValuesFromOptions","eventChange","lastLengthModel","getLabelByValue","changeItems","updateSelectedOptions","searchByLabel","PoMultiselectComponent","disclaimerOffset","dropdownOpen","isCalculateVisibleItems","inputWidth","getInputWidth","getDisclaimersWidth","calculateVisibleItems","disclaimersWidth","disclaimersVisible","sum","controlDropdownVisibility","toggleDropdownVisibility","openDropdown","scrollToSelectedOptions","dropdown","setVisibleOptionsDropdown","getPlaceholder","closeDisclaimer","dropdownElement","disclaimerContainerElement","clickOutListener","setPositionDropdown","PoMultiselectItemComponent","itemClicked","poRichTextBodyCommands","PoRichTextBodyComponent","commands","shortcutCommand","bodyElement","designMode","updateValueWithModelValue","executeCommand","command","linkCommand","urlLink","urlLinkText","handleCommandLink","execCommand","emitSelectionCommands","childNodes","update","cursorPositionedInALink","getSelection","focusNode","tagName","queryCommandState","rgbColor","queryCommandValue","hexColor","rgbToHex","insertHtmlLinkElement","linkValue","getRangeAt","elementLink","elementlinkText","createTextNode","href","deleteContents","insertNode","rgb","sep","innerHTML","insertAdjacentHTML","PoRichTextBaseComponent","invalid","PoRichTextComponent","validateClassesForRequired","onChangeValue","updateValue","poRichTextLiteralsDefault","bold","italic","underline","center","justify","unorderedList","insertLink","linkTextLabel","linkUrlTextHelper","linkUrlTextPlaceholder","insert","insertImage","urlImage","Image","Link","PoNotificationBaseService","stackTop","stackBottom","defaultDuration","success","notification","createToaster","buildToaster","warning","information","setDefaultDuration","duration","destroyToaster","PoNotificationService","stack","count","Uploaded","Uploading","PoUploadFile","file","displayName","getFileSize","size","extension","getExtension","rawFile","uid","generateUUID","PoUploadStatus","s4","kbSize","ceil","poUploadLiteralsDefault","files","folders","selectFile","selectFiles","selectFolder","deleteFile","tryAgain","startSending","dragFilesHere","dragFoldersHere","selectFilesOnComputer","selectFolderOnComputer","dropFilesHere","dropFoldersHere","invalidDropArea","invalidFileType","invalidAmount","invalidSize","numberOfFilesAllowed","allowedFormats","allowedFileSizeRange","maxFileSizeAllowed","minFileSizeAllowed","errorOccurred","sentWithSuccess","PoUploadBaseComponent","uploadService","_dragDrop","extensionNotAllowed","quantityNotAllowed","sizeNotAllowed","autoUpload","onUpload","onSuccess","_directory","canHandleDirectory","setDirectoryAttribute","_hideRestrictionsInfo","_hideSelectButton","_hideSendButton","_fileRestrictions","restrictions","initRestrictions","setAllowedExtensions","_formField","getUploadService","formField","currentFiles","_isMultiple","comparedValue","parseFiles","isExceededFileLimit","currentFilesLength","isMultiple","fileRestrictions","maxFiles","poUploadFiles","filesLength","checkRestrictions","insertFileInFiles","sendFeedback","allowedExtensions","minFileSize","maxFileSize","isAccept","isAllowedExtension","isAcceptSize","existsFileSameName","currentFile","newFile","updateExistsFileInFiles","isAllowed","ext","_allowedExtensions","fileIndex","PoUploadDragDropAreaComponent","selectFilesLinkElement","PoUploadDragDropHeightDefault","PoUploadDragDropComponent","_dragDropHeight","isDragOver","fileChange","dragDropHeight","dragDropAreaComponent","onAreaElement","areaElement","onDragLeave","onDragOver","onFileChange","PoUploadBaseService","requests","upload","tOnUpload","uploadCallback","successCallback","errorCallback","uploadEvent","formData","FormData","fileName","append","sendFile","request","getRequest","HttpEventType","UploadProgress","addRequest","percentDone","round","loaded","total","HttpResponse","err","req","HttpRequest","reportProgress","stopRequestByFile","callback","requestObj","removeRequest","PoUploadService","PoUploadComponent","i18nPipe","infoByUploadStatus","percent","progressStatusByFileStatus","calledByCleanInputValue","dragDrop","hideSendButton","hasFileNotUploaded","hasAnyFileUploading","stopUpload","removeFile","cleanInputValue","uploadButton","displayDragDrop","poUploadDragDropComponent","isAllowCancelEvent","updateFiles","onFileChangeDragDrop","inputFile","setPipeArguments","allowedExtensionsFormatted","sendFiles","uploadFiles","removeAttribute","stopUploadHandler","filesFiltered","uploadingHandler","eventResponse","responseHandler","eventError","literalAttributes","literalArguments","pipeArguments","modelFiles","mapCleanUploadFiles","progressFile","uploadRestrictions","PoRichTextModalComponent","selection","modalCancelAction","modal","cleanUpFields","modalConfirmAction","insertElementRef","modalLinkConfirmAction","toInsertLink","modalType","uploadModel","modalImageForm","convertToBase64","isUploadValid","uploadImage","reader","FileReader","readAsDataURL","onload","onerror","emitCommand","PoRichTextModalType","formModelValidate","modalLinkForm","retrieveCursorPosition","isUrlValid","saveCursorPosition","saveSelectionTextRange","formReset","checkIfIsEmpty","markAsPristine","markAsUntouched","updateValueAndValidity","restoreSelection","savedSelection","removeAllRanges","addRange","savedCursorPosition","focusOffset","anchorNode","PoRichTextToolbarComponent","alignButtons","emitAlignCommand","formatButtons","listButtons","linkButtons","mediaButtons","toggleDisableButtons","removeButtonFocus","setColorInColorPicker","changeTextColor","setButtonsStates","obj","shortcutTrigger","btn","toolbarElement","colorPickerInput","state","PoInputComponent","PoNumberBaseComponent","valueMaxlength","substringValue","isEndWithDot","PoNumberComponent","min","parsedInt","max","maxFailed","PoPasswordComponent","_hidePasswordPeek","visiblePassword","showPassword","poRadioGroupColumnsDefaultLength","PoRadioGroupBaseComponent","changedValue","getElementByValue","PoRadioGroupComponent","eventClick","radioLabels","radioLabel","isArrowKey","PoSelectBaseComponent","onUpdateOptions","onValidatorChange","PoSelectOptionTemplateDirective","poSelectContentPositionDefault","PoSelectComponent","selectIcon","disableDefaultEventAndToggleButton","altKey","toggleButton","selectElement","hideDropDown","markForCheck","onSelectChange","findOptionValue","setScrollPosition","scrollValue","heightScrollValue","getSelectItemHeight","scrollPosition","query","selectButtonElement","selectItem","contentList","ulDropdpwn","Right","Left","PoSwitchBaseComponent","switchValue","labelOn","labelOff","labelPosition","PoSwitchLabelPosition","PoSwitchComponent","switchContainer","getLabelPosition","getSwitchPosition","PoTextareaBaseComponent","_rows","PoTextareaComponent","PoUploadDragDropDirective","dragLeave","dragOver","timeout","onDrop","getFilesFromDataTransferItems","directoryCompatible","getOnlyDirectories","dataTransfer","getOnlyFiles","getFilesFromEntry","entry","isFile","readFile","isDirectory","readDirectory","dataTransferItems","entries","dataTransferItems_1","dataTransferItems_1_1","webkitGetAsEntry","entries_1","entries_1_1","newFiles","_c","fileList","dirReader","createReader","readDirectoryEntries","readEntries","entries_2","entries_2_1","itemFiles","invalidFiles","invalidDropAreaArg","PoUploadDragDropAreaOverlayComponent","DragDropAreaFixed","boundingClientRect","clientRectKey","clientRectValue","PoUploadFileRestrictionsComponent","formatAllowedExtensions","_maxFileSize","_minFileSize","setLiterals","PoUrlComponent","PoFieldModule","HttpClientModule","Horizontal","Vertical","poInfoOrientationDefault","PoInfoOrientation","PoInfoBaseComponent","_orientation","poInfoOrientation","_labelSize","PoInfoComponent","PoInfoModule","Danger","Info","poTagColors","poTagOrientationDefault","PoTagOrientation","PoTagBaseComponent","poTagOrientation","_color","_icon","_inverse","PoTagType","poTagTypeDefault","PoTagComponent","PoTagIcon","inverse","submittedTagItem","onKeyPressed","PoTagModule","PoDynamicFormBaseComponent","_groupForm","formOutput","PoDynamicFormComponent","_form","emitForm","groupForm","form","getGridColumnsClasses","smColumns","lgColumns","xlColumns","gridColumns","isVisibleField","field","Boolean","Currency","DateTime","Time","PoDynamicFormFieldsBaseComponent","titleCasePipe","visibleFields","_fields","compareTo","getVisibleFields","fields","existsProperty","printError","createField","convertOptions","getComponentControl","componentClass","gridSmColumns","gridMdColumns","gridLgColumns","gridXlColumns","toLocaleLowerCase","isNumberType","isCurrencyType","isSelect","isRadioGroup","isCheckboxGroup","isMultiselect","PoDynamicFieldType","isCombo","isLookup","isTextarea","isPassword","optionsService","optionsMulti","searchService","secret","PoDynamicFormFieldsComponent","trackBy","viewProviders","ControlContainer","NgForm","TitleCasePipe","PoDynamicViewBaseComponent","currencyPipe","datePipe","timePipe","_showAllValue","getConfiguredFields","newFields","getMergedFields","mergedFields","getValueFields","valueField","fieldIndex","transformValue","classesGridColumns","cssClass","transformedValue","PoDynamicViewComponent","showAllValue","CurrencyPipe","DatePipe","PoDynamicModule","PoGridCellActionComponent","onKeyDownContent","PoGridCellComponent","edit","editValue","freeze","tabIndex","valueChange","_width","onEditCell","dblclick","onBlurInput","onKeyDownInput","PoGridComponent","elRef","lastCell","lastRow","lastColumn","currencyCell","currencyRow","currencyColumn","logger","widporeeze","widthActions","rowActions","cssWidth","widthTableWrapper","tableWrapper","freezeColumns","prev","current","actionsColumns","cancelRow","x","isEmptyRow","removeRow","currencyObj","selectCell","beforeRemove","tableKeydown","direction","prow","pcol","saveRow","insertRow","tableClick","prop","beforeSave","requireds","beforeInsert","nextCell","PoGridHeadComponent","PoGridModule","poListViewLiteralsDefault","hideDetails","showDetails","PoListViewBaseComponent","showHeader","titleAction","_hideSelectAll","showMainHeader","_select","select","_showMoreDisabled","onClickAction","listViewAction","cleanItem","deleteInternalAttrs","runTitleAction","listItem","itemWithPublicProperties","selectAllListItems","selectListItem","checkIfItemsAreSelected","itemCopy","PoListViewContentTemplateDirective","PoListViewDetailTemplateDirective","PoListViewComponent","listViewContentTemplate","listViewDetailTemplate","ngAfterContentInit","initShowDetail","checkItemsChange","checkTitleType","propertyLink","getItemTitle","hasContentTemplate","propertyTitle","hasDetailTemplate","showDetail","overflow-y","PoListViewModule","PO_BADGE_COLORS","PoBadgeBaseComponent","setBadgeValue","validRangeValue","badgeValue","PoBadgeComponent","PoBadgeModule","poMenuLiteralsDefault","itemNotFound","PoMenuBaseComponent","menuService","_collapsed","_filter","_maxLevel","_menus","collapsed","validateCollapseClass","menus","filteredItems","_service","_params","_logo","_shortLogo","setMenuExtraProperties","allowIcons","allowCollapseMenu","menuItem","_level","shortLabel","removeBadgeAlert","setMenuItemProperties","subItems","processSubItems","setMenuType","validateMenus","menu","validateMenu","menuItems","previousItem","maxLevel","setMenuBadgeAlert","subItem","parent","child","childHasSubItems","childHasBadgeAlert","childHasBadge","badge","PoMenuHeaderTemplateDirective","PoMenuItemsService","subjectParent","sendToParentMenuClicked","receiveFromChildMenuClicked","sendToChildMenuClicked","receiveFromParentMenuClicked","PoMenuService","PoMenuComponent","menuItemsService","filterLoading","mobileOpened","filteringItems","menuInitialized","menuPrevious","activeMenuItem","groupedMenuItem","isCollapsed","collapsedMobile","enableCollapseButton","menuCurrent","updateMenu","itemSubscription","routeSubscription","subscribeToMenuItem","subscribeToRoute","urlRouter","checkingRouterChildrenFragments","checkActiveMenuByUrl","activateMenuByUrl","urlPath","linkActive","activateMenuItem","validateToggleMenu","debounceFilter","timeoutFilter","filterProcess","clickMenuItem","events","NavigationEnd","NavigationCancel","toggleMenuMobile","createResizeListener","activateCollapseSubMenuItem","clearGroupMenuIfFirstLevel","isActiveItemMenuSubMenu","openParentMenu","active","grouped","activatedByRoute","areSubMenus","childrenPrimary","parseUrl","root","children","segments","it","executeMenuAction","groupMenuItem","convertToMenuItemFiltered","menuItemFiltered","toggleResize","filterItems","trimFilter","filterOnService","filterLocalItems","findItems","showNoData","catch","menuItemsFiltered","toPromise","findParent","getParent","findRootParent","getRootParent","getActiveMenuParent","toggleMenuCollapse","isRootMenuEqualGroupedMenu","childMenu","toggleGroupedMenuItem","wrapper","parentNode","PoMenuFilterComponent","PoMenuItemComponent","_isSelected","_isSubItem","maxHeight","_badgeValue","isSelectedSubItem","isSelected","isSubItem","_subItems","subitems","isOpened","calcMenuSubItemsMaxHeight","processMenuItem","level","accordionAnimation","menuActive","menuOpened","hasSubItemOpened","getMinimumHeight","activateMenu","menuSubItems","minimumHeight","hasSubItem","groupedMenu","isMenuOpened","PoMenuModule","PoMenuPanelBaseComponent","PoMenuPanelItemsService","PoMenuPanelComponent","location","rounterEvent","Location","PoMenuPanelItemComponent","itemsSubscription","subscribeMenuClickedFromParent","menuItemInternal","PoMenuPanelModule","PoNavbarActionComponent","PoNavbarActionPopupComponent","getLastIconAction","iconActions","PoNavbarActionsComponent","_iconActions","PoNavbarActionsModule","poNavbarLiteralsDefault","navbarLinks","PoNavbarBaseComponent","_shadow","validateMenuLogo","PoNavbarItemComponent","itemClick","PoNavbarItemsComponent","checkActiveItemByUrl","checkRouterChildrenFragments","PoNavbarComponent","builder","showItemsNavigation","offset","onMediaQueryChange","changed","changeNavbarMenuItems","matches","displayItemsNavigation","disableRight","initNavbarMenu","mediaQuery","removeListener","navigateItems","navigateLeft","navigateRight","allNavbarItemsWidth","navbarItems","allNavbarItems","previous","animation","buildTransitionAnimation","player","navbarItemsContainer","play","build","keyframes","isCollapsedMedia","calculateLeftNavigation","calculatedOffset","navbarItem","navbarItemOffset","offsetLeft","navbarItemWidth","navbarItemsWidth","calculateRightNavigation","itemBreakPoint","setOffsetToZero","matchMedia","addListener","navbarItemsElement","maxAllowedOffset","validateMaxOffset","logo","AnimationBuilder","PoNavbarItemsModule","PoNavbarLogoComponent","PoNavbarItemNavigationComponent","PoNavbarItemNavigationIconComponent","PoNavbarItemNavigationModule","PoNavbarModule","PoPageComponent","PoPageBaseComponent","PoPageContentComponent","contentOpacity","overflowY","recalculateHeaderSize","pageHeaderElement","setHeightContent","poPageHeader","newHeight","offsetTop","PoPageContentBaseComponent","PoPageDefaultBaseComponent","setDropdownActions","PoPageDefaultComponent","limitPrimaryActions","maxWidthMobile","setIsMobile","actionIsDisabled","callAction","hasPageHeader","dropdownActions","poPageDetailLiteralsDefault","back","PoPageDetailBaseComponent","hasAction","parentContext","PoPageDetailComponent","callActionFn","hasActionFn","hasAnyAction","hasEditFn","hasEditOrRemoveFn","poPageEditLiteralsDefault","save","saveNew","PoPageEditBaseComponent","PoPageEditComponent","isPrimaryAction","getType","isCancelPrimaryAction","isSaveNewPrimaryAction","hasSaveAction","PoPageHeaderBaseComponent","_breadcrumb","PoPageHeaderComponent","poPageListLiteralsDefault","otherActions","PoPageListBaseComponent","_disclaimerGroup","PoPageListComponent","isRecalculate","advancedSearch","initializeFixedLiterals","callActionFilter","onkeypress","newModel","ngModel","onChangeDisclaimerGroup","disclaimerGroup","PoPageModule","PoSlideCirclesComponent","poSlideIntervalDefault","PoSlideBaseComponent","_interval","setSlideHeight","startInterval","cancelInterval","_slides","setSlideItems","startSlide","PoSlideContentTemplateDirective","PoSlideItemComponent","isIEOrEdge","setLinkType","PoSlideComponent","isLoaded","currentSlideIndex","slideItems","slide","itemsElements","slideContentTemplate","slideItemWidth","slides","setSlideItemWidth","goToItem","hasElements","hasSlides","interval","nextControl","previousControl","setHeight","createArrayForTemplate","createArrayFromSlides","image","setDefaultHeight","isImageSlide","poSlideDefaultHeight","imageHeight","first","itemElement","clearInterval","setInterval","PoSlideControlComponent","PoSlideModule","Active","Disabled","Done","PoStepComponent","_status","PoStepperStatus","setDisplayOnActiveOrError","PoStepperCircleComponent","isLargeStep","poStepperOrientationDefault","PoStepperOrientation","PoStepperBaseComponent","_sequential","_step","_steps","onChangeStep","steps","sequential","PoStepperComponent","usePoSteps","poSteps","activeFirstStep","controlStepsStatus","getPoSteps","isDisabledStep","isErrorStep","changeStep","firstStep","getStepsAndIndex","currentActiveStep","stepIndex","nextStep","previousIndex","previousStep","isDifferentStep","allowNextStep","currentStepIndex","onStepActive","previousActiveStep","stepChild","setPreviousStepAsDone","hasStepActive","poStep","nextStepIndex","isBeforeStep","canActiveNextStep","getStepperStatusByCanActive","setStepAsActive","setNextStepAsDefault","setFinalSteppersAsDisabled","toArray","currentStep","PoStepperLabelComponent","poStepperStepSizeDefault","poStepLiteralsDefault","PoStepperStepComponent","_stepIcons","_stepSize","activated","_label","circleContent","stepIcons","stepSize","isVerticalOrientation","halfStepSize","getStatusClass","onEnter","PoStepperModule","PoTabButtonComponent","changeState","_active","emitActivated","_hide","setDisplayOnHide","hide","PoTabBaseComponent","setDisplayOnActive","PoTabComponent","PoTabDropdownComponent","tabs","getContainerClass","small","togglePopover","PoTabsBaseComponent","poTabsMaxNumberOfTabs","PoTabsComponent","maxNumberOfTabs","isMobileDevice","visibleTabs","_tab","closePopover","tabDropdown","isVisibleTab","visibleTabIndex","visibleTab","onTabActive","previousActiveTab","tabChild","deactivateTab","onTabChangeState","activeDistinctTab","selectedTab","_i","activeFirstTab","PoTabsModule","poToolbarActionsIconDefault","PoToolbarActionsComponent","_actionsIcon","PoToolbarBaseComponent","showNotification","_notificationNumber","profile","profileActions","PoToolbarComponent","titleService","setTitle","newTitle","Title","PoToolbarNotificationComponent","PoToolbarProfileComponent","avatar","PoToolbarModule","PoWidgetBaseComponent","_primary","onDisabled","setting","_background","_help","_primaryLabel","PoWidgetComponent","hasTitleHelpOrSetting","help","openHelp","runPrimaryAction","runSecondaryAction","bodyHeight","hasSettingOrHelp","noShadow","settingOutput","PoWidgetModule","PoComponentsModule","PoDirectivesModule","PoGuardsModule","PoHttpInterceptorBaseService","dialog","notificationTypes","intercept","cloneRequest","clone","headers","has","cloneRequestWithoutNoErrorHeaderParam","handle","processResponse","processErrorResponse","_messages","messages","errorResponse","code","detailedMessage","hasNoErrorParam","noErrorParam","typeNotification","notificationAction","generateNotificationAction","notificationLabel","notificationMessage","details","detailError","helpUrl","generateDialogDetailFunction","generateUrlHelpFunction","PoHttpInterceptorService","PoHttpInterceptorModule","HTTP_INTERCEPTORS","useClass","PoHttpRequesControltService","controlHttpRequest","getControlHttpRequest","send","PoHttpRequestInterceptorService","loadingOverlayComponent","pendingRequests","overlayRequests","requestClone","requestCloneWithoutHeaderParam","setCountPendingRequests","setCountOverlayRequests","catchError","throwError","getCountPendingRequests","buildLoading","destroyLoading","headersParams","isRequestClone","headerParam","isIncrement","hasCountPendingRequestHeaderParam","PoHttpRequestModule","PoInterceptorsModule","PoPipesModule","PoModule","I18N_CONFIG","InjectionToken","PoI18nBaseService","config","varI18n","useCache","servicesContext","setConfig","reload","contextDefault","setVarI18n","getLiterals","Observable","observer","getLiteralsFromContextService","getLiteralsFromContextConstant","translations","languageAlternative","languageSearch","mergeObject","searchInVarI18n","countObject","getLiteralsLocalStorageAndCache","translationTemp","searchInLocalStorage","updateVarI18n","getHttpService","updateLocalStorage","completeFaultLiterals","complete","literal","translation","content","contexts","contextContent","languageContent","objPermanent","Inject","decorators","PoI18nService","returnPoI18nService","PoI18nModule","ngModule","useValue","APP_INITIALIZER","useFactory","initializeLanguageDefault","deps","default"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @description\n *\n * Componente utilizado para agrupar visualmente uma lista de conteÃºdos, mostrando-os individualmente\n * ao clicar no tÃ­tulo de cada item.\n *\n * Para utilizÃ¡-lo, Ã© necessÃ¡rio envolver cada item no componente [`po-accordion-item`](/documentation/po-accordion-item),\n * como no exemplo abaixo:\n *\n * ```\n * <po-accordion>\n *   <po-accordion-item p-label=\"Portinari Accordion 1\">\n *      Accordion 1\n *   </po-accordion-item>\n *\n *   <po-accordion-item p-label=\"Portinari Accordion 2\">\n *      Accordion 2\n *   </po-accordion-item>\n * </po-accordion>\n * ```\n *\n * O componente jÃ¡ faz o controle de abertura e fechamento dos itens automaticamente.\n *\n * Caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript\n * acesse a [documentamentaÃ§Ã£o do PoAccordionItem](/documentation/po-accordion-item).\n */\nexport class PoAccordionBaseComponent {}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o para poder notificar o componente `po-accordion` quando um `po-accordion-item` for\n * expandido/colapsado.\n */\n@Injectable()\nexport class PoAccordionService {\n\n  private subjectChild = new Subject<any>();\n\n  // Recebe o accordionItem\n  receiveFromChildAccordionClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia accordionItem colapsado/expadido do accordion\n  sendToParentAccordionItemClicked(accordionItem: object) {\n    this.subjectChild.next(accordionItem);\n  }\n\n}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\nimport { PoAccordionService } from '../services/po-accordion.service';\n\n/**\n * @description\n *\n * Componente utilizado para renderizar os itens do `po-accordion`.\n *\n * O componente `po-accordion` jÃ¡ faz o controle de abertura e fechamento dos itens automaticamente,\n * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:\n *\n * ```\n * <po-accordion>\n *   <po-accordion-item p-label=\"Portinari Accordion 1\" #item1>\n *      Accordion 1\n *   </po-accordion-item>\n *\n *   <po-accordion-item p-label=\"Portinari Accordion 2\">\n *      Accordion 2\n *   </po-accordion-item>\n * </po-accordion>\n * ```\n *\n * e no typescript pode-se utilizar o `@ViewChild`:\n *\n * ```\n *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;\n *\n *  ngAfterContentInit() {\n *    // ou utilizar o mÃ©todo collapse()\n *    this.item1.expand();\n *  }\n * ```\n */\n@Component({\n  selector: 'po-accordion-item',\n  templateUrl: 'po-accordion-item.component.html'\n})\nexport class PoAccordionItemComponent {\n\n  expanded: boolean;\n\n  /** TÃ­tulo do item. */\n  @Input('p-label') label: string;\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor(private accordionService: PoAccordionService) {}\n\n  /**\n   * MÃ©todo para colapsar o `po-accordion-item`.\n   */\n  collapse() {\n    this.expanded = false;\n\n    this.accordionService.sendToParentAccordionItemClicked(this);\n  }\n\n  /**\n   * MÃ©todo para expandir o `po-accordion-item`.\n   */\n  expand() {\n    this.expanded = true;\n\n    this.accordionService.sendToParentAccordionItemClicked(this);\n  }\n}\n","import { Component, ContentChildren, QueryList, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoAccordionBaseComponent } from './po-accordion-base.component';\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\nimport { PoAccordionService } from './services/po-accordion.service';\n\n/**\n * @docsExtends PoAccordionBaseComponent\n *\n * @example\n *\n * <example name=\"po-accordion-basic\" title=\"Portinari Accordion Basic\" >\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.html\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.ts\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-accordion-labs\" title=\"Portinari Accordion Labs\" >\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.html\"> </file>\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-accordion-faq\" title=\"Portinari Accordion - FAQs\" >\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.html\"> </file>\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-accordion',\n  templateUrl: 'po-accordion.component.html',\n  providers: [ PoAccordionService ]\n})\nexport class PoAccordionComponent extends PoAccordionBaseComponent implements OnDestroy {\n\n  private accordionServiceSubscription: Subscription;\n  private expandedActiveAccordionItem: PoAccordionItemComponent;\n\n  @ContentChildren(PoAccordionItemComponent) poAccordionItems: QueryList<PoAccordionItemComponent>;\n\n  constructor(private accordionService: PoAccordionService) {\n    super();\n    this.receiveFromChildAccordionSubscription();\n  }\n\n  ngOnDestroy() {\n    this.accordionServiceSubscription.unsubscribe();\n  }\n\n  headerToggle(event: boolean, poAccordionItem: PoAccordionItemComponent) {\n    poAccordionItem.expanded = event;\n\n    this.toggle(poAccordionItem);\n  }\n\n  private receiveFromChildAccordionSubscription() {\n    this.accordionServiceSubscription = this.accordionService.receiveFromChildAccordionClicked()\n      .subscribe(poAccordionItem => this.toggle(poAccordionItem));\n  }\n\n  private toggle(poAccordionItem: PoAccordionItemComponent) {\n    const isCurrentAccordionCollapsed = !poAccordionItem.expanded;\n\n    if (isCurrentAccordionCollapsed) {\n      this.expandedActiveAccordionItem = null;\n      return;\n    }\n\n    if (this.expandedActiveAccordionItem) {\n      this.expandedActiveAccordionItem.collapse();\n    }\n\n    this.expandedActiveAccordionItem = poAccordionItem;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'po-accordion-item-body',\n  templateUrl: 'po-accordion-item-body.component.html',\n  animations: [\n    trigger('toggleBody', [\n      transition('* => void', [\n        style({ height: '*'}),\n        animate(200, style({ height: 0 }))\n      ]),\n      transition('void => *', [\n        style({ height: '0'}),\n        animate(200, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class PoAccordionItemBodyComponent {\n\n  @Input('p-expanded') expanded: boolean = false;\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-accordion-item-header',\n  templateUrl: 'po-accordion-item-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoAccordionItemHeaderComponent {\n\n  @Input('p-expanded') expanded: boolean = false;\n\n  @Input('p-label') label: string;\n\n  @Output('p-toggle') toggle = new EventEmitter<boolean>();\n\n  onClick() {\n    this.expanded = !this.expanded;\n\n    this.toggle.emit(this.expanded);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoAccordionComponent } from './po-accordion.component';\nimport { PoAccordionItemBodyComponent } from './po-accordion-item-body/po-accordion-item-body.component';\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\nimport { PoAccordionItemHeaderComponent } from './po-accordion-item-header/po-accordion-item-header.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-accordion`.\n *\n * > Para o correto funcionamento do componente `po-accordion`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoAccordionComponent,\n    PoAccordionItemBodyComponent,\n    PoAccordionItemComponent,\n    PoAccordionItemHeaderComponent\n  ],\n  exports: [\n    PoAccordionComponent,\n    PoAccordionItemComponent\n  ]\n})\nexport class PoAccordionModule { }\n","import { Input } from '@angular/core';\n\nconst PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst PO_AVATAR_SIZE_DEFAULT = 'md';\n\n/**\n * @description\n *\n * O componente `po-avatar` Ã© um container para imagens em miniatura, possui um formato redondo e cinco opÃ§Ãµes de\n * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuÃ¡rio, entre outras possibilidades.\n *\n * AlÃ©m de poder ser utilizado separadamente, Ã© possÃ­vel usar o `po-avatar` juntamente com outros componentes e criar\n * layouts ricos e bem interessantes para os usuÃ¡rios, como por exemplo, uma lista de itens ou produtos.\n */\nexport class PoAvatarBaseComponent {\n  private _size: string = 'md';\n\n  /**\n   * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)\n   * ou um servidor externo (`https://portinari.io/assets/images/logo-black-small.png`).\n   */\n  @Input('p-src') src: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Tamanho de exibiÃ§Ã£o do componente.\n   *\n   * Valores vÃ¡lidos:\n   *  - `xs` (24x24)\n   *  - `sm` (32x32)\n   *  - `md` (64x64)\n   *  - `lg` (96x96)\n   *  - `xl` (144x144)\n   *\n   * @default `md`\n   */\n  @Input('p-size') set size(value: string) {\n    this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;\n  }\n  get size(): string {\n    return this._size;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { PoAvatarBaseComponent } from './po-avatar-base.component';\n\n/**\n * @docsExtends PoAvatarBaseComponent\n *\n * @example\n *\n * <example name=\"po-avatar-basic\" title=\"Portinari Avatar Basic\" >\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.html\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.ts\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-avatar-labs\" title=\"Portinari Avatar Labs\" >\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.html\"> </file>\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-avatar-business-card\" title=\"Portinari Avatar - Business Card\" >\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.html\"> </file>\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-avatar',\n  templateUrl: './po-avatar.component.html'\n})\nexport class PoAvatarComponent extends PoAvatarBaseComponent implements OnInit {\n\n  ngOnInit(): void {\n    if (!this.src) {\n      this.src = undefined;\n    }\n  }\n\n  onError(): void {\n    this.src = undefined;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoAvatarComponent } from './po-avatar.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-avatar.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoAvatarComponent\n  ],\n  exports: [\n    PoAvatarComponent\n  ]\n})\nexport class PoAvatarModule { }\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\n\n/**\n * @description\n *\n * Este componente gera uma estrutura de navegaÃ§Ã£o que apresenta ao usuÃ¡rio a localizaÃ§Ã£o\n * da URL atual, exibindo as antecessoras conforme Ã© realizado a navegaÃ§Ã£o na aplicaÃ§Ã£o.\n *\n * Quando nÃ£o houver espaÃ§amento suficiente para exibi-lÃ¡s, o componente se encarrega tambÃ©m\n * de agrupar as URLs antecessoras, gerando assim um Ã­cone que permite a visualizaÃ§Ã£o em cascata.\n *\n * Caso um endereÃ§o seja especificado na propriedade `p-favorite-service`, o componente permite ao usuÃ¡rio\n * favoritar a URL.\n *\n * Havendo necessidade de incluir parÃ¢metros na requisiÃ§Ã£o do serviÃ§o,\n * o componente dispÃµe da propriedade `p-params-service` que recebe um objeto contendo as informaÃ§Ãµes.\n */\nexport class PoBreadcrumbBaseComponent {\n\n  itemsView: Array<PoBreadcrumbItem> = [];\n  private _items: Array<PoBreadcrumbItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite definir uma URL no componente `po-breadcrumb` para favoritar ou desfavoritar.\n   * > Para utilizar esta propriedade, o Ãºltimo `PoBreadcrumbItem` da lista de items da propriedade `p-items` deve ter um link informado.\n   *\n   * > A API deve estar preparada para retornar um objeto no formato `{ isFavorite: boolean }`.\n   *\n   * Ao iniciar, o `po-breadcrumb` faz um GET na URL definida na propriedade `p-favorite-service` e deve retornar a propriedade\n   * `{ isFavorite: boolean }` do Ãºltimo `PoBreadcrumbItem` definido na lista de itens da propriedade `p-items`.\n   *\n   * Ao clicar em favoritar ou desfavoritar o `po-breadcrumb` faz um POST com o link e a propriedade `{ isFavorite: boolean }`\n   * definidos no Ãºltimo item da propriedade `p-items`.\n   *\n   * > Caso algum parÃ¢metro seja definido na propriedade `p-params-service`, o mesmo serÃ¡ enviado para a API e retornarÃ¡\n   * apÃ³s fazer um GET ou POST.\n   *\n   * Exemplo de URL contendo o serviÃ§o de favoritar ou desfavoritar:\n   *\n   * ```\n   * https://portinari.io/sample/api/favorite\n   * ```\n   *\n   * Ao fazer o GET o `po-breadcrumb` concatena o link com a URL de serviÃ§o. Exemplo:\n   *\n   * ```\n   * GET http://<domain>/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * GET http://po.portinari.com.br/sample/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: '/example' }\n   * ```\n   *\n   * Caso possua parÃ¢metros definidos na propriedade `p-params-service`:\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: \"/example\", params: \"{ id: 14, user: 'dev.portinari' }\" }\n   * ```\n   *\n   * Exemplos de retorno:\n   *\n   * ```\n   * { isFavorite: true, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\", params: \"{ id: 14, user: 'dev.portinari' }\" }\n   * ```\n   */\n  @Input('p-favorite-service') favoriteService?: string;\n\n  /**\n   * @description\n   *\n   * Lista de itens do _breadcrumb_.\n   *\n   * **Exemplo:**\n   * ```\n   * { label: 'Po Portal', link: 'portal' }\n   * ```\n   */\n  @Input('p-items') set items(items: Array<PoBreadcrumbItem>) {\n    this._items = items;\n    this.itemsView = [].concat(items);\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que possibilita o envio de parÃ¢metros adicionais Ã  requisiÃ§Ã£o.\n   */\n  @Input('p-params-service') paramsService?: object;\n\n  protected clickoutListener: () => void;\n\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, IterableDiffers, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoBreadcrumbBaseComponent } from './po-breadcrumb-base.component';\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\n\n/**\n * @docsExtends PoBreadcrumbBaseComponent\n *\n * @example\n *\n * <example name=\"po-breadcrumb-basic\" title=\"Portinari Breadcrumb Basic\">\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.html\"> </file>\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-breadcrumb-labs\" title=\"Portinari Breadcrumb Labs\">\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.html\"> </file>\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-breadcrumb',\n  templateUrl: './po-breadcrumb.component.html'\n})\nexport class PoBreadcrumbComponent extends PoBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  showDropdown: boolean = false;\n  showDropdownToggle: boolean = false;\n  dropdownItems: Array<PoBreadcrumbItem>;\n\n  private _breadcrumbItemsLenght: number = 0;\n  private calculatedElement = false;\n  private differ;\n  private hiddenWithoutResize = false;\n  private initialized = false;\n  private timeoutResize;\n\n  @ViewChild('breadcrumb', { read: ElementRef, static: true }) breadcrumbElement: ElementRef;\n  @ViewChild('dropdownIcon', { read: ElementRef, static: false }) dropdownIcon: ElementRef;\n\n  constructor(differs: IterableDiffers, private element: ElementRef, public renderer: Renderer2) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    this.initializeResizeListener();\n  }\n\n  ngDoCheck() {\n    const breadcrumbWidth = this.breadcrumbElement.nativeElement.offsetWidth;\n\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (breadcrumbWidth && !this.calculatedElement && this.initialized) {\n      this.initBreadcrumbSize();\n    }\n\n    if (this.hiddenWithoutResize) {\n      this.debounceResize();\n      this.hiddenWithoutResize = false;\n    }\n\n    this.checkChangeOnItems();\n  }\n\n  ngOnDestroy() {\n    this.removeClickoutListener();\n    this.removeResizeListener();\n  }\n\n  toggleDropdown() {\n    this.showDropdown = !this.showDropdown;\n    this.initializeClickoutListener();\n  }\n\n  private wasClickedonDropdown = (event: MouseEvent) => {\n    const clickedOutIconDropdown = this.checkClickOutElement(event, this.dropdownIcon);\n\n    if (clickedOutIconDropdown) {\n      this.showDropdown = false;\n      this.removeClickoutListener();\n    }\n  }\n\n  private checkClickOutElement(event, element) {\n    return element && !element.nativeElement.contains(event.target);\n  }\n\n  private checkChangeOnItems() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.items);\n      if (changes) {\n        this.calcBreadcrumbItemsWidth();\n        this.calculatedElement = false;\n      }\n    }\n  }\n\n  private calcBreadcrumb() {\n    const breadcrumbFavorite = this.getBreadcrumbFavoriteWidth();\n    const breadcrumb = this.getBreadcrumbWidth(breadcrumbFavorite);\n\n    if (breadcrumb <= this._breadcrumbItemsLenght) {\n      this.enableBreadcrumbResponsive();\n    } else {\n      this.disableBreadcrumbResponsive();\n    }\n  }\n\n  private getBreadcrumbFavoriteWidth() {\n    return this.favoriteService ? this.element.nativeElement\n      .querySelector('.po-breadcrumb-favorite').offsetWidth + 20 : 0;\n  }\n\n  private getBreadcrumbWidth(breadcrumbFavorite) {\n    return this.element.nativeElement.querySelector('.po-breadcrumb').offsetWidth - breadcrumbFavorite;\n  }\n\n  private calcBreadcrumbItemsWidth() {\n    const breadcrumbItem = this.element.nativeElement\n      .querySelectorAll('.po-breadcrumb-item, .po-breadcrumb-item-unclickable');\n\n    this._breadcrumbItemsLenght = Array.from(breadcrumbItem)\n      .map(breadcrumb => breadcrumb['offsetWidth'])\n      .reduce((a, b) => a + b, 16);\n  }\n\n  private enableBreadcrumbResponsive() {\n    this.showDropdownToggle = true;\n    this.itemsView = this.items.slice(-2);\n    this.dropdownItems = this.items.slice(0, -2).reverse();\n  }\n\n  private disableBreadcrumbResponsive() {\n    this.showDropdownToggle = false;\n    this.itemsView = [].concat(this.items);\n    this.showDropdown = false;\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n\n      if (this.calculatedElement && !this.hiddenWithoutResize && this.breadcrumbElement.nativeElement.offsetWidth === 0) {\n        this.hiddenWithoutResize = true;\n      } else {\n        this.calcBreadcrumb();\n      }\n\n    }, 50);\n  }\n\n  private initBreadcrumbSize() {\n    this.calcBreadcrumbItemsWidth();\n    this.calcBreadcrumb();\n    this.calculatedElement = true;\n  }\n\n  private initializeClickoutListener() {\n    this.clickoutListener = this.renderer.listen('document', 'click', this.wasClickedonDropdown);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeClickoutListener() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o dropdown do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-dropdown',\n  templateUrl: './po-breadcrumb-dropdown.component.html'\n})\nexport class PoBreadcrumbDropdownComponent {\n\n  // Itens a serem apresentados na lista do dropdown.\n  @Input('p-items') items: Array<PoBreadcrumbItem>;\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o utilizado para favoritar/desfavoritar uma url no componente po-breadcrumb.\n * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os mÃ©todos, GET e POST este\n * objeto deve ser retornado.\n * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.\n * No mÃ©todo POST, existe a possibilidade de ser enviado parÃ¢metros junto com a requisiÃ§Ã£o. Neste caso, o objeto enviado\n * para a API terÃ¡ o formato: { isFavorite: booleano, url: string, params: {} }, onde params Ã© o objeto que pode ser enviado\n * junto com a requisiÃ§Ã£o.\n *\n */\n@Injectable()\nexport class PoBreadcrumbFavoriteService {\n\n  private _url: string;\n  private _bodyParams: object;\n\n  get url(): string { return this._url; }\n\n  get bodyParams(): object { return this._bodyParams; }\n\n  constructor(private http: HttpClient) { }\n\n  configService(url, params, item) {\n    this._url = url;\n    this._bodyParams = {\n      isFavorite: false,\n      url: item.link,\n      params: params\n    };\n  }\n\n  sendStatusFavorite(status): Observable<any> {\n    this.bodyParams['isFavorite'] = status;\n    return this.http.post(this.url, this.bodyParams);\n  }\n\n  getFavorite(): Observable<any> {\n    return this.http.get(this.url, { responseType: 'json', params: { url: this.bodyParams['url'] }});\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\nimport { PoBreadcrumbFavoriteService } from './po-breadcrumb-favorite.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o serviÃ§o de favoritar do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-favorite',\n  templateUrl: './po-breadcrumb-favorite.component.html',\n  providers: [PoBreadcrumbFavoriteService]\n})\nexport class PoBreadcrumbFavoriteComponent implements OnInit, OnDestroy {\n\n  favorite: boolean = false;\n  private getSubscription: Subscription;\n  private setSubscription: Subscription;\n\n  // URL do serviÃ§o.\n  @Input('p-favorite-service') favoriteService: string;\n\n  // Item do breadcrumb ativo.\n  @Input('p-item-active') itemActive: PoBreadcrumbItem;\n\n  // ParÃ¢metro que serÃ¡ enviado junto com o serviÃ§o de favoritar.\n  @Input('p-params-service') paramsService: object;\n\n  constructor(private service: PoBreadcrumbFavoriteService) { }\n\n  ngOnInit() {\n    this.service.configService(this.favoriteService, this.paramsService, this.itemActive);\n    this.getStatusFavorite();\n  }\n\n  ngOnDestroy(): void {\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n\n    if (this.setSubscription) {\n      this.setSubscription.unsubscribe();\n    }\n  }\n\n  toggleFavoriteAction() {\n    this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);\n  }\n\n  private getStatusFavorite() {\n    this.getSubscription = this.service.getFavorite().subscribe(result => this.favorite = result.isFavorite);\n  }\n\n  private setStatusFavorite(status) {\n    this.setSubscription = this.service.sendStatusFavorite(status).subscribe(result => this.favorite = result.isFavorite);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza cada item do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-item',\n  templateUrl: './po-breadcrumb-item.component.html'\n})\nexport class PoBreadcrumbItemComponent {\n\n  // AÃ§Ã£o que serÃ¡ executada ao clicar sobre o item.\n  @Input('p-action') action: Function;\n\n  // Label do item.\n  @Input('p-label') label: string;\n\n  // Link do item.\n  @Input('p-link') link: string;\n\n  // Especifica se item Ã© o link ativo.\n  @Input('p-item-active') itemActive: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBreadcrumbComponent } from './po-breadcrumb.component';\nimport { PoBreadcrumbDropdownComponent } from './po-breadcrumb-dropdown/po-breadcrumb-dropdown.component';\nimport { PoBreadcrumbFavoriteComponent } from './po-breadcrumb-favorite/po-breadcrumb-favorite.component';\nimport { PoBreadcrumbItemComponent } from './po-breadcrumb-item/po-breadcrumb-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-breadcrumb.\n *\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoBreadcrumbComponent,\n    PoBreadcrumbDropdownComponent,\n    PoBreadcrumbFavoriteComponent,\n    PoBreadcrumbItemComponent\n  ],\n  exports: [PoBreadcrumbComponent]\n})\nexport class PoBreadcrumbModule { }\n","// Idiomas suportados pelas pÃ¡ginas\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\n// Idioma padrÃ£o\nexport const poLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Converte e formata os bytes em formato mais legÃ­vel para o usuÃ¡rio.\n *\n * Por exemplo:\n * - 31457280 em 30 MB.\n * - 21474836480 em 20 GB.\n * - 12.5666666 em 12.57 Bytes (duas casas decimais).\n *\n * @param bytes {number} Valor em bytes\n * @param decimals {number} Quantidade de casas decimais que terÃ¡ apÃ³s a conversÃ£o.\n */\nexport function formatBytes(bytes: number, decimals = 2): string {\n\n  if (!bytes) {\n    return undefined;\n  }\n\n  const multiplier = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const result = Math.floor(Math.log(bytes) / Math.log(multiplier));\n  decimals = decimals < 0 ? 0 : decimals;\n\n  return `${parseFloat((bytes / Math.pow(multiplier, result)).toFixed(decimals))} ${sizes[result]}`;\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  const language = navigator.language || navigator['userLanguage'];\n  const shortLanguage = getShortLanguage(language);\n\n  return poLocales.includes(shortLanguage) ? language : poLocaleDefault;\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  return getShortLanguage(getBrowserLanguage());\n}\n\n/**\n * Retorna o idioma com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n * Por exemplo: \"pt\" ou \"es\".\n *\n * @param language {string} linguagem.\n *\n * @returns sigla do idioma padrÃ£o {string}.\n *\n * @default pt\n */\nexport function getShortLanguage(language: string): string {\n  return (language || poLocaleDefault).toLowerCase().substring(0, 2);\n}\n\nexport function isLanguage(value) {\n  const languageRegex = new RegExp('^[a-z]{2}(\\-[a-z]{2})?$', 'i');\n\n  return languageRegex.test(value);\n}\n\n/* istanbul ignore next */\nexport function reloadCurrentPage() {\n  window.location.assign(location.href);\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return (val === 'true' || val === 'on' || val === '');\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISODate(date: Date) {\n  if (date) {\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    return year + '-' + month + '-' + day;\n  } else {\n    return null;\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n\n  const getMonth = date.getMonth() + 1;\n  const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n  const month = getMonth < 10 ? '0' + getMonth : getMonth;\n  const year = formatYear(date.getFullYear());\n\n  const dateString = date.toString();\n\n  if (time !== null) {\n    return year + '-' + month + '-' + day + time;\n  } else {\n    return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\n        dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n  }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n\n}\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer ou Edge\nexport function isIEOrEdge() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident\\/|edge\\//i.test(userAgent);\n}\n\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer\nexport function isIE() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident/i.test(userAgent);\n}\n\n// Verifica qual o dispositivo que estÃ¡ sendo usado\nexport function isMobile() {\n  const userAgent = window.navigator.userAgent;\n\n  return userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i);\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\nexport function isKeyCodeEnter(event: any): boolean {\n  return event.keyCode === 13 || event.which === 13;\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100 ) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) { continue; }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null ) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function  getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  const left = isTypeof(leftSide, 'string') ? leftSide.toLowerCase() : leftSide;\n  const right = isTypeof(rightSide, 'string') ? rightSide.toLowerCase() : rightSide;\n\n  if (ascending) {\n    if (left < right) {\n      return -1;\n    } else if (left > right) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (left < right) {\n      return 1;\n    } else if (left > right) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return (date >= dateStart && date <= dateEnd);\n  } else if (dateStart && !dateEnd) {\n    return (date >= dateStart);\n  } else if (!dateStart && dateEnd) {\n    return (date <= dateEnd);\n  } else {\n    return true;\n  }\n}\n\nexport function uuid() {\n  function hex4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  return hex4() + hex4() + '-' + hex4() + '-' + hex4() + '-' +\n  hex4() + '-' + hex4() + hex4() + hex4();\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * Converte um arquivo em base64.\n *\n * @param file arquivo que serÃ¡ convertido.\n */\nexport function convertImageToBase64(file: File): Promise<any> {\n  return new Promise((resolve, reject) => {\n\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n","import { Injectable } from '@angular/core';\n\nimport { getBrowserLanguage, getShortLanguage, isLanguage, poLocaleDefault, poLocales } from '../../utils/util';\n\nconst poDefaultLanguage = 'PO_DEFAULT_LANGUAGE';\nconst poLocaleKey = 'PO_USER_LOCALE';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar as linguagens da aplicaÃ§Ã£o.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoLanguageService {\n\n  set languageDefault(language: string) {\n    if (language && isLanguage(language)) {\n      localStorage.setItem(poDefaultLanguage, language);\n    }\n  }\n\n  get languageDefault(): string {\n    return localStorage.getItem(poDefaultLanguage);\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma ativo.\n   *\n   * A busca do idioma serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo `setLanguage()` utilizado pelo i18n.\n   *\n   *   2 - o valor inserido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido\n   * na propriedade `language` da interface `PoI18nConfigDefault`.\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo PO (`pt`, `en`, `es` ou `ru`), serÃ¡ retornado valor `pt`.\n   *\n   * **Retorno:** `string` com a sigla do idioma ativo.\n   */\n  getLanguage(): string {\n    const language = localStorage.getItem(poLocaleKey) || this.languageDefault || getBrowserLanguage();\n\n    return language && language.toLowerCase();\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma *default* da aplicaÃ§Ã£o definido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s\n   * do parÃ¢metro `config`.\n   *\n   * **Retorno:** `string` com a sigla do idioma *default*.\n   */\n  getLanguageDefault(): string {\n    return this.languageDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar a abreviaÃ§Ã£o do idioma ativo na aplicaÃ§Ã£o.\n   *\n   * @default `pt`\n   *\n   * **Retorno:** `string` com a sigla abreviada do idioma ativo.\n   */\n  getShortLanguage(): string {\n    const language = this.getLanguage();\n    const shortLanguage = getShortLanguage(language);\n\n    return poLocales.includes(shortLanguage) ? shortLanguage : poLocaleDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo para salvar o idioma da aplicaÃ§Ã£o no *storage*, utilizado pelo serviÃ§o do i18n.\n   *\n   * > Ao definir um idioma por este mÃ©todo, todos os mÃ³dulos da aplicaÃ§Ã£o utilizarÃ£o o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguage(language: string): void {\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    localStorage.setItem(poLocaleKey, language.toLowerCase());\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo que define o idioma configurado a partir do parÃ¢metro `config` utilizado pelo mÃ³dulo do i18n.\n   *\n   * > Ao definir um idioma por este serviÃ§o, apenas o mÃ³dulo do i18n referente a esta configuraÃ§Ã£o utilizarÃ¡ o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguageDefault(language: string): void {\n    this.languageDefault = language;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from './../../../utils/util';\n\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\n\nimport { PoLoadingOverlayLiterals } from './interfaces/po-loading-overlay-literals.interface';\n\nexport const poLoadingOverlayLiteralsDefault = {\n  en: <PoLoadingOverlayLiterals> {\n    loading: 'Loading',\n  },\n  es: <PoLoadingOverlayLiterals> {\n    loading: 'Cargando',\n  },\n  pt: <PoLoadingOverlayLiterals> {\n    loading: 'Carregando',\n  },\n  ru: <PoLoadingOverlayLiterals> {\n    loading: 'Ð¿Ð¾Ð³ÑÑÐ·ÐºÐ°',\n  }\n};\n\n/**\n *\n * @description\n *\n * Este componente mostra ao usuÃ¡rio uma imagem de _loading_ e bloqueia a pÃ¡gina inteira ou o container escolhido,\n * enquanto aguarda a resposta de alguma requisiÃ§Ã£o.\n */\nexport class PoLoadingOverlayBaseComponent {\n\n  private _screenLock?: boolean = false;\n  private _text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o _overlay_ serÃ¡ aplicado a um container ou a pÃ¡gina inteira.\n   *\n   * @default `false`\n   */\n  @Input('p-screen-lock') set screenLock(screenLock: boolean) {\n    this._screenLock = convertToBoolean(screenLock);\n  }\n\n  get screenLock() {\n    return this._screenLock;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto a ser exibido no componente.\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido acordo com o idioma configurado no [**PoI18n**](/documentation/po-i18n) ou navegador.\n   *\n   * @default `Carregando`\n   */\n  @Input('p-text') set text(value: string) {\n    this._text = value || this.getTextDefault();\n  }\n\n  get text(): string {\n    return this._text;\n  }\n\n  constructor(private languageService: PoLanguageService) {\n    if (!this.text) {\n      this.text = this.getTextDefault();\n    }\n  }\n\n  private getTextDefault(): string {\n    const language = this.languageService.getShortLanguage();\n\n    return poLoadingOverlayLiteralsDefault[language].loading;\n  }\n\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\n\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';\n\n/**\n *\n * @docsExtends PoLoadingOverlayBaseComponent\n *\n * @example\n *\n * <example name=\"po-loading-overlay-basic\" title=\"Portinari Loading Overlay Basic\">\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-loading-overlay-labs\" title=\"Portinari Loading Overlay Labs\">\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-loading-overlay-connection-test\" title=\"Portinari Loading Overlay - Connection Test\">\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-loading-overlay',\n  templateUrl: 'po-loading-overlay.component.html'\n})\nexport class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {\n\n  constructor(public changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\n    super(languageService);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoLanguageService } from './po-language.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-language`.\n */\n@NgModule({\n  providers: [\n    PoLanguageService\n  ]\n})\nexport class PoLanguageModule { }\n","import { Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este componente tem o objetivo de mostrar visualmente aos usuÃ¡rios que a aplicaÃ§Ã£o estÃ¡ processando\n * ou aguardando a resposta de alguma requisiÃ§Ã£o.\n */\nexport class PoLoadingBaseComponent {\n\n  /**\n   * Texto a ser exibido no componente.\n   */\n  @Input('p-text') text?: string = 'Carregando';\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoLoadingBaseComponent } from './po-loading-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoLoadingBaseComponent\n */\n@Component({\n  selector: 'po-loading',\n  templateUrl: 'po-loading.component.html'\n})\nexport class PoLoadingComponent extends PoLoadingBaseComponent { }\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que exibe um Ã­cone de carregamento de conteÃºdo. A cor padrÃ£o para ele Ã© a primÃ¡ria conforme o tema utilizado.\n * Ã possÃ­vel alterÃ¡-la para um tom cinza conforme a necessidade.\n */\n@Component({\n  selector: 'po-loading-icon',\n  templateUrl: 'po-loading-icon.component.html'\n})\nexport class PoLoadingIconComponent {\n\n  private _neutralColor: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o para cor neutra (cinza) para o Ã­cone de carregamento.\n   *\n   * @default `false`\n   */\n  @Input('p-neutral-color') set neutralColor(value: boolean) {\n    this._neutralColor = convertToBoolean(value);\n  }\n\n  get neutralColor(): boolean {\n    return this._neutralColor;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\n\nimport { PoLoadingComponent } from './po-loading.component';\nimport { PoLoadingIconComponent } from './po-loading-icon/po-loading-icon.component';\nimport { PoLoadingOverlayComponent } from './po-loading-overlay/po-loading-overlay.component';\n\n/**\n *\n * @description\n *\n * MÃ³dulo do componente po-loading-overlay.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoLanguageModule\n  ],\n  declarations: [\n    PoLoadingComponent,\n    PoLoadingIconComponent,\n    PoLoadingOverlayComponent\n  ],\n  exports: [\n    PoLoadingComponent,\n    PoLoadingIconComponent,\n    PoLoadingOverlayComponent\n  ]\n})\nexport class PoLoadingModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst PO_BUTTON_TYPES = ['default', 'primary', 'danger', 'link'];\nconst PO_BUTTON_TYPE_DEFAULT = 'default';\n\n/**\n * @description\n *\n * O `po-button` permite que o usuÃ¡rio execute aÃ§Ãµes predefinidas pelo desenvolvedor.\n *\n * AtravÃ©s dos tipos, Ã© possÃ­vel identificar a importÃ¢ncia de cada aÃ§Ã£o, sendo ela primÃ¡ria (`primary`) ou atÃ© mesmo uma\n * aÃ§Ã£o irreversÃ­vel (`danger`), como a exclusÃ£o de um registro.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-button`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-button` configurado como `primary` por pÃ¡gina.\n * - Para aÃ§Ãµes irreversÃ­veis use sempre o tipo `danger`.\n */\nexport class PoButtonBaseComponent {\n\n  private _disabled?: boolean = false;\n  private _loading?: boolean = false;\n  private _small?: boolean = false;\n  private _type?: string = 'default';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Label do botÃ£o.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um Ã­cone de carregamento Ã  esquerda do _label_ do botÃ£o.\n   *\n   * > Quando esta propriedade estiver habilitada, desabilitarÃ¡ o botÃ£o.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * Ãcone exibido ao lado esquerdo do label do botÃ£o.\n   *\n   * Ã possÃ­vel usar qualquer uma dos Ã­cones da [Biblioteca de Ã­cones](/guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deixa o botÃ£o menor.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o estilo do `po-button`.\n   *\n   * Valore vÃ¡lidos:\n   *  - `default`: estilo padrÃ£o do `po-button`.\n   *  - `primary`: deixa o `po-button` com destaque, deve ser usado para aÃ§Ãµes primÃ¡rias.\n   *  - `danger`: deve ser usado para aÃ§Ãµes que o usuÃ¡rio precisa ter cuidado ao executa-lÃ¡.\n   *  - `link`: o `po-button` recebe o estilo de um link.\n   *\n   * @default `default`\n   */\n  @Input('p-type') set type(value: string) {\n    this._type = PO_BUTTON_TYPES.includes(value) ? value : PO_BUTTON_TYPE_DEFAULT;\n  }\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o `po-button` e nÃ£o permite que o usuÃ¡rio interaja com o mesmo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre o `po-button`. */\n  @Output('p-click') click = new EventEmitter<null>();\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { PoButtonBaseComponent } from './po-button-base.component';\n\n/**\n * @docsExtends PoButtonBaseComponent\n *\n * @example\n *\n * <example name=\"po-button-basic\" title=\"Portinari Button Basic\">\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.html\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.ts\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-labs\" title=\"Portinari Button Labs\">\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.html\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.ts\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.po.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-button',\n  templateUrl: './po-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoButtonComponent extends PoButtonBaseComponent {\n\n  @ViewChild('button', { static: true }) buttonElement: ElementRef;\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoButtonComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoButtonComponent, { static: true }) button: PoButtonComponent;\n   *\n   * focusButton() {\n   *   this.button.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.buttonElement.nativeElement.focus();\n    }\n  }\n\n  onClick() {\n    this.click.emit(null);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoLoadingModule } from './../po-loading/index';\n\nimport { PoButtonComponent } from './po-button.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-button.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoLoadingModule\n  ],\n  declarations: [\n    PoButtonComponent\n  ],\n  exports: [\n    PoButtonComponent\n  ]\n})\nexport class PoButtonModule { }\n","import { ElementRef, Injectable } from '@angular/core';\n\n /**\n  * @docsPrivate\n  * @description\n  *\n  * ServiÃ§o responsÃ¡vel por gerenciar as posiÃ§Ãµes de um elemento em relaÃ§Ã£o a um elemento alvo. Ele pode receber as\n  * seguintes posiÃ§Ãµes:\n  *\n  * - `right`: Posiciona o elemento no lado direito do componente alvo.\n  * - `right-bottom`: Posiciona o elemento no lado direito inferior do componente alvo.\n  * - `right-top`: Posiciona o elemento no lado direito superior do componente alvo.\n  * - `bottom`: Posiciona o elemento abaixo do componente alvo.\n  * - `bottom-left`: Posiciona o elemento abaixo e Ã  esquerda do componente alvo.\n  * - `bottom-right`: Posiciona o elemento abaixo e Ã  direita do componente alvo.\n  * - `left`: Posiciona o elemento no lado esquerdo do componente alvo.\n  * - `left-top`: Posiciona o elemento no lado esquerdo superior do componente alvo.\n  * - `left-bottom`: Posiciona o elemento no lado esquerdo inferior do componente alvo.\n  * - `top`: Posiciona o elemento acima do componente alvo.\n  * - `top-right`: Posiciona o elemento acima e Ã  direita do componente alvo.\n  * - `top-left`: Posiciona o elemento acima e Ã  esquerda do componente alvo.\n  *\n  * Caso o elemento nÃ£o caiba na tela na posiÃ§Ã£o indicada ele serÃ¡ rotacionado automaticamente para se adequar,\n  * inicialmente no lado definido como padrÃ£o e em seguida seguindo o sentido horÃ¡rio.\n  */\n\nconst poControlPositionSidesDefault: Array<string> = [\n  'bottom', 'bottom-left', 'bottom-right',\n  'left', 'left-top', 'left-bottom',\n  'top', 'top-right', 'top-left',\n  'right', 'right-bottom', 'right-top'\n];\n\n@Injectable()\nexport class PoControlPositionService {\n\n  private arrowDirection: string;\n  private customPositions: Array<string>;\n  private differenceDiagonalToWidthArrow: number = 3;\n  private element: HTMLElement;\n  private elementOffset: number;\n  private isCornerAligned: boolean;\n  private isSetElementWidth: boolean = false;\n  // offset da seta em relaÃ§Ã£o ao canto do componente\n  private offsetArrow: number = 12;\n  private targetElement: HTMLElement;\n\n  /**\n   * @description Ajusta a posiÃ§Ã£o do elemento, caso nÃ£o couber em tela irÃ¡ para prÃ³xima posiÃ§Ã£o.\n   *\n   * @param value posiÃ§Ã£o para exibiÃ§Ã£o do elemento\n   */\n  adjustPosition(value: string) {\n    const position = value || 'bottom';\n    this.elementPosition(position);\n    this.customPositions && this.customPositions.length ? this.adjustCustomPosition(position) : this.adjustDefaultPosition(position);\n  }\n\n  /**\n   * @description Retorna a direÃ§Ã£o da seta, conforme a posiÃ§Ã£o do elemento.\n   */\n  getArrowDirection() {\n    return this.arrowDirection;\n  }\n\n  /**\n   * @description MÃ©todo responsÃ¡vel por definir as propriedades utilizadas para exibir o elemento na posiÃ§Ã£o correta.\n   *\n   * @param element elemento que serÃ¡ exibido\n   * @param elementOffset offSet do elemento\n   * @param targetElement elemento de onde deve partir a exibiÃ§Ã£o\n   * @param customPositions posiÃ§Ãµes que sobrescreve as posiÃ§Ãµes padrÃµes\n   * @param isSetElementWidth indica se deve definir o tamanho do elemento a ser exibido, caso for verdadeiro serÃ¡ igual do targetElement\n   * @param isCornerAligned indica se o elemento filho serÃ¡ alinhado nos cantos do elemneto pai.\n   */\n  setElements(element: ElementRef | HTMLElement, elementOffset: number, targetElement: ElementRef | HTMLElement,\n              customPositions?: Array<string>, isSetElementWidth: boolean = false, isCornerAligned: boolean = false) {\n\n    this.element = (element instanceof ElementRef) ? element.nativeElement : element;\n    this.targetElement = (targetElement instanceof ElementRef) ? targetElement.nativeElement : targetElement;\n\n    this.elementOffset = elementOffset;\n\n    this.customPositions = customPositions;\n    this.isSetElementWidth = isSetElementWidth;\n    this.isCornerAligned = isCornerAligned;\n  }\n\n  private adjustCustomPosition(position: string) {\n    const positionLength = this.customPositions.length;\n\n    let sidesCount = 0;\n\n    while (sidesCount++ < positionLength) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, this.customPositions);\n        this.elementPosition(position);\n      }\n    }\n  }\n\n  private adjustDefaultPosition(position: string) {\n    const mainPositions = this.getMainPositions();\n    const mainPositionLength = mainPositions.length;\n\n    let mainSidesCount = 0;\n\n    while (mainSidesCount++ < mainPositionLength) {\n      const mainPosition = this.getMainPosition(position);\n      this.elementPosition(position);\n\n      if (this.overflowMain(mainPosition)) {\n        position = this.nextPosition(mainPosition, mainPositions);\n        continue;\n      } else if (this.overflowAllSides(position)) {\n        this.verifySubPositions(position);\n        return;\n      }\n\n      return;\n    }\n  }\n\n  private elementPosition(position: string) {\n    this.isCornerAligned ? this.setAlignedElementPosition(position) : this.setElementPosition(position);\n  }\n\n  private getMainPosition(position: string) {\n    return (position.indexOf('-') > -1) ? position.substring(0, position.indexOf('-')) : position;\n  }\n\n  private getMainPositions() {\n    const defaultMainPositions = ['top', 'right', 'bottom', 'left'];\n\n    return this.customPositions && this.customPositions.length ?\n      this.getMainPositionsByCustomPositions(this.customPositions) : defaultMainPositions;\n  }\n\n  private getMainPositionsByCustomPositions(customPositions: Array<string>) {\n    const mainPositions = [];\n    const customPositionsLength = customPositions.length;\n\n    for (let i = 0; i < customPositionsLength; i++) {\n      const position = customPositions[i];\n\n      const mainPosition = this.getMainPosition(position);\n\n      if (!mainPositions.includes(mainPosition)) {\n        mainPositions.push(mainPosition);\n      }\n    }\n\n    return mainPositions;\n  }\n\n  private getOverflows() {\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    return {\n      right: (sizesAndPositions.element.right > sizesAndPositions.window.innerWidth),\n      top: (sizesAndPositions.element.top <= 0),\n      left: (sizesAndPositions.element.left <= 0),\n      bottom: (sizesAndPositions.element.bottom > sizesAndPositions.window.innerHeight)\n    };\n  }\n\n  private getSizesAndPositions() {\n    return {\n      window: {\n        scrollY: window.scrollY,\n        scrollX: window.scrollX,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight\n      },\n      element: this.element.getBoundingClientRect(),\n      target: this.targetElement ? this.targetElement.getBoundingClientRect() : { top: 0, bottom: 0, right: 0, left: 0 }\n    };\n  }\n\n  private nextPosition(position: string, positions: Array<string> = []): string {\n    const index = positions.indexOf(position);\n    const nextIndex = index + 1;\n\n    if (index > -1 && nextIndex < positions.length) {\n\n      return positions[nextIndex];\n    } else {\n      return positions[0];\n    }\n\n  }\n\n  private overflowAllSides(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top': return overflows.top || overflows.right || overflows.left;\n      case 'top-right': return overflows.top || overflows.right;\n      case 'top-left': return overflows.top || overflows.left;\n      case 'right': return overflows.right || overflows.top || overflows.bottom;\n      case 'right-top': return overflows.right || overflows.top;\n      case 'right-bottom': return overflows.right || overflows.bottom;\n      case 'bottom': return overflows.bottom || overflows.right || overflows.left;\n      case 'bottom-right': return overflows.bottom || overflows.right;\n      case 'bottom-left': return overflows.bottom || overflows.left;\n      case 'left': return overflows.left || overflows.top || overflows.bottom;\n      case 'left-top': return overflows.left || overflows.top;\n      case 'left-bottom': return overflows.left || overflows.bottom;\n    }\n  }\n\n  private overflowMain(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top': return overflows.top;\n      case 'right': return overflows.right;\n      case 'bottom': return overflows.bottom;\n      case 'left': return overflows.left;\n    }\n  }\n\n  private setAlignedArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top-left': return 'bottom-left';\n      case 'top-right': return 'bottom-right';\n      case 'bottom-right': return 'top-right';\n      case 'bottom-left': return 'top-left';\n    }\n  }\n\n  private setAlignedBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setAlignedElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions: any = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'bottom-left':\n        this.setAlignedBottomPositions(0, sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setAlignedBottomPositions(sizesAndPositions.element.width - sizesAndPositions.target.width, sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setAlignedTopPositions(0, sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setAlignedTopPositions(sizesAndPositions.element.width - sizesAndPositions.target.width, sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setAlignedArrowDirection(position);\n\n  }\n\n  private setAlignedTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top': return 'bottom';\n      case 'top-left': return 'bottom-right';\n      case 'top-right': return 'bottom-left';\n      case 'right': return 'left';\n      case 'right-top': return 'left-bottom';\n      case 'right-bottom': return 'left-top';\n      case 'bottom': return 'top';\n      case 'bottom-right': return 'top-left';\n      case 'bottom-left': return 'top-right';\n      case 'left': return 'right';\n      case 'left-bottom': return 'right-top';\n      case 'left-top': return 'right-bottom';\n    }\n  }\n\n  private setBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + (sizesAndPositions.target.width / 2) - displacement + 'px';\n  }\n\n  private setElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'top':\n        this.setTopPositions((sizesAndPositions.element.width / 2), sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setTopPositions((sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setTopPositions((this.offsetArrow + this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'right':\n        this.setRightPositions((sizesAndPositions.element.height / 2), sizesAndPositions);\n        break;\n      case 'right-top':\n        this.setRightPositions((sizesAndPositions.element.height - this.offsetArrow - this.differenceDiagonalToWidthArrow),\n          sizesAndPositions);\n        break;\n      case 'right-bottom':\n        this.setRightPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'bottom':\n        this.setBottomPositions((sizesAndPositions.element.width / 2), sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setBottomPositions((this.offsetArrow + this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'bottom-left':\n        this.setBottomPositions((sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow),\n          sizesAndPositions);\n        break;\n      case 'left':\n        this.setLeftPositions((sizesAndPositions.element.height / 2), sizesAndPositions);\n        break;\n      case 'left-bottom':\n        this.setLeftPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'left-top':\n        this.setLeftPositions((sizesAndPositions.element.height - this.offsetArrow), sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setArrowDirection(position);\n  }\n\n  private setElementWidth() {\n    if (this.isSetElementWidth && this.targetElement) {\n      this.element.style.width = `${this.targetElement.clientWidth}px`;\n    }\n  }\n\n  private setLeftPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + (sizesAndPositions.target.height / 2) + 'px';\n    this.element.style.left = sizesAndPositions.target.left - sizesAndPositions.element.width - this.elementOffset + 'px';\n  }\n\n  private setRightPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + (sizesAndPositions.target.height / 2) + 'px';\n    this.element.style.left = sizesAndPositions.target.right + this.elementOffset + 'px';\n  }\n\n  private setTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + (sizesAndPositions.target.width / 2) - displacement + 'px';\n  }\n\n  private verifySubPositions(position: string) {\n    if (position.indexOf('-') > -1) {\n      position = position.substring(0, position.indexOf('-'));\n      this.elementPosition(position);\n    }\n\n    let align = 0;\n    while (align++ < 3) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, poControlPositionSidesDefault);\n        this.elementPosition(position);\n      } else {\n        return null;\n      }\n    }\n  }\n\n}\n","// Array de posiÃ§Ãµes.\nexport const PO_CONTROL_POSITIONS = [\n  'right',\n  'right-top',\n  'right-bottom',\n  'top',\n  'top-left',\n  'top-right',\n  'left',\n  'left-top',\n  'left-bottom',\n  'bottom',\n  'bottom-left',\n  'bottom-right'\n];\n","import { Input } from '@angular/core';\n\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nconst CONTENT_MAX_LENGTH = 140;\nconst PO_TOOLTIP_POSITION_DEFAULT = 'bottom';\n\n/**\n * @description\n *\n * A diretiva po-tooltip deve ser utilizada para oferecer informaÃ§Ãµes adicionais quando os usuÃ¡rios\n * passam o mouse sobre o elemento alvo ao qual ela estÃ¡ atribuÃ­da.\n *\n * O conteÃºdo Ã© formado por um pequeno texto que deve contribuir para uma tomada de decisÃ£o ou\n * orientaÃ§Ã£o do usuÃ¡rio. A ativaÃ§Ã£o dele pode estar em qualquer componente ou tag HTML.\n *\n * Para textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como\n * conteÃºdo deve-se utilizar o [**po-popover**](https://portinari.io/documentation/po-popover?view=doc).\n */\n\nexport class PoTooltipBaseDirective {\n\n  private _tooltip: string = '';\n  protected _tooltipPosition?: string = 'bottom';\n\n  /**\n   * @description\n   *\n   * Habilita e atribui um texto ao po-tooltip, com limitaÃ§Ã£o de 140 caracteres.\n   */\n  @Input('p-tooltip') set tooltip(tooltip: string) {\n    if (tooltip && tooltip.length > CONTENT_MAX_LENGTH) {\n       this._tooltip = tooltip.substring(0, CONTENT_MAX_LENGTH);\n    } else {\n      this._tooltip = tooltip;\n    }\n  }\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o po-tooltip abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"bottom\" (abaixo), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-tooltip no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-tooltip no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-tooltip no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-tooltip abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-tooltip abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-tooltip abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-tooltip no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-tooltip no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-tooltip no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-tooltip acima do componente alvo.\n   * - `top-right`: Posiciona o po-tooltip acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-tooltip acima e Ã  esquerda do componente alvo.\n   *\n   * @default bottom\n   */\n  @Input('p-tooltip-position') set tooltipPosition(position: string) {\n    this._tooltipPosition = PO_CONTROL_POSITIONS.includes(position) ? position : PO_TOOLTIP_POSITION_DEFAULT;\n  }\n  get tooltipPosition(): string {\n    return this._tooltipPosition;\n  }\n\n}\n","import { Directive, ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';\n\nimport { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';\nimport { PoTooltipBaseDirective } from './po-tooltip-base.directive';\n\n/**\n * @docsExtends PoTooltipBaseDirective\n *\n * @example\n *\n * <example name=\"po-tooltip-basic\" title=\"Portinari Tooltip Basic\" >\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tooltip-labs\" title=\"Portinari Tooltip Labs\" >\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tooltip-new-user\" title=\"Portinari Tooltip - New User\" >\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts\"> </file>\n * </example>\n *\n */\n@Directive({\n  selector: '[p-tooltip]',\n  providers: [ PoControlPositionService ]\n})\nexport class PoTooltipDirective extends PoTooltipBaseDirective implements OnInit {\n\n  private arrowDirection: string;\n  private divArrow;\n  private divContent;\n  private isHidden: boolean;\n  private lastTooltipText: string;\n  private textContent;\n  private tooltipContent;\n  private tooltipOffset: number = 8;\n\n  private eventListenerFunction: () => void;\n\n  constructor(private elementRef: ElementRef,\n              private renderer: Renderer2,\n              private poControlPosition: PoControlPositionService) {\n\n    super();\n  }\n\n  ngOnInit() {\n    this.initScrollEventListenerFunction();\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    setTimeout(() => {\n      if (this.tooltip) {\n        this.tooltipContent ? this.showTooltip() : this.createTooltip();\n\n        this.removeArrow(this.arrowDirection);\n\n        this.poControlPosition.adjustPosition(this.tooltipPosition);\n        this.arrowDirection = this.poControlPosition.getArrowDirection();\n\n        this.addArrow(this.arrowDirection);\n\n        this.lastTooltipText = this.tooltip;\n      }\n    });\n\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.hideTooltip();\n  }\n\n  private addArrow(arrowDirection) {\n    this.renderer.addClass(this.divArrow, `po-arrow-${arrowDirection}`);\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  // Monta a estrutura do tooltip\n  private createTooltip() {\n    this.tooltipContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.tooltipContent, 'po-tooltip');\n\n    this.divArrow = this.renderer.createElement('div');\n    this.renderer.addClass(this.divArrow, 'po-tooltip-arrow');\n\n    this.divContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.divContent, 'po-tooltip-content');\n\n    this.textContent = this.renderer.createText(this.tooltip);\n\n    this.renderer.appendChild(this.divContent, this.textContent);\n    this.renderer.appendChild(this.tooltipContent, this.divArrow);\n    this.renderer.appendChild(this.tooltipContent, this.divContent);\n    this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipContent);\n\n    this.poControlPosition.setElements(this.tooltipContent, this.tooltipOffset, this.elementRef);\n\n    this.addScrollEventListener();\n  }\n\n  private initScrollEventListenerFunction() {\n    this.eventListenerFunction = () => {\n      if (!this.isHidden) {\n        setTimeout(() => {\n          this.poControlPosition.adjustPosition(this.tooltipPosition);\n        });\n      }\n    };\n  }\n\n  private hideTooltip() {\n    if (this.tooltipContent) {\n      this.renderer.addClass(this.tooltipContent, 'po-invisible');\n      this.isHidden = true;\n\n      this.removeScrollEventListener();\n    }\n  }\n\n  private removeArrow(arrowDirection) {\n    if (this.elementRef.nativeElement.querySelector(`.po-arrow-${arrowDirection}`)) {\n      this.renderer.removeClass(this.divArrow, `po-arrow-${arrowDirection}`);\n    }\n  }\n\n  private removeScrollEventListener() {\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipContent, 'po-invisible');\n    this.updateTextContent();\n    this.isHidden = false;\n\n    this.addScrollEventListener();\n  }\n\n  private updateTextContent() {\n    if (this.lastTooltipText !== this.tooltip) {\n      this.renderer.removeChild(this.divContent, this.textContent);\n      this.textContent = this.renderer.createText(this.tooltip);\n      this.renderer.appendChild(this.divContent, this.textContent);\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTooltipDirective } from './po-tooltip.directive';\n\n/**\n * @description\n *\n * MÃ³dulo da diretiva Po-Tooltip.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoTooltipDirective],\n  exports: [PoTooltipDirective]\n})\n\nexport class PoTooltipModule { }\n","/**\n * @usedBy PoButtonGroupComponent\n *\n * @description\n *\n * Define o tipo de seleÃ§Ã£o dos botÃµes do `po-button-group`.\n */\nexport enum PoButtonGroupToggle {\n\n  /** SeleÃ§Ã£o mÃºltipla. */\n  Multiple = 'multiple',\n\n  /** SeleÃ§Ã£o desabilitada. */\n  None = 'none',\n\n  /** SeleÃ§Ã£o Ãºnica. */\n  Single = 'single'\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoButtonGroupItem } from './po-button-group-item.interface';\nimport { PoButtonGroupToggle } from './po-button-group-toggle.enum';\n\nconst PO_TOGGLE_TYPE_DEFAULT = 'none';\n\n/**\n * @description\n *\n * O componente `po-button-group` Ã© formado por um conjunto de botÃµes distribuÃ­dos horizontalmente.\n * Cada botÃ£o do grupo Ã© tratado de forma individual, recebendo assim um rÃ³tulo, uma aÃ§Ã£o bem como se deverÃ¡ estar habilitado ou nÃ£o.\n *\n * Este componente alÃ©m de servir como um agrupador de botÃµes para aÃ§Ã£o, tambÃ©m permite que sejam utilizados\n * para seleÃ§Ãµes multiplas e Ãºnicas.\n *\n * O grupo de botÃµes deve ser utilizado para organizar as aÃ§Ãµes de maneira uniforme e transmitir a ideia de que os botÃµes fazem\n * parte de um mesmo contexto.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite usar o `po-button-group` com apenas 1 aÃ§Ã£o, para isso utilize o `po-button`.\n * - Procure utilizar no mÃ¡ximo 3 aÃ§Ãµes para cada `po-button-group`.\n *\n * > As recomendaÃ§Ãµes do `po-button` tambÃ©m valem para o `po-button-group`.\n */\nexport class PoButtonGroupBaseComponent {\n\n  private _small?: boolean = false;\n  private _toggle?: string = PO_TOGGLE_TYPE_DEFAULT;\n\n  /** Lista de botÃµes. */\n  @Input('p-buttons') buttons: Array<PoButtonGroupItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Torna o grupo de botÃµes com tamanho minificado.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de seleÃ§Ã£o de botÃµes.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoMultiselectFilterMode`.\n   *\n   * @default `none`\n   */\n  @Input('p-toggle') set toggle(value: string) {\n    this._toggle = (<any>Object).values(PoButtonGroupToggle).includes(value) ? value : PO_TOGGLE_TYPE_DEFAULT;\n\n    this.checkSelecteds(this._toggle);\n  }\n\n  get toggle(): string {\n    return this._toggle;\n  }\n\n  onButtonClick(buttonClicked: PoButtonGroupItem, buttonIndex: number) {\n    if (this.toggle === PoButtonGroupToggle.Single) {\n      this.buttons.forEach((button, index) =>\n        button.selected = index === buttonIndex ? !buttonClicked.selected : false);\n    } else if (this.toggle === PoButtonGroupToggle.Multiple) {\n      buttonClicked.selected = !buttonClicked.selected;\n    }\n  }\n\n  private checkSelecteds(toggleMode: string) {\n    if (toggleMode === PoButtonGroupToggle.None) {\n      this.deselectAllButtons();\n    } else if (toggleMode === PoButtonGroupToggle.Single) {\n      const hasMoreOneSelected = this.buttons.filter(button => button.selected).length > 1;\n      if (hasMoreOneSelected) {\n        this.deselectAllButtons();\n      }\n    }\n  }\n\n  private deselectAllButtons() {\n    this.buttons.forEach(button => button.selected = false);\n  }\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoButtonGroupBaseComponent } from './po-button-group-base.component';\n\n/**\n * @docsExtends PoButtonGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-button-group-basic\" title=\"Portinari Button Group Basic\">\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-group-labs\" title=\"Portinari Button Group Labs\">\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.ts\"> </file>\n * </example>\n *\n *\n * <example name=\"po-button-group-attendance\" title=\"Portinari Button Group - Attendance\">\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.html\"> </file>\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-group-post\" title=\"Portinari Button Group - Post\">\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.html\"> </file>\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-button-group',\n  templateUrl: './po-button-group.component.html'\n})\nexport class PoButtonGroupComponent extends PoButtonGroupBaseComponent {\n  parentRef: any;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n\n    // Get instance of parent to execute the actions\n    this.parentRef = viewRef['_view']['component'];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoButtonModule } from './../po-button/index';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\nimport { PoButtonGroupComponent } from './po-button-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-button-group.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoButtonModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoButtonGroupComponent\n  ],\n  exports: [\n    PoButtonGroupComponent\n  ]\n})\nexport class PoButtonGroupModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoDateService } from '../../services/po-date';\n\nconst poCalendarLocales = ['pt', 'en', 'es'];\nconst poCalendarLocaleDefault = 'pt';\n\n/**\n * @description\n *\n * O `po-calendar` Ã© um componente para seleÃ§Ã£o de datas. Ele permite uma fÃ¡cil navegaÃ§Ã£o clicando nas setas\n * de direcionamento e nos *labels* do ano ou mÃªs.\n *\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * this.date = '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * this.date = '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * this.date = new Date(2017, 10, 28);\n * ```\n *\n * > Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o\n * formato **Data (E8601DAw.): yyyy-mm-dd**.\n *\n * Importante:\n *\n * - Caso seja definida uma data fora do range da data mÃ­nima e data mÃ¡xima via *ngModel* o componente mostrarÃ¡\n * a data desabilitada porÃ©m o *model* nÃ£o serÃ¡ alterado.\n * - Caso seja definida uma data invÃ¡lida a mesma nÃ£o serÃ¡ atribuÃ­da ao calendÃ¡rio porÃ©m o *model* manterÃ¡ a data invÃ¡lida.\n */\nexport class PoCalendarBaseComponent {\n\n  private _locale: string;\n  private _maxDate: Date;\n  private _minDate: Date;\n\n  currentYear: number;\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonthNumber: number;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeekDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  yearVisible: boolean = false;\n\n  protected currentMonthNumber: number;\n  protected date: Date;\n  protected dateIso: string;\n  protected lastDisplay: string;\n  protected onTouched: any = null;\n  protected propagateChange: any = null;\n  protected today: Date = new Date();\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   *\n   * @default `pt`\n   */\n  @Input('p-locale') set locale(locale: string) {\n    this._locale = poCalendarLocales.includes(locale) ? locale : poCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ¡xima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('p-max-date') set maxDate(maxDate: any) {\n    this._maxDate = this.poDate.getDateForDateRange(maxDate, false);\n  }\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ­nima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('p-min-date') set minDate(minDate: any) {\n    this._minDate = this.poDate.getDateForDateRange(minDate, true);\n  }\n  get minDate() {\n    return this._minDate;\n  }\n\n  /** Evento disparado ao selecionar um dia do calendÃ¡rio. */\n  @Output('p-change') change = new EventEmitter<string>();\n\n  constructor(\n    public poDate: PoDateService,\n    public poCalendarLangService: PoCalendarLangService\n  ) { }\n\n  initializeLanguage() {\n    this.poCalendarLangService.setLanguage(this.locale);\n    this.displayWeekDays = this.poCalendarLangService.getWeekDaysArray();\n    this.displayMonths = this.poCalendarLangService.getMonthsArray();\n    this.displayMonth = this.displayMonths[this.displayMonthNumber];\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoCalendarLangService {\n\n  private language = 'pt';\n\n  private months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  private shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  private monthLabel = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  private yearLabel = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  getMonth(month: number) {\n    return this.months[month][this.language];\n  }\n\n  getMonthLabel() {\n    return this.monthLabel[this.language];\n  }\n\n  getMonthsArray() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.language]);\n    }\n    return arrMonths;\n  }\n\n  getWeekDays(day: number) {\n    return this.shortWeekDays[day][this.language];\n  }\n\n  getWeekDaysArray() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.language]);\n    }\n    return arrWeekDays;\n  }\n\n  getYearLabel() {\n    return this.yearLabel[this.language];\n  }\n\n  setLanguage(language: string) {\n    if (language && language.length >= 2) {\n      language = language.toLowerCase().slice(0, 2);\n      this.language = (language === 'pt' || language === 'en' || language === 'es') ? language : 'pt';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nconst poCalendarServiceFirstWeekDayDefault: number = 0;\n\n@Injectable()\nexport class PoCalendarService {\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if ((typeof month !== 'number') || (month < 0) || (month > 11)) {\n      throw Error(('month must be a number (Jan is 0)'));\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n\n    if (year >= 0 && year < 100) {\n      date.setFullYear(year);\n    }\n\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while ((date.getMonth() <= month) && (date.getFullYear() === year));\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function(date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== poCalendarServiceFirstWeekDayDefault) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { sortValues } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar o tratamento dos formatos de data e hora.\n */\n@Injectable()\nexport class PoDateService {\n\n  private readonly dateRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])$');\n\n  private readonly isoRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])' +\n  'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n  '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n  '(?:|:?[0-5]\\\\d)$');\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter datas do formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` para o formato `Date`.\n   *\n   * @param dateString Data no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param minDate Definir `true` caso seja `minDate`.\n   * @param maxDate Definir `true` caso seja `maxDate`.\n   */\n  convertIsoToDate(dateString: string , minDate: boolean, maxDate: boolean): Date {\n    if (dateString) {\n      const { year, month, day } = this.getDateFromIso(dateString);\n\n      if (minDate) {\n        const date = new Date(year, month - 1, day, 0, 0, 0);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else if (maxDate) {\n        const date = new Date(year, month - 1, day, 23, 59, 59);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else {\n        const miliseconds = Date.parse(dateString);\n        const timezone = new Date().getTimezoneOffset() * 60000;\n        return new Date(miliseconds + timezone);\n      }\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter data do formato `Date` para o formato `yyyy-mm-dd`.\n   *\n   * @param date Data no formato `Date`.\n   */\n  convertDateToISO(date: Date) {\n    if (date) {\n      const fullYear = date.getFullYear();\n      const getMonth = date.getMonth() + 1;\n      const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n      const month = getMonth < 10 ? '0' + getMonth : getMonth;\n      const year = this.formatYear(fullYear);\n      return year + '-' + month + '-' + day;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por adicionar zeros a esquerda do anos em formato string.\n   *\n   * @param year Ano a ser validado.\n   */\n  formatYear(year: number) {\n\n    if (year > 999) {\n      return year.toString();\n    }\n\n    if (year > 99 && year < 1000) {\n      return `0${year}`;\n    }\n\n    if (year > 9 && year < 100) {\n      return `00${year}`;\n    }\n\n    if (year >= 0 && year < 10) {\n      return `000${year}`;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia, mÃªs e ano separados em formato de objeto.\n   *\n   * @param isoDate Ano em formato string.\n   */\n  getDateFromIso(isoDate: string): { year: number, month: number, day: number } {\n    const day = parseInt(isoDate.substring(8, 10), 10);\n    const month = parseInt(isoDate.substring(5, 7), 10);\n    const year = parseInt(isoDate.substring(0, 4), 10);\n\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar a data com a hora definida para `00:00:00` caso `isMinDate` for igual a `true` ou `23:59:59`\n   * caso `isMindate` seja igual a `false` .\n   *\n   * @param date Data no formato `Date` ou `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param isMinDate Caso `true` aplica `00:00:00`, caso `false` aplica `23:59:59` a hora da data informada.\n   */\n  getDateForDateRange(date: any, isMinDate: boolean) {\n    const lastHour = isMinDate ? [0, 0, 0] : [23, 59, 59];\n    if (date instanceof Date) {\n      const { year, month, day } = this.splitDate(date);\n      const validDate = new Date(year, month, day, ...lastHour);\n      this.setYearFrom0To100(validDate, year);\n      return validDate;\n    } else if (this.isValidIso(date)) {\n      return this.convertIsoToDate(date, isMinDate, !isMinDate);\n    }\n  }\n\n  /**\n   * Retorna `true` caso o perÃ­odo seja vÃ¡lido, para isso a primeira data deve ser maior que a segunda data.\n   * @param dateA primeira data\n   * @param dateB segunda data\n   */\n  isDateRangeValid(dateA: string = '', dateB: string = ''): boolean {\n    const dateASplitted = dateA.split('-').map(item => parseInt(item, 10));\n    const dateBSplitted = dateB.split('-').map(item => parseInt(item, 10));\n\n    for (let index = 0; index <= dateASplitted.length; index++) {\n\n      if (dateASplitted[index] > dateBSplitted[index]) {\n        return true;\n      } else if (dateASplitted[index] < dateBSplitted[index]) {\n        return false;\n      }\n\n    }\n\n    return true;\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` ou `yyyy-mm-dd`.\n   *\n   * @param stringDate Data.\n   */\n  isValidIso(stringDate: string) {\n    return this.dateRegex.test(stringDate) || this.isoRegex.test(stringDate);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por corrigir a data caso a mesma esteja entre os anos 0 e 99.\n   *\n   * @param date Data.\n   * @param year .\n   */\n  setYearFrom0To100(date: Date, year: number) {\n    if (year >= 0 && year < 100 ) {\n      date.setFullYear(year);\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por ordenar duas datas.\n   *\n   * @param leftSide Primeira data a ser comparada.\n   * @param rightSide Segunda data a ser comparada.\n   * @param ascending Determina se serÃ¡ em ordem crescente ou decrescente.\n   */\n  sortDate(leftSide: string | Date, rightSide: string | Date, ascending: boolean): number {\n    return sortValues(this.validateDate(leftSide), this.validateDate(rightSide), ascending);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia , mÃªs e ano de uma data informada.\n   *\n   * @param date Valor da data.\n   */\n  splitDate(date: Date) {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ entre a `minDate` e `maxDate`.\n   *\n   * @param date Data a ser validada.\n   * @param minDate Data inicial.\n   * @param maxDate Data final.\n   */\n  validateDateRange(date: Date, minDate: Date, maxDate: Date) {\n    if (minDate && maxDate) {\n      return (date >= minDate && date <= maxDate);\n    } else if (minDate && !maxDate) {\n      return (date >= minDate);\n    } else if (!minDate && maxDate) {\n      return (date <= maxDate);\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se a data foi informada nos padrÃµes 'yyyy-mm-dd', 'yyyy-mm-ddThh:mm:ss+|-hh:mm' ou\n   * 'Date' padrÃ£o do javascript.\n   *\n   * @param date Data que serÃ¡ validada.\n   */\n  private validateDate(date: string | Date) {\n    const validDate = date instanceof Date ? this.convertDateToISO(date) : date;\n\n    return this.isValidIso(validDate) ? validDate : undefined;\n  }\n\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoCalendarBaseComponent } from './po-calendar-base.component';\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoCalendarService } from './services/po-calendar.service';\nimport { PoDateService } from '../../services/po-date/po-date.service';\n\n/**\n * @docsExtends PoCalendarBaseComponent\n *\n * @example\n *\n * <example name=\"po-calendar-basic\" title=\"Portinari Calendar Basic\" >\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.html\"> </file>\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-labs\" title=\"Portinari Calendar Labs\" >\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.html\"> </file>\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-ticket-sales\" title=\"Portinari Calendar - Ticket Sales\" >\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html\"> </file>\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-calendar',\n  templateUrl: './po-calendar.component.html',\n  providers: [\n    PoCalendarService,\n    PoCalendarLangService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCalendarComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoCalendarComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit {\n\n  constructor(\n    private poCalendarService: PoCalendarService,\n    poCalendarLangService: PoCalendarLangService,\n    poDate: PoDateService) {\n    super(poDate, poCalendarLangService);\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    return this.getDayColor(date, 'background');\n  }\n\n  getDayForegroundColor(date: Date) {\n    return this.getDayColor(date, 'foreground');\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\n  }\n\n  getMonthLabel() {\n    return this.poCalendarLangService.getMonthLabel();\n  }\n\n  getYearLabel() {\n    return this.poCalendarLangService.getYearLabel();\n  }\n\n  onNextMonth() {\n    this.displayMonthNumber < 11 ? this.updateDisplay(this.displayYear, this.displayMonthNumber + 1) :\n      this.updateDisplay(this.displayYear + 1, 0);\n  }\n\n  onPreviousMonth() {\n    this.displayMonthNumber > 0 ? this.updateDisplay(this.displayYear, this.displayMonthNumber - 1) :\n      this.updateDisplay(this.displayYear - 1, 11);\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    this.date = date;\n    this.dateIso = this.poDate.convertDateToISO(date);\n    if (this.propagateChange) {\n      this.propagateChange(this.dateIso);\n    }\n    this.change.emit(this.dateIso);\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.writeDate(value);\n    } else {\n      this.date = undefined;\n      this.updateDate(this.today);\n    }\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  private getDecadeArray(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  private getColorForDate(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate) ? `po-calendar-box-${local}-selected` :\n      `po-calendar-box-${local}-selected-disabled`;\n  }\n\n  private getColorForDateRange(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate) ? `po-calendar-box-${local}` :\n      `po-calendar-box-${local}-disabled`;\n  }\n\n  private getColorForToday(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate) ? `po-calendar-box-${local}-today` :\n      `po-calendar-box-${local}-today-disabled`;\n  }\n\n  private getDayColor(date: Date, local: string) {\n    if (this.equalsDate(date, this.date)) {\n      return this.getColorForDate(date, local);\n    } else if (this.equalsDate(date, this.today)) {\n      return this.getColorForToday(date, local);\n    } else {\n      return this.getColorForDateRange(date, local);\n    }\n  }\n\n  private init() {\n    this.date && this.poDate.isValidIso(this.poDate.convertDateToISO(this.date)) ?\n      this.updateDate(this.date) : this.updateDate(this.today);\n    this.initializeLanguage();\n    this.selectDay();\n  }\n\n  private selectDateFromDate(date: Date) {\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private selectDateFromIso(stringDate: string) {\n    const { year, month, day } = this.poDate.getDateFromIso(stringDate);\n    const date = new Date(year, month - 1, day);\n    this.poDate.setYearFrom0To100(date, year);\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private updateDate(date: Date) {\n    if (date) {\n      this.currentMonthNumber = date.getMonth();\n      this.currentYear = date.getFullYear();\n      this.updateDisplay(this.currentYear, this.currentMonthNumber);\n    }\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.poCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getDecadeArray(year);\n  }\n\n  private writeDate(value: any) {\n    value instanceof Date ? this.selectDateFromDate(value) : this.writeDateIso(value);\n    this.updateDate(this.date);\n  }\n\n  private writeDateIso(value: any) {\n    this.poDate.isValidIso(value) ? this.selectDateFromIso(value) : this.date = undefined;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoCalendarComponent } from './po-calendar.component';\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoCalendarService } from './services/po-calendar.service';\n\n/**\n * @description\n * MÃ³dulo do componente `po-calendar`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoCalendarComponent],\n  exports: [PoCalendarComponent],\n  providers: [\n    PoCalendarLangService,\n    PoCalendarService\n  ]\n})\nexport class PoCalendarModule { }\n","/**\n * @usedBy PoChartComponent\n *\n * @description\n *\n * *Enum* `PoChartType` para especificaÃ§Ã£o dos tipos de grÃ¡ficos.\n */\nexport enum PoChartType {\n\n  /**\n   * Exibe os dados em formato de rosca, dividindo em partes proporcionais.\n   */\n  Donut = 'donut',\n\n  /**\n   * Exibe os dados em formato circular, dividindo proporcionalmente em fatias.\n   */\n  Pie = 'pie'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToInt, isTypeof } from '../../utils/util';\n\nimport { PoChartType } from './enums/po-chart-type.enum';\nimport { PoDonutChartSeries } from './po-chart-types/po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from './po-chart-types/po-chart-pie/po-chart-pie-series.interface';\n\nconst poChartDefaultHeight = 400;\nconst poChartMinHeight = 200;\nconst poChartTypeDefault = PoChartType.Pie;\n\n/**\n * @description\n *\n * O `po-chart` Ã© um componente para renderizaÃ§Ã£o de dados atravÃ©s de grÃ¡ficos, com isso facilitando a compreensÃ£o e tornando a\n * visualizaÃ§Ã£o destes dados mais agradÃ¡vel.\n *\n * Este componente tambÃ©m possibilita a definiÃ§Ã£o das seguintes propriedades:\n *  - altura\n *  - series\n *  - tipo\n *  - tÃ­tulo\n *\n * AlÃ©m das definiÃ§Ãµes de propriedades, tambÃ©m Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada ao clicar em determinado elemento do grÃ¡fico\n * e outra que serÃ¡ executada ao passar o *mouse* sobre o elemento.\n *\n * #### Boas prÃ¡ticas\n *\n * - Para que o grÃ¡fico nÃ£o fique ilegÃ­vel e incompreensÃ­vel, evite uma quantia excessiva de sÃ©ries.\n *\n */\nexport abstract class PoChartBaseComponent {\n\n  private _height?: number = poChartDefaultHeight;\n  private _type: PoChartType = poChartTypeDefault;\n\n  public readonly poChartType = PoChartType;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do grÃ¡fico.\n   *\n   * > O valor mÃ­nimo que pode ser informado Ã© 200.\n   *\n   * @default `400px`\n   */\n  @Input('p-height') set height(value: number) {\n    const intValue = convertToInt(value);\n    let height: number;\n\n    if (isTypeof(value, 'number')) {\n      height = intValue <= poChartMinHeight ? poChartMinHeight : intValue;\n    } else {\n      height = poChartDefaultHeight;\n    }\n\n    this._height = height;\n\n    this.rebuildComponent();\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @description\n   *\n   * Define os elementos do grÃ¡fico que serÃ£o criados dinamicamente.\n   *\n   * > A coleÃ§Ã£o de objetos deve implementar alguma das interfaces abaixo:\n   * - `PoDonutChartSeries`\n   * - `PoPieChartSeries`\n   */\n  @Input('p-series') series: Array<PoDonutChartSeries | PoPieChartSeries>;\n\n  /** Define o tÃ­tulo do grÃ¡fico. */\n  @Input('p-title') title?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de grÃ¡fico.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoChartType`.\n   *\n   * @default `PoChartType.Pie`\n   */\n  @Input('p-type') set type(value: PoChartType) {\n    this._type = (<any>Object).values(PoChartType).includes(value) ? value : poChartTypeDefault;\n\n    this.rebuildComponent();\n  }\n\n  get type(): PoChartType {\n    return this._type;\n  }\n\n  /**\n   * Evento executado quando o usuÃ¡rio clicar sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('p-series-click')\n  seriesClick?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento executado quando o usuÃ¡rio passar o *mouse* sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('p-series-hover')\n  seriesHover?: EventEmitter<any> = new EventEmitter<any>();\n\n  onSeriesClick(event: any): void {\n    this.seriesClick.emit(event);\n  }\n\n  onSeriesHover(event: any): void {\n    this.seriesHover.emit(event);\n  }\n\n  abstract rebuildComponent(): void;\n\n}\n","// Array de cores para grÃ¡ficos definido pela equipe de UX Portinari.\nexport const PoChartColors = [\n  ['#29B6C5'],\n  ['#0C6C94', '#29B6C5'],\n  ['#0C6C94', '#29B6C5', '#C9ECF0'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2', '#C9ECF0'],\n  ['#0C6C94', '#00A5C5', '#0082A8', '#31628D', '#364473', '#32285C'],\n  ['#0C6C94', '#00AACB', '#018DAE', '#277099', '#325783', '#35426E', '#32285D'],\n  ['#0C6C94', '#00AFCE', '#0194B6', '#117FA2', '#0088AC', '#23789F', '#2B6992', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#333565', '#32285C'],\n];\n\n// Cores que serÃ¡ utilizado texto preto\nexport const PoSeriesTextBlack = [ '#94DAE2', '#C9ECF0' ];\n","const poChartAnimationDurationTime = 1500;\n\nexport const poChartAngleStepInterval = Math.PI * 2 / Math.floor( poChartAnimationDurationTime / 60 );\nexport const poChartCompleteCircle = 0.0001;\nexport const poChartPadding: number = 24;\nexport const poChartStartAngle = -Math.PI / 2;\n","import { ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoChartType } from '../enums/po-chart-type.enum';\nimport { PoDonutChartSeries } from './po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from './po-chart-pie/po-chart-pie-series.interface';\n\nconst Padding: number = 24;\n\nexport abstract class PoChartDynamicTypeComponent {\n\n  protected windowResizeListener: () => void;\n  protected windowScrollListener: () => void;\n\n  centerX: number;\n  chartElementCategory: any;\n  chartElementValue: any;\n  chartHeader: number;\n  chartLegend: number;\n  chartWrapper: number;\n  colors: Array<string>;\n  height: number;\n  innerRadius: number = 0;\n  onSerieClick: Subject<PoDonutChartSeries | PoPieChartSeries> = new Subject();\n  onSerieHover: Subject<PoDonutChartSeries | PoPieChartSeries> = new Subject();\n  series: Array<any> = [];\n  svgElement: HTMLObjectElement;\n  svgHeight: number;\n  target: HTMLInputElement & EventTarget;\n  tooltipElement: HTMLObjectElement;\n  tooltipText: string;\n  totalValue: number;\n  type: PoChartType;\n\n  @ViewChild('chartBody', { static: true }) chartBody: ElementRef;\n\n  @ViewChild('svgContainer', { static: true }) svgContainer: ElementRef;\n\n  calculateSVGContainerDimensions(chartWrapperElement: number, chartHeaderElement: number, chartLegendElement: number) {\n    const svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - (Padding * 2);\n\n    this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;\n    this.centerX = chartWrapperElement / 2;\n  }\n\n  calculateTotalValue() {\n    this.totalValue = this.series.reduce(\n      (previousValue, serie) => previousValue + serie.value, 0);\n  }\n\n}\n","import { ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\n\nimport {\n  poChartAngleStepInterval,\n  poChartCompleteCircle,\n  poChartPadding,\n  poChartStartAngle\n} from './po-chart-circular.constant';\nimport { PoChartDynamicTypeComponent } from '../po-chart-dynamic-type.component';\nimport { PoChartType } from '../../enums/po-chart-type.enum';\nimport { PoCircularChartSeries } from './po-chart-circular-series.interface';\nimport { PoDonutChartSeries } from '../po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from '../po-chart-pie/po-chart-pie-series.interface';\nimport { PoSeriesTextBlack } from '../../po-chart-colors.constant';\n\nconst poChartBlackColor = '#000000';\nconst poChartWhiteColor = '#ffffff';\n\nexport class PoChartCircular extends PoChartDynamicTypeComponent implements OnDestroy, OnInit {\n\n  private _series: Array<PoPieChartSeries | PoDonutChartSeries>;\n\n  private animationRunning: boolean;\n  private chartItemEndAngle: number;\n  private chartItemStartAngle: number;\n  private chartItemsEndAngleList: Array<number> = [];\n  private svgPathElementsList: Array<string> = [];\n  private svgTextElementsList: Array<string> = [];\n\n  set series(value: Array<PoPieChartSeries | PoDonutChartSeries>) {\n    this._series = this.getSeriesWithValue(value);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  private static calculateEndAngle(value: number, totalValue: number): number {\n    return value / totalValue * (Math.PI * 2);\n  }\n\n  constructor(private el: ElementRef, private ngZone: NgZone, private renderer: Renderer2) {\n    super();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n    this.removeWindowScrollListener();\n    this.animationRunning = false;\n  }\n\n  ngOnInit() {\n    this.chartInitSetup();\n    this.setEventListeners();\n  }\n\n  private animationSetup() {\n    this.chartItemStartAngle = poChartStartAngle;\n    this.chartItemEndAngle = this.chartItemsEndAngleList[0];\n    this.animationRunning = true;\n    this.drawPathInit();\n  }\n\n  private calculateAngleRadians() {\n    this.series.forEach((serie, index) =>\n      this.chartItemsEndAngleList[index] = PoChartCircular.calculateEndAngle(serie.value, this.totalValue)\n    );\n  }\n\n  private calculateCurrentEndAngle(angleCurrentPosition: number) {\n    const isSerieDrawCompleted = this.chartItemStartAngle + angleCurrentPosition > this.chartItemStartAngle + this.chartItemEndAngle;\n\n    if (isSerieDrawCompleted) {\n      return (this.chartItemStartAngle + this.chartItemEndAngle) - poChartCompleteCircle;\n    } else {\n      return this.chartItemStartAngle + angleCurrentPosition;\n    }\n  }\n\n  private calculateSVGDimensions() {\n    this.calculateSVGContainerDimensions(this.chartWrapper, this.chartHeader, this.chartLegend);\n\n    this.setInnerRadius();\n  }\n\n  private changeTooltipPosition(event: MouseEvent) {\n    if (this.tooltipElement && this.tooltipElement.classList.contains('po-invisible')) {\n      this.showTooltip();\n    }\n\n    const tooltipPositions = this.setTooltipPositions(event);\n    this.renderer.setStyle(this.tooltipElement, 'left', `${tooltipPositions.left}px`);\n    this.renderer.setStyle(this.tooltipElement, 'top', `${tooltipPositions.top}px`);\n  }\n\n  private chartInitSetup() {\n    this.calculateSVGDimensions();\n    this.calculateTotalValue();\n    this.calculateAngleRadians();\n    this.createSVGElements();\n    this.animationSetup();\n  }\n\n  private checkingIfScrollsWithPoPage() {\n    const poPageContent = document.getElementsByClassName('po-page-content');\n\n    return poPageContent.length ? poPageContent[0] : window;\n  }\n\n  private createPath(serie: PoCircularChartSeries, svgPathsWrapper: any) {\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\n\n    this.renderer.setAttribute(svgPath, 'class', 'po-path-item');\n    this.renderer.setAttribute(svgPath, 'fill', serie.color);\n\n    this.setTooltipAttributes(svgPath, serie);\n\n    svgPathsWrapper.appendChild(svgPath);\n\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\n\n    this.svgPathElementsList.push(svgPath);\n  }\n\n  private createPaths() {\n    const svgPathsWrapper = this.renderer.createElement('svg:g', 'svg');\n\n    this.series.forEach(serie => this.createPath(serie, svgPathsWrapper));\n  }\n\n  private createText(serie: PoCircularChartSeries) {\n    const { value } = serie;\n\n    const svgG = this.renderer.createElement('svg:g', 'svg');\n    const svgText = this.renderer.createElement('svg:text', 'svg');\n\n    const fontSize = this.getFontSize();\n    const textColor = this.getTextColor(serie.color);\n\n    svgText.textContent = this.getPercentValue(value, this.totalValue) + '%' ;\n\n    this.renderer.setAttribute(svgText, 'class', 'po-path-item');\n    this.renderer.setAttribute(svgText, 'fill', textColor);\n    this.renderer.setAttribute(svgText, 'font-size', fontSize);\n    this.renderer.setAttribute(svgText, 'fill-opacity', '0');\n\n    this.setTooltipAttributes(svgText, serie);\n\n    this.renderer.appendChild(svgG, svgText);\n\n    this.renderer.appendChild(this.svgElement, svgG);\n    this.svgTextElementsList.push(svgText);\n  }\n\n  private createTexts() {\n    if (this.type === PoChartType.Donut) {\n      this.series.forEach(serie => this.createText(serie));\n    }\n  }\n\n  private createSVGElements() {\n    this.svgElement = this.renderer.createElement('svg:svg', 'svg');\n\n    this.renderer.setAttribute(this.svgElement, 'viewBox', `0 0 ${this.chartWrapper} ${this.centerX * 2}`);\n    this.renderer.setAttribute(this.svgElement, 'preserveAspectRatio', 'xMidYMin meet');\n    this.renderer.setAttribute(this.svgElement, 'class', 'po-chart-svg-element');\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.chartWrapper - poChartPadding * 2}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n\n    this.svgContainer.nativeElement.appendChild(this.svgElement);\n\n    this.createPaths();\n    this.createTexts();\n\n  }\n\n  private drawPath(path, chartItemStartAngle, chartItemEndAngle) {\n    const largeArc = chartItemEndAngle - chartItemStartAngle > Math.PI;\n\n    const sinAlpha = Math.sin(chartItemStartAngle);\n    const cosAlpha = Math.cos(chartItemStartAngle);\n\n    const sinBeta = Math.sin(chartItemEndAngle);\n    const cosBeta = Math.cos(chartItemEndAngle);\n\n    const startX = this.centerX + cosAlpha * this.centerX;\n    const startY = this.centerX + sinAlpha * this.centerX;\n\n    const endX = this.centerX + cosBeta * this.centerX;\n    const endY = this.centerX + sinBeta * this.centerX;\n\n    const startInnerX = this.centerX + cosAlpha * this.innerRadius;\n    const startInnerY = this.centerX + sinAlpha * this.innerRadius;\n\n    const endInnerX = this.centerX + cosBeta * this.innerRadius;\n    const endInnerY = this.centerX + sinBeta * this.innerRadius;\n\n    const pathCoordinates = [\n      'M', startX, startY,\n      'A', this.centerX, this.centerX, 0, largeArc ? '1,1' : '0,1', endX, endY,\n      'L', endInnerX, endInnerY,\n      'A', this.innerRadius, this.innerRadius, 0, largeArc ? '1,0' : '0,0', startInnerX, startInnerY,\n      'Z'].join(' ');\n\n    return path.setAttribute('d', pathCoordinates);\n  }\n\n  private drawPathInit() {\n\n    if (!this.animationRunning) {\n      return;\n    } else {\n      this.ngZone.runOutsideAngular(() => this.drawSeries());\n    }\n  }\n\n  private drawSeries(currentSerieIndex: number = 0, angleCurrentPosition: number = 0) {\n    const isFinishedDrawingCurrentSeries = angleCurrentPosition > this.chartItemEndAngle;\n    const isFinishedDrawingAllSeries = currentSerieIndex === this.svgPathElementsList.length;\n\n    if ( isFinishedDrawingAllSeries ) {\n      return;\n    }\n\n    if ( isFinishedDrawingCurrentSeries ) {\n\n      this.chartItemStartAngle = this.chartItemStartAngle + this.chartItemEndAngle;\n      currentSerieIndex++;\n      this.chartItemEndAngle = this.chartItemsEndAngleList[currentSerieIndex];\n      angleCurrentPosition = 0;\n\n    } else {\n      angleCurrentPosition += poChartAngleStepInterval;\n\n      this.drawPath(\n        this.svgPathElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition)\n      );\n\n      this.setTextProperties(\n        this.svgTextElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition));\n    }\n\n    window.requestAnimationFrame(this.drawSeries.bind(this, currentSerieIndex, angleCurrentPosition));\n\n  }\n\n  private emitEventOnEnter(event: PoCircularChartSeries) {\n    this.onSerieHover.next(event);\n  }\n\n  private getFontSize() {\n    const fontSizePorcent = 0.04;\n\n    const fontSize = fontSizePorcent * this.chartWrapper;\n\n    return `${fontSize.toFixed(0)}px`;\n  }\n\n  private getPercentValue(value: number, totalValue: number) {\n    const percentValue = (value / totalValue) * 100;\n\n    // caso tiver mais que duas casas decimais, fixa atÃ© duas, ex: 10.6575 => 10.65\n    // se nÃ£o retorna o valor com parsefloat que remove casa decimal desencessaria, ex: 10.60 => 10.6\n    const floatPercentValue = this.isMoreThanTwoDecimalsPlaces(percentValue) ?\n      parseFloat(percentValue.toFixed(2)) : parseFloat(<any> percentValue);\n\n    return String(floatPercentValue).replace('.', ',');\n  }\n\n  private getSeriesWithValue(series: Array<PoCircularChartSeries>) {\n    const newSeries = [];\n\n    series.forEach((serie, index) => {\n      if (serie.value > 0) {\n        newSeries.push({ ...serie, color: this.colors[index] });\n      }\n    });\n\n    return newSeries;\n  }\n\n  private getTextColor(color: string) {\n    if (PoSeriesTextBlack.includes(color)) {\n      return poChartBlackColor;\n    }\n\n    return poChartWhiteColor;\n  }\n\n  private getTooltipValue(value: number) {\n    if (this.type === PoChartType.Pie) {\n      return value.toString();\n    }\n\n    return this.getPercentValue(value, this.totalValue) + '%';\n  }\n\n  private isMoreThanTwoDecimalsPlaces(value: number = 0) {\n    const [, valueAfterDot ] = value.toString().split('.');\n\n    return valueAfterDot && valueAfterDot.length > 2;\n  }\n\n  private onMouseClick() {\n    const serieOnClick: PoCircularChartSeries = { category: this.chartElementCategory, value: this.chartElementValue };\n\n    this.onSerieClick.next(serieOnClick);\n  }\n\n  private onMouseEnter(event) {\n    this.tooltipElement = this.chartBody.nativeElement.lastChild;\n    this.chartElementCategory = event.target.getAttributeNS(null, 'data-tooltip-category');\n    this.chartElementValue = event.target.getAttributeNS(null, 'data-tooltip-value');\n    this.tooltipText = event.target.getAttributeNS(null, 'data-tooltip-text');\n    this.showTooltip();\n    this.changeTooltipPosition(event);\n\n    const serieOnEnter = { category: this.chartElementCategory, value: this.chartElementValue };\n    this.emitEventOnEnter(serieOnEnter);\n  }\n\n  private onWindowResize() {\n    this.calculateSVGDimensions();\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.chartWrapper - poChartPadding * 2}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n  }\n\n  private removeTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.addClass(this.tooltipElement, 'po-invisible');\n    }\n  }\n\n  private removeWindowResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n    }\n  }\n\n  private removeWindowScrollListener() {\n    if (this.windowScrollListener) {\n      this.windowScrollListener();\n    }\n  }\n\n  private setEventListeners() {\n    let chartSeries: Array<string> = this.el.nativeElement.querySelectorAll('.po-path-item');\n    chartSeries = Array.from(chartSeries);\n\n    chartSeries.forEach(serie => {\n      this.renderer.listen(serie, 'click', this.onMouseClick.bind(this));\n      this.renderer.listen(serie, 'mouseenter', this.onMouseEnter.bind(this));\n      this.renderer.listen(serie, 'mousemove', this.changeTooltipPosition.bind(this));\n      this.renderer.listen(serie, 'mouseleave', this.removeTooltip.bind(this));\n    });\n\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.onWindowResize.bind(this));\n    this.windowScrollListener = this.renderer.listen(this.checkingIfScrollsWithPoPage(), 'scroll', this.removeTooltip.bind(this));\n  }\n\n  private setInnerRadius() {\n    // tamanho da largua da serie proporcional ao grafico, o valor 0.27 fica proximo de 32px\n    const serieWidth = 0.27;\n\n    this.innerRadius = this.type === PoChartType.Pie ? 0 : this.centerX - (this.centerX * serieWidth);\n  }\n\n  private setTextProperties(text, startAngle: number, endAngle: number) {\n    if (this.type === PoChartType.Donut) {\n      // utilizado para recuperar o angulo do meio, entre o inicio e fim para centralizar o texto\n      const centerAngle = (startAngle + endAngle) / 2;\n      const textBox = text.getBBox();\n\n      const halfTextWidth = textBox.width / 2;\n      const halfTextHeight = textBox.height / 2;\n\n      // radius interno (circulo branco) + a metade da diferenÃ§a entre tamanho do centro e radius interno\n      const radius = this.innerRadius + (this.centerX - this.innerRadius) / 2;\n\n      const xCoordinate = radius * Math.cos(centerAngle) + this.centerX - (halfTextWidth);\n      const yCoordinate = radius * Math.sin(centerAngle) + this.centerX + (halfTextHeight / 2);\n\n      text.setAttribute('x', xCoordinate);\n      text.setAttribute('y', yCoordinate);\n      text.setAttribute('fill-opacity', '1');\n    }\n  }\n\n  private setTooltipPositions(event: MouseEvent) {\n    const displacement: number = 8;\n\n    return {\n      left: event.clientX - this.tooltipElement.offsetWidth / 2,\n      top: event.clientY - this.tooltipElement.offsetHeight - displacement\n    };\n  }\n\n  private setTooltipAttributes(svgElement, serie: PoPieChartSeries | PoDonutChartSeries) {\n    const { value, category, tooltip } = serie;\n\n    const tooltipValue = this.getTooltipValue(value);\n\n    this.renderer.setAttribute(svgElement, 'data-tooltip-category', category);\n    this.renderer.setAttribute(svgElement, 'data-tooltip-value', `${value}`);\n    this.renderer.setAttribute(svgElement, 'data-tooltip-text', tooltip || `${category}: ${tooltipValue}`);\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipElement, 'po-invisible');\n  }\n\n}\n","import { Component, ElementRef, NgZone, Renderer2 } from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\n\n@Component({\n  selector: 'po-chart-donut',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartDonutComponent extends PoChartCircular {\n\n  constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(el, ngZone, renderer);\n  }\n\n}\n","import { Component, ElementRef, NgZone, Renderer2 } from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\n\n@Component({\n  selector: 'po-chart-pie',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartPieComponent extends PoChartCircular {\n\n  constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(el, ngZone, renderer);\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ComponentRef, DoCheck, ElementRef, HostListener,\n  IterableDiffers, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoChartBaseComponent } from './po-chart-base.component';\nimport { PoChartColors } from './po-chart-colors.constant';\nimport { PoChartDonutComponent } from './po-chart-types/po-chart-donut/po-chart-donut.component';\nimport { PoChartDynamicTypeComponent } from './po-chart-types/po-chart-dynamic-type.component';\nimport { PoChartPieComponent } from './po-chart-types/po-chart-pie/po-chart-pie.component';\nimport { PoChartType } from './enums/po-chart-type.enum';\n\n/**\n * @docsExtends PoChartBaseComponent\n *\n * @example\n *\n * <example name=\"po-chart-basic\" title=\"Portinari Chart Basic\">\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.html\"> </file>\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-chart-labs\" title=\"Portinari Chart Labs\">\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.html\"> </file>\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-chart-coffee-ranking\" title=\"Portinari Chart - Coffee Ranking\">\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html\"> </file>\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-chart',\n  templateUrl: './po-chart.component.html'\n})\nexport class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {\n\n  private calculatedElement: boolean = false;\n  private componentRef: ComponentRef<{}>;\n  private differ: any;\n  private initialized: boolean = false;\n  private windowResizeListener: Subject<any> = new Subject();\n\n  private mappings = {\n    [PoChartType.Pie]: PoChartPieComponent,\n    [PoChartType.Donut]: PoChartDonutComponent\n  };\n\n  colors: Array<string> = [];\n\n  @ViewChild('chartContainer', { read: ViewContainerRef, static: true })\n  chartContainer: ViewContainerRef;\n\n  @ViewChild('chartHeader', { static: true }) chartHeader: ElementRef;\n  @ViewChild('chartLegend', { static: true }) chartLegend: ElementRef;\n  @ViewChild('chartWrapper', { static: true }) chartWrapper: ElementRef;\n\n  @HostListener('window:resize')\n  onResize = () => this.windowResizeListener.next()\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private differs: IterableDiffers) {\n      super();\n\n      this.differ = this.differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const charWrapperWidth = this.chartWrapper.nativeElement.offsetWidth;\n\n    // Permite que o chart seja calculado na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (charWrapperWidth && !this.calculatedElement && this.initialized) {\n      this.calculatedElement = true;\n      this.getSeriesColor();\n      this.dynamicComponentSetting();\n    }\n\n    this.checkingForSerieChanges();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n  }\n\n  ngOnInit() {\n    this.getSeriesColor();\n  }\n\n  rebuildComponent() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.dynamicComponentSetting();\n    }\n  }\n\n  private checkingForSerieChanges() {\n    if (this.componentRef && this.differ) {\n      const changeSeries = this.differ.diff(this.series);\n      if (changeSeries) {\n        this.getSeriesColor();\n        this.rebuildComponent();\n      }\n    }\n  }\n\n  private createComponent() {\n    const componentType = this.getComponentType(this.type);\n    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    this.componentRef = this.chartContainer.createComponent(factory);\n\n    const instance = <PoChartDynamicTypeComponent>this.componentRef.instance;\n\n    this.setChartProperties(instance);\n\n    return instance;\n  }\n\n  private dynamicComponentSetting() {\n    const instance = this.createComponent();\n\n    this.setResizeListenerSubscribe(instance);\n    this.changeDetector.detectChanges();\n    this.setClickSubscribe(instance);\n    this.setHoverSubscribe(instance);\n  }\n\n  private getComponentType(typeName) {\n    return this.mappings[typeName];\n  }\n\n  private getSeriesColor() {\n    const colorsLength = PoChartColors.length - 1;\n\n    if (!this.series) {\n      return this.colors = PoChartColors[colorsLength];\n    }\n\n    const seriesLength = this.series.length - 1;\n\n    if (seriesLength > colorsLength) {\n      let colors = PoChartColors[colorsLength];\n\n      // recupera o resultado da divisao entre tamanho das series e o numero de cores disponiveis\n      const quantityDuplicates = seriesLength / colorsLength;\n\n      for (let i = 1; i <= quantityDuplicates; i++) {\n        colors = colors.concat(PoChartColors[colorsLength]);\n      }\n\n      return this.colors = colors;\n    }\n\n    return this.colors = PoChartColors[seriesLength];\n  }\n\n  private removeWindowResizeListener() {\n    if (this.onResize) {\n      this.onResize = () => {};\n    }\n  }\n\n  private setChartProperties(instance: PoChartDynamicTypeComponent) {\n    instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n    instance.chartLegend = this.chartLegend.nativeElement.offsetHeight;\n    instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    instance.colors = Array.isArray(this.colors) ? [...this.colors] : [];\n    instance.height = this.height;\n    instance.series = this.series || [];\n    instance.type = this.type;\n  }\n\n  private setClickSubscribe(instance: PoChartDynamicTypeComponent) {\n    instance.onSerieClick.subscribe(event => {\n      this.onSeriesClick(event);\n    });\n  }\n\n  private setHoverSubscribe(instance: PoChartDynamicTypeComponent) {\n    instance.onSerieHover.subscribe(event => {\n      this.onSeriesHover(event);\n    });\n  }\n\n  private setResizeListenerSubscribe(instance: PoChartDynamicTypeComponent) {\n    this.windowResizeListener.subscribe(() => {\n      instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n      instance.chartLegend = this.chartLegend.nativeElement.offsetHeight;\n      instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoChartComponent } from './po-chart.component';\nimport { PoChartDonutComponent } from './po-chart-types/po-chart-donut/po-chart-donut.component';\nimport { PoChartPieComponent } from './po-chart-types/po-chart-pie/po-chart-pie.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-chart`.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    PoChartComponent,\n    PoChartDonutComponent,\n    PoChartPieComponent\n  ],\n  entryComponents: [\n    PoChartDonutComponent,\n    PoChartPieComponent\n  ],\n  exports: [\n    PoChartComponent,\n  ]\n})\nexport class PoChartModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\n/**\n * @description\n *\n * O `po-container` Ã© um componente que visa facilitar o agrupamento de conteÃºdos.\n * Por padrÃ£o o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaÃ§amento em sua parte interna, os quais\n * podem ser desabilitados. Ao remover sua borda a sombra tambÃ©m serÃ¡ removida. AlÃ©m disso, sua altura acompanha a\n * quantidade do conteÃºdo, porÃ©m pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),\n * assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\nexport class PoContainerBaseComponent {\n\n  private _height?: number;\n  private _noBorder?: boolean = false;\n  private _noPadding?: boolean = false;\n  private _noShadow?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-container`.\n   *\n   * > Caso nÃ£o seja definido um valor, a altura se ajustarÃ¡ de acordo com o conteÃºdo.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = convertToInt(value);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a borda e a sombra em torno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-border') set noBorder(value: boolean) {\n    this._noBorder = convertToBoolean(value);\n  }\n\n  get noBorder(): boolean {\n    return this._noBorder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o espaÃ§amento interno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-padding') set noPadding(value: boolean) {\n    this._noPadding = convertToBoolean(value);\n  }\n\n  get noPadding(): boolean {\n    return this._noPadding;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o sombreamento em torno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = convertToBoolean(value);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoContainerBaseComponent } from './po-container-base.component';\n\n/**\n * @docsExtends PoContainerBaseComponent\n *\n * @example\n *\n * <example name=\"po-container-basic\" title=\"Portinari Container Basic\">\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.html\"> </file>\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-container-labs\" title=\"Portinari Container Labs\">\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.html\"> </file>\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-container-dashboard\" title=\"Portinari Container - Dashboard\">\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.ts\"> </file>\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-container',\n  templateUrl: './po-container.component.html'\n})\nexport class PoContainerComponent extends PoContainerBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoContainerComponent } from './po-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-container`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PoContainerComponent\n  ],\n  declarations: [\n    PoContainerComponent\n  ]\n})\nexport class PoContainerModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst PO_DISCLAIMER_TYPES = ['default', 'danger'];\nconst PO_DISCLAIMER_DEFAULT_TYPE = 'default';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente po-disclaimer Ã© responsÃ¡vel por representar tags.\n * Seu uso Ã© recomendado em buscas e em campos onde Ã© necessÃ¡rio representar objetos selecionados,\n * como por exemplo, no po-multi-select.\n *\n */\nexport class PoDisclaimerBaseComponent {\n  private _type: string = 'default';\n  private _hideClose?: boolean = false;\n\n  showDisclaimer = true;\n\n  /**\n   * Label que aparecerÃ¡ dentro do po-disclaimer.\n   * Quando nÃ£o for definido um label serÃ¡ apresentada a propriedade p-value.\n   */\n  @Input('p-label') label?: string;\n\n  /** Valor do po-disclaimer. */\n  @Input('p-value') value: string;\n\n  /** Nome da propriedade vinculada Ã  este po-disclaimer. */\n  @Input('p-property') property?: string;\n\n  /**\n   * @description\n   *\n   * Esta propriedade esconde o botÃ£o para fechamento do po-disclaimer, ao utilizar esta propriedade\n   * sem passar valor a mesma Ã© setada como false, onde o botÃ£o de fechamento estÃ¡ visÃ­vel.\n   *\n   * @default false\n   */\n  @Input('p-hide-close') set hideClose(value: boolean) {\n    this._hideClose = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideClose(): boolean {\n    return this._hideClose;\n  }\n\n  /**\n   * Evento disparado ao fechar o disclaimer.\n   * Para este evento serÃ¡ passado como parÃ¢metro um objeto com value, label e property.\n   */\n  @Output('p-close-action') closeAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @description\n   *\n   * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.\n   *\n   * @default default\n   * @optional\n   */\n  @Input('p-type') set type(type: string) {\n    this._type = PO_DISCLAIMER_TYPES.includes(type) ? type : PO_DISCLAIMER_DEFAULT_TYPE;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  close(): void {\n    this.showDisclaimer = false;\n    this.closeAction.emit({value: this.value, label: this.label, property: this.property});\n  }\n\n  getLabel() {\n    return this.label ? this.label : this.value;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { isKeyCodeEnter } from '../../utils/util';\n\nimport { PoDisclaimerBaseComponent } from './po-disclaimer-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoDisclaimerBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-disclaimer\" title=\"Portinari Disclaimer\">\n *   <file name=\"sample-po-disclaimer.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-disclaimer',\n  templateUrl: './po-disclaimer.component.html'\n})\nexport class PoDisclaimerComponent extends PoDisclaimerBaseComponent {\n\n  onKeyPress(event: any) {\n\n    if (isKeyCodeEnter(event)) {\n      this.close();\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoDisclaimerComponent } from './po-disclaimer.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-disclaimer.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoDisclaimerComponent],\n  exports: [PoDisclaimerComponent]\n})\nexport class PoDisclaimerModule { }\n","import { DoCheck, EventEmitter, Input, IterableDiffers, Output } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { browserLanguage, convertToBoolean, isKeyCodeEnter, poLocaleDefault } from '../../utils/util';\n\nimport { PoDisclaimer } from '../po-disclaimer/po-disclaimer.interface';\n\nexport const poDisclaimerGroupLiteralsDefault = {\n  en: { removeAll: 'Remove all' },\n  es: { removeAll: 'Eliminar todos' },\n  pt: { removeAll: 'Remover todos' }\n};\n\n/**\n * @description\n *\n * O componente `po-disclaimer-group` Ã© recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\n *\n * Ã partir de dois *disclaimers* com o botÃ£o **fechar** habilitado, o componente renderiza de forma automÃ¡tica um novo e destacado\n * *disclaimer* que possibilita **remover todos**, mas que tambÃ©m pode ser desabilitado.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *disclaimers* atravÃ©s do teclado utilizando a tecla *tab* e, para remoÃ§Ã£o do *disclaimer* selecionado,\n * basta pressionar a tecla *enter*. Esta funcionalidade nÃ£o se aplica caso a propriedade `hideClose` estiver habilitada.\n *\n * > Veja a integraÃ§Ã£o destas funcionalidade no componente [po-page-list](/documentation/po-page-list).\n */\nexport class PoDisclaimerGroupBaseComponent implements DoCheck {\n\n  private _disclaimers: Array<PoDisclaimer> = [];\n  private _hideRemoveAll: boolean = false;\n\n  private differ;\n  private previousDisclaimers: Array<PoDisclaimer> = [];\n\n  readonly literals = {\n      ...poDisclaimerGroupLiteralsDefault[poLocaleDefault],\n      ...poDisclaimerGroupLiteralsDefault[browserLanguage()]\n  };\n\n  /** Lista de *disclaimers*. */\n\n  /**\n   * @description\n   *\n   * Lista de *disclaimers*.\n   *\n   * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referÃªncia do array de `PoDisclaimer`.\n   *\n   * Exemplo adicionando um *disclaimer* no array:\n   *\n   * ```\n   * this.disclaimers = [...this.disclaimers, disclaimer];\n   * ```\n   *\n   * ou\n   *\n   * ```\n   * this.disclaimers = this.disclaimers.concat(disclaimer);\n   * ```\n   */\n  @Input('p-disclaimers') set disclaimers(value: Array<PoDisclaimer>) {\n\n    this.previousDisclaimers = [...this.disclaimers];\n    this._disclaimers = this.checkDisclaimers(value);\n\n  }\n\n  get disclaimers() {\n    return this._disclaimers;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o botÃ£o para remover todos os *disclaimers* do grupo.\n   *\n   * > Por padrÃ£o, o mesmo Ã© exibido Ã  partir de dois ou mais *disclaimers* com a opÃ§Ã£o `hideClose` habilitada.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remove-all')\n  set hideRemoveAll(value: boolean) {\n    this._hideRemoveAll = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideRemoveAll() {\n    return this._hideRemoveAll;\n  }\n\n  /** TÃ­tulo do grupo de *disclaimers*. */\n  @Input('p-title') title?: string;\n\n  /** FunÃ§Ã£o que serÃ¡ disparada quando a lista de *disclaimers* for modificada. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(differs: IterableDiffers) {\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    this.checkChanges();\n  }\n\n  closeItem(disclaimer: any, emitChange: boolean = true) {\n    const itemIndex = this.disclaimers.findIndex(d => d['$id'] === disclaimer['$id']);\n    this.disclaimers.splice(itemIndex, 1);\n\n    if (emitChange) {\n      this.emitChangeDisclaimers();\n    }\n  }\n\n  isRemoveAll() {\n    return !this.hideRemoveAll && this.disclaimers.filter(c => !c.hideClose).length > 1;\n  }\n\n  onKeyPress(event: any) {\n\n    if (isKeyCodeEnter(event)) {\n      this.removeAllItems();\n    }\n\n  }\n\n  removeAllItems() {\n    const removeItems = [];\n\n    this.disclaimers.forEach(disclaimer => {\n      if (!disclaimer.hideClose) {\n        removeItems.push(disclaimer);\n      }\n    });\n\n    removeItems.forEach(disclaimer => this.closeItem(disclaimer, false));\n\n    this.emitChangeDisclaimers();\n  }\n\n  private checkChanges() {\n\n    if (this.differ) {\n      const changes = this.differ.diff(this.disclaimers);\n\n      if (changes && this.disclaimersAreChanged(this.disclaimers)) {\n        this.emitChangeDisclaimers();\n      }\n\n    }\n\n  }\n\n  private checkDisclaimers(disclaimers: Array<PoDisclaimer>) {\n    if (Array.isArray(disclaimers)) {\n\n      for (let i = 0; i < disclaimers.length; i++) {\n        const disclaimer = disclaimers[i];\n\n        if (disclaimer.value || disclaimer.value === 0 || disclaimer.value === false) {\n\n          disclaimer['$id'] = uuid();\n\n        } else {\n\n          disclaimers.splice(i, 1);\n          i--;\n        }\n      }\n\n      return disclaimers;\n    }\n\n    return [];\n  }\n\n  private disclaimersAreChanged(disclaimers: Array<PoDisclaimer>): boolean {\n    const currentValues: Array<PoDisclaimer> = disclaimers;\n\n    if (currentValues.length !== this.previousDisclaimers.length) {\n      return true;\n    }\n\n    return currentValues.some((disclaimer, index) => disclaimer.value !== this.previousDisclaimers[index].value\n      || disclaimer.property !== this.previousDisclaimers[index].property);\n  }\n\n  private emitChangeDisclaimers() {\n    setTimeout(() => {\n      this.change.emit(this.disclaimers);\n    });\n    this.previousDisclaimers = [...this._disclaimers];\n  }\n\n}\n","import { Component, IterableDiffers } from '@angular/core';\n\nimport { PoDisclaimerGroupBaseComponent } from './po-disclaimer-group-base.component';\n\n/**\n * @docsExtends PoDisclaimerGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-disclaimer-group-basic\" title=\"Portinari Disclaimer Group Basic\">\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-disclaimer-group-labs\" title=\"Portinari Disclaimer Group Labs\">\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-disclaimer-group-sw-planets\" title=\"Portinari Disclaimer Group - Star Wars Planets\">\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.ts\"> </file>\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.service.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-disclaimer-group',\n  templateUrl: './po-disclaimer-group.component.html'\n})\nexport class PoDisclaimerGroupComponent extends PoDisclaimerGroupBaseComponent {\n\n  constructor(differs: IterableDiffers) {\n    super(differs);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este Ã© um componente interno utilizado pelo po-disclaimer-group, se comporta como um botÃ£o e recebe uma aÃ§Ã£o para remover todos os\n * po-disclaimers do grupo.\n */\n@Component({\n  selector: 'po-disclaimer-remove',\n  templateUrl: './po-disclaimer-remove.component.html'\n})\nexport class PoDisclaimerRemoveComponent {\n\n  /** Texto exibido.  */\n  @Input('p-label') label?: string;\n\n  /** AÃ§Ã£o para remover todos.  */\n  @Output('p-remove-all-action') removeAllAction = new EventEmitter();\n\n  // Emite a aÃ§Ã£o de remover todos.\n  removeAction() {\n    this.removeAllAction.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoDisclaimerModule } from '../po-disclaimer/po-disclaimer.module';\n\nimport { PoDisclaimerGroupComponent } from './po-disclaimer-group.component';\nimport { PoDisclaimerRemoveComponent } from './po-disclaimer-remove/po-disclaimer-remove.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-disclaimer-group.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoDisclaimerModule\n  ],\n  declarations: [PoDisclaimerGroupComponent, PoDisclaimerRemoveComponent],\n  exports: [PoDisclaimerGroupComponent]\n})\nexport class PoDisclaimerGroupModule { }\n","import { Input } from '@angular/core';\n\n/**\n * @description\n *\n * Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso Ã© indicado para definiÃ§Ã£o\n * e organizaÃ§Ã£o de informaÃ§Ãµes em uma tela e sua caracterÃ­stica Ã© semelhante Ã  tag `<hr>`.\n */\nexport class PoDividerBaseComponent {\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('p-label') label?: string;\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { PoDividerBaseComponent } from './po-divider-base.component';\n\n/**\n * @docsExtends PoDividerBaseComponent\n *\n * @example\n *\n * <example name=\"po-divider-basic\" title=\"Portinari Divider Basic\" >\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.html\"> </file>\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-divider-labs\" title=\"Portinari Divider Labs\" >\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.html\"> </file>\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-divider-user-detail\" title=\"Portinari Divider - User Detail\" >\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.html\"> </file>\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-divider',\n  templateUrl: './po-divider.component.html',\n})\nexport class PoDividerComponent extends PoDividerBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoDividerComponent } from './po-divider.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-divider.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoDividerComponent\n  ],\n  exports: [\n    PoDividerComponent\n  ]\n})\nexport class PoDividerModule { }\n","import { ElementRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nimport { PoPopupAction } from './po-popup-action.interface';\n\nconst poPopupDefaultPosition = 'bottom-left';\n\n/**\n * @description\n *\n * O componente `po-popup` Ã© um container pequeno recomendado para aÃ§Ãµes de navegaÃ§Ã£o:\n * Ele abre sobreposto aos outros componentes.\n *\n * Ã possÃ­vel escolher as posiÃ§Ãµes do `po-popup` em relaÃ§Ã£o ao componente alvo, para isto veja a propriedade `p-position`.\n *\n * TambÃ©m Ã© possÃ­vel informar um _template_ _header_ para o `po-popup`, que serÃ¡ exibido acima das aÃ§Ãµes.\n * Para funcionar corretamente Ã© preciso adicionar a propriedade `p-popup-header-template` no elemento que servirÃ¡ de template, por exemplo:\n *\n * ```\n * <po-popup [p-target]=\"target\">\n *   <div p-popup-header-template>\n *     <div>\n *       Dev Portinari\n *     </div>\n *     <div>\n *       dev.portinari@portinari.com.br\n *     </div>\n *   </div>\n * </po-popup >\n * ```\n */\nexport class PoPopupBaseComponent {\n\n  private _actions: Array<PoPopupAction>;\n  private _customPositions?: Array<string>;\n  private _hideArrow: boolean = false;\n  private _isCornerAlign: boolean = false;\n  private _position?: string = poPopupDefaultPosition;\n  private _target: any;\n\n  arrowDirection: string = 'top-right';\n  showPopup: boolean = false;\n\n  protected oldTarget;\n  protected param;\n  protected parentRef;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('p-actions') set actions(value: Array<PoPopupAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a seta do componente *popup*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  // Define se o `po-popup` serÃ¡ alinhado pelos cantos do elemento target.\n  @Input('p-is-corner-align') set isCornerAlign(value: boolean) {\n    this._isCornerAlign = convertToBoolean(value);\n  }\n\n  get isCornerAlign(): boolean {\n    return this._isCornerAlign;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o inicial que o `po-popup` abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o `bottom-left` (abaixo e a esquerda), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * > Caso seja definido um `p-custom-positions` o componente irÃ¡ abrir na posiÃ§Ã£o definida na propriedade `p-position`\n   * e caso nÃ£o caiba na posiÃ§Ã£o inicial ele irÃ¡ rotacionar seguindo a ordem de posiÃ§Ãµes definidas no `p-custom-positions`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popup acima do componente alvo.\n   * - `top-right`: Posiciona o po-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popup acima e Ã  esquerda do componente alvo.\n   *\n   * @default `bottom-left`\n   */\n  @Input('p-position') set position(value: string) {\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : poPopupDefaultPosition;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as posiÃ§Ãµes e a sequÃªncia que o `po-popup` poderÃ¡ rotacionar. A sequÃªncia serÃ¡ definida pela ordem passada\n   * no *array*. Caso nÃ£o seja definido, o `po-popup` irÃ¡ rotacionar em todas as posiÃ§Ãµes vÃ¡lidas.\n   *\n   * > O componente sempre irÃ¡ abrir na posiÃ§Ã£o definida no `p-position` e caso nÃ£o caiba na posiÃ§Ã£o definida o mesmo\n   * irÃ¡ rotacionar seguindo a ordem definida pelo `p-custom-position`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popup acima do componente alvo.\n   * - `top-right`: Posiciona o po-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popup acima e Ã  esquerda do componente alvo.\n   */\n  @Input('p-custom-positions') set customPositions(value: Array<string>) {\n    this._customPositions = Array.isArray(value) ? value : [];\n  }\n\n  get customPositions() {\n    return this._customPositions;\n  }\n\n  /**\n   * @description\n   *\n   * Para utilizar o `po-popup` deve-se colocar uma variÃ¡vel local no componente que dispararÃ¡ o evento\n   * de abertura no mesmo e com isso, invocarÃ¡ a funÃ§Ã£o `toggle`, por exemplo:\n   *\n   * ```\n   * <span #icon class=\"po-icon po-icon-credit-payment\" (click)=\"popup.toggle()\">\n   *   Credit Actions\n   * </span>\n   *\n   * <po-popup #popup\n   *   [p-actions]=\"actions\"\n   *   [p-target]=\"icon\">\n   * </po-popup>\n   * ```\n   *\n   * Caso o elemento alvo for um componente, serÃ¡ preciso obter o `ElementRef` do mesmo e passÃ¡-lo Ã  propriedade, por exemplo:\n   *\n   * ```\n   * // component.html\n   *\n   * <po-button #poButton\n   *   p-label=\"Open Popover\"\n   *   (p-click)=\"popup.toggle()\">\n   * </po-button>\n   *\n   * <po-popup #popup\n   *   [p-actions]=\"actions\"\n   *   [p-target]=\"poButtonRef\">\n   * </po-popup>\n   *\n   * // component.ts\n   *\n   * @ViewChild('poButton', { read: ElementRef }) poButtonRef: ElementRef;\n   * ```\n   */\n  @Input('p-target') set target(value: any) {\n    this._target = (value instanceof ElementRef) ? value.nativeElement : value;\n  }\n\n  get target() {\n    return this._target;\n  }\n\n  protected clickoutListener: () => void;\n  protected resizeListener: () => void;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../utils/util';\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\n\nimport { PoPopupAction } from './po-popup-action.interface';\nimport { PoPopupBaseComponent } from './po-popup-base.component';\n\n/**\n *\n * @docsExtends PoPopupBaseComponent\n *\n * @example\n *\n * <example name=\"po-popup-basic\" title=\"Portinari Popup - Basic\">\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.html\"> </file>\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popup-labs\" title=\"Portinari Popup - Labs\">\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.html\"> </file>\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popup-email\" title=\"Portinari Popup Email\">\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.html\"> </file>\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-popup',\n  templateUrl: './po-popup.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoPopupComponent extends PoPopupBaseComponent {\n\n  @ViewChild('popupRef', { read: ElementRef, static: false }) popupRef: ElementRef;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router,\n    private poControlPosition: PoControlPositionService,\n    public changeDetector: ChangeDetectorRef) {\n    super();\n    this.parentRef = viewContainerRef['_view']['component'];\n  }\n\n  /**\n   * Fecha o componente *popup*.\n   *\n   * > Por padrÃ£o, este comportamento Ã© acionado somente ao clicar fora do componente ou em determinada aÃ§Ã£o / url.\n   */\n  close() {\n    this.removeListeners();\n\n    this.showPopup = false;\n  }\n\n  onActionClick(popupAction: PoPopupAction) {\n    const actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');\n\n    if (popupAction && popupAction.action && actionNoDisabled) {\n      this.close();\n      return callFunction(popupAction.action, this.parentRef, this.param || popupAction);\n    }\n\n    if (popupAction && popupAction.url && actionNoDisabled) {\n      this.close();\n      return this.openUrl(popupAction.url);\n    }\n  }\n\n  /**\n   * Abre o componente *popup*.\n   *\n   * > Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  open(param?) {\n    this.oldTarget = this.target;\n    this.param = param;\n    this.showPopup = true;\n    this.changeDetector.detectChanges();\n    this.validateInitialContent();\n  }\n\n  returnBooleanValue(popupAction: any, property: string) {\n    return isTypeof(popupAction[property], 'function') ? popupAction[property](this.param || popupAction) : popupAction[property];\n  }\n\n  /**\n   * ResponsÃ¡vel por abrir e fechar o *popup*.\n   *\n   * Quando disparado abrirÃ¡ o *popup* e caso o mesmo jÃ¡ estiver aberto e possuir o mesmo `target` irÃ¡ fecha-lo.\n   *\n   * Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  toggle(param?) {\n    this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);\n  }\n\n  private clickedOutDisabledItem(event) {\n    const containsItemDisabled = this.elementContains(event.target, 'po-popup-item-disabled') ||\n      this.elementContains(event.target.parentElement, 'po-popup-item-disabled');\n\n    return !containsItemDisabled;\n  }\n\n  private clickedOutHeaderTemplate(event) {\n    const popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[p-popup-header-template]');\n    return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));\n  }\n\n  private clickedOutTarget(event) {\n    return this.target && !this.target.contains(event.target);\n  }\n\n  private closePopupOnClickout(event: MouseEvent) {\n\n    if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {\n\n      this.close();\n    }\n\n  }\n\n  private elementContains(element: HTMLElement, className: string) {\n    return element && element.classList.contains(className);\n  }\n\n  private hasContentToShow() {\n    return !!(this.popupRef.nativeElement && this.popupRef.nativeElement.clientHeight);\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.close();\n    });\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.closePopupOnClickout(event);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.showPopup) {\n      this.close();\n    }\n  }\n\n  private openUrl(url: string) {\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPosition() {\n    this.poControlPosition.setElements(this.popupRef.nativeElement, 8, this.target, this.customPositions, false, this.isCornerAlign);\n    this.poControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\n  }\n\n  private validateInitialContent() {\n    if (this.hasContentToShow()) {\n      this.setPosition();\n      this.initializeListeners();\n    } else {\n      this.close();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoPopupComponent } from './po-popup.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-popup.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    PoPopupComponent,\n  ],\n  exports: [\n    PoPopupComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoPopupModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\n\nimport { PoDropdownAction } from './po-dropdown-action.interface';\n\n/**\n * @description\n *\n * O componente `po-dropdown` pode ser utilizado como um agrupador de aÃ§Ãµes e / ou opÃ§Ãµes.\n *\n * > Caso nÃ£o haja configuraÃ§Ã£o de rotas em sua aplicaÃ§Ã£o, se faz necessÃ¡rio importar o `RouterModule`\n * no mÃ³dulo principal para o correto funcionamento deste componente:\n *\n * ```\n * import { RouterModule } from '@angular/router';\n *\n * @NgModule({\n *   imports: [\n *     ...\n *     RouterModule.forRoot([]),\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   exports: [],\n *   providers: [],\n *   bootstrap: [\n *     AppComponent\n *   ]\n * })\n * export class AppModule { }\n * ```\n * > Para maiores dÃºvidas referente Ã  configuraÃ§Ã£o de rotas, acesse em nosso portal /Guias /ComeÃ§ando\n * [/Configurando as rotas do po-menu](/guides/getting-started).\n */\n\nexport class PoDropdownBaseComponent {\n\n  private _actions: Array<PoDropdownAction>;\n  private _disabled: boolean = false;\n\n  icon: string = 'po-icon-arrow-down';\n  open: boolean = false;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('p-actions') set actions(value: Array<PoDropdownAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Adiciona um rÃ³tulo ao `dropdown`. */\n  @Input('p-label') label: string;\n\n}\n","import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { isKeyCodeEnter } from './../../utils/util';\n\nimport { PoDropdownBaseComponent } from './po-dropdown-base.component';\n\n/**\n * @docsExtends PoDropdownBaseComponent\n *\n * @example\n *\n * <example name=\"po-dropdown-basic\" title=\"Portinari Dropdown Basic\" >\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.ts\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dropdown-labs\" title=\"Portinari Dropdown Labs\" >\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dropdown-social-network\" title=\"Portinari Dropdown - Social Network\" >\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-dropdown',\n  templateUrl: './po-dropdown.component.html'\n})\nexport class PoDropdownComponent extends PoDropdownBaseComponent {\n\n  private clickoutListener: () => void;\n  private resizeListener: () => void;\n\n  @ViewChild('dropdownRef', { read: ElementRef, static: true }) dropdownRef: ElementRef;\n  @ViewChild('popupRef', { static: false }) popupRef: any;\n\n  constructor(private renderer: Renderer2) {\n    super();\n  }\n\n  onKeyDown(event: any) {\n    if (isKeyCodeEnter(event)) {\n      this.toggleDropdown();\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();\n  }\n\n  private checkClickArea(event: MouseEvent) {\n    return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);\n  }\n\n  private hideDropdown() {\n    this.icon = 'po-icon-arrow-down';\n    this.removeListeners();\n    this.popupRef.close();\n    this.open = false;\n  }\n\n  private initializeListeners() {\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnDropdown(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropdown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.open) {\n      this.hideDropdown();\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private showDropdown() {\n    this.icon = 'po-icon-arrow-up';\n    this.initializeListeners();\n    this.popupRef.open();\n    this.open = true;\n  }\n\n  private wasClickedOnDropdown(event: MouseEvent) {\n    const clickedOnDropdown = this.checkClickArea(event);\n\n    if (!clickedOnDropdown) {\n      this.hideDropdown();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopupModule } from '../po-popup/po-popup.module';\n\nimport { PoDropdownComponent } from './po-dropdown.component';\n/**\n * @description\n * MÃ³dulo do componente po-dropdown.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoPopupModule\n  ],\n  declarations: [PoDropdownComponent],\n  exports: [PoDropdownComponent]\n})\nexport class PoDropdownModule { }\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de uso interno, responsÃ¡vel por gerar uma margem inferior nos componentes que utilizam o po-field-container.\n * Essa margem inferior pode conter uma mensagem de erro.\n */\n@Component({\n  selector: 'po-field-container-bottom',\n  templateUrl: './po-field-container-bottom.component.html'\n})\nexport class PoFieldContainerBottomComponent {\n\n  /**\n   * Mensagem que serÃ¡ apresentada quando o pattern ou a mÃ¡scara nÃ£o for satisfeita.\n   * Obs: Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean, getShortBrowserLanguage } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * Componente de uso interno, responsÃ¡vel por atribuir uma label para o campo\n */\n@Component({\n  selector: 'po-field-container',\n  templateUrl: './po-field-container.component.html'\n})\nexport class PoFieldContainerComponent {\n\n  private _optional: boolean = false;\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help: string;\n\n  /** Indica se o campo serÃ¡ opcional. */\n  @Input('p-optional') set optional(value: boolean) {\n    this._optional = convertToBoolean(value);\n  }\n\n  get optional() {\n    return this._optional;\n  }\n\n  getOptionalText() {\n    const browserLanguage = getShortBrowserLanguage();\n\n    const optional = {\n      pt: '(Opcional)',\n      en: '(Optional)',\n      es: '(Opcional)'\n    };\n\n    return optional[browserLanguage];\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldContainerBottomComponent } from './po-field-container-bottom/po-field-container-bottom.component';\nimport { PoFieldContainerComponent } from './po-field-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-field-container`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PoFieldContainerBottomComponent,\n    PoFieldContainerComponent\n  ],\n  declarations: [\n    PoFieldContainerBottomComponent,\n    PoFieldContainerComponent\n  ]\n})\nexport class PoFieldContainerModule { }\n","\nexport function requiredFailed(required: boolean, disabled: boolean, value: string | Array<any> | number | boolean) {\n  const valid = ((typeof value === 'string' && value) || (typeof value === 'object' && value && value.length)\n                || (typeof value === 'number' && (value || value === 0)) || (typeof value === 'boolean' && value));\n  return (required && !disabled && !valid);\n}\n\nexport function maxlengpoailed(maxlength: number, value: string | number) {\n  const validMaxlength = maxlength || maxlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMaxlength && validValue && validValue.length > Number(maxlength);\n}\n\nexport function minlengpoailed(minlength: number, value: string | number) {\n  const validMinlength = minlength || minlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMinlength && validValue && validValue.length < Number(minlength);\n}\n\nexport function patternFailed(pattern: string, value: string) {\n  let reg;\n  try {\n    reg = new RegExp(pattern);\n  } catch (e) {\n    return true;\n  }\n  return (pattern && value && !reg.test(value));\n}\n\nexport function minFailed(min: number, value: number) {\n  const validValue = value || value === 0;\n  const validMin = min || min === 0;\n  return validValue && validMin && value < min;\n}\n\nexport function maxFailed(max: number, value: number) {\n  const validValue = value || value === 0;\n  const validMax = max || max === 0;\n  return validValue && validMax && value > max;\n}\n\nexport function dateFailed(value: string) {\n  return (value && isNaN(Date.parse(value)));\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, uuid } from './../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\nimport { PoCheckboxGroupOptionView } from './interfaces/po-checkbox-group-option-view.interface';\n\nconst poCheckboxGroupColumnsDefaultLength: number = 6;\nconst poCheckboxGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `po-checkbox-group` exibe uma lista de mÃºltipla escolha onde o usuÃ¡rio pode marcar e desmarcar,\n * utilizando a tecla de espaÃ§o ou o clique do mouse, vÃ¡rias opÃ§Ãµes.\n *\n * > Para seleÃ§Ã£o Ãºnica, utilize o [**Portinari Radio Group**](/documentation/po-radio-group).\n *\n * Por padrÃ£o, o po-checkbox-group retorna um array com os valores dos itens selecionados para o model.\n *\n * ```\n * favorites = ['PO', 'Angular'];\n * ```\n *\n * Na maioria das situaÃ§Ãµes, o array com os objetos setados jÃ¡ atende as necessidades mas, caso o desenvolvedor\n * tenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\n * deve setar a propriedade `p-indeterminate` como `true`.\n *\n * Nesse caso, o po-checkbox-group vai retornar um objeto com todas as opÃ§Ãµes disponÃ­veis e seus valores.\n *\n * ```\n * favorites = {\n *  PO: true,\n *  Angular: true,\n *  VueJS: false,\n *  React: null // indeterminado\n * };\n * ```\n */\nexport class PoCheckboxGroupBaseComponent implements ControlValueAccessor, Validator {\n\n  checkboxGroupOptionsView: Array<PoCheckboxGroupOptionView>;\n  checkedOptions: any = {};\n  checkedOptionsList: any = [];\n  mdColumns: number = poCheckboxGroupColumnsDefaultLength;\n  propagateChange: any;\n  validatorChange: any;\n\n  private _columns: number = poCheckboxGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _indeterminate?: boolean = false;\n  private _options?: Array<PoCheckboxGroupOption>;\n  private _required?: boolean = false;\n\n  /** Nome dos checkboxes */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Possibilita definir a quantidade de colunas para exibiÃ§Ã£o dos itens do *checkbox*.\n   * - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   * - Para resoluÃ§Ã£o `sm` a colunagem invariavelmente passa para `1` coluna.\n   * - Quando se trata de resoluÃ§Ã£o `md` e o valor estabelecido para colunas for superior a `2`,\n   * o *grid system* serÃ¡ composto por `2` colunas.\n   * - Para evitar a quebra de linha, prefira a utilizaÃ§Ã£o de `1` coluna para opÃ§Ãµes com textos grandes.\n   *\n   * @default `2`\n   *\n   */\n  @Input('p-columns') set columns(value: number) {\n    const columns = convertToInt(value, poCheckboxGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todos os itens do checkbox.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Texto de apoio do campo */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso exista a necessidade de usar o valor indeterminado (`null`) dentro da lista de opÃ§Ãµes, Ã© necessÃ¡rio setar\n   * a propriedade `p-indeterminate` como `true`, por padrÃ£o essa propriedade vem desabilitada (`false`).\n   *\n   * Quando essa propriedade Ã© setada como `true`, o *po-checkbox-group* passa a devolver um objeto completo para o\n   * `ngModel`, diferente do array que contÃ©m apenas os valores selecionados.\n   *\n   * @default `false`\n   */\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Label do campo */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Lista de opÃ§Ãµes que serÃ£o exibidas\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoCheckboxGroupOption\n   */\n  @Input('p-options') set options(value: Array<PoCheckboxGroupOption>) {\n    this._options = Array.isArray(value) ? value : [];\n    this.removeDuplicatedOptions();\n    this.setCheckboxGroupOptionsView(this.options);\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  // FunÃ§Ã£o para atualizar o `ngModel` do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue() {\n\n    const value = this.checkIndeterminate();\n\n    if (this.propagateChange) {\n      this.propagateChange(value);\n    } else {\n      this.ngModelChange.emit(value);\n    }\n\n    this.change.emit(value);\n  }\n\n  checkIndeterminate() {\n    return this.indeterminate ? this.checkedOptions : this.checkedOptionsList;\n  }\n\n  checkOption(value: PoCheckboxGroupOption) {\n    if (!this._disabled && !value.disabled) {\n      this.checkOptionModel(value);\n      this.changeValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(optionsModel: any) {\n    if (optionsModel && this.checkedOptions !== optionsModel) {\n      this.generateCheckOptions(optionsModel);\n    } else {\n      this.checkedOptionsList = [];\n      this.checkedOptions = {};\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if ((!this.indeterminate && requiredFailed(this.required, this.disabled, abstractControl.value)) || this.isInvalidIndeterminate()) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private checkOptionModel(optionChecked: PoCheckboxGroupOption) {\n    this.checkedOptions[optionChecked.value] = !this.checkedOptions[optionChecked.value];\n\n    if (!this.indeterminate && this.checkedOptionsList.includes(optionChecked.value)) {\n      this.checkedOptionsList.splice(this.checkedOptionsList.indexOf(optionChecked.value), 1);\n\n    } else if (!this.indeterminate) {\n      this.checkedOptionsList.push(optionChecked.value);\n    }\n  }\n\n  private generateCheckOptions(optionsModel: any) {\n\n    this.checkedOptions = {};\n\n    if (optionsModel instanceof Array) {\n      this.checkedOptionsList = optionsModel;\n\n      this.options.forEach((option: PoCheckboxGroupOption) => {\n        this.checkedOptions[option.value] = optionsModel.includes(option.value);\n      });\n    } else {\n      this.options.forEach((option: PoCheckboxGroupOption) => {\n        optionsModel[option.value] = optionsModel[option.value] === undefined ? false : optionsModel[option.value];\n        this.checkedOptions = optionsModel;\n      });\n    }\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = poCheckboxGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poCheckboxGroupColumnsDefaultLength;\n  }\n\n  private isInvalidIndeterminate() {\n    if (this.indeterminate && this.required && this.checkedOptions) {\n      return (<any>Object).values(this.checkedOptions).every(value => value === false);\n    }\n    return false;\n  }\n\n  private removeDuplicatedOptions() {\n    this.options.forEach((option, index) => {\n      const duplicatedIndex = this.options.findIndex((optionFind: any) => optionFind.value === option.value) === index;\n      if (!duplicatedIndex) {\n        this.options.splice(this.options.indexOf(option), 1);\n      }\n    });\n  }\n\n  private setCheckboxGroupOptionsView(optionsList: Array<PoCheckboxGroupOption>) {\n    this.checkboxGroupOptionsView = optionsList.map(option => {\n      return { ...option, id: uuid() };\n    });\n  }\n\n}\n","import { AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef,\n  forwardRef, QueryList, ViewChildren } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoCheckboxGroupBaseComponent } from './po-checkbox-group-base.component';\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\n\n/**\n * @docsExtends PoCheckboxGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-checkbox-group-basic\" title=\"Portinari Checkbox Group Basic\">\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-group-labs\" title=\"Portinari Checkbox Group Labs\">\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-group-password-policy\" title=\"Portinari Checkbox Group â Security policy\">\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-checkbox-group',\n  templateUrl: './po-checkbox-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoCheckboxGroupComponent extends PoCheckboxGroupBaseComponent implements AfterViewChecked {\n\n  @ViewChildren('checkboxLabel') checkboxLabels: QueryList<ElementRef>;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoCheckboxGroupComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoCheckboxGroupComponent, { static: true }) checkbox: PoCheckboxGroupComponent;\n   *\n   * focusCheckbox() {\n   *   this.checkbox.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.checkboxLabels && !this.disabled) {\n      const checkboxLabel = this.checkboxLabels.find((_, index) => !this.options[index].disabled);\n\n      if (checkboxLabel) {\n        checkboxLabel.nativeElement.focus();\n      }\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent, option: PoCheckboxGroupOption) {\n    const spaceBar = 32;\n\n    if (event.which === spaceBar || event.keyCode === spaceBar) {\n      this.checkOption(option);\n\n      event.preventDefault();\n    }\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldContainerModule } from '../po-field-container/po-field-container.module';\n\nimport { PoCheckboxGroupComponent } from './po-checkbox-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-checkbox-group`.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoFieldContainerModule\n  ],\n  exports: [\n    PoCheckboxGroupComponent\n  ],\n  declarations: [\n    PoCheckboxGroupComponent\n  ]\n})\nexport class PoCheckboxGroupModule { }\n","import { Input, EventEmitter } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\nimport { PoModalAction } from './po-modal-action.interface';\n\n/**\n * @description\n *\n * O componente `po-modal` Ã© utilizado para incluir conteÃºdos rÃ¡pidos e informativos.\n *\n * No cabeÃ§alho do componente Ã© possÃ­vel definir um tÃ­tulo e como tambÃ©m permite ocultar o Ã­cone de fechamento da modal.\n *\n * Em seu corpo Ã© possÃ­vel definir um conteÃºdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\n * `po-table` e os demais componentes do PO.\n *\n * No rodapÃ© encontram-se os botÃµes de aÃ§Ã£o primÃ¡ria e secundÃ¡ria, no qual permitem definir uma aÃ§Ã£o e um rÃ³tulo, bem como\n * definir um estado de carregando e / ou desabilitado. TambÃ©m Ã© possÃ­vel definir o botÃ£o com o tipo *danger*.\n *\n * > Ã possÃ­vel fechar a modal atravÃ©s da tecla *ESC*, quando a propriedade `p-hide-close` nÃ£o estiver habilitada.\n */\nexport class PoModalBaseComponent {\n\n  private _hideClose?: boolean = false;\n  private _size?: string = 'md';\n\n  /** TÃ­tulo da modal. */\n  @Input('p-title') title: string;\n\n  /**\n   * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a funÃ§Ã£o da primeira aÃ§Ã£o.\n   * Caso esta propriedade nÃ£o seja definida ou esteja incompleta, automaticamente serÃ¡ adicionado um botÃ£o de aÃ§Ã£o com\n   * a funÃ§Ã£o de fechar a modal.\n   */\n  @Input('p-primary-action') primaryAction?: PoModalAction;\n\n  /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a funÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('p-secondary-action') secondaryAction?: PoModalAction;\n\n  /**\n   * Define o tamanho da modal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `sm` (pequeno)\n   *  - `md` (mÃ©dio)\n   *  - `lg` (grande)\n   *  - `xl` (extra grande)\n   *  - `auto` (automÃ¡tico)\n   *\n   * > Quando informado `auto` a modal calcularÃ¡ automaticamente seu tamanho baseado em seu conteÃºdo.\n   * Caso nÃ£o seja informado um valor, a modal terÃ¡ o tamanho definido como `md`.\n   *\n   * > Todas as opÃ§Ãµes de tamanho possuem uma largura mÃ¡xima de **768px**.\n   */\n  @Input('p-size') set size(value: string) {\n    const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];\n    this._size = sizes.indexOf(value) > -1 ? value : 'md';\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Define o fechamento da modal ao clicar fora da mesma.\n   * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\n   */\n  clickOut?: boolean = false;\n  @Input('p-click-out') set setClickOut(value: boolean | string) {\n    this.clickOut = (value === '') ? false : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o Ã­cone de fechar do cabeÃ§alho da modal.\n   *\n   * > Caso a propriedade estiver habilitada, nÃ£o serÃ¡ possÃ­vel fechar a modal atravÃ©s da tecla *ESC*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-close') set hideClose(value: boolean) {\n    this._hideClose = convertToBoolean(value);\n  }\n\n  get hideClose() {\n    return this._hideClose;\n  }\n\n  // Controla se a modal fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto\n  isHidden = true;\n\n  // Event emmiter para quando a modal Ã© fechada pelo 'X'.\n  public onXClosed = new EventEmitter<boolean>();\n\n  /** FunÃ§Ã£o para fechar a modal. */\n  close(xClosed = false): void {\n    this.isHidden = true;\n    if (xClosed) {\n      this.onXClosed.emit(xClosed);\n    }\n  }\n\n  /** FunÃ§Ã£o para abrir a modal. */\n  open(): void {\n    this.validPrimaryAction();\n\n    this.isHidden = false;\n  }\n\n  validPrimaryAction() {\n    if (!this.primaryAction) {\n      this.primaryAction = {\n        action: () => this.close(),\n        label: 'Ok',\n      };\n    }\n\n    if (!this.primaryAction['action']) {\n      this.primaryAction['action'] = () => this.close();\n    }\n    if (!this.primaryAction['label']) {\n      this.primaryAction['label'] = 'Ok';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoModalService {\n\n  modalActive: string;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { PoModalBaseComponent } from './po-modal-base.component';\nimport { PoModalService } from './po-modal-service';\n\n/**\n * @docsExtends PoModalBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-basic\" title=\"Portinari Modal Basic\">\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-labs\" title=\"Portinari Modal Labs\">\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-fruits-salad\" title=\"Portinari Modal - Fruits Salad\">\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html\"> </file>\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal',\n  templateUrl: './po-modal.component.html'\n})\nexport class PoModalComponent extends PoModalBaseComponent {\n\n  @ViewChild('modalContent', { read: ElementRef, static: false }) modalContent: ElementRef;\n\n  private firstElement;\n  private focusFunction;\n  private focusableElements = 'input, select, textarea, button:not([disabled]), a';\n  private id: string = uuid();\n  private sourceElement;\n\n  onResizeListener: () => void;\n\n  constructor(private poModalService: PoModalService, private renderer: Renderer2, private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  close(xClosed = false) {\n    this.poModalService.modalActive = undefined;\n\n    super.close(xClosed);\n\n    this.removeEventListeners();\n\n    if (this.sourceElement) {\n      this.sourceElement.focus();\n    }\n  }\n\n  closeModalOnEscapeKey(event) {\n    if (!this.hideClose) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.close();\n    }\n  }\n\n  getPrimaryActionButtonType() {\n    return this.primaryAction.danger ? 'danger' : 'primary';\n  }\n\n  getSecondaryActionButtonType() {\n    return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';\n  }\n\n  onClickOut(event) {\n    if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {\n      this.close();\n    }\n  }\n\n  open() {\n    this.sourceElement = document.activeElement;\n\n    super.open();\n\n    this.handleFocus();\n  }\n\n  private handleFocus(): any {\n    this.poModalService.modalActive = this.id;\n\n    setTimeout(() => {\n      if (this.modalContent) {\n        this.initFocus();\n        document.addEventListener('focus', this.focusFunction, true);\n      }\n    });\n  }\n\n  private initFocus() {\n    this.focusFunction = (event: any) => {\n      this.poModalService.modalActive = this.poModalService.modalActive || this.id;\n      const modalElement = this.modalContent.nativeElement;\n\n      if (!modalElement.contains(event.target) && this.poModalService.modalActive === this.id) {\n        event.stopPropagation();\n        this.firstElement.focus();\n      }\n    };\n\n    this.setFirstElement();\n\n    if (this.hideClose) {\n      this.firstElement.focus();\n    } else {\n      const firstFieldElement =\n        this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] ||\n        this.modalContent.nativeElement;\n      firstFieldElement.focus();\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('focus', this.focusFunction, true);\n  }\n\n  private setFirstElement() {\n    this.firstElement = this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoButtonModule } from './../po-button/po-button.module';\nimport { PoModalComponent } from './po-modal.component';\nimport { PoModalService } from './po-modal-service';\n\n/**\n * @description\n * MÃ³dulo do componente po-modal\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoButtonModule\n  ],\n  declarations: [\n    PoModalComponent\n  ],\n  exports: [ PoModalComponent ],\n  providers: [PoModalService]\n})\nexport class PoModalModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-progress-bar',\n  templateUrl: './po-progress-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoProgressBarComponent {\n\n  @Input('p-indeterminate') indeterminate: boolean;\n\n  @Input('p-value') value: number;\n\n  get valueScale() {\n    return `${this.value / 100}`;\n  }\n\n}\n","/**\n * @usedBy PoProgressComponent\n *\n * @description\n *\n * *Enum* `PoProgressStatus` para os status de barra de progresso.\n */\nexport enum PoProgressStatus {\n\n  /** Define o status `default` para a barra de progresso. */\n  Default = 'default',\n\n  /** Define o status de `error` para a barra de progresso. */\n  Error = 'error',\n\n  /** Define o status de `success` para a barra de progresso. */\n  Success = 'success'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n\nconst poProgressMaxValue = 100;\nconst poProgressMinValue = 0;\n\n/**\n * @description\n *\n * Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\n *\n * Este componente pode ser utilizado no *upload* de arquivos, uma atualizaÃ§Ã£o no sistema ou o processamento de uma imagem.\n */\nexport class PoProgressBaseComponent {\n\n  private _indeterminate?: boolean;\n  private _value?: number = 0;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita o modo indeterminado na barra de progresso, que mostra uma animaÃ§Ã£o fixa sem um valor estabelecido.\n   *\n   * Esta opÃ§Ã£o pode ser utilizada quando nÃ£o souber quanto tempo levarÃ¡ para que um processo seja concluÃ­do.\n   *\n   * > Caso esta propriedade e a `p-value` seja habilitada, a propriedade `p-value` serÃ¡ ignorada.\n   *\n   * @default `false`\n   */\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * InformaÃ§Ã£o adicional que aparecerÃ¡ abaixo da barra de progresso ao lado direito.\n   */\n  @Input('p-info') info?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ãcone que aparecerÃ¡ ao lado do texto da propriedade `p-info`.\n   *\n   * Exemplo: `po-icon-ok`.\n   */\n  @Input('p-info-icon') infoIcon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Status da barra de progresso que indicarÃ¡ visualmente ao usuÃ¡rio\n   * o andamento, por exemplo, se a mesma foi concluÃ­da com sucesso.\n   *\n   * @default `PoProgressStatus.Default`\n   */\n  @Input('p-status') status: PoProgressStatus = PoProgressStatus.Default;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto principal que aparecerÃ¡ abaixo da barra de progresso no lado esquerdo.\n   */\n  @Input('p-text') text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que representarÃ¡ o progresso.\n   *\n   * > Os valores aceitos sÃ£o nÃºmeros inteiros de `0` Ã  `100`.\n   *\n   * @default `0`\n   */\n  @Input('p-value') set value(value: number) {\n    const integerValue = convertToInt(value, poProgressMinValue);\n    const isProgressRangeValue = this.isProgressRangeValue(integerValue);\n\n    this._value = isProgressRangeValue ? integerValue : poProgressMinValue;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento que serÃ¡ disparado ao clicar no Ã­cone de cancelamento (\"x\") na parte inferior da barra de progresso.\n   *\n   * Ao ser disparado, a funÃ§Ã£o receberÃ¡ como parÃ¢metro o status atual da barra de progresso.\n   *\n   * > Se nenhuma funÃ§Ã£o for passada para o evento ou a barra de progresso estiver com o status `PoProgressStatus.Success`,\n   * o Ã­cone de cancelamento nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-cancel') cancel: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento que serÃ¡ disparado ao clicar no Ã­cone de tentar novamente na parte inferior da barra de progresso.\n   *\n   * > o Ã­cone serÃ¡ exibido apenas se informar uma funÃ§Ã£o neste evento e o status da barra de progresso for\n   * `PoProgressStatus.Error`.\n   */\n  @Output('p-retry') retry: EventEmitter<any> = new EventEmitter();\n\n  private isProgressRangeValue(value: number): boolean {\n    return value >= poProgressMinValue && value <= poProgressMaxValue;\n  }\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { PoProgressBaseComponent } from './po-progress-base.component';\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n\n/**\n * @docsExtends PoProgressBaseComponent\n *\n * @example\n * <example name=\"po-progress-basic\" title=\"Portinari Progress Basic\">\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.html\"> </file>\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-progress-labs\" title=\"Portinari Progress Labs\">\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.html\"> </file>\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-progress-publication\" title=\"Portinari Progress - Publication\">\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.html\"> </file>\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-progress',\n  templateUrl: './po-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoProgressComponent extends PoProgressBaseComponent {\n\n  get isAllowCancel(): boolean {\n    return !!this.cancel.observers.length && this.status !== PoProgressStatus.Success;\n  }\n\n  get isAllowProgressInfo(): boolean {\n    return !!(this.info || this.infoIcon || this.isAllowCancel || this.isAllowRetry);\n  }\n\n  get isAllowRetry(): boolean {\n    return !!this.retry.observers.length && this.status === PoProgressStatus.Error;\n  }\n\n  get statusClass(): string {\n\n    if (this.status === PoProgressStatus.Success) {\n      return 'po-progress-success';\n    }\n\n    if (this.status === PoProgressStatus.Error) {\n      return 'po-progress-error';\n    }\n\n    return 'po-progress-default';\n  }\n\n  emitCancellation() {\n    this.cancel.emit(this.status);\n  }\n\n  emitRetry() {\n    this.retry.emit();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoProgressBarComponent } from './po-progress-bar/po-progress-bar.component';\nimport { PoProgressComponent } from './po-progress.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-progress`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PoProgressComponent\n  ],\n  declarations: [\n    PoProgressBarComponent,\n    PoProgressComponent\n  ]\n})\nexport class PoProgressModule {}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m paleta de 12 cores.\n */\nexport enum PoColorPaletteEnum {\n\n  /** #0c9abe */\n  Color01 = 'color-01' ,\n\n  /** #2c85c8 */\n  Color02 = 'color-02',\n\n  /** #2c43c8 */\n  Color03 = 'color-03',\n\n  /** #5843c8 */\n  Color04 = 'color-04',\n\n  /** #ab43c8 */\n  Color05 = 'color-05',\n\n  /** #ab4391 */\n  Color06 = 'color-06',\n\n  /** #c64840 */\n  Color07 = 'color-07',\n\n  /** #ea9b3e */\n  Color08 = 'color-08',\n\n  /** #abc249 */\n  Color09 = 'color-09',\n\n  /** #56b96b */\n  Color10 = 'color-10',\n\n  /** #00b28e */\n  Color11 = 'color-11',\n\n  /** #06a6a5 */\n  Color12 = 'color-12'\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\n\n@Injectable()\nexport class PoColorPaletteService {\n\n  getColor(value: { color?: string, type?: string }): string {\n    return (<any>Object).values(PoColorPaletteEnum).includes(value.color) ?\n      value.color : this.getColorFromType(value.type || value.color);\n  }\n\n  private getColorFromType(type: string): PoColorPaletteEnum {\n    switch (type) {\n      case 'danger':\n        return PoColorPaletteEnum.Color07;\n      case 'success':\n        return PoColorPaletteEnum.Color11;\n      case 'warning':\n        return PoColorPaletteEnum.Color08;\n      default:\n        return PoColorPaletteEnum.Color01;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoColorPaletteService } from './po-color-palette.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-color-palette`.\n */\n@NgModule({\n  providers: [\n    PoColorPaletteService\n  ],\n  bootstrap: []\n})\nexport class PoColorPaletteModule { }\n","import { Injectable, ComponentRef, ComponentFactoryResolver, ApplicationRef, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoComponentInjectorService {\n\n  constructor(private componentResolver: ComponentFactoryResolver, private applicationRef: ApplicationRef, private injector: Injector) {}\n\n  // Cria um dinamicamente no ApplicationRef\n  createComponentInApplication(component: any): ComponentRef<any> {\n    const componentRef = this.componentResolver.resolveComponentFactory(component).create(this.injector);\n    this.applicationRef.attachView(componentRef.hostView);\n    const domElem = (<any>componentRef.hostView).rootNodes[0];\n    document.body.appendChild(domElem);\n    return componentRef;\n  }\n\n  // DestrÃ³i o componente e remove do ApplicationRef\n  destroyComponentInApplication(componentRef: any) {\n    this.applicationRef.detachView(componentRef.hostView);\n    componentRef.destroy();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentInjectorService } from './po-component-injector.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    PoComponentInjectorService\n  ],\n  bootstrap: []\n})\nexport class PoComponentInjectorModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoControlPositionService } from './po-control-position.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o po-control-position.\n */\n@NgModule({\n  providers: [\n    PoControlPositionService\n  ]\n})\nexport class PoControlPositionModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoDateService } from './po-date.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-date`.\n */\n@NgModule({\n  providers: [\n    PoDateService\n  ],\n  bootstrap: []\n})\nexport class PoDateTimeModule { }\n","/**\n * @docsPrivate\n *\n * @usedBy PoDialogService\n *\n * @description\n * Enums para as aÃ§Ãµes do componente po-dialog-base.service.\n */\nexport enum PoDialogType {\n  // Enum para alert\n  Alert,\n  // Enum para confirm\n  Confirm\n}\n","import { Component, ComponentRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\n\nimport { PoDialogAlertLiterals } from './interfaces/po-dialog-alert-literals.interface';\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogConfirmLiterals } from './interfaces/po-dialog-confirm-literals.interface';\nimport { PoDialogType } from './po-dialog.enum';\nimport { PoModalAction } from '../../components/po-modal/po-modal-action.interface';\nimport { PoModalComponent } from '../../components/po-modal/po-modal.component';\n\nexport const poDialogAlertLiteralsDefault = {\n  en: <PoDialogAlertLiterals> { ok: 'Ok' },\n  es: <PoDialogAlertLiterals> { ok: 'Ok' },\n  pt: <PoDialogAlertLiterals> { ok: 'Ok' },\n  ru: <PoDialogAlertLiterals> { ok: 'ÐÐº' }\n};\n\nexport const poDialogConfirmLiteralsDefault = {\n  en: <PoDialogConfirmLiterals> { cancel: 'Cancel', confirm: 'Confirm' },\n  es: <PoDialogConfirmLiterals> { cancel: 'Cancelar', confirm: 'Confirmar' },\n  pt: <PoDialogConfirmLiterals> { cancel: 'Cancelar', confirm: 'Confirmar' },\n  ru: <PoDialogConfirmLiterals> { cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ', confirm: 'Ð¿Ð¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÑ' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que serve como container do po-dialog.service\n */\n\n@Component({\n  templateUrl: './po-dialog.component.html'\n})\nexport class PoDialogComponent implements OnDestroy, OnInit {\n  // ViewChild para o uso do po-modal.component\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  // Title do poModal\n  title: string;\n\n  // Message do poModal\n  message: string;\n\n  // Objeto primary do poModal\n  primaryAction: PoModalAction = { label: 'ok', action: () => { } };\n\n  // Objeto secondary do poModal\n  secondaryAction: PoModalAction;\n\n  // Literais usadas nos botÃ£o de alerta do poModal\n  literalsAlert: PoDialogAlertLiterals;\n\n  // Literais usadas nos botÃµes de confirmaÃ§Ã£o do poModal\n  literalsConfirm: PoDialogConfirmLiterals;\n\n  // Atributo para armazenar a referencia do componente criado via serviÃ§o.\n  private componentRef: ComponentRef<PoDialogComponent>;\n  private closeSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.closeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.poModal.onXClosed.subscribe(close => this.destroy());\n  }\n\n    // Fecha o poModal\n  close(): void {\n    this.poModal.close();\n    this.destroy();\n  }\n\n  destroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  // Insere os valores recebidos de this.open para o poModal\n  configDialog(primaryLabel?, primaryAction?, secondaryLabel?, secondaryAction?) {\n\n    this.primaryAction = {\n      label: primaryLabel,\n      action: () => {\n          if (primaryAction) {\n            primaryAction();\n          }\n          this.close();\n      }\n    };\n\n    if (secondaryLabel) {\n      this.secondaryAction = {\n        label: secondaryLabel,\n        action: () => {\n          if (secondaryAction) {\n            secondaryAction();\n          }\n          this.close();\n        }\n      };\n    }\n  }\n\n  // Insere os valores recebidos de po-dialog.service de acordo com o tipo de diÃ¡lago solicitado\n  open(dialogOptions: (PoDialogConfirmOptions | PoDialogAlertOptions),\n       dialogType: PoDialogType,\n       componentRef?: ComponentRef<PoDialogComponent>): void {\n\n    this.title = dialogOptions.title;\n    this.message = dialogOptions.message;\n\n    this.componentRef = componentRef;\n\n    this.setDialogLiterals(dialogOptions, dialogType);\n\n    switch (dialogType) {\n      case PoDialogType.Confirm: {\n        this.configDialog(\n          this.literalsConfirm.confirm, (<PoDialogConfirmOptions>dialogOptions).confirm,\n          this.literalsConfirm.cancel, (<PoDialogConfirmOptions>dialogOptions).cancel);\n        break;\n      }\n      case PoDialogType.Alert: {\n        this.configDialog(this.literalsAlert.ok, (<PoDialogAlertOptions>dialogOptions).ok);\n        break;\n      }\n    }\n\n    this.poModal.open();\n  }\n\n  private setDialogLiterals(dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions, dialogType: PoDialogType) {\n    const alertLiterals = poDialogAlertLiteralsDefault;\n    const confirmLiterals = poDialogConfirmLiteralsDefault;\n    const literals = dialogOptions.literals;\n\n    if (dialogType === PoDialogType.Alert) {\n      this.literalsAlert = {...alertLiterals[poLocaleDefault], ...alertLiterals[browserLanguage()], ...literals};\n    } else {\n      this.literalsConfirm = {...confirmLiterals[poLocaleDefault], ...confirmLiterals[browserLanguage()], ...literals};\n    }\n  }\n}\n","import { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogType } from './po-dialog.enum';\n\n/**\n * @description\n *\n * O po-dialog Ã© um serviÃ§o para exibiÃ§Ã£o de caixas de diÃ¡logo, Ã© possÃ­vel customiza-los passando alguns parÃ¢metros de acordo com a\n * necessidade do desenvolvedor.\n */\n\nexport abstract class PoDialogBaseService {\n\n  /** Exibe um diÃ¡logo de confirmaÃ§Ã£o, Ã© possÃ­vel definir aÃ§Ãµes para as opÃ§Ãµes de confirmaÃ§Ã£o e cancelamento. */\n  confirm(confirmOptions: PoDialogConfirmOptions): void {\n    this.openDialog(PoDialogType.Confirm, confirmOptions);\n  }\n\n  /** Exibe um diÃ¡logo de alerta. */\n  alert(alertOptions: PoDialogAlertOptions): void {\n    this.openDialog(PoDialogType.Alert, alertOptions);\n  }\n\n  // Usado para chamar um diÃ¡logo\n  abstract openDialog(dialogType: PoDialogType, dialogOptions: (PoDialogAlertOptions | PoDialogConfirmOptions)): void;\n}\n","import { Injectable, ComponentRef } from '@angular/core';\n\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogBaseService } from './po-dialog-base.service';\nimport { PoDialogComponent } from './po-dialog.component';\nimport { PoDialogType } from './po-dialog.enum';\n\n/**\n * @docsExtends PoDialogBaseService\n *\n * @example\n *\n * <example name=\"po-dialog-basic\" title=\"Portinari Dialog Basic\">\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.html\"> </file>\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dialog-labs\" title=\"Portinari Dialog Labs\">\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.html\"> </file>\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dialog-cancel-credit-card\" title=\"Portinari Dialog - Cancel Credit Card\">\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.html\"> </file>\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.ts\"> </file>\n * </example>\n */\n@Injectable()\nexport class PoDialogService extends PoDialogBaseService {\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {\n    super();\n  }\n\n  openDialog(dialogType: PoDialogType, dialogOptions: PoDialogAlertOptions | PoDialogConfirmOptions): void {\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoDialogComponent);\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.open(dialogOptions, dialogType, componentRef);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\nimport { PoDialogComponent } from './po-dialog.component';\nimport { PoDialogService } from './po-dialog.service';\n\n@NgModule({\n  declarations: [\n    PoDialogComponent\n  ],\n  imports: [\n    PoModalModule\n  ],\n  exports: [\n    PoDialogComponent\n  ],\n  entryComponents: [\n    PoDialogComponent\n  ],\n  providers: [\n    PoDialogService\n  ]\n})\nexport class PoDialogModule { }\n","import { PipeTransform } from '@angular/core';\n\n/**\n * @description\n *\n * O pipe po-i18n Ã© responsÃ¡vel por tratar literais parÃ¢metrizadas, dando mais flexibilidade as literais de traduÃ§Ã£o.\n * O nÃºmero de parÃ¢metros inseridos nas literais deve coincidir com a quantia de parÃ¢metros passados por parÃ¢metro,\n * os parÃ¢metros serÃ£o substituidos de acordo com a ordem informada.\n *\n * Para inserir um parÃ¢metro em uma literal, o mesmo deverÃ¡ ser inserido entre chaves dentro da literal e posicionado\n * de acordo como deve ser exibido apÃ³s a sua transformaÃ§Ã£o.\n *\n * ```\n * const i18nPT = {\n *   pagination: 'PÃ¡gina {1} de {2} pÃ¡ginas.',\n *   totalPages: 'Total de {totalPages} encontradas.'\n * };\n * ```\n *\n * Ã possÃ­vel passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem\n * informada na literal.\n *\n * ```\n * {{ i18nPT.pagination | poI18n:[1,10] }}\n * {{ i18nPT.totalPages | poI18n:10 }}\n * ```\n */\nexport class PoI18nBasePipe implements PipeTransform {\n\n  transform(value: string, args: any): string {\n    if (!value) {\n      return '';\n    }\n\n    if (!(args instanceof Array)) {\n      args = [args];\n    }\n\n    for (const arg of args) {\n      value = value.replace(/(\\{\\w*\\})+/,  arg);\n    }\n\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { PoI18nBasePipe } from './po-i18n-base.pipe';\n\n/**\n * @docsExtends PoI18nBasePipe\n *\n * @example\n * <example name='po-i18n-pipe-labs' title='Portinari i18n Pipe Labs' >\n *  <file name='sample-po-i18n-pipe-labs.component.html'> </file>\n *  <file name='sample-po-i18n-pipe-labs.component.ts'> </file>\n *  <file name='sample-po-i18n-pipe.component.html'> </file>\n *  <file name='sample-po-i18n-pipe.component.ts'> </file>\n * </example>\n */\n@Pipe({\n  name: 'poI18n'\n})\nexport class PoI18nPipe extends PoI18nBasePipe implements PipeTransform { }\n","/**\n * @docsPrivate\n *\n * Enums para a orientaÃ§Ã£o da notificaÃ§Ã£o, do componente po-toaster-base.component.\n */\nexport enum PoToasterOrientation {\n  /** OrientÃ§Ã£o do componente fica no rodapÃ© */\n  Bottom,\n  /** OrientÃ§Ã£o do componente fica no topo */\n  Top\n}\n","import { PoToasterOrientation } from './po-toaster-orientation.enum';\nimport { PoToasterType } from './po-toaster-type.enum';\nimport { PoToaster } from './po-toaster.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente po-toaster foi construÃ­do para exibir notificaÃ§Ãµes para o usuÃ¡rio.\n */\nexport abstract class PoToasterBaseComponent {\n\n  /** Disponibiliza uma aÃ§Ã£o para a notificaÃ§Ã£o. */\n  action: Function;\n\n  /** Permite alterar o label do botÃ£o quando houver uma aÃ§Ã£o definida. */\n  actionLabel: string;\n\n  /** Mensagem a ser exibida na notificaÃ§Ã£o. */\n  message: string;\n\n  /** OrientaÃ§Ã£o da notificaÃ§Ã£o, a mesma pode ser exibida na parte superior ou inferior da pÃ¡gina. */\n  orientation: PoToasterOrientation = PoToasterOrientation.Bottom;\n\n  /** ComponentRef */\n  componentRef: any;\n\n  /** PosiÃ§Ã£o para notificaÃ§Ã£o aparecer na tela. */\n  position: number;\n\n  /** Tipo de notificaÃ§Ã£o. */\n  type: PoToasterType;\n\n  /** Fecha a notificaÃ§Ã£o. */\n  abstract close(): void;\n\n  /**\n   * Altera a posiÃ§Ã£o da notificaÃ§Ã£o.\n   * @param number value\n   */\n  abstract changePosition(value: number): void;\n\n  /**\n   * Configura o componente po-toaster de acordo com as definiÃ§Ãµes do usuÃ¡rio.\n   * @param PoToaster poToaster\n   * @param ComponentRef comp\n   */\n  abstract configToaster(poToaster: PoToaster): void;\n\n}\n","/**\n * @docsPrivate\n *\n * Enums para os tipos de notificaÃ§Ã£o, do componente po-toaster-base.component.\n */\nexport enum PoToasterType {\n  /** Enum para informaÃ§Ãµes do tipo \"Erro\" */\n  Error,\n  /** Enum para informaÃ§Ãµes do tipo \"InformaÃ§Ã£o\" */\n  Information,\n  /** Enum para informaÃ§Ãµes do tipo \"Sucesso\" */\n  Success,\n  /** Enum para informaÃ§Ãµes do tipo \"AtenÃ§Ã£o\" */\n  Warning\n}\n","import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoToasterBaseComponent } from './po-toaster-base.component';\nimport { PoToaster } from './po-toaster.interface';\nimport { PoToasterType } from './po-toaster-type.enum';\nimport { PoToasterOrientation } from './po-toaster-orientation.enum';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoToasterBaseComponent\n */\n@Component({\n  selector: 'po-toaster',\n  templateUrl: './po-toaster.component.html'\n})\nexport class PoToasterComponent extends PoToasterBaseComponent {\n\n  /* Ãcone do Toaster */\n  private icon: string;\n  /* Margem do Toaster referÃªnte Ã  sua orientaÃ§Ã£o e posiÃ§Ã£o*/\n  private margin: number = 20;\n  /* Observable para monitorar o Close to Toaster */\n  private observableOnClose = new Subject<any>();\n  /* Mostra ou oculta o Toaster */\n  private showToaster: boolean = true;\n  /* PosiÃ§Ã£o do Toaster*/\n  private toasterPosition: string = 'po-toaster-bottom';\n  /* Tipo do Toaster */\n  private toasterType: string;\n\n  /* Componente toaster */\n  @ViewChild('toaster', { static: false }) toaster: ElementRef;\n\n  constructor(public changeDetector: ChangeDetectorRef, private elementeRef?: ElementRef) {\n    super();\n  }\n\n  /* Muda a posiÃ§Ã£o do Toaster na tela*/\n  changePosition(position: number): void {\n    this.elementeRef.nativeElement.style.display = 'table';\n\n    this.margin = 6 + (44 * (position)) + position * 6;\n\n    if (this.orientation === PoToasterOrientation.Top) {\n      this.toaster.nativeElement.style.top = this.margin + 'px';\n    } else {\n      this.toaster.nativeElement.style.bottom = this.margin + 'px';\n    }\n\n  }\n\n  /* Fecha o componente Toaster */\n  close(): void {\n    this.showToaster = false;\n    this.observableOnClose.next(true);\n  }\n\n  /* Configura o Toaster com os atributos passados para ele */\n  configToaster(poToaster: PoToaster) {\n    this.type = poToaster.type;\n    this.message = poToaster.message;\n    this.orientation = poToaster.orientation;\n    this.position = poToaster.position;\n    this.action = poToaster.action;\n    this.actionLabel = (poToaster.actionLabel) ? poToaster.actionLabel : 'Fechar';\n    this.componentRef = poToaster.componentRef;\n\n    /* Muda a orientaÃ§Ã£o do Toaster */\n    if (this.orientation === PoToasterOrientation.Top) {\n      this.toasterPosition = 'po-toaster-top';\n    }\n\n    /* Muda a posiÃ§Ã£o do Toaster */\n    this.changePosition(this.position);\n\n    /* Switch para o tipo de Toaster */\n    switch (this.type) {\n      case PoToasterType.Error: {\n        this.toasterType = 'po-toaster-error';\n        this.icon = 'po-icon-close';\n        break;\n      }\n      case PoToasterType.Information: {\n        this.toasterType = 'po-toaster-info';\n        this.icon = 'po-icon-info';\n        break;\n      }\n      case PoToasterType.Success: {\n        this.toasterType = 'po-toaster-success';\n        this.icon = 'po-icon-ok';\n        break;\n      }\n      case PoToasterType.Warning: {\n        this.toasterType = 'po-toaster-warning';\n        this.icon = 'po-icon-warning';\n        break;\n      }\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  getShowToaster() {\n    return this.showToaster;\n  }\n\n  getIcon() {\n    return this.icon;\n  }\n\n  getToasterPosition() {\n    return this.toasterPosition;\n  }\n\n  getToasterType() {\n    return this.toasterType;\n  }\n\n  /* Chama a funÃ§Ã£o passada pelo atributo `action` */\n  poToasterAction(): void {\n    this.action(this);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\n\n@NgModule({\n  declarations: [\n    PoToasterComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n  ],\n  entryComponents: [\n    PoToasterComponent\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoNotificationModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoColorPaletteModule } from './po-color-palette/po-color-palette.module';\nimport { PoComponentInjectorModule } from './po-component-injector/po-component-injector.module';\nimport { PoControlPositionModule } from './po-control-position/po-control-position.module';\nimport { PoDateTimeModule } from './po-date/po-date.module';\nimport { PoDialogModule } from './po-dialog/po-dialog.module';\nimport { PoI18nPipe } from './po-i18n/po-i18n.pipe';\nimport { PoLanguageModule } from './po-language/po-language.module';\nimport { PoNotificationModule } from './po-notification/po-notification.module' ;\n\n@NgModule({\n  declarations: [\n    PoI18nPipe\n  ],\n  imports: [\n    PoColorPaletteModule,\n    PoComponentInjectorModule,\n    PoControlPositionModule,\n    PoDateTimeModule,\n    PoDialogModule,\n    PoLanguageModule,\n    PoNotificationModule\n  ],\n  exports: [\n    PoColorPaletteModule,\n    PoComponentInjectorModule,\n    PoControlPositionModule,\n    PoDateTimeModule,\n    PoDialogModule,\n    PoI18nPipe,\n    PoNotificationModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoServicesModule { }\n","import { ElementRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nconst PO_POPOVER_DEFAULT_POSITION = 'right';\nconst PO_POPOVER_DEFAULT_TRIGGER = 'click';\nconst PO_POPOVER_TRIGGERS = ['click', 'hover'];\n\n/**\n * @description\n *\n * O componente `po-popover` Ã© um container pequeno recomendado para incluir vÃ¡rios tipos de conteÃºdo como:\n * grÃ¡ficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\n *\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\n * [**po-tooltip**](https://portinari.io/documentation/po-tooltip?view=doc).\n *\n * Para conteÃºdos maiores recomenda-se o uso do [**po-modal**](https://portinari.io/documentation/po-modal?view=doc).\n *\n * Ele contÃ©m um tÃ­tulo e tambÃ©m Ã© possÃ­vel escolher as posiÃ§Ãµes do popover em relaÃ§Ã£o ao componente pai,\n * as posiÃ§Ãµes permitidas sÃ£o: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\n *\n * TambÃ©m Ã© possÃ­vel escolher entre os dois eventos que podem abrir o *popover*.\n * Os eventos permitidos sÃ£o: `click` e `hover`.\n *\n */\nexport class PoPopoverBaseComponent {\n\n  // Controla se o popover fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto.\n  isHidden: boolean = true;\n\n  private _hideArrow: boolean = false;\n  private _position?: string = PO_POPOVER_DEFAULT_POSITION;\n  private _trigger?: string = PO_POPOVER_DEFAULT_TRIGGER;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a seta do componente *popover*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o po-popover abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"right\" (direita), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popover no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popover abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popover abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popover abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popover acima do componente alvo.\n   * - `top-right`: Posiciona o po-popover acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popover acima e Ã  esquerda do componente alvo.\n   *\n   *\n   * @default right\n   */\n  @Input('p-position') set position(value: string) {\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : PO_POPOVER_DEFAULT_POSITION;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @description\n   *\n   * ElementRef do componente de origem responsÃ¡vel por abrir o popover.\n   * Para utilizar o po-popover deve-se colocar uma variÃ¡vel no componente que vai disparar o evento\n   * de abertura, exemplo:\n   *\n   * ```\n   * <po-button\n   *   p-label=\"Open Popover\">\n   * </po-button>\n   *\n   * <po-popover\n   *   [p-origin]=\"poButton\"\n   *   [p-title]=\"Portinari Popover\">\n   * </po-popover>\n   * ```\n   *\n   * TambÃ©m deve-se criar um ViewChild para cada popover, passando como referÃªncia o elemento do\n   * HTML que irÃ¡ disparar o evento. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;\n   * ```\n   */\n  @Input('p-target') target: ElementRef;\n\n  /** TÃ­tulo do popover. */\n  @Input('p-title') title?: string;\n\n  /**\n   * @description\n   *\n   * Define o evento que abrirÃ¡ o po-popover.\n   *\n   * Valores vÃ¡lidos:\n   *  - `click`: Abre ao clicar no componente alvo.\n   *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\n   *\n   * @default click\n   * @optional\n   */\n  @Input('p-trigger') set trigger(value: string) {\n    this._trigger = PO_POPOVER_TRIGGERS.includes(value) ? value : PO_POPOVER_DEFAULT_TRIGGER;\n  }\n\n  get trigger(): string {\n    return this._trigger;\n  }\n\n  protected clickoutListener: () => void;\n  protected mouseEnterListener: () => void;\n  protected mouseLeaveListener: () => void;\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';\nimport { PoPopoverBaseComponent } from './po-popover-base.component';\n\n/**\n *\n * @docsExtends PoPopoverBaseComponent\n *\n * @example\n *\n * <example name=\"po-popover-basic\" title=\"Portinari Popover Basic\">\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.html\"> </file>\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popover-labs\" title=\"Portinari Popover Labs\">\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.html\"> </file>\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popover-credit-card\" title=\"Portinari Popover - Credit Card\">\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.html\"> </file>\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-popover',\n  templateUrl: './po-popover.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoPopoverComponent extends PoPopoverBaseComponent implements AfterViewInit, OnDestroy {\n\n  arrowDirection = 'left';\n  timeoutResize;\n\n  eventListenerFunction: () => void;\n\n  @ViewChild('popoverElement', {read: ElementRef, static: true }) popoverElement: ElementRef;\n\n  constructor(private renderer: Renderer2, private poControlPosition: PoControlPositionService) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    this.initEventListenerFunction();\n\n    this.setElementsControlPosition();\n\n    this.setRendererListenInit();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  close(): void {\n    this.isHidden = true;\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.setPopoverPosition();\n    }, 200);\n  }\n\n  open(): void {\n    this.addScrollEventListener();\n\n    this.isHidden = false;\n    this.setOpacity(0);\n\n    setTimeout(() => {\n      this.setElementsControlPosition();\n      this.setPopoverPosition();\n      this.setOpacity(1);\n    });\n  }\n\n  setOpacity(value: number): void {\n    this.popoverElement.nativeElement.style.opacity = value;\n  }\n\n  setPopoverPosition() {\n    this.poControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\n  }\n\n  setRendererListenInit() {\n\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: Event) => {\n      if (!this.isHidden) {\n        this.debounceResize();\n      }\n    });\n\n    if (this.trigger === 'hover') {\n      this.mouseEnterListener = this.renderer.listen(this.target.nativeElement, 'mouseenter', (event: MouseEvent) => {\n        this.open();\n      });\n\n      this.mouseLeaveListener = this.renderer.listen(this.target.nativeElement, 'mouseleave', (event: MouseEvent) => {\n        this.close();\n      });\n    } else {\n      this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n        this.togglePopup(event);\n      });\n    }\n  }\n\n  togglePopup(event): void {\n    if (!this.isHidden && !this.popoverElement.nativeElement.contains(event.target) &&\n    !this.target.nativeElement.contains(event.target)) {\n\n      this.close();\n    } else if (this.target.nativeElement.contains(event.target)) {\n\n      this.popoverElement.nativeElement.hidden ? this.open() : this.close();\n    }\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private initEventListenerFunction() {\n    this.eventListenerFunction = () => {\n        this.setPopoverPosition();\n    };\n  }\n\n  private removeListeners() {\n\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n\n    this.resizeListener();\n\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private setElementsControlPosition() {\n    const popoverOffset = 8;\n    this.poControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopoverComponent } from './po-popover.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-popover.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoPopoverComponent],\n  exports: [PoPopoverComponent]\n})\nexport class PoPopoverModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Pipe responsÃ¡vel por apresentar um horÃ¡rio baseado no formato de entrada definido na API da Portinari.\n */\n@Pipe({\n  name: 'po_time'\n})\nexport class PoTimePipe implements PipeTransform {\n\n  transform(time: string, format?: string): string {\n\n    const hourRegex = /^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\\.]?([0-9]{1,6})?$/g;\n\n    if (isTypeof(time, 'string') && hourRegex.test(time)) {\n\n      const amountOfF = format ? format.lastIndexOf('f') - format.indexOf('f') + 1 : 0;\n\n      const miliseconds = this.addDotMiliseconds(time.substring(9, 9 + amountOfF), amountOfF);\n      const formatMiliseconds: string = this.getFormatMiliseconds(amountOfF);\n\n      return this.formatValue(time, format, formatMiliseconds, miliseconds);\n    }\n    return null;\n  }\n\n  private addDotMiliseconds(miliseconds: string, amountOfF: number): string {\n    if (miliseconds && amountOfF) {\n      miliseconds = '.' + miliseconds;\n    }\n    return miliseconds;\n  }\n\n  private formatValue(time: string, format: string, formatMiliseconds: string, miliseconds: string): string {\n    if (time && format) {\n      const hour = time.substring(0, 2);\n      const minutes = time.substring(3, 5);\n      const seconds = time.substring(6, 8);\n\n      format = format.replace('HH', hour);\n      format = format.replace('mm', minutes);\n      format = format.replace('ss', seconds);\n      format = format.replace(`.${formatMiliseconds}`, miliseconds);\n\n      return format;\n    } else {\n      return time;\n    }\n  }\n\n  private getFormatMiliseconds(amountOfF: number): string {\n    let formatMiliseconds: string = '';\n\n    for (let i = 0; i < amountOfF; i++) {\n      formatMiliseconds += 'f';\n    }\n\n    return formatMiliseconds;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoTimePipe } from './po-time.pipe';\n\n/**\n * @description\n *\n * MÃ³dulo do pipe `po-time`.\n */\n@NgModule({\n  declarations: [\n    PoTimePipe\n  ],\n  imports: [],\n  exports: [\n    PoTimePipe\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoTimeModule { }\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { PoTableColumnIcon } from './po-table-column-icon.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir Ã­cones nas colunas.\n */\n@Component({\n  selector: 'po-table-column-icon',\n  templateUrl: './po-table-column-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PoTableColumnIconComponent {\n\n  private _icons: Array<PoTableColumnIcon> = [];\n\n  /** Lista de colunas com Ã­cones. */\n  @Input('p-icons') set icons(icons: Array<PoTableColumnIcon>) {\n    this._icons = icons || [];\n  }\n\n  get icons() {\n    return this._icons;\n  }\n\n  /** Dados da linha da tabela. */\n  @Input('p-row') row: any;\n\n  click(column: PoTableColumnIcon): void {\n    column.action(this.row, column);\n  }\n\n  getColor(column: PoTableColumnIcon): string {\n    const color =  typeof column.color === 'function' ? column.color(this.row, column) : column.color;\n\n    if (color) {\n      return `po-text-${color}`;\n    }\n  }\n\n  getIcon(column: PoTableColumnIcon) {\n    return column.icon || column.value;\n  }\n\n  isClickable(column: PoTableColumnIcon): boolean {\n    return column.action && !this.isDisabled(column);\n  }\n\n  isDisabled(column: PoTableColumnIcon): boolean {\n    return column.disabled ? column.disabled(this.row) : false;\n  }\n\n  trackByFunction(index) {\n    return index;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\nimport { PoTableColumnLabel } from './po-table-column-label.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de texto .\n */\n\n@Component({\n  selector: 'po-table-column-label',\n  templateUrl: './po-table-column-label.component.html'\n})\nexport class PoTableColumnLabelComponent {\n\n  private _value: PoTableColumnLabel;\n\n  /** Objeto com os dados do label */\n  @Input('p-value') set value(value: PoTableColumnLabel) {\n    if (value) {\n      value.color = this.poColorPaletteService.getColor(value);\n    }\n\n    this._value = value;\n  }\n  get value(): PoTableColumnLabel {\n    return this._value;\n  }\n\n  constructor(private poColorPaletteService: PoColorPaletteService) { }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { isExternalLink } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir link nas colunas.\n */\n@Component({\n  selector: 'po-table-column-link',\n  templateUrl: './po-table-column-link.component.html'\n})\n\nexport class PoTableColumnLinkComponent {\n\n  @Input('p-action') action: Function;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-link') link: string;\n\n  @Input('p-row') row;\n\n  @Input('p-value') value: string;\n\n  get type() {\n\n    if (this.disabled) {\n      return 'disabled';\n    }\n\n    if (this.action) {\n       return 'action';\n    }\n\n    if (isExternalLink(this.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit,\n  Output, SimpleChange, SimpleChanges, Renderer2, ViewChild } from '@angular/core';\n\nimport { browserLanguage, capitalizeFirstLetter, convertToInt, poLocaleDefault } from '../../../utils/util';\nimport { PoCheckboxGroupOption } from '../../po-field/po-checkbox-group/interfaces/po-checkbox-group-option.interface';\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\n\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\n\nconst PoTableColumnManagerMaxColumnsDefault = 99999;\n\nexport const poTableColumnManagerLiteralsDefault = {\n  en: {\n    columnsManager: 'Columns manager',\n    restoreDefault: 'Restore default'\n  },\n  es: {\n    columnsManager: 'Gerente de columna',\n    restoreDefault: 'Restaurar por defecto'\n  },\n  pt: {\n    columnsManager: 'Gerenciador de colunas',\n    restoreDefault: 'Restaurar padrÃ£o'\n  },\n  ru: {\n    columnsManager: 'Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ ÐºÐ¾Ð»Ð¾Ð½Ð¾Ðº',\n    restoreDefault: 'ÑÐ±ÑÐ¾Ñ Ð½Ð°ÑÑÑÐ¾ÐµÐº'\n  }\n};\n\n@Component({\n  selector: 'po-table-column-manager',\n  templateUrl: './po-table-column-manager.component.html'\n})\nexport class PoTableColumnManagerComponent implements OnInit, OnChanges, OnDestroy {\n\n  private _maxColumns: number = PoTableColumnManagerMaxColumnsDefault;\n\n  columnsOptions: Array<PoCheckboxGroupOption> = [];\n  literals = {\n    ...poTableColumnManagerLiteralsDefault[poLocaleDefault],\n    ...poTableColumnManagerLiteralsDefault[browserLanguage()]\n  };\n  visibleColumns: Array<string> = [];\n\n  private defaultColumns: Array<PoTableColumn> = [];\n  private resizeListener: () => void;\n\n  @Input('p-columns') columns: Array<PoTableColumn> = [];\n\n  @Input('p-max-columns') set maxColumns(value: number) {\n    this._maxColumns = convertToInt(value, PoTableColumnManagerMaxColumnsDefault);\n  }\n\n  get maxColumns() {\n    return this._maxColumns;\n  }\n\n  @Input('p-target') target: ElementRef;\n\n  @Output('p-visible-columns-change') visibleColumnsChange = new EventEmitter<Array<PoTableColumn>>();\n\n  @ViewChild(PoPopoverComponent, { static: false }) popover: PoPopoverComponent;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.updateColumnsOptions(this.columns);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { columns, maxColumns, target } = changes;\n\n    if (target && target.firstChange) {\n      this.initializeListeners();\n    }\n\n    if (columns) {\n      this.onChangeColumns(columns);\n    }\n\n    if (maxColumns) {\n      this.updateColumnsOptions(this.columns);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  onChangeVisibleColumns(checkedColumns: Array<string>) {\n    this.disableColumnsOptions(this.columnsOptions);\n\n    const visibleTableColumns = this.getVisibleTableColumns(checkedColumns);\n\n    this.visibleColumnsChange.emit(visibleTableColumns);\n  }\n\n  restore() {\n    this.updateColumnsOptions(this.defaultColumns);\n  }\n\n  // desabilitarÃ¡ as colunas, que nÃ£o estiverem selecionadas, apÃ³s exeder o numero maximo de colunas.\n  private disableColumnsOptions(columns: Array<PoCheckboxGroupOption> = []) {\n    // necessario timeout para que seja possivel atualizar os columnsOptions apos a mudanÃ§a do model\n    setTimeout(() => {\n      this.columnsOptions = columns.map(column => ({\n        ...column,\n        disabled: this.isDisableColumn(column.value)\n      }));\n    });\n  }\n\n  private getColumnTitleLabel(column: PoTableColumn) {\n    return column.label || capitalizeFirstLetter(column.property);\n  }\n\n  /** Retorna um Array de column.property das colunas que sÃ£o visiveis. */\n  private getVisibleColumns(columns: Array<PoTableColumn>): Array<string> {\n    const visibleColumns = [];\n\n    columns.forEach(column => {\n      if (column.visible !== false && visibleColumns.length < this.maxColumns && column.type !== 'detail') {\n\n        visibleColumns.push(column.property);\n      }\n    });\n\n    return visibleColumns;\n  }\n\n  /** Retorna um Array PoTableColumn a partir das colunas visiveis no gerenciador de colunas. */\n  private getVisibleTableColumns(visibleColumns: Array<string>): Array<PoTableColumn> {\n    return this.columns.map(column => ({\n      ...column,\n      visible: visibleColumns.includes(column.property) || column.type === 'detail'\n    }));\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      if (this.popover) {\n        this.popover.close();\n      }\n    });\n\n  }\n\n  private isDisableColumn(property: string): boolean {\n    return this.visibleColumns.length >= this.maxColumns ? !this.visibleColumns.includes(property) : false;\n  }\n\n  private mapTableColumnsToCheckboxOptions(columns: Array<PoTableColumn> = []) {\n    const columnsOptions = [];\n\n    columns.forEach(column => {\n      if (column.type !== 'detail') {\n        columnsOptions.push({\n          value: column.property,\n          label: this.getColumnTitleLabel(column),\n          disabled: this.isDisableColumn(column.property)\n        });\n      }\n\n    });\n\n    return columnsOptions;\n  }\n\n  private onChangeColumns(columns: SimpleChange) {\n    const { firstChange, currentValue = [], previousValue = [] } = columns;\n\n    // atualizara o defaultColumns, quando for a primeira vez ou quando o defaultColumns for diferente do currentValue\n    if (firstChange || (this.defaultColumns.length !== currentValue.length)) {\n      this.defaultColumns = currentValue;\n    }\n\n    // verifica se o valor anterior Ã© diferente do atual para atualizar as columnsOptions apenas quando for necessario\n    if (previousValue.length !== currentValue.length) {\n      this.updateColumnsOptions(currentValue);\n    }\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private updateColumnsOptions(columns: Array<PoTableColumn>) {\n    this.visibleColumns = this.getVisibleColumns(columns);\n    this.columnsOptions = this.mapTableColumnsToCheckboxOptions(columns);\n\n    this.onChangeVisibleColumns(this.visibleColumns);\n  }\n\n}\n","/**\n * @usedBy PoTableComponent\n *\n * @description\n * Tipos de ordenaÃ§Ã£o das colunas da tabela.\n */\nexport enum PoTableColumnSortType {\n\n  /** OrdenaÃ§Ã£o ascendente */\n  Ascending = 'ascending',\n\n  /** OrdenaÃ§Ã£o descendente */\n  Descending = 'descending'\n}\n","import { EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { browserLanguage, capitalizeFirstLetter, convertToBoolean, isTypeof, sortValues, poLocaleDefault } from '../../utils/util';\nimport { PoDateService } from '../../services/po-date/po-date.service';\n\nimport { PoTableAction } from './interfaces/po-table-action.interface';\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\nimport { PoTableColumnSort } from './interfaces/po-table-column-sort.interface';\nimport { PoTableColumnSortType } from './enums/po-table-column-sort-type.enum';\nimport { PoTableLiterals } from './interfaces/po-table-literals.interface';\n\nexport const poTableContainer = ['border', 'shadow'];\nexport const poTableContainerDefault = 'border';\n\nexport const poTableLiteralsDefault = {\n  en: <PoTableLiterals>{\n    noColumns: 'Columns are not defined',\n    noData: 'No data found',\n    noVisibleColumn: 'No visible column',\n    loadingData: 'Loading',\n    loadMoreData: 'Load more data',\n    seeCompleteSubtitle: 'See complete subtitle',\n    completeSubtitle: 'Complete subtitle',\n    columnsManager: 'Columns manager'\n  },\n  es: <PoTableLiterals>{\n    noColumns: 'Columnas no definidas',\n    noData: 'Datos no encontrados',\n    noVisibleColumn: 'Sin columnas visibles',\n    loadingData: 'Cargando datos',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    seeCompleteSubtitle: 'Ver subtitulo completo',\n    completeSubtitle: 'Subtitulo completo',\n    columnsManager: 'Gerente de columna'\n  },\n  pt: <PoTableLiterals>{\n    noColumns: 'Nenhuma definiÃ§Ã£o de colunas',\n    noData: 'Nenhum dado encontrado',\n    noVisibleColumn: 'Nenhuma coluna visÃ­vel',\n    loadingData: 'Carregando',\n    loadMoreData: 'Carregar mais resultados',\n    seeCompleteSubtitle: 'Ver legenda completa',\n    completeSubtitle: 'Legenda completa',\n    columnsManager: 'Gerenciador de colunas'\n  },\n  ru: <PoTableLiterals>{\n    noColumns: 'ÐÐµÑ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð¸Ñ ÑÑÐ¾Ð»Ð±ÑÐ°',\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    noVisibleColumn: 'Ð½ÐµÑ Ð²Ð¸Ð´Ð¸Ð¼ÑÑ ÑÑÐ¾Ð»Ð±ÑÐ¾Ð²',\n    loadingData: 'Ð¿Ð¾Ð³ÑÑÐ·ÐºÐ°',\n    loadMoreData: 'Ð·Ð°Ð³ÑÑÐ·ÐºÐ°',\n    seeCompleteSubtitle: 'ÐÐ¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð¿Ð¾Ð»Ð½ÑÐ¹ ÑÑÐ±ÑÐ¸ÑÑ',\n    completeSubtitle: 'ÐÐ¾Ð»Ð½ÑÐ¹ Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº',\n    columnsManager: 'Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ ÐºÐ¾Ð»Ð¾Ð½Ð¾Ðº'\n  }\n};\n\n/**\n * @description\n *\n * Este componente de tabela Ã© utilizado para exibiÃ§Ã£o de dados com diferentes tipos como por exemplo textos, data, horas e nÃºmeros com\n * formato personalizado.\n *\n * TambÃ©m Ã© possivel criar tabelas com ordenaÃ§Ã£o de dados, linhas com detalhes, coluna para seleÃ§Ã£o de linhas, coluna com aÃ§Ãµes e tambÃ©m\n * carregamento por demanda atravÃ©s do botÃ£o **Carregar mais resultados**.\n *\n * > As linhas de detalhes podem tambÃ©m ser customizadas atravÃ©s do [`p-table-row-template`](/documentation/po-table-row-template).\n *\n * O componente permite gerenciar a exibiÃ§Ã£o das colunas dinamicamente. Esta funcionalidade pode ser acessada atravÃ©s do Ã­cone de engrenagem\n * no canto superior direito do cabeÃ§alho da tabela.\n *\n * Caso a largura de todas as colunas forem definidas e o total ultrapassar o tamanho tabela, serÃ¡ exibido um *scroll* na horizontal para a\n * completa visualizaÃ§Ã£o dos dados.\n */\nexport abstract class PoTableBaseComponent implements OnChanges {\n\n  private _actions?: Array<PoTableAction> = [];\n  private _checkbox?: boolean;\n  private _columns: Array<PoTableColumn> = [];\n  private _container?: string;\n  private _height?: number;\n  private _hideDetail?: boolean = false;\n  private _hideTextOverflow?: boolean = false;\n  private _items: Array<PoTableColumn>;\n  private _literals: PoTableLiterals;\n  private _loading?: boolean = false;\n\n  /**\n   * @description\n   *\n   * Lista de itens da tabela.\n   * > Se falso, serÃ¡ inicializado como um *array* vazio.\n   */\n  @Input('p-items') set items(items: Array<any>) {\n    this._items = Array.isArray(items) ? items : [];\n\n    // when haven't items, selectAll should be unchecked.\n    if (!this.hasItems()) {\n      this.selectAll = false;\n    } else if (!this.hasColumns) {\n      this.columns = this.getDefaultColumns(items[0]);\n    }\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista das colunas da tabela, deve receber um *array* de objetos que implementam a interface `PoTableColumn`.\n   * Por padrÃ£o receberÃ¡ como valor a primeira coluna da lista de itens da tabela.\n   * > Caso nÃ£o encontre valor, a mensagem 'Nenhuma definiÃ§Ã£o de colunas' serÃ¡ exibida.\n   *\n   */\n  @Input('p-columns') set columns(columns: Array<PoTableColumn>) {\n\n    this._columns = columns || [];\n\n    if (this._columns.length) {\n      this.setColumnLink();\n      this.calculateWidthHeaders();\n    } else if (this.hasItems()) {\n      this._columns = this.getDefaultColumns(this.items[0]);\n    }\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Adiciona um contorno arredondado ao `po-table`, as opÃ§Ãµes sÃ£o:\n   * - `border`: com bordas/linhas.\n   * - `shadow`: com sombras.\n   *\n   * @default `border`\n   */\n  @Input('p-container') set container(value: string) {\n    this._container = poTableContainer.includes(value) ? value : poTableContainerDefault;\n    this.showContainer(this._container);\n  }\n\n  get container(): string {\n    return this._container;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Se verdadeiro, habilita a quebra de texto ao transborda-lo dentro de qualquer coluna.\n   * > Quando ocorrer a quebra de texto, ao passar o mouse no conteÃºdo da cÃ©lula,\n   * o mesmo serÃ¡ exibido atravÃ©s do [`po-tooltip`](/documentation/po-tooltip).\n   */\n  @Input('p-hide-text-overflow') set hideTextOverflow(hideTextOverflow: boolean) {\n    this._hideTextOverflow = convertToBoolean(hideTextOverflow);\n  }\n\n  get hideTextOverflow() {\n    return this._hideTextOverflow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da tabela em *pixels* e fixa o cabeÃ§alho.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n    this.calculateHeightTableContainer(height);\n    this.calculateWidthHeaders();\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita a visualizaÃ§Ã£o da lista de detalhes de cada linha da coluna.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-detail') set hideDetail(hideDetail: boolean) {\n    this._hideDetail = hideDetail != null && hideDetail.toString() === '' ? true : convertToBoolean(hideDetail);\n    this.calculateWidthHeaders();\n  }\n\n  get hideDetail() {\n    return this._hideDetail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-table`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoTableLiterals = {\n   *    loadMoreData: 'Buscar mais dados',\n   *    loadingData: 'Processando',\n   *    noColumns: 'Sem colunas',\n   *    noData: 'Sem dados',\n   *    seeCompleteSubtitle: 'Mostrar legenda completa',\n   *    completeSubtitle: 'Todas legendas'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoTableLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-table\n   *   [p-literals]=\"customLiterals\">\n   * </po-table>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoTableLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poTableLiteralsDefault[poLocaleDefault],\n        ...poTableLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poTableLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poTableLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Bloqueia interaÃ§Ã£o do usuÃ¡rio com os dados da _table_, apresentando um _loading_ ao centro da mesma.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(loading: boolean) {\n    this._loading = convertToBoolean(loading);\n    this.calculateWidthHeaders();\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita na primeira coluna a opÃ§Ã£o de selecionar linhas,\n   * todos os itens da lista possuem a propriedade dinÃ¢mica `$selected` para identificar se a linha estÃ¡ selecionada.\n   * > Exemplo: `item.$selected` ou `item['$selected']`.\n   * > Os itens filhos possuem comportamento independente do item pai.\n   *\n   * @default `false`\n   */\n  @Input('p-checkbox') set checkbox(checkbox: boolean) {\n    this._checkbox = <any>checkbox === '' ? true : convertToBoolean(checkbox);\n    this.calculateWidthHeaders();\n  }\n\n  get checkbox() {\n    return this._checkbox;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes.\n   *\n   * Quando houver apenas uma aÃ§Ã£o definida ela serÃ¡ exibida diretamente na coluna, caso contrÃ¡rio, o componente\n   * se encarrega de agrupÃ¡-las exibindo o Ã­cone [**po-icon-more**](/guides/icons) que listarÃ¡ as aÃ§Ãµes ao ser clicado.\n   *\n   * **A coluna de aÃ§Ãµes nÃ£o serÃ¡ exibida quando:**\n   *  - a lista conter valores invÃ¡lidos ou indefinidos.\n   *  - tenha uma Ãºnica aÃ§Ã£o e a mesma nÃ£o for visÃ­vel.\n   */\n  @Input('p-actions') set actions(actions: Array<PoTableAction>) {\n    this._actions = actions;\n    this.calculateWidthHeaders();\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita em todas as colunas a opÃ§Ã£o de ordenaÃ§Ã£o de dados. Caso a coluna seja do tipo 'data' ou 'dateTime' a\n   * mesma deve respeitar os tipos de entrada definidos para que sejam ordenadas.\n   *\n   * @default `false`\n   */\n  sort?: boolean;\n  @Input('p-sort') set setSort(sort: string) {\n    this.sort = sort === '' ? false : convertToBoolean(sort);\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, torna habilitado o botÃ£o \"Carregar mais resultados\".\n   *\n   * @default `false`\n   */\n  showMoreDisabled?: boolean;\n  @Input('p-show-more-disabled') set setShowMoreDisabled(showMoreDisabled: string) {\n    this.showMoreDisabled = showMoreDisabled === '' ? false : convertToBoolean(showMoreDisabled);\n  }\n\n  /**\n   * @description\n   *\n   * Habilita ou desabilita o estilo listrado da tabela (`striped`).\n   * > Recomendado para tabelas com maior nÃºmero de dados, facilitando a sua visualizaÃ§Ã£o na tabela.\n   *\n   * @default `false`\n   */\n  striped?: boolean;\n  @Input('p-striped') set setStriped(striped: string) {\n    this.striped = striped === '' ? false : convertToBoolean(striped);\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todas as linhas.\n   *\n   * > Sempre receberÃ¡ *true* caso a seleÃ§Ã£o de apenas uma linha esteja ativa.\n   *\n   * @default `false`\n   */\n  hideSelectAll?: boolean;\n  @Input('p-hide-select-all') set setHideSelectAll(hideSelectAll: string) {\n    this.hideSelectAll = hideSelectAll === '' ? false : convertToBoolean(hideSelectAll);\n  }\n\n  /**\n   * @description\n   *\n   * Define que somente uma linha da tabela pode ser selecionada.\n   *\n   * > Esta definiÃ§Ã£o nÃ£o se aplica aos itens filhos, os mesmos possuem comportamento independente do item pai.\n   */\n  singleSelect?: boolean;\n  @Input('p-single-select') set setSingleSelect(value: string) {\n    this.singleSelect = value === '' ? true : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma quantidade mÃ¡xima de colunas que serÃ£o exibidas na tabela.\n   *\n   * Quando chegar no valor informado, as colunas que nÃ£o estiverem selecionadas ficarÃ£o\n   * desabilitadas e caso houver mais colunas visÃ­veis do que o permitido, as excedentes\n   * serÃ£o ignoradas por ordem de posiÃ§Ã£o.\n   */\n  @Input('p-max-columns') maxColumns?: number;\n\n  /**\n   * AÃ§Ã£o executada quando todas as linhas sÃ£o selecionadas por meio do *checkbox* que seleciona todas as linhas.\n   */\n  @Output('p-all-selected') allSelected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o executada quando a seleÃ§Ã£o das linhas Ã© desmarcada por meio do *checkbox* que seleciona todas as linhas.\n   */\n  @Output('p-all-unselected') allUnselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o executada ao selecionar uma linha do `po-table`.\n   */\n  @Output('p-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Recebe uma aÃ§Ã£o de clique para o botÃ£o \"Carregar mais resultados\", caso nenhuma aÃ§Ã£o for definida o mesmo\n   * nÃ£o Ã© visÃ­vel.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que estÃ¡ ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenaÃ§Ã£o.\n   */\n  @Output('p-show-more') showMore?: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  /**\n   * AÃ§Ã£o executada ao ordenar colunas da tabela.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que foi clicada/ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenaÃ§Ã£o.\n   */\n  @Output('p-sort-by') sortBy?: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  /**\n   * AÃ§Ã£o executada ao desmarcar a seleÃ§Ã£o de uma linha do `po-table`.\n   */\n  @Output('p-unselected') unselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  selectAll = false;\n  sortedColumn = { property: <PoTableColumn>null, ascending: true };\n\n  private get sortType(): PoTableColumnSortType {\n    return this.sortedColumn.ascending ? PoTableColumnSortType.Ascending : PoTableColumnSortType.Descending;\n  }\n\n  constructor(private poDate: PoDateService) { }\n\n  ngOnChanges(): void {\n    if (this.singleSelect || this.hideSelectAll) {\n      this.selectAll = false;\n      this.hideSelectAll = true;\n    }\n  }\n\n  abstract calculateHeightTableContainer(height);\n\n  abstract calculateWidthHeaders();\n\n  protected abstract showContainer(container);\n\n  get hasColumns(): boolean {\n    return this.columns && this.columns.length > 0;\n  }\n\n  selectAllRows() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n\n      this.emitSelectAllEvents(this.selectAll, this.items);\n    }\n  }\n\n  selectRow(row: any) {\n    row.$selected = !row.$selected;\n\n    this.emitSelectEvents(row);\n\n    this.configAfterSelectRow(this.items, row);\n  }\n\n  selectDetailRow(row: any) {\n    this.emitSelectEvents(row);\n  }\n\n  // Retorna a coluna da lista de colunas que Ã© do tipo detail\n  getColumnMasterDetail() {\n    return this.columns.find(col => col.type === 'detail');\n  }\n\n  getClassColor(row, column) {\n    return column.color ? `po-text-${this.getColumnColor(row, column)}` : '';\n  }\n\n  getColumnColor(row, column) {\n    const columnColor = column.color;\n\n    return isTypeof(columnColor, 'function') ? columnColor(row, column.property) : columnColor;\n  }\n\n  // Retorna as colunas com status\n  getSubtitleColumns() {\n    return this.columns.filter(col => col.type === 'subtitle');\n  }\n\n  // Retorna as colunas com Ã­cones\n  getIconColumns() {\n    return this.columns.filter(col => col.type === 'icon');\n  }\n\n  // Retorna o nome da coluna do tipo detail\n  getNameColumnDetail() {\n    const detail = this.getColumnMasterDetail();\n    return detail ? detail.property : null;\n  }\n\n  /**\n   * Retorna as linhas do `po-table` que estÃ£o selecionadas.\n   */\n  getSelectedRows() {\n    return this.items.filter(item => item.$selected);\n  }\n\n  /**\n   * Retorna as linhas do `po-table` que nÃ£o estÃ£o selecionadas.\n   */\n  getUnselectedRows() {\n    return this.items.filter(item => !item.$selected);\n  }\n\n  hasItems(): boolean {\n    return this.items && this.items.length > 0;\n  }\n\n  toggleRowAction(row: any) {\n    const toggleShowAction = row.$showAction;\n\n    this.items.forEach(item => {\n      if (item.$showAction) {\n        item.$showAction = false;\n      }\n    });\n    row.$showAction = !toggleShowAction;\n  }\n\n  sortColumn(column: PoTableColumn) {\n    if (!this.sort || column.type === 'detail') {\n      return;\n    }\n\n    this.sortedColumn.ascending = this.sortedColumn.property === column ? !this.sortedColumn.ascending : true;\n\n    this.sortArray(column, this.sortedColumn.ascending);\n    this.sortBy.emit({ column, type: this.sortType});\n\n    this.sortedColumn.property = column;\n  }\n\n  sortArray(column: PoTableColumn, ascending: boolean) {\n\n    this.items.sort((leftSide, rightSide): number => {\n\n      if (column.type === 'date' || column.type === 'dateTime') {\n        return this.poDate.sortDate(leftSide[column.property], rightSide[column.property], ascending);\n      } else {\n        return sortValues(leftSide[column.property], rightSide[column.property], ascending);\n      }\n\n    });\n\n  }\n\n  onShowMore(): void {\n    const sort = this.sortedColumn.property ? { column: this.sortedColumn.property, type: this.sortType } : undefined;\n\n    this.showMore.emit(sort);\n  }\n\n  protected getDefaultColumns(item: any) {\n    const keys = Object.keys(item);\n\n    return keys.filter(key => (typeof item[key] !== 'object')).map(key => {\n      return { label: capitalizeFirstLetter(key), property: key };\n    });\n  }\n\n  private configAfterSelectRow(rows: Array<any>, row) {\n    if (this.singleSelect) {\n\n      this.unselectOtherRows(rows, row);\n\n    } else if (!this.hideSelectAll) {\n\n      this.selectAll = this.isEverySelected(rows);\n    }\n  }\n\n  private emitSelectAllEvents(selectAll: boolean, rows: any) {\n    selectAll ? this.allSelected.emit(rows) : this.allUnselected.emit(rows);\n  }\n\n  private emitSelectEvents(row: any) {\n    row.$selected ? this.selected.emit(row) : this.unselected.emit(row);\n  }\n\n  private isEverySelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private setColumnLink() {\n    this.columns.forEach(column => {\n      if (column['type'] === 'link' && !column['link']) {\n        column['link'] = 'link';\n      }\n    });\n  }\n\n  private unselectOtherRows(rows: Array<any>, row) {\n    rows.forEach(item => {\n      if (item !== row) {\n        item.$selected = false;\n      }\n    });\n  }\n\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoTableComponent\n *\n * @description\n *\n * Esta diretiva permite que seja apresentada informaÃ§Ãµes adicionais a respeito de uma determinada linha de\n * dados, de forma que possam ser exibidas e ocultadas atravÃ©s do botÃ£o de acionamento.\n *\n * > Quando utilizada, sobrepÃµe as funcionalidade bÃ¡sicas do *master-detail*.\n *\n * Em seu uso, deve-se utilizar como parÃ¢metro a referÃªncia da _linha_ e/ou _Ã­ndice_, sendo por padrÃ£o linha. Caso nÃ£o seja declarado,\n * o componente nÃ£o exibirÃ¡ conteÃºdo.\n *  - Linha: `row` determina o item da linha corrente.\n *  - Ãndice: `rowIndex` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *     <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isShow\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </ng-template>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *     <div *p-table-row-template=\"let rowItem, let i=rowIndex\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </div>\n * ...\n *\n * ```\n *\n * A diretiva **p-table-row-template**, possibilita tambÃ©m que determinada linha apresente ou nÃ£o seu _template_. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz esta verificaÃ§Ã£o, Ã  propriedade `p-table-row-template-show`,\n * a mesma deve retornar um valor do tipo *boolean*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    templateUrl: `\n *      ...\n *      <po-table\n *        [p-columns]=\"columns\"\n *        [p-items]=\"items\">\n *          <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isUndelivered\">\n *            <detail-row [row]=\"rowItem\"> </detail-row>\n *          </div>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public dataTable = [{\n *      code: 1200,\n *      product: 'Rice',\n *      costumer: 'Supermarket 1',\n *      quantity: 3,\n *      status: 'delivered',\n *      license_plate: 'MDJD9191',\n *      batch_product: 18041822,\n *      driver: 'JosÃ© Oliveira'\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      costumer: 'Supermarket 2',\n *      quantity: 1,\n *      status: 'transport',\n *      license_plate: 'XXA5454',\n *      batch_product: 18041821,\n *      driver: 'Francisco Pereira'\n *    }];\n *\n *    isUndelivered(row, index: number) {\n *      return row.status !== 'delivered';\n *    }\n * }\n * ```\n * > No exemplo acima, somente serÃ¡ disponibilizado os detalhes de informaÃ§Ãµes nas linhas cujo o valor de `status`\n * nÃ£o correspondam Ã  *delivered*.\n */\n@Directive({\n  selector: '[p-table-row-template]'\n})\nexport class PoTableRowTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor booleano, informando se apresentarÃ¡ o template da linha.\n   * SerÃ£o passados o objeto da linha e o indice da mesma por parÃ¢metro, para que seja possÃ­vel\n   * tomar uma decisÃ£o a partir do objeto da linha corrente.\n   *\n   * Caso nÃ£o ser utilizado esta propriedade, serÃ£o apresentados todos os detalhes das linhas.\n   *\n   * @default `true`\n   */\n  @Input('p-table-row-template-show') poTableRowTemplateShow: (row: any, index: number) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild, DoCheck, ElementRef, IterableDiffers,\n  OnDestroy, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { capitalizeFirstLetter, convertToBoolean } from '../../utils/util';\nimport { PoDateService } from '../../services/po-date/po-date.service';\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\n\nimport { PoTableAction } from './interfaces/po-table-action.interface';\nimport { PoTableBaseComponent } from './po-table-base.component';\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\nimport { PoTableColumnLabel } from './po-table-column-label/po-table-column-label.interface';\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\nimport { PoTableSubtitleColumn } from './po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsExtends PoTableBaseComponent\n *\n * @example\n *\n * <example name=\"po-table-basic\" title=\"Portinari Table Basic\">\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.ts\"> </file>\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.html\"> </file>\n * </example>\n *\n * <example name=\"po-table-labs\" title=\"Portinari Table Labs\">\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.html\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.po.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-transport\" title=\"Portinari Table - Transport\">\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.ts\"> </file>\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.html\"> </file>\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-airfare\" title=\"Portinari Table - Airfare\">\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.ts\"> </file>\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.html\"> </file>\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-components\" title=\"Portinari Table - Po Field Components\">\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.ts\"> </file>\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.html\"> </file>\n *  <file name=\"sample-po-table-components/sample-po-table-components.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-table',\n  templateUrl: './po-table.component.html',\n  providers: [PoDateService]\n})\nexport class PoTableComponent extends PoTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  private _columnManagerTarget: ElementRef;\n\n  heightTableContainer;\n  parentRef: any;\n  popupTarget;\n  tableOpacity: number = 0;\n  tooltipText: string;\n\n  private differ;\n  private footerHeight;\n  private initialized = false;\n  private timeoutResize;\n  private visibleElement = false;\n\n  private clickListener: () => void;\n  private resizeListener: () => void;\n\n  @ContentChild(PoTableRowTemplateDirective, { static: true }) tableRowTemplate: PoTableRowTemplateDirective;\n\n  @ViewChild('popup', { static: false }) poPopupComponent: PoPopupComponent;\n  @ViewChild('columnManagerTarget', { static: false }) set columnManagerTarget(value: ElementRef) {\n    this._columnManagerTarget = value;\n\n    this.changeDetector.detectChanges();\n  }\n\n  get columnManagerTarget() {\n    return this._columnManagerTarget;\n  }\n\n  @ViewChild('tableContainer', { read: ElementRef, static: true }) tableContainerElement;\n  @ViewChild('tableFooter', { read: ElementRef, static: true }) tableFooterElement;\n  @ViewChild('tableWrapper', { read: ElementRef, static: true }) tableWrapperElement;\n\n  @ViewChildren('actionsIconElement', { read: ElementRef }) actionsIconElement: QueryList<any>;\n  @ViewChildren('actionsElement', { read: ElementRef }) actionsElement: QueryList<any>;\n  @ViewChildren('headersTable') headersTable: QueryList<any>;\n\n  constructor(\n    poDate: PoDateService,\n    differs: IterableDiffers,\n    viewRef: ViewContainerRef,\n    renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private decimalPipe: DecimalPipe,\n    private router: Router) {\n\n    super(poDate);\n\n    this.parentRef = viewRef['_view']['component'];\n    this.differ = differs.find([]).create(null);\n\n    // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas nÃ£o sofrem\n    // alteraÃ§Ã£o de largura, pois o ngDoCheck nÃ£o Ã© executado.\n    this.clickListener = renderer.listen('document', 'click', () => { });\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n\n  }\n\n  get detailHideSelect() {\n    const masterDetail = this.getColumnMasterDetail();\n    return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;\n  }\n\n  get displayColumnManagerCell() {\n    return !this.visibleActions.length;\n  }\n\n  get firstAction(): PoTableAction {\n    return this.visibleActions && this.visibleActions[0];\n  }\n\n  get hasCheckboxColumn(): boolean {\n    return this.checkbox && this.hasItems() && this.hasMainColumns;\n  }\n\n  get hasFooter(): boolean {\n    return this.hasItems() && this.hasVisibleSubtitleColumns;\n  }\n\n  get hasMainColumns() {\n    return !!this.mainColumns.length;\n  }\n\n  get hasMasterDetailColumn(): boolean {\n    return this.hasMainColumns &&\n    this.hasItems() && !this.hideDetail && (this.getColumnMasterDetail() !== undefined || this.hasRowTemplate);\n  }\n\n  get hasRowTemplate(): boolean {\n    return !!this.tableRowTemplate;\n  }\n\n  get hasValidColumns() {\n    return !!this.validColumns.length;\n  }\n\n  get hasVisibleSubtitleColumns() {\n    return this.getSubtitleColumns().some(column => column.visible !== false);\n  }\n\n  get isSingleAction() {\n    return this.visibleActions.length === 1;\n  }\n\n  // Colunas que sÃ£o inseridas no <head> da tabela\n  get mainColumns() {\n    return this.validColumns.filter(col => col.visible !== false);\n  }\n\n  get validColumns() {\n    const typesValid = ['string', 'number', 'boolean', 'date', 'time', 'dateTime', 'currency', 'subtitle', 'link', 'label', 'icon'];\n    return this.columns.filter(col => !col.type || typesValid.includes(col.type));\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    if (!this.container) {\n      this.hideContainer();\n    }\n  }\n\n  ngDoCheck() {\n    this.checkChangesItems();\n    this.verifyCalculateHeightTableContainer();\n    // Permite que os cabeÃ§alhos sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (this.tableWrapperElement.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {\n      this.debounceResize();\n      this.visibleElement = true;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  checkDisabled(row, column: PoTableColumn) {\n    return column.disabled ? column.disabled(row) : false;\n  }\n\n  executeTableAction(row: any, tableAction: any) {\n    if (!row.disabled && !this.validateTableAction(row, tableAction)) {\n      tableAction.action.call(this.parentRef, row);\n      this.toggleRowAction(row);\n    }\n  }\n\n  columnCountForMasterDetail() {\n    const columnManager = 1;\n    return (this.mainColumns.length + 1) + (this.actions.length > 0 ? 1 : 0) + (this.checkbox ? 1 : 0) + columnManager;\n  }\n\n  columnCount() {\n\n    return (this.mainColumns.length +\n      (this.actions.length > 0 ? 1 : 0) +\n      (this.checkbox ? 1 : 0) +\n      (!this.hideDetail && this.getColumnMasterDetail() !== undefined ? 1 : 0)\n    );\n  }\n\n  formatNumber(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getSubtitleColumn(row: any, subtitleColumn: PoTableColumn): PoTableSubtitleColumn {\n    return subtitleColumn.subtitles.find(subtitleItem => row[subtitleColumn.property] === subtitleItem.value);\n  }\n\n  getBooleanLabel(rowValue: any, columnBoolean: PoTableColumn): string {\n\n    if (rowValue || rowValue === false || rowValue === 0) {\n      rowValue = convertToBoolean(rowValue);\n\n      if (columnBoolean.boolean) {\n        return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'NÃ£o';\n      } else {\n        return rowValue ? 'Sim' : 'NÃ£o';\n      }\n    }\n\n    return rowValue;\n  }\n\n  getColumnIcons(row: any, column: PoTableColumn) {\n    if (column.icons && column.icons.length) {\n      return column.icons;\n    }\n\n    const rowIcons = row[column.property];\n\n    if (rowIcons && rowIcons.length) {\n      return this.getColumnIconsFromProperty(rowIcons, column);\n    }\n  }\n\n  getColumnLabel(row: any, columnLabel: PoTableColumn): PoTableColumnLabel {\n    return columnLabel.labels.find(labelItem => row[columnLabel.property] === labelItem.value);\n  }\n\n  getColumnTitleLabel(column: PoTableColumn) {\n    return column.label || capitalizeFirstLetter(column.property);\n  }\n\n  verifyWidthColumnsPixels() {\n    return this.hasMainColumns ? this.mainColumns.every(column => column.width && column.width.includes('px')) : false;\n  }\n\n  calculateWidthHeaders() {\n    setTimeout(() => {\n      if (this.height) {\n        this.headersTable.forEach(header => {\n          const divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');\n          if (divHeader) {\n            divHeader.style.width = `${header.nativeElement.offsetWidth}px`;\n          }\n        });\n      }\n    });\n  }\n\n  containsMasterDetail(row) {\n    return row[this.getNameColumnDetail()] && row[this.getNameColumnDetail()].length;\n  }\n\n  isShowRowTemplate(row, index: number): boolean {\n\n    if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {\n      return this.tableRowTemplate.poTableRowTemplateShow(row, index);\n    }\n\n    return true;\n  }\n\n  isShowMasterDetail(row) {\n    return !this.hideDetail &&\n      this.getNameColumnDetail() &&\n      row.$showDetail &&\n      this.containsMasterDetail(row) &&\n      !this.hasRowTemplate;\n  }\n\n  onVisibleColumnsChange(columns: Array<PoTableColumn>) {\n    this.columns = columns;\n\n    this.changeDetector.detectChanges();\n  }\n\n  tooltipMouseEnter(event: any, column?: PoTableColumn, row?: any) {\n    this.tooltipText = undefined;\n\n    if (this.hideTextOverflow &&\n        event.target.offsetWidth < event.target.scrollWidth &&\n        event.target.innerText.trim()) {\n      return this.tooltipText = event.target.innerText;\n    }\n\n    if (column) {\n      this.checkingIfColumnHasTooltip(column, row);\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltipText = undefined;\n  }\n\n  verifyChangeHeightInFooter() {\n    return this.footerHeight !== this.getHeightTableFooter();\n  }\n\n  verifyCalculateHeightTableContainer() {\n    if (this.height && this.verifyChangeHeightInFooter()) {\n      this.footerHeight = this.getHeightTableFooter();\n      this.calculateHeightTableContainer(this.height);\n    }\n  }\n\n  calculateHeightTableContainer(height) {\n    const value = parseFloat(height);\n    this.heightTableContainer = value ? (value - this.getHeightTableFooter()) : undefined;\n    this.setTableOpacity(1);\n    this.changeDetector.detectChanges();\n  }\n\n  togglePopup(row, targetRef) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.poPopupComponent.toggle(row);\n  }\n\n  validateTableAction(row: any, tableAction: any) {\n    if (typeof tableAction.disabled === 'function') {\n      return tableAction.disabled.call(this.parentRef, row);\n    } else {\n      return tableAction.disabled;\n    }\n  }\n\n  protected showContainer(container: string) {\n\n    const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;\n\n    containerClassList.add('po-container');\n\n    container === 'border' ? containerClassList.add('po-container-no-shadow') : containerClassList.remove('po-container-no-shadow');\n  }\n\n  private checkChangesItems() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && !this.hasColumns && this.hasItems()) {\n      this.columns = this.getDefaultColumns(this.items[0]);\n    }\n  }\n\n  private checkingIfColumnHasTooltip(column, row) {\n    if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {\n      return this.tooltipText = column.tooltip;\n    }\n\n    if (column.type === 'label') {\n      const columnLabel = this.getColumnLabel(row, column);\n      return this.tooltipText = columnLabel.tooltip;\n    }\n  }\n\n  private getHeightTableFooter() {\n    return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;\n  }\n\n  private hideContainer() {\n    const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;\n    containerClassList.remove('po-container');\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateWidthHeaders();\n\n      // show the table\n      this.setTableOpacity(1);\n    });\n  }\n\n  private getColumnIconsFromProperty(rowIcons: Array<string>, column: PoTableColumn) {\n\n    const icons = [];\n    const { action, color, disabled } = column;\n\n    const icon = { action, color, disabled };\n\n    rowIcons.forEach(value => icons.push( typeof value === 'string' ? { ...icon, value } : value));\n\n    return icons;\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n    }\n  }\n\n  private setTableOpacity(value: number) {\n    this.tableOpacity = value;\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\nimport { capitalizeFirstLetter, isTypeof } from '../../../utils/util';\n\nimport { PoTableDetail } from './po-table-detail.interface';\nimport { PoTableDetailColumn } from './po-table-detail-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por apresentar o detalhe de cada linha da tabela.\n */\n@Component({\n  selector: 'po-table-detail',\n  templateUrl: './po-table-detail.component.html'\n})\nexport class PoTableDetailComponent {\n\n  private _detail: PoTableDetail;\n\n  /**\n   * Define se a tabela possui a opÃ§Ã£o de `checkbox` habilitada.\n   */\n  @Input('p-checkbox') hasCheckbox?: boolean = false;\n\n  /**\n   * ConfiguraÃ§Ã£o da linha de detalhes.\n   */\n  @Input('p-detail') set detail(value: PoTableDetail) {\n    this._detail = this.returnPoTableDetailObject(value);\n  }\n\n  get detail() {\n    return this._detail;\n  }\n\n  /**\n   * Lista de itens do _detail_ da tabela.\n   */\n  @Input('p-items') items: Array<any>;\n\n  /**\n   * AÃ§Ã£o executada ao selecionar ou desmarcar a seleÃ§Ã£o de uma linha de detalhe do `po-table`.\n   */\n  @Output('p-select-row') selectRow?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private decimalPipe: DecimalPipe) {}\n\n  get detailColumns(): Array<PoTableDetailColumn> {\n    return this.detail && this.detail.columns || [];\n  }\n\n  get typeHeaderInline(): boolean {\n    return this.detail && !this.detail['typeHeader'] || this.detail['typeHeader'] === 'inline';\n  }\n\n  get typeHeaderTop(): boolean {\n    return this.detail && this.detail['typeHeader'] === 'top';\n  }\n\n  formatNumberDetail(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getColumnTitleLabel(detail: PoTableDetailColumn) {\n    return detail.label || capitalizeFirstLetter(detail.property);\n  }\n\n  onSelectRow(item) {\n    item.$selected = !item.$selected;\n    this.selectRow.emit(item);\n  }\n\n  private returnPoTableDetailObject(value: any) {\n    if (value && isTypeof(value, 'object')) {\n\n      if (value.columns) {\n        value.columns.forEach(column => column.property = column.property || column.column);\n      }\n\n      if (Array.isArray(value)) {\n        return { columns: value };\n      }\n\n      if (value.columns) {\n        return value;\n      }\n    }\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir um Ã­cone na tabela.\n */\n@Component({\n  selector: 'po-table-icon',\n  templateUrl: './po-table-icon.component.html'\n})\n\nexport class PoTableIconComponent {\n\n  tooltip: string;\n\n  /** Define se o Ã­cone Ã© clicÃ¡vel. */\n  @Input('p-clickable') clickable: boolean;\n\n  /** Cor do Ã­cone. */\n  @Input('p-color') color: string;\n\n  /** Desabilitado. */\n  @Input('p-disabled') disabled: boolean;\n\n  /** Classe css do Ã­cone. */\n  @Input('p-icon') icon: string;\n\n  /** Texto do tooltip. */\n  @Input('p-icon-tooltip') iconTooltip: string;\n\n  /** Output click. */\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter();\n\n  private get allowTooltip() {\n    return !this.disabled && this.iconTooltip;\n  }\n\n  onClick() {\n    if (this.clickable) {\n      this.click.emit();\n    }\n  }\n\n  tooltipMouseEnter() {\n    if (this.allowTooltip) {\n      this.tooltip = this.iconTooltip;\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltip = undefined;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoTableSubtitleColumn } from '../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um botÃ£o e modal para visualizaÃ§Ã£o de todas as legendas.\n */\n@Component({\n  selector: 'po-table-show-subtitle',\n  templateUrl: './po-table-show-subtitle.component.html'\n})\nexport class PoTableShowSubtitleComponent {\n\n  /** Objeto com os dados da legenda. */\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\n\n  /** Propriedade que recebe as literais definidas no `po-table`. */\n  @Input('p-literals') literals;\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\nimport { PoTableSubtitleColumn } from './../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de cÃ­rculo.\n */\n@Component({\n  selector: 'po-table-subtitle-circle',\n  templateUrl: './po-table-subtitle-circle.component.html'\n})\nexport class PoTableSubtitleCircleComponent {\n\n  private _subtitle: PoTableSubtitleColumn;\n\n  /** Objeto com os dados da legenda. */\n  @Input('p-subtitle') set subtitle(subtitle: PoTableSubtitleColumn) {\n    if (subtitle) {\n      subtitle.color = this.poColorPaletteService.getColor(subtitle);\n    }\n    this._subtitle = subtitle;\n  }\n  get subtitle(): PoTableSubtitleColumn {\n    return this._subtitle;\n  }\n\n  /** Esconde a tooltip. */\n  @Input('p-hide-title')\n  hideTitle: boolean = false;\n\n  constructor(private poColorPaletteService: PoColorPaletteService) { }\n\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { PoTableSubtitleColumn } from './po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um conjunto de legendas.\n */\n@Component({\n  selector: 'po-table-subtitle-footer',\n  templateUrl: './po-table-subtitle-footer.component.html'\n})\nexport class PoTableSubtitleFooterComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  showSubtitle: boolean;\n\n  private isVisible: boolean;\n  private timeoutResize;\n  protected resizeListener: () => void;\n\n  /** Propriedade que recebe as literais definidas no `po-table`. */\n  @Input('p-literals') literals;\n\n  /** Propriedade que recebe as legendas definidas no `PoTableSubtitleCircleComponent`. */\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\n\n  constructor(private element: ElementRef, public renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    this.initializeResizeListener();\n    this.debounceResize();\n  }\n\n  ngDoCheck() {\n\n    if (!this.isVisible && this.getContainerSize() > 0) {\n      this.toggleShowCompleteSubtitle();\n      this.isVisible = true;\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.removeResizeListener();\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.toggleShowCompleteSubtitle();\n    });\n  }\n\n  private getContainerSize() {\n    return this.element.nativeElement.querySelector('.po-table-subtitle-footer-container').offsetWidth;\n  }\n\n  private getItemsSize() {\n    const items = this.element.nativeElement.querySelectorAll('.po-table-subtitle-footer');\n\n    return Array.from(items).map(item => item['offsetWidth']).reduce((a, b) => a + b, 16);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n  private toggleShowCompleteSubtitle() {\n    const containerSize = this.getContainerSize();\n    const itemsSize = this.getItemsSize();\n\n    this.showSubtitle = itemsSize > containerSize;\n  }\n\n}\n","import { CommonModule, DecimalPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoButtonModule } from './../po-button/po-button.module';\nimport { PoCheckboxGroupModule } from '../po-field/po-checkbox-group/po-checkbox-group.module';\nimport { PoContainerModule } from '../po-container/po-container.module';\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\nimport { PoModalModule } from '../po-modal/po-modal.module';\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\nimport { PoPopupModule } from './../po-popup/po-popup.module';\nimport { PoTimeModule } from '../../pipes/po-time/index';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\nimport { PoTableColumnIconComponent } from './po-table-column-icon/po-table-column-icon.component';\nimport { PoTableColumnLabelComponent } from './po-table-column-label/po-table-column-label.component';\nimport { PoTableColumnLinkComponent } from './po-table-column-link/po-table-column-link.component';\nimport { PoTableColumnManagerComponent } from './po-table-column-manager/po-table-column-manager.component';\nimport { PoTableComponent } from './po-table.component';\nimport { PoTableDetailComponent } from './po-table-detail/po-table-detail.component';\nimport { PoTableIconComponent } from './po-table-icon/po-table-icon.component';\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\nimport { PoTableShowSubtitleComponent } from './po-table-show-subtitle/po-table-show-subtitle.component';\nimport { PoTableSubtitleCircleComponent } from './po-table-subtitle-circle/po-table-subtitle-circle.component';\nimport { PoTableSubtitleFooterComponent } from './po-table-subtitle-footer/po-table-subtitle-footer.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-table\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoButtonModule,\n    PoCheckboxGroupModule,\n    PoContainerModule,\n    PoLoadingModule,\n    PoModalModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoTimeModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoTableComponent,\n    PoTableColumnIconComponent,\n    PoTableColumnLabelComponent,\n    PoTableColumnLinkComponent,\n    PoTableColumnManagerComponent,\n    PoTableDetailComponent,\n    PoTableIconComponent,\n    PoTableRowTemplateDirective,\n    PoTableShowSubtitleComponent,\n    PoTableSubtitleCircleComponent,\n    PoTableSubtitleFooterComponent\n  ],\n  exports: [\n    PoTableComponent,\n    PoTableRowTemplateDirective\n  ],\n  providers: [DecimalPipe]\n})\nexport class PoTableModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoCalendarLangService {\n\n  months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  wordMonth = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  wordYear = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  lang = 'pt';\n\n  constructor() { }\n\n  setLanguage(lang: string) {\n    if (lang && lang.length >= 2) {\n      lang = lang.toLowerCase().slice(0, 2);\n      this.lang = (lang === 'pt' || lang === 'en' || lang === 'es') ? lang : 'pt';\n    }\n  }\n\n  getWordMonth() {\n    return this.wordMonth[this.lang];\n  }\n\n  getWordYear() {\n    return this.wordYear[this.lang];\n  }\n\n  getMonth(month: number) {\n    return this.months[month][this.lang];\n  }\n\n  getArrayMonths() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.lang]);\n    }\n    return arrMonths;\n  }\n\n  getWeedDays(day: number) {\n    return this.shortWeekDays[day][this.lang];\n  }\n\n  getArrayWeekDays() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.lang]);\n    }\n    return arrWeekDays;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { setYearFrom0To100 } from '../../../../utils/util';\n\n@Injectable()\nexport class PoCalendarService {\n  firstWeekDay: number;\n\n  constructor() {\n    this.firstWeekDay = 0; // 0 = sunday\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== this.firstWeekDay) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if ((typeof month !== 'number') || (month < 0) || (month > 11)) {\n      throw Error(('month must be a number (Jan is 0)'));\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n    setYearFrom0To100(date, year);\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while ((date.getMonth() <= month) && (date.getFullYear() === year));\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function(date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isMobile, setYearFrom0To100, validateDateRange } from '../../../../utils/util';\nimport { PoCalendarLangService } from './po-calendar.lang.service';\nimport { PoCalendarService } from './po-calendar.service';\n\nconst poCalendarLocaleDefault = 'pt';\nconst poCalendarLocales = ['pt', 'en', 'es'];\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de calendÃ¡rio de uso interno\n */\n@Component({\n  selector: 'po-calendar',\n  templateUrl: './po-calendar.component.html',\n  providers: [PoCalendarService, PoCalendarLangService ]\n})\nexport class PoCalendarComponent {\n\n  private _dateEnd: Date;\n  private _dateStart: Date;\n  private _locale: string;\n  private _selectedDate?: Date;\n\n  currentYear: number;\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonthNumber: number;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeedDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  overlayInvisible: boolean = true;\n  visible: boolean = false;\n  yearVisible: boolean = false;\n\n  private currentMonthNumber: number;\n  private isMobile: any = isMobile;\n  private lastDisplay: string;\n  private today: Date = new Date();\n\n  @ViewChild('days', { read: ElementRef, static: true }) elDays: ElementRef;\n  @ViewChild('months', { read: ElementRef, static: true }) elMonths: ElementRef;\n  @ViewChild('years', { read: ElementRef, static: true }) elYears: ElementRef;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ¡xima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('p-date-end') set dateEnd(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._dateEnd = date;\n    } else {\n      this._dateEnd = undefined;\n    }\n  }\n  get dateEnd() {\n    return this._dateEnd;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  @Input('p-locale') set locale(locale: string) {\n    this._locale = poCalendarLocales.includes(locale) ? locale : poCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data selecionada no calendÃ¡rio.\n   */\n  @Input('p-selected-date') set selectedDate(selectedDate: Date) {\n    this._selectedDate  = selectedDate && selectedDate instanceof Date ? selectedDate : undefined;\n  }\n  get selectedDate(): Date {\n    return this._selectedDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ­nima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('p-date-start') set dateStart(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._dateStart = date;\n    } else {\n      this._dateStart = undefined;\n    }\n  }\n  get dateStart() {\n    return this._dateStart;\n  }\n\n  @Output('p-selected-dateChange') selectedDateChange = new EventEmitter<Date>();\n  @Output('p-submit') submit = new EventEmitter<Date>();\n\n  constructor(\n    private poCalendarService: PoCalendarService,\n    private poCalendarLangService: PoCalendarLangService) {\n  }\n\n  close() {\n    this.overlayInvisible = true;\n    this.visible = false;\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  getArrayDecade(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'po-calendar-box-background-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'po-calendar-box-background-today';\n    } else if (date) {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'po-calendar-box-background';\n      } else {\n        return 'po-calendar-box-background-disabled';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  getDayForegroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'po-calendar-box-foreground-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'po-calendar-box-foreground-today';\n    } else {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'po-calendar-box-foreground';\n      } else {\n        return 'po-calendar-box-foreground-disabled';\n      }\n    }\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\n  }\n\n  getWordMonth() {\n    return this.poCalendarLangService.getWordMonth();\n  }\n\n  getWordYear() {\n    return this.poCalendarLangService.getWordYear();\n  }\n\n  init() {\n    this.selectedDate ? this.updateDate(this.selectedDate) : this.updateDate(this.today);\n\n    this.initializeLanguage();\n\n    this.selectDay();\n\n    if (this.isMobile()) {\n      this.overlayInvisible = false;\n    }\n\n    this.visible = true;\n  }\n\n  initializeLanguage() {\n    this.poCalendarLangService.setLanguage(this.locale);\n    this.displayWeedDays = this.poCalendarLangService.getArrayWeekDays();\n    this.displayMonths = this.poCalendarLangService.getArrayMonths();\n  }\n\n  onNextMonth() {\n    if (this.displayMonthNumber < 11) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber + 1);\n    } else {\n      this.updateDisplay(this.displayYear + 1, 0);\n    }\n  }\n\n  onPrevMonth() {\n    if (this.displayMonthNumber > 0) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber - 1);\n    } else {\n      this.updateDisplay(this.displayYear - 1, 11);\n    }\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n      this.selectedDate = date;\n      this.selectedDateChange.emit(date);\n      this.submit.emit(date);\n    }\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  setMobileVisualization() {\n    return this.isMobile() ? 'po-calendar po-calendar-mobile' : 'po-calendar';\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  private updateDate(date: Date) {\n    this.currentMonthNumber = date.getMonth();\n    this.currentYear = date.getFullYear();\n    this.updateDisplay(this.currentYear, this.currentMonthNumber);\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.poCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getArrayDecade(year);\n  }\n\n}\n","import { ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * Este componente Ã© de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informaÃ§Ãµes do model.\n *\n * Por padrÃ£o limpa o valor do campo e executa o mÃ©todo onChangePropagate, caso tenha a necessidade de tratar a funÃ§Ã£o de limpar o campo,\n * deve implementar a interface PoClean.\n */\nexport abstract class PoCleanBaseComponent {\n\n  /** Nesta propriedade deve-se informar o elementRef do campo de entrada que utilizarÃ¡ o po-clean. */\n  @Input('p-element-ref') inputRef: ElementRef;\n\n  /** Valor que serÃ¡ atribuÃ­do ao campo quando for clicado no po-clean. */\n  @Input('p-default-value') defaultValue?: string = '';\n\n  /**\n   * Evento disparado quando executada aÃ§Ã£o do po-clean.\n   * Este evento deve ser usado para avisar para o componente que estÃ¡ usando o po-clean, que o botÃ£o foi disparado,\n   * e provavelmente serÃ¡ preciso emitir o evento para atualizar o model.\n   */\n  @Output('p-change-event') changeEvent?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected parentComponent: any;\n\n  clear() {\n    this.setInputValue(this.defaultValue);\n    this.changeEvent.emit(this.defaultValue);\n  }\n\n  showIcon() {\n    return this.defaultValue !== this.getInputValue() && this.hasCleanAttr() && !this.isDisabled() && !this.isReadonly();\n  }\n\n  // Este mÃ©todo verifica se o componente pai possui a propriedade clean diferente de vazio,\n  // ou seja, se o po-clean deve ser usado.\n  private hasCleanAttr(): boolean {\n    return this.parentComponent.clean;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ desabilitado.\n  private isDisabled(): boolean {\n    return this.parentComponent.disabled;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ somente leitura.\n  private isReadonly(): boolean {\n    return this.parentComponent.readonly;\n  }\n\n  abstract setInputValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoCleanBaseComponent } from './po-clean-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoCleanBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-clean-labs\" title=\"Portinari Clean Labs\">\n *   <file name=\"sample-po-clean-labs.component.html\"> </file>\n *   <file name=\"sample-po-clean-labs.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-clean',\n  templateUrl: './po-clean.component.html'\n})\nexport class PoCleanComponent extends PoCleanBaseComponent {\n\n  constructor(private viewRef: ViewContainerRef) {\n    super();\n    this.parentComponent = this.viewRef['_view']['component'];\n  }\n\n  setInputValue(value?: string) {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      this.inputRef.nativeElement.value = value;\n    }\n  }\n\n  getInputValue() {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      return this.inputRef.nativeElement.value;\n    }\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m os valores numÃ©ricos dos *keyCodes*.\n */\nexport enum PoKeyCodeEnum {\n\n    /** Seta para baixo */\n    arrowDown = 40,\n\n    /** Seta para cima */\n    arrowUp = 38,\n\n    /** Backspace */\n    backspace = 8,\n\n    /** Delete */\n    delete = 46,\n\n    /** Enter */\n    enter = 13,\n\n    /** Esc */\n    esc = 27,\n\n    /** Tecla L */\n    keyL = 76,\n\n    /** EspaÃ§o */\n    space = 32,\n\n    /** Tab */\n    tab = 9\n\n}\n","/**\n * @usedBy PoComboComponent\n *\n * @description\n *\n * Define o tipo de busca usado no po-combo.\n */\nexport enum PoComboFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. Caso nÃ£o seja especificado um tipo, serÃ¡ esse o utilizado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, removeDuplicatedOptions, poLocaleDefault, validValue } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboLiterals } from './interfaces/po-combo-literals.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\n\nconst PO_COMBO_DEBOUNCE_TIME_DEFAULT = 400;\nconst PO_COMBO_FIELD_LABEL_DEFAULT = 'label';\nconst PO_COMBO_FIELD_VALUE_DEFAULT = 'value';\n\nexport const poComboLiteralsDefault = {\n  en: <PoComboLiterals> {\n    noData: 'No data found'\n  },\n  es: <PoComboLiterals> {\n    noData: 'Datos no encontrados'\n  },\n  pt: <PoComboLiterals> {\n    noData: 'Nenhum dado encontrado'\n  },\n  ru: <PoComboLiterals> {\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O po-combo, semelhante ao po-select, exibe uma lista de valores e permite ao usuÃ¡rio fazer a seleÃ§Ã£o de um desses valores,\n * mas no caso do po-combo, o usuÃ¡rio ainda consegue filtrar os valores disponibilizados para seleÃ§Ã£o.\n *\n * TambÃ©m hÃ¡ a possibilidade de usar serviÃ§o no po-combo, atravÃ©s da propriedade p-filter-service.\n *\n * O comportamento do po-combo permite ao usuÃ¡rio:\n *  - selecionar um item atravÃ©s do mouse;\n *  - navegar pelos itens utilizando as setas do teclado confirmando a seleÃ§Ã£o com \"Enter\";\n *  - pesquisar os itens da lista de seleÃ§Ã£o e em seguida navegar com as setas ou com o mouse;\n *  - digitar a descriÃ§Ã£o completa.\n *\n * O po-combo guarda o Ãºltimo valor caso o usuÃ¡rio desista de uma busca, deixando o campo ou teclando \"ESC\".\n * Caso seja digitado no campo de busca a descriÃ§Ã£o completa de um item, entÃ£o a seleÃ§Ã£o serÃ¡ automaticamente efetuada\n * ao deixar o campo ou pressionando \"Enter\".\n *\n * Ã necessÃ¡rio que os itens da lista de selecÃ£o contenham sempre valor (value) e descriÃ§Ã£o (label) para que os itens apareÃ§am corretamente\n * no po-combo, itens que nÃ£o estejam implementando corretamenta a interface PoComboOption, serÃ£o descartados.\n *\n * O po-combo ainda permite definir o modo que serÃ¡ feito o filtro, atravÃ©s da propriedade p-filter-mode.\n */\nexport abstract class PoComboBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _changeOnEnter?: boolean = false;\n  private _debounceTime?: number = 400;\n  private _disabled?: boolean = false;\n  private _disabledInitFilter?: boolean = false;\n  private _fieldLabel?: string = 'label';\n  private _fieldValue?: string = 'value';\n  private _filterMinlength?: number = 0;\n  private _filterMode?: PoComboFilterMode = PoComboFilterMode.startsWith;\n  private _filterParams?: any;\n  private _filterService?: PoComboFilter | string;\n  private _literals?: PoComboLiterals;\n  private _options: Array<PoComboOption> = [];\n  private _required?: boolean = false;\n\n  cacheOptions: Array<PoComboOption> = [];\n  cacheStaticOptions: Array<PoComboOption> = [];\n  defaultService: PoComboFilterService;\n  firstInWriteValue: boolean = true;\n  isFirstFilter: boolean = true;\n  isFiltering: boolean = false;\n  keyupSubscribe: any;\n  onModelChange: any;\n  onModelTouched: any;\n  previousSearchValue: string = '';\n  selectedOption: PoComboOption;\n  selectedValue: any;\n  selectedView: any;\n  service: PoComboFilterService;\n  visibleOptions: Array<PoComboOption> = [];\n\n  private validatorChange: any;\n\n  /** Label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ realizado o filtro para carregamento da lista de\n   * itens no componente.\n   * Caso haja a necessidade de customizaÃ§Ã£o, entÃ£o pode ser informado um serviÃ§o implementando a interface PoComboFilter.\n   *\n   * Caso utilizado uma URL, o serviÃ§o deve ser retornado no padrÃ£o API TOTVS e utiliza as propriedades\n   * `p-field-label` e `p-field-value` para a construÃ§Ã£o da lista de itens.\n   *\n   * Quando utilizada uma URL de serviÃ§o, entÃ£o serÃ¡ concateanada nesta URL o valor que deseja-se filtrar da seguinte forma:\n   * ```\n   * url + ?filter=Peter\n   * ```\n   */\n  @Input('p-filter-service') set filterService(service: PoComboFilter | string) {\n    this._filterService = service;\n\n    this.configAfterSetFilterService(service);\n  }\n\n  get filterService(): PoComboFilter | string {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro apÃ³s cada pressionamento de tecla.\n   * SerÃ¡ utilizada apenas quando houver serviÃ§o (`p-filter-service`).\n   *\n   * @default `400`\n   */\n  @Input('p-debounce-time') set debounceTime(value: number) {\n    const parsedValue = parseInt(<any> value, 10);\n\n    this._debounceTime = !isNaN(parsedValue) && parsedValue > 0 ? parsedValue : PO_COMBO_DEBOUNCE_TIME_DEFAULT;\n\n    this.unsubscribeKeyupObservable();\n    this.initInputObservable();\n  }\n\n  get debounceTime(): number {\n    return this._debounceTime;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Desabilita o filtro inicial no serviÃ§o, que Ã© executado no primeiro clique no campo.\n   *\n   * @default `false`\n   *\n   */\n  @Input('p-disabled-init-filter') set disabledInitFilter(value: boolean) {\n    this._disabledInitFilter = convertToBoolean(value);\n  }\n\n  get disabledInitFilter(): boolean {\n    return this._disabledInitFilter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`p-options`), esta propriedade serÃ¡ responsÃ¡vel pelo valor de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * PoComboOption.\n   *\n   * @default `value`\n   */\n  @Input('p-field-value') set fieldValue(value: string) {\n    this._fieldValue = value || PO_COMBO_FIELD_VALUE_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldValue = this._fieldValue;\n    }\n  }\n\n  get fieldValue() {\n    return this._fieldValue;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`p-options`), esta propriedade serÃ¡ responsÃ¡vel pelo texto de apresentaÃ§Ã£o de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * PoComboOption.\n   *\n   * @default `label`\n   */\n  @Input('p-field-label') set fieldLabel(value: string) {\n    this._fieldLabel = value || PO_COMBO_FIELD_LABEL_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldLabel = this._fieldLabel;\n    }\n  }\n\n  get fieldLabel() {\n    return this._fieldLabel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Valor mÃ­nimo de caracteres para realizar o filtro no serviÃ§o.\n   *\n   * @default `0`\n   */\n  @Input('p-filter-minlength') set filterMinlength(value: number) {\n    const parseValue = (typeof value === 'string') ? parseInt(value, 10) : value;\n\n    this._filterMinlength = Number.isInteger(parseValue) ? parseValue : 0;\n  }\n\n  get filterMinlength() {\n    return this._filterMinlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o evento `p-change` sÃ³ serÃ¡ disparado ao clicar ou pressionar a tecla \"Enter\" sobre uma opÃ§Ã£o selecionada.\n   *\n   * @default `false`\n   */\n  @Input('p-change-on-enter') set changeOnEnter(changeOnEnter: boolean) {\n    this._changeOnEnter = convertToBoolean(changeOnEnter);\n  }\n\n  get changeOnEnter() {\n    return this._changeOnEnter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /**\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface PoComboOption.\n   * Esta lista conterÃ¡ os valores e as descriÃ§Ãµes que serÃ£o apresentados na tela.\n   */\n  @Input('p-options') set options(options: Array<PoComboOption>) {\n    this._options = Array.isArray(options) ? options : [];\n\n    this.cacheStaticOptions = this.options;\n\n    this.validAndSortOptions();\n    removeDuplicatedOptions(this.options);\n    this.updateComboList();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Indica que a lista definida na propriedade p-options serÃ¡ ordenada pela descriÃ§Ã£o. */\n  sort?: boolean = false;\n  @Input('p-sort') set setSort(sort: string) {\n    this.sort = sort === '' ? true : convertToBoolean(sort);\n\n    this.validAndSortOptions();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no filtro da lista de seleÃ§Ã£o: `startsWith`, `contains` ou `endsWith`.\n   *\n   * > Quando utilizar a propriedade `p-filter-service` esta propriedade serÃ¡ ignorada.\n   *\n   * @default `startsWith`\n   */\n  @Input('p-filter-mode') set filterMode(filterMode: PoComboFilterMode) {\n    this._filterMode = (filterMode in PoComboFilterMode) ? filterMode : PoComboFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = PoComboFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = PoComboFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = PoComboFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode(): PoComboFilterMode {\n    return this._filterMode;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que serÃ¡ repassado como parÃ¢metro aos mÃ©todos do serviÃ§o que implementam a interface *PoComboFilter*.\n   */\n  @Input('p-filter-params') set filterParams(filterParams: any) {\n    this._filterParams = (filterParams || filterParams === 0 || filterParams === false) ? filterParams : undefined;\n  }\n\n  get filterParams() {\n    return this._filterParams;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-combo`.\n   *\n   * Para utilizar basta passar a literal que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoComboLiterals = {\n   *    noData: 'Nenhum valor'\n   *  };\n   * ```\n   *\n   * E para carregar a literal customizada, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-combo\n   *   [p-literals]=\"customLiterals\">\n   * </po-combo>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoComboLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poComboLiteralsDefault[poLocaleDefault],\n        ...poComboLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poComboLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poComboLiteralsDefault[browserLanguage()];\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setInputValue(value: any): void;\n\n  abstract applyFilter(value: string): void;\n\n  abstract getObjectByValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n  abstract initInputObservable(): void;\n\n  ngOnInit() {\n    this.updateComboList();\n  }\n\n  onInitService() {\n    if (this.filterService) {\n      this.setService(this.filterService);\n      this.initInputObservable();\n    }\n  }\n\n  setService(service: PoComboFilter | string) {\n    if (service) {\n      if (isTypeof(service, 'object')) {\n        this.service = <PoComboFilterService> service;\n      } else {\n        this.service = this.defaultService;\n        this.service.configProperties(<string>service, this.fieldLabel, this.fieldValue);\n      }\n    }\n  }\n\n  validAndSortOptions() {\n    if (this.options && this.options.length > 0) {\n      // Remove os objetos que nÃ£o contÃ©m valor e atribui o valor ao label caso este esteja vazio\n      for (let i = 0; i < this.options.length; i++) {\n        if (!validValue(this.options[i]['value'])) {\n          this.options.splice(i, 1);\n        } else if (!this.options[i]['label']) {\n          this.options[i]['label'] = this.options[i]['value'].toString();\n        }\n      }\n    }\n    this.sortOptions();\n  }\n\n  sortOptions() {\n    if (this.options && this.options.length > 0 && this.sort) {\n      this.options.sort(this.compareOptions);\n    }\n  }\n\n  compareOptions(a: any, b: any) {\n    if (a.label.toString().toLowerCase() < b.label.toString().toLowerCase()) {\n      return -1;\n    }\n    if (a.label.toString().toLowerCase() > b.label.toString().toLowerCase()) {\n      return 1;\n    }\n    return 0;\n  }\n\n  compareMethod(search: string, option: PoComboOption, filterMode: PoComboFilterMode) {\n    switch (filterMode) {\n      case PoComboFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case PoComboFilterMode.contains:\n        return this.contains(search, option);\n      case PoComboFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: PoComboOption) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: PoComboOption) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: PoComboOption) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  getOptionFromValue(value: any, options: any) {\n    return (options) ? options.find((option: any) => this.isEqual(option.value, value)) : null;\n  }\n\n  getOptionFromLabel(label: any, options: any) {\n    if (options) {\n      return options.find((option: any) => {\n        return option.label.toString().toLowerCase() === label.toString().toLowerCase();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  updateSelectedValue(option: PoComboOption, isUpdateModel: boolean = true, isWriteValue = false) {\n    const optionLabel = option && option.label || '';\n\n    this.updateInternalVariables(option);\n\n    // atualiza o valor do input quando for changeOnEnter apenas se for para atualizar o model.\n    if (this.changeOnEnter && isUpdateModel) {\n      this.setInputValue(optionLabel);\n    } else if (!this.changeOnEnter) {\n      this.setInputValue(optionLabel);\n    }\n\n    if (isUpdateModel) {\n      const optionValue = option && option.value || undefined;\n\n      this.updateModel(optionValue, isWriteValue);\n    }\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return (this.onModelChange) ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) ||\n        (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  searchForLabel(search: string, options: Array<PoComboOption>, filterMode: PoComboFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<PoComboOption> = [];\n\n      options.forEach(option => {\n        if (option.label && (this.compareMethod(search, option, filterMode) || this.service)) {\n          newOptions.push(option);\n        }\n      });\n\n      this.selectedView = newOptions[0];\n      this.updateComboList(newOptions);\n    } else {\n      this.updateComboList();\n    }\n  }\n\n  updateComboList(options?: Array<PoComboOption>) {\n    const copyOptions = options || [...this.options];\n\n    const newOptions = !options && this.selectedValue ? [{ ...this.selectedOption }] : copyOptions;\n\n    if (newOptions) {\n      this.visibleOptions = newOptions;\n\n      if (!this.selectedView && this.visibleOptions.length) {\n        this.selectedView = this.visibleOptions[0];\n      }\n    }\n  }\n\n  getNextOption(value: any, options: Array<PoComboOption>, reverse: boolean = false) {\n    const newOptions = [].concat(options);\n    let optionFound = null;\n    let found = false;\n\n    if (reverse) {\n      newOptions.reverse();\n    }\n\n    for (let i = 0; i < newOptions.length; i++) {\n      const option = newOptions [i];\n      if (!optionFound) {\n        optionFound = option;\n      }\n      if (found) {\n        return option;\n      }\n      if (this.isEqual(option.value, value)) {\n        found = true;\n      }\n    }\n    return optionFound;\n  }\n\n  getIndexSelectedView() {\n    for (let i = 0; i < this.visibleOptions.length; i++) {\n      if (this.compareObjects(this.visibleOptions[i], this.selectedView)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  compareObjects(obj1: any, obj2: any) {\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\n  }\n\n  verifyValidOption() {\n    const inputValue = this.getInputValue();\n\n    const optionFound = this.getOptionFromLabel(inputValue, this.options);\n\n    if (optionFound && optionFound.value !== this.selectedValue) {\n\n      this.updateSelectedValue(optionFound);\n\n      this.previousSearchValue = optionFound.label;\n      return;\n\n    } else if (this.selectedValue && this.selectedOption && this.selectedOption.label !== inputValue) {\n      this.updateSelectedValueWithOldOption();\n\n      this.previousSearchValue = this.selectedOption.label;\n      return;\n\n    } else if (inputValue && !optionFound) {\n      const isInputValueDiffSelectedLabel = !!(this.selectedOption && this.selectedOption.label !== inputValue);\n\n      this.updateSelectedValue(null, isInputValueDiffSelectedLabel || this.changeOnEnter);\n\n      this.previousSearchValue = '';\n      return;\n    }\n\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n\n    if (validValue(value) && !this.service && this.options && this.options.length) {\n      const option = this.getOptionFromValue(value, this.options);\n      this.updateSelectedValue(option);\n      this.updateComboList();\n      return;\n    }\n\n    // Se houver serviÃ§o busca pelo model.\n    if (value && this.service) {\n      return this.getObjectByValue(value);\n    }\n\n    if (!validValue(value)) {\n      this.updateSelectedValue(null, true, true);\n      this.updateComboList();\n    }\n\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if ((requiredFailed(this.required, this.disabled, abstractControl.value))) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private configAfterSetFilterService(service: PoComboFilter | string) {\n    if (service) {\n      this.options = [];\n      this.unsubscribeKeyupObservable();\n      this.onInitService();\n    } else {\n      this.service = undefined;\n      this.options = this.cacheStaticOptions;\n    }\n\n    this.visibleOptions = [];\n    this.isFirstFilter = true;\n  }\n\n  private unsubscribeKeyupObservable() {\n    if (this.keyupSubscribe) {\n      this.keyupSubscribe.unsubscribe();\n    }\n  }\n\n  private updateInternalVariables(option: PoComboOption) {\n    if (option) {\n      this.selectedView = option;\n      this.selectedOption = option;\n    } else {\n      this.selectedView = undefined;\n      this.selectedOption = undefined;\n    }\n  }\n\n  private updateModel(value: any, fromWriteValue = false): void {\n    if (value !== this.selectedValue) {\n\n      if (!fromWriteValue) {\n        this.callModelChange(value);\n      }\n\n      this.change.emit(value);\n    }\n\n    this.selectedValue = value;\n  }\n\n  private updateSelectedValueWithOldOption() {\n    const oldOption = this.getOptionFromValue(this.selectedValue, this.options);\n\n    if (oldOption && oldOption.label) {\n      return this.updateSelectedValue(oldOption);\n    }\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoResponse } from './interfaces/po-response.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente po-combo.\n */\n@Injectable()\nexport class PoComboFilterService implements PoComboFilter {\n\n  private _url: string;\n\n  fieldLabel: string = 'label';\n  fieldValue: string = 'value';\n\n  get url(): string { return this._url; }\n\n  constructor(private http: HttpClient) { }\n\n  getFilteredData(param: any, filterParams?: any): Observable<Array<PoComboOption>> {\n    const value = param.value;\n\n    const params = new HttpParams({\n      fromString: `filter=${value}`\n    });\n\n    return this.http.get(`${this.url}`, {responseType: 'json', params: params})\n      .pipe(map((response: PoResponse) => this.parseToArrayComboOption(response.items)));\n  }\n\n  getObjectByValue(value: string | number, filterParams?: any): Observable<PoComboOption> {\n    return this.http.get(`${this.url}/${value}`).pipe(map(item => this.parseToComboOption(item)));\n  }\n\n  configProperties(url: string, fieldLabel: string, fieldValue: string) {\n    this._url = url;\n    this.fieldLabel = fieldLabel;\n    this.fieldValue = fieldValue;\n  }\n\n  private parseToArrayComboOption(items: Array<any>): Array<PoComboOption> {\n    if (items && items.length > 0) {\n\n      return items.map(item => {\n        return this.parseToComboOption(item);\n      });\n\n    }\n\n    return [];\n  }\n\n  private parseToComboOption(item: any): PoComboOption {\n    if (item && item[this.fieldValue]) {\n\n      const label = item[this.fieldLabel];\n      const value = item[this.fieldValue];\n\n      return { label, value };\n    }\n  }\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoComboComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista de opÃ§Ãµes do componente.\n *\n * > Quando utilizada em dispositivos *mobile* serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`\n * dentro da *tag* `po-combo`.\n *\n * Para obter a referÃªncia do item atual utilize `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-combo\n *   name=\"combo\"\n *   [(ngModel)]=\"combo\"\n *   [p-options]=\"options\">\n *     <ng-template p-combo-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </po-combo>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-combo\n *   name=\"combo\"\n *   [(ngModel)]=\"combo\"\n *   [p-options]=\"options\">\n *     <div *p-combo-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </po-combo>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-combo-option-template]'\n})\nexport class PoComboOptionTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { ChangeDetectorRef, Component, ContentChild, DoCheck, ElementRef, forwardRef,\n  IterableDiffers, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\n\nimport { removeDuplicatedOptions } from '../../../utils/util';\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoComboBaseComponent } from './po-combo-base.component';\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoComboOptionTemplateDirective } from './po-combo-option-template/po-combo-option-template.directive';\n\nconst poComboContainerOffset = 8;\nconst poComboContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoComboBaseComponent\n *\n * @description\n * Utilizando po-combo com serviÃ§o, Ã© possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\n * faÃ§a uma requisiÃ§Ã£o Ã  URL informada passando o valor digitado no campo. Se encontrado o valor, entÃ£o o mesmo serÃ¡ selecionado, caso\n * nÃ£o seja encontrado, entÃ£o a lista de itens voltarÃ¡ para o estado inicial.\n *\n * @example\n *\n * <example name=\"po-combo-basic\" title=\"Portinari Combo Basic\">\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.html\"> </file>\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-labs\" title=\"Portinari Combo Labs\">\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.html\"> </file>\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-scheduling\" title=\"Portinari Combo - Scheduling\">\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.html\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-transfer\" title=\"Portinari Combo - Banking Transfer\">\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.html\"> </file>\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes\" title=\"Portinari Combo - Heroes\">\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes-reactive-form\" title=\"Portinari Combo - Heroes Reactive Form\">\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-hotels\" title=\"Portinari Combo - Booking Hotel\">\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.html\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.ts\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-combo',\n  templateUrl: './po-combo.component.html',\n  providers: [\n    PoComboFilterService,\n    PoControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoComboComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoComboComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoComboComponent extends PoComboBaseComponent implements DoCheck, OnDestroy {\n\n  private _isServerSearching: boolean = false;\n\n  comboIcon: string = 'po-icon-arrow-down';\n  comboOpen: boolean = false;\n  differ: any;\n  isProcessingGetObjectByValue: boolean = false;\n  scrollTop = 0;\n  service: PoComboFilterService;\n  shouldMarkLetters: boolean = true;\n\n  private clickoutListener: () => void;\n  private eventResizeListener: () => void;\n\n  private filterSubscription: Subscription;\n  private getSubscription: Subscription;\n\n  @ContentChild(PoComboOptionTemplateDirective, { static: true }) comboOptionTemplate: PoComboOptionTemplateDirective;\n\n  @ViewChild('containerElement', { read: ElementRef, static: false }) containerElement: ElementRef;\n  @ViewChild('contentElement', { read: ElementRef, static: false }) contentElement: ElementRef;\n  @ViewChild('iconArrow', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\n\n  constructor(\n    public element: ElementRef,\n    public differs: IterableDiffers,\n    public defaultService: PoComboFilterService,\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: PoControlPositionService,\n    private sanitized: DomSanitizer) {\n\n    super();\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  set isServerSearching(value: boolean) {\n    if (value) {\n      this._isServerSearching = value;\n\n      this.changeDetector.detectChanges();\n\n      this.setContainerPosition();\n      this.initializeListeners();\n    } else {\n      this._isServerSearching = value;\n\n      this.removeListeners();\n    }\n  }\n\n  get isServerSearching() {\n    return this._isServerSearching;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      this.validAndSortOptions();\n      removeDuplicatedOptions(this.options);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoComboComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoComboComponent, { static: true }) combo: PoComboComponent;\n   *\n   * focusCombo() {\n   *   this.combo.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  onKeyDown(event?: any) {\n    const key = event.keyCode;\n    const inputValue = event.target.value;\n\n    // busca um registro quando acionar o tab\n    if (this.service && key === PoKeyCodeEnum.tab && inputValue) {\n      this.controlComboVisibility(false);\n      return this.getObjectByValue(inputValue);\n    }\n\n    // Teclas \"up\" e \"down\"\n    if (key === PoKeyCodeEnum.arrowUp || key === PoKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n\n      if (this.comboOpen) {\n        if (key === PoKeyCodeEnum.arrowUp) {\n          this.selectPreviousOption();\n        } else {\n          this.selectNextOption();\n        }\n      }\n\n      this.controlComboVisibility(true);\n      this.isFiltering = this.changeOnEnter ? this.isFiltering : false;\n      this.shouldMarkLetters = this.changeOnEnter ? this.shouldMarkLetters : false;\n      return;\n    }\n\n    // Teclas \"tab\" ou \"esc\"\n    if (key === PoKeyCodeEnum.tab || key === PoKeyCodeEnum.esc) {\n\n      if (key === PoKeyCodeEnum.esc && this.comboOpen) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.controlComboVisibility(false);\n      this.verifyValidOption();\n\n      if (!this.service) {\n        // caso for changeOnEnter e nao ter selectedValue deve limpar o selectedView para reinicia-lo.\n        this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n        this.updateComboList();\n      }\n\n      return;\n    }\n\n    // Tecla \"enter\"\n    if (key === PoKeyCodeEnum.enter && this.selectedView && this.comboOpen) {\n      const isUpdateModel = (this.selectedView.value !== this.selectedValue) || (inputValue !== this.selectedView.label);\n\n      this.controlComboVisibility(false);\n\n      this.updateSelectedValue(this.selectedView, isUpdateModel);\n      this.isFiltering = false;\n\n      this.updateComboList();\n      return;\n    }\n\n    if (key === PoKeyCodeEnum.enter) {\n      this.controlComboVisibility(true);\n    }\n  }\n\n  onKeyUp(event?: any) {\n    const key = event.keyCode || event.which;\n    const inputValue = event.target.value;\n\n    const isValidKey = (key !== PoKeyCodeEnum.arrowUp && key !== PoKeyCodeEnum.arrowDown && key !== PoKeyCodeEnum.enter);\n\n    if (isValidKey) {\n\n      if (inputValue) {\n        if (!this.service && this.previousSearchValue !== inputValue) {\n          this.shouldMarkLetters = true;\n          this.isFiltering = true;\n          this.searchForLabel(inputValue, this.options, this.filterMode);\n        }\n\n      } else {\n        // quando apagar rapido o campo e conter serviÃ§o, valor, nÃ£o disparava o keyup observable\n        // necessario este tratamento para retornar a lista 'default'.\n        const useDefaultOptionsService = this.service && this.selectedValue && this.selectedOption.label === this.previousSearchValue;\n\n        this.updateSelectedValue(null);\n\n        if (!this.service) {\n          this.updateComboList();\n        } else if (useDefaultOptionsService) {\n          this.updateComboList([...this.cacheOptions]);\n        }\n\n        this.isFiltering = false;\n      }\n\n      // caso o valor pesquisado for diferente do anterior deve abrir o combo\n      if (this.previousSearchValue !== inputValue) {\n        this.changeDetector.detectChanges();\n\n        this.controlComboVisibility(true);\n      }\n\n    }\n\n    this.previousSearchValue = inputValue;\n  }\n\n  initInputObservable() {\n    if (this.service) {\n      const keyupObservable = fromEvent(this.inputElement.nativeElement, 'keyup')\n                                .pipe(\n                                  filter((e: any) => this.isValidCharacterToSearch(e.keyCode)),\n                                  map((e: any) => e.currentTarget.value),\n                                  distinctUntilChanged(),\n                                  tap(() => {\n                                    this.shouldMarkLetters = false;\n                                  }),\n                                  debounceTime(this.debounceTime)\n                                );\n\n      this.keyupSubscribe = keyupObservable.subscribe(value => {\n        if (value.length >= this.filterMinlength || !value) {\n          this.controlApplyFilter(value);\n        }\n      });\n    }\n  }\n\n  controlApplyFilter(value) {\n    if (!this.isProcessingGetObjectByValue && (!this.selectedOption || value !== this.selectedOption.label)) {\n      this.applyFilter(value);\n    }\n  }\n\n  applyFilter(value: string) {\n    this.controlComboVisibility(false);\n    this.isServerSearching = true;\n\n    const param = { property: this.fieldLabel, value };\n\n    this.filterSubscription = this.service.getFilteredData(param, this.filterParams)\n      .subscribe(items => this.setOptionsByApplyFilter(value, items));\n  }\n\n  setOptionsByApplyFilter(value, items) {\n    this.shouldMarkLetters = true;\n    this.isServerSearching = false;\n    this.options = items;\n\n    this.searchForLabel(value, items, this.filterMode);\n\n    this.changeDetector.detectChanges();\n\n    this.controlComboVisibility(true);\n\n    if (this.isFirstFilter) {\n      this.isFirstFilter = !this.isFirstFilter;\n\n      this.cacheOptions = this.options;\n    }\n  }\n\n  getObjectByValue(value) {\n    if (!this.selectedValue) {\n      this.isProcessingGetObjectByValue = true;\n\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams)\n        .subscribe(item => this.updateOptionByFilteredValue(item));\n    }\n  }\n\n  updateOptionByFilteredValue(item) {\n    if (item) {\n      this.options = [item];\n      this.onOptionClick(item);\n    } else {\n      this.updateSelectedValue(null);\n    }\n\n    setTimeout(() => { this.isProcessingGetObjectByValue = false; }, this.debounceTime);\n  }\n\n  selectPreviousOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions, true);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const visibleOption = this.visibleOptions[this.visibleOptions.length - 1];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  selectNextOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const index = this.changeOnEnter ? 1 : 0;\n\n      const visibleOption = this.visibleOptions[index];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  toggleComboVisibility(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.service && !this.disabledInitFilter) {\n      this.applyFilterInFirstClick();\n    }\n\n    this.controlComboVisibility(!this.comboOpen);\n  }\n\n  applyFilterInFirstClick() {\n    if (this.isFirstFilter && !this.selectedValue) {\n      this.applyFilter('');\n    }\n  }\n\n  controlComboVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  onOptionClick(option: PoComboOption, event?: any) {\n    const inputValue = this.getInputValue();\n    const isUpdateModel = (option.value !== this.selectedValue) || !!(this.selectedView && inputValue !== this.selectedView.label);\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.updateSelectedValue(option, isUpdateModel);\n    this.controlComboVisibility(false);\n    this.updateComboList([{ ...this.selectedView }]);\n\n    this.previousSearchValue = this.selectedView.label;\n  }\n\n  scrollTo(index) {\n    const scrollTop = (index <= 2) ? 0 : (index * 44) - 88;\n\n    this.setScrollTop(scrollTop);\n  }\n\n  getInputValue() {\n    return this.inputElement.nativeElement.value;\n  }\n\n  setInputValue(value: string): void {\n    this.inputElement.nativeElement.value = value;\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (this.comboOpen &&\n        !this.inputElement.nativeElement.contains(event.target) &&\n        !this.iconElement.nativeElement.contains(event.target) &&\n        (!this.contentElement || !this.contentElement.nativeElement.contains(event.target))) {\n      // Esconde Content do Combo quando for clicado fora\n      this.controlComboVisibility(false);\n\n      this.verifyValidOption();\n\n      // caso for changeOnEnter deve limpar o selectedView para reinicia-lo\n      this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n      this.updateComboList();\n    } else {\n      if (this.service && !this.getInputValue() && !this.isFirstFilter) {\n        this.applyFilter('');\n      }\n    }\n  }\n\n  getLabelFormatted(label): SafeHtml {\n    let format = label;\n\n    if (this.isFiltering ||\n      (this.service && this.getInputValue() && !this.compareObjects(this.cacheOptions, this.visibleOptions) && this.shouldMarkLetters)) {\n\n      const labelInput = this.getInputValue().toString().toLowerCase();\n      const labelLowerCase = label.toLowerCase();\n\n      const openTagBold = '<span class=\"po-font-text-large-bold\">';\n      const closeTagBold = '</span>';\n\n      let startString;\n      let middleString;\n      let endString;\n\n      switch (this.filterMode) {\n        case PoComboFilterMode.startsWith:\n        case PoComboFilterMode.contains:\n          startString = label.substring(0, labelLowerCase.indexOf(labelInput));\n          middleString = label.substring(labelLowerCase.indexOf(labelInput),\n            labelLowerCase.indexOf(labelInput) + labelInput.length);\n          endString = label.substring(labelLowerCase.indexOf(labelInput) + labelInput.length);\n\n          format = startString + openTagBold + middleString + closeTagBold + endString;\n          break;\n        case PoComboFilterMode.endsWith:\n          startString = label.substring(0, labelLowerCase.lastIndexOf(labelInput));\n          middleString = label.substring(labelLowerCase.lastIndexOf(labelInput));\n\n          format = startString + openTagBold + middleString + closeTagBold;\n          break;\n      }\n    }\n\n    return this.safeHtml(format);\n  }\n\n  safeHtml(value): SafeHtml {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n\n  isValidCharacterToSearch(keyCode) {\n    return (keyCode !== 9 && // tab\n            keyCode !== 13 && // entet\n            keyCode !== 16 && // shift\n            keyCode !== 17 && // ctrl\n            keyCode !== 18 && // alt\n            keyCode !== 20 && // capslock\n            keyCode !== 27 && // esc\n            keyCode !== 37 && // seta\n            keyCode !== 38 && // seta\n            keyCode !== 39 && // seta\n            keyCode !== 40 && // seta\n            keyCode !== 93); // windows menu\n  }\n\n  searchOnEnter(value: string) {\n    if (this.service && !this.selectedView && value.length >= this.filterMinlength) {\n      this.controlApplyFilter(value);\n    }\n  }\n\n  private adjustContainerPosition() {\n    this.controlPosition.adjustPosition(poComboContainerPositionDefault);\n  }\n\n  private close() {\n    this.comboOpen = false;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'po-icon-arrow-down';\n\n    this.removeListeners();\n\n    this.isFiltering = false;\n  }\n\n  private initializeListeners() {\n    this.removeListeners();\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      // timeout necessario pois a animaÃ§Ã£o do po-menu impacta no ajuste da posiÃ§Ã£o do container.\n      setTimeout(() => this.adjustContainerPosition(), 250);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  }\n\n  private open() {\n    this.comboOpen = true;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'po-icon-arrow-up';\n\n    this.initializeListeners();\n\n    this.inputElement.nativeElement.focus();\n    this.scrollTo(this.getIndexSelectedView());\n\n    this.setContainerPosition();\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setContainerPosition() {\n    this.controlPosition.setElements(\n      this.containerElement.nativeElement,\n      poComboContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n  private setScrollTop(scrollTop: number) {\n    if (this.contentElement) {\n      this.contentElement.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n}\n","/**\n * Para usar o po-mask Ã© preciso instanciar esta classe passando a mÃ¡scara como\n * primeiro parÃ¢metro, e no segundo parÃ¢metro, deve se informado true, caso queira\n * que o model seja formatado ou false para o que o model seja limpo.\n */\nexport class PoMask {\n  mask: string = '';\n  formatModel: boolean = false;\n  // controle de posiÃ§Ã£o\n  initialPosition: number = 0;\n  finalPosition: number = 0;\n\n  pattern: string = '';\n  get getPattern(): string {\n    return this.pattern;\n  }\n\n  valueToInput: string;\n  get getValueToInput(): string {\n    return this.valueToInput;\n  }\n  set setValueToInput(value: string) {\n    this.valueToInput = value;\n  }\n\n  valueToModel: string;\n  get getValueToModel(): string {\n    return this.valueToModel;\n  }\n  set setValueToModel(value: string) {\n    this.valueToModel = value;\n  }\n\n  formattingEnds: boolean;\n\n  constructor(mask: string, formatModel: boolean) {\n    this.mask = mask;\n    this.formatModel = formatModel;\n    this.pattern = this.getRegexFromMask(mask);\n  }\n\n  keyup($event: any) {\n    if (this.mask) {\n      const value = $event.target.value;\n      // formata o valor quando for colado com control + v e reposiciona o cursor\n      if ($event.keyCode === 17 || $event.keyCode === 91) {\n        $event.target.value = this.controlFormatting(value);\n        this.resetPositions($event);\n      }\n\n      $event.preventDefault();\n\n      switch ($event.keyCode) {\n        case 37: // seta esquerda\n          if (this.initialPosition > 0) {\n            this.initialPosition--;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 39: // seta direita\n          if (this.initialPosition < value.toString().length) {\n            this.initialPosition++;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 35: // end\n          this.finalPosition = value.toString().length;\n          if ($event.shiftKey) {\n            this.setPositions($event);\n          } else {\n            this.initialPosition = this.finalPosition;\n            this.setPositions($event);\n          }\n          break;\n\n        case 36: // HOME\n          if ($event.shiftKey) {\n            this.finalPosition = this.initialPosition;\n            this.initialPosition = 0;\n            this.setPositions($event);\n          } else {\n            this.initialPosition = 0;\n            this.finalPosition = 0;\n            this.setPositions($event);\n          }\n          break;\n      }\n    }\n  }\n\n  setPositionNotShiftKey($event: any) {\n    if (!$event.shiftKey) {\n      this.finalPosition = this.initialPosition;\n    }\n  }\n\n  setSelectionRange($event: any) {\n    if (this.initialPosition > this.finalPosition) {\n      $event.target.setSelectionRange(this.finalPosition, this.initialPosition);\n    } else {\n      $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n    }\n  }\n\n  keydown($event: any) {\n    if (this.mask) {\n      let value: string = $event.target.value;\n      if ($event.keyCode === 9) {\n        return;\n      }\n\n      if (!$event.ctrlKey && !$event.metaKey) {\n        $event.preventDefault();\n      }\n\n      // NÃ£o faz nada quando for digitado CTRL ou COMMAND e V\n      // JÃ¡ estÃ¡ sendo tratado no evento keyup\n      if ($event.ctrlKey || $event.metaKey && ($event.keyCode !== 86) ||\n        ($event.keyCode >= 37 && $event.keyCode <= 40) || $event.keyCode === 16 || $event.keyCode === 9 ) {\n        return;\n      }\n\n      // Valida a tecla digitada\n      if (this.isKeyValid($event.keyCode)) {\n        if (this.finalPosition === null) {\n          this.finalPosition = this.initialPosition;\n        }\n        this.revertPositions(this.initialPosition, this.finalPosition);\n\n        switch ($event.keyCode) {\n          case 8: // backspace\n            this.getPosition($event);\n            if (this.initialPosition < 0) {\n              this.initialPosition = 0;\n              this.setPositions($event);\n            }\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskBefore($event, -1);\n              if (this.initialPosition !== 0) {\n                value = value.slice(0, this.initialPosition - 1) + value.slice(this.finalPosition);\n                value = this.controlFormatting(value);\n                $event.target.value = value;\n                this.changePosition($event , -1);\n                this.checkMaskBefore($event, -1);\n                this.setPositions($event);\n                this.resetPositions($event);\n              }\n            } else {\n              this.clearRangeSelection(value, $event, true);\n            }\n            this.setPositions($event);\n            break;\n\n          case 46: // delete\n            this.getPosition($event);\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskAfter($event, 1);\n              value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition + 1);\n              value = this.controlFormatting(value);\n              $event.target.value = value;\n              this.setPositions($event);\n              this.resetPositions($event);\n            } else {\n              this.clearRangeSelection(value, $event, false);\n            }\n            this.setPositions($event);\n            break;\n\n          default: // qualquer outra tecla vÃ¡lida\n            value = value.slice(0, this.initialPosition) + $event.key + value.slice(this.finalPosition);\n            value = this.controlFormatting(value);\n            $event.target.value = value;\n            this.changePosition($event, 1);\n            this.checkMaskBefore($event, 1);\n            this.setPositions($event);\n            this.resetPositions($event);\n            this.setPositions($event);\n        }\n      }\n    }\n  }\n\n  clearRangeSelection(value: string, $event: any, isBackspace: boolean) {\n    value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition);\n    value = this.controlFormatting(value);\n    $event.target.value = value;\n\n    if (isBackspace) {\n      this.checkMaskBefore($event, -1);\n    }\n\n    this.setPositions($event);\n    this.resetPositions($event);\n  }\n\n  // passa a posiÃ§Ã£o do click para o controle de posiÃ§Ã£o\n  click($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n  }\n\n  blur($event: any) {\n    // Se houver algum valor definido na mÃ¡scara\n    if (this.mask) {\n      // pega o valor do campo, formata e passa para o model\n      let value = $event.target.value;\n      value = this.controlFormatting(value);\n      $event.target.value = value;\n    }\n  }\n\n  revertPositions(initialPosition: number, finalPosition: number) {\n    if (initialPosition > finalPosition) {\n      // inverte o controle de posiÃ§Ã£o caso o inicial esteja maior que o final\n      let tempPosition;\n      tempPosition = initialPosition;\n      this.initialPosition = finalPosition;\n      this.finalPosition = tempPosition;\n    }\n  }\n\n  // reseta o controle de posiÃ§Ã£o\n  resetPositions($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = this.initialPosition;\n  }\n\n  // posiciona o cursor de acordo com o controle de posiÃ§Ã£o\n  setPositions($event: any) {\n    $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n  }\n\n  // muda a posiÃ§Ã£o do cursor e atualiza o controle de posiÃ§Ã£o\n  changePosition($event: any, value: number) {\n    this.initialPosition = this.initialPosition + value;\n    this.finalPosition = this.finalPosition + value;\n    this.setPositions($event);\n  }\n\n  getPosition($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n    this.setPositions($event);\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar a formataÃ§Ã£o e aplicar todas as mÃ¡scara possÃ­veis\n  // quando houver valores opcionais (?)\n  controlFormatting(value: string) {\n    // Se o valor for vazio, retorna vazio\n    if (!value) {\n      this.valueToInput = '';\n      this.valueToModel = '';\n      return '';\n    }\n    let valueProcessed;\n    let maskTmp = this.mask;\n\n    // Array que serÃ¡ usado para armazenar todas as mÃ¡scaras possÃ­veis para\n    // quando houver um valor opcional (?)\n    const arrMasks: Array<any> = [];\n    let contMasks = 0;\n\n    // Enquanto houver algum 9? na mÃ¡scara\n    while (this.hasOptionalNumber(maskTmp)) {\n      arrMasks.push(maskTmp);\n      maskTmp = this.replaceOptionalNumber(maskTmp);\n    }\n    arrMasks.push(maskTmp);\n\n    // Inverte o array\n    arrMasks.reverse();\n\n    // Informa que a formataÃ§Ã£o ainda nÃ£o chegou ao fim\n    this.formattingEnds = false;\n\n    while (!this.formattingEnds) {\n      // Seta a formataÃ§Ã£o como terminada\n      // EntÃ£o o mÃ©todo formatValue irÃ¡ setar como nÃ£o terminado caso haja\n      this.formattingEnds = true;\n\n      // Se nÃ£o existe mais nenhuma mÃ¡scara possÃ­vel, entÃ£o encerra a formataÃ§Ã£o\n      if (!arrMasks[contMasks]) {\n        break;\n      }\n\n      // Chama a formataÃ§Ã£o passando a mÃ¡scara e o valor\n      valueProcessed = this.formatValue(value, arrMasks[contMasks]);\n      contMasks++;\n    }\n\n    return valueProcessed;\n  }\n\n  // FunÃ§Ã£o que formata a mÃ¡scara com o valor passado\n  formatValue(value: string, mask: string) {\n\n    // Remove as marcas de valor opciona (?)\n    mask = mask.replace(/\\?/g, '');\n\n    // Substitui todos os caracteres que nÃ£o sÃ£o fixos da mÃ¡scara por _\n    const guide = mask.replace(this.listValidKeys(), '_');\n\n    // Contador usado para percorrer o guide\n    let contGuide: number = 0;\n\n    // String final formatada\n    let valueProcessed: string = '';\n\n    // Remove do valor todos os caracteres fixos como ()/-+\n    value = this.removeFormattingValue(value);\n\n    // Percorre todo o valor e coloca a formataÃ§Ã£o de acordo com a mÃ¡scara\n    for (let i = 0; i < value.length; i++) {\n      const charValue = value[i];\n\n      // Se o guide acabou, seta a formataÃ§Ã£o como nÃ£o terminada para que o mÃ©todo controlFormatting\n      // tente formatar com outra possÃ­vel mÃ¡scara\n      if (!guide[contGuide]) {\n        this.formattingEnds = false;\n        break;\n      }\n\n      // Percorre o Guide enquanto tem caracteres fixos\n      while (this.isFixedCharacterGuide(guide[contGuide]) && guide[contGuide]) {\n        valueProcessed += guide[contGuide];\n        contGuide++;\n      }\n\n      // Ã um caracter vÃ¡lido de acordo com a mÃ¡scara\n      if (this.isKeyValidMask(charValue, mask[contGuide])) {\n        valueProcessed += charValue;\n        contGuide++;\n      } else {\n        // Se nÃ£o Ã© um caracter vÃ¡lido, deve interromper.\n        break;\n      }\n    }\n\n    if (this.formatModel) {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = valueProcessed;\n    } else {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = this.removeFormattingValue(valueProcessed);\n    }\n    return valueProcessed;\n  }\n  // verifica se tem algum caracter de mascara antes do cursor\n  checkMaskBefore($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition - 1))) {\n      this.changePosition($event, position);\n      this.checkMaskBefore($event, position);\n    }\n  }\n\n  // verifica se tem algum caracter de mascara depois do cursor\n  checkMaskAfter($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition))) {\n      this.changePosition($event, position);\n      this.checkMaskAfter($event, position);\n    }\n  }\n\n  // Retorna a mÃ¡scara sem um valor opcional\n  replaceOptionalNumber(mask: string) {\n    let i = 9;\n    while (i >= 0) {\n      if (mask.indexOf(i + '?') > -1) {\n        return mask.replace(i + '?', '');\n      }\n      i--;\n    }\n    return mask;\n  }\n\n  // Verifica se contÃ©m caracteres permitidos somente na mÃ¡scara \\/() +-\n  isFixedCharacterGuide(key: any) {\n    return this.testRegex(key, this.getFixedCharacterGuide());\n  }\n\n  // Retorna caracteres permitidos somente na mÃ¡scara \\/() +-\n  getFixedCharacterGuide() {\n    return /[\\\\\\/() +-.\\:]/g;\n  }\n\n  // Caracteres permitidos de serem digitados\n  listValidKeys() {\n    return /[a-zA-Z0-9]/g;\n  }\n\n  // Se Ã© um dÃ­gito vÃ¡lido\n  isKeyValid(keyCode: any) {\n    return this.isKeyCodeValid(keyCode);\n  }\n\n  // Verifica se a tecla digitada Ã© permitida\n  // Permite apenas nÃºmeros, letras, backspace e del\n  isKeyCodeValid(keyCode: number) {\n    return (\n      (keyCode >= 48 && keyCode <= 57) ||\n      (keyCode >= 65 && keyCode <= 90) ||\n      (keyCode >= 96 && keyCode <= 105) ||\n      (keyCode === 8) || keyCode === 9 ||\n      (keyCode === 46)\n    );\n  }\n\n  // Se estÃ¡ de acordo com a mÃ¡scara\n  isKeyValidMask(key: any, keyMask: any) {\n    return this.testRegex(key, this.replaceMask(keyMask));\n  }\n\n  // Retorna se a chave foi aprovada pela expressÃ£o regular\n  testRegex(key: any, regex: any) {\n    return regex.test(key);\n  }\n\n  // Remove a formatacÃ£o do valor\n  // Ã possÃ­vel ser melhorado para remover pontualmente os caracteres fixos de acordo com a mÃ¡scara\n  removeFormattingValue(value: string) {\n    return value.replace(this.getFixedCharacterGuide(), '');\n  }\n\n  // Verifica se contÃ©m valor opcional na mÃ¡scara 0-9?\n  hasOptionalNumber(mask: string) {\n    return mask.match(/\\d\\?/g);\n  }\n\n  // Retorna a expressÃ£o regular correspondente ao comando passado\n  replaceMask(char: string) {\n    let regex = /./;\n    switch (char) {\n      case '0': regex = /[0]/;\n                break;\n      case '1': regex = /[0-1]/;\n                break;\n      case '2': regex = /[0-2]/;\n                break;\n      case '3': regex = /[0-3]/;\n                break;\n      case '4': regex = /[0-4]/;\n                break;\n      case '5': regex = /[0-5]/;\n                break;\n      case '6': regex = /[0-6]/;\n                break;\n      case '7': regex = /[0-7]/;\n                break;\n      case '8': regex = /[0-8]/;\n                break;\n      case '9': regex = /[0-9]/;\n                break;\n      case ' ': regex = /\\s/;\n                break;\n      case '@': regex = /[a-zA-Z]/;\n                break;\n      case 'w': regex = /[a-zA-Z0-9]/;\n                break;\n    }\n    return regex;\n  }\n\n  getRegexFromMask(mask: string) {\n    if (mask) {\n      let pattern;\n      if (this.formatModel) {\n        pattern = mask.replace(/\\\\/g, '\\\\\\\\');\n        pattern = pattern.replace(/\\+/g, '\\\\+');\n        pattern = pattern.replace(/\\./g, '\\\\.');\n        pattern = pattern.replace(/-/g, '-');\n        pattern = pattern.replace(/\\(/g, '\\\\(');\n        pattern = pattern.replace(/\\)/g, '\\\\)');\n        pattern = pattern.replace(/\\//g, '\\\\/');\n        pattern = pattern.replace(/\\s/g, '\\\\s');\n        pattern = pattern.replace(/:/g, '\\\\:');\n        pattern = pattern.replace(/\\@(?!\\s)/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      } else {\n        pattern = mask.replace(/\\\\/g, '');\n        pattern = pattern.replace(/\\+/g, '');\n        pattern = pattern.replace(/\\./g, '');\n        pattern = pattern.replace(/-/g, '');\n        pattern = pattern.replace(/\\(/g, '');\n        pattern = pattern.replace(/\\)/g, '');\n        pattern = pattern.replace(/\\//g, '');\n        pattern = pattern.replace(/\\s/g, '');\n        pattern = pattern.replace(/:/g, '');\n        pattern = pattern.replace(/\\@/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      }\n      return pattern;\n    } else {\n      return null;\n    }\n  }\n\n}\n","import { EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertDateToISODate, convertDateToISOExtended, convertIsoToDate, convertToBoolean, formatYear,\n  getShortBrowserLanguage, isTypeof, setYearFrom0To100, validateDateRange } from '../../../utils/util';\nimport { dateFailed, requiredFailed } from './../validators';\nimport { PoMask } from '../po-input/po-mask';\n\nconst poDatepickerFormatDefault: string = 'dd/mm/yyyy';\n\n/**\n * @description\n *\n * O `po-datepicker` Ã© um componente especÃ­fico para manipulaÃ§Ã£o de datas permitindo a digitaÃ§Ã£o e / ou seleÃ§Ã£o.\n *\n * O formato de exibiÃ§Ã£o da data, ou seja, o formato que Ã© apresentado ao usuÃ¡rio Ã© o dd/mm/yyyy,\n * mas podem ser definidos outros padrÃµes (veja mais na propriedade `p-format`).\n *\n * O idioma padrÃ£o do calendÃ¡rio serÃ¡ exibido de acordo com o navegador, caso tenha necessidade de alterar\n * use a propriedade `p-locale`.\n *\n * O datepicker aceita trÃªs formatos de data: o E8601DZw (yyyy-mm-ddThh:mm:ss+|-hh:mm), o E8601DAw (yyyy-mm-dd) e o\n * Date padrÃ£o do Javascript.\n *\n * > O formato de saÃ­da do *model* se ajusta conforme o formato de entrada, veja abaixo:\n *\n * - Formato de entrada e saÃ­da (E8601DZw) - `'2017-11-28T00:00:00-02:00'`;\n *\n * - Formato de entrada e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * - Formato de entrada (Date) - `new Date(2017, 10, 28)` e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * **Importante:**\n *\n * - Para utilizar datas com ano inferior a 100, verificar o comportamento do [`new Date`](https://www.w3schools.com/js/js_dates.asp)\n * e utilizar o mÃ©todo [`setFullYear`](https://www.w3schools.com/jsref/jsref_setfullyear.asp).\n * - Caso a data esteja invÃ¡lida, o `model` receberÃ¡ **'Data invÃ¡lida'**.\n * - Caso o `input` esteja passando um `[(ngModel)]`, mas nÃ£o tenha um `name`, entÃ£o irÃ¡ ocorrer um erro\n * do prÃ³prio Angular (`[ngModelOptions]=\"{standalone: true}\"`).\n *\n * Exemplo:\n *\n * ```\n * <po-datepicker\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\"\n * </po-datepicker>\n * ```\n *\n * > NÃ£o esqueÃ§a de importar o `FormsModule` em seu mÃ³dulo, tal como para utilizar o `input default`.\n */\nexport abstract class PoDatepickerBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _autofocus?: boolean;\n  private _format?: string = poDatepickerFormatDefault;\n  private _maxDate: Date;\n  private _minDate: Date;\n  private _noAutocomplete?: boolean = false;\n  private _placeholder?: string = '';\n\n  protected date: Date;\n  protected firstStart = true;\n  protected hour: string = 'T00:00:01-00:00';\n  protected isExtendedISO: boolean = false;\n  protected objMask: any;\n  protected onChangeModel: any = null;\n  protected onTouchedModel: any = null;\n  protected validatorChange: any;\n\n  /* Nome do componente datepicker. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   */\n  @Input('p-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = isTypeof(placeholder, 'string') ? placeholder : '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Desabilita o campo. */\n  disabled?: boolean = false;\n  @Input('p-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /** Torna o elemento somente leitura. */\n  readonly?: boolean = false;\n  @Input('p-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /** Faz com que o campo seja obrigatÃ³rio. */\n  required?: boolean = false;\n  @Input('p-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set autofocus(autofocus: boolean) {\n    this._autofocus = convertToBoolean(autofocus);\n  }\n\n  get autofocus() {\n    return this._autofocus;\n  }\n\n  /** Habilita aÃ§Ã£o para limpar o campo. */\n  clean?: boolean = false;\n  @Input('p-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * Mensagem apresentada quando a data for invÃ¡lida ou fora do perÃ­odo.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja obrigatÃ³rio.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ­nima para o `po-datepicker`.\n   */\n  @Input('p-min-date') set minDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._minDate = date;\n    } else {\n      this._minDate = convertIsoToDate(value, true , false);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get minDate() {\n    return this._minDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ¡xima para o `po-datepicker`.\n   */\n  @Input('p-max-date') set maxDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._maxDate = date;\n    } else {\n      this._maxDate = convertIsoToDate(value, false , true);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o da data.\n   *\n   * Valores vÃ¡lidos:\n   *  - `dd/mm/yyyy`\n   *  - `mm/dd/yyyy`\n   *  - `yyyy/mm/dd`\n   *\n   * @default `dd/mm/yyyy`\n   */\n  @Input('p-format') set format(value: string) {\n    if (value) {\n      value = value.toLowerCase();\n      if (value.match(/dd/) && value.match(/mm/) && value.match(/yyyy/)) {\n        this._format = value;\n        this.objMask = this.buildMask();\n        this.refreshValue(this.date);\n        return;\n      }\n    }\n    this._format = poDatepickerFormatDefault;\n    this.objMask = this.buildMask();\n  }\n\n  get format() {\n    return this._format;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do Datepicker.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  _locale?: string;\n  @Input('p-locale') set locale(value: string) {\n    if (value) {\n      this._locale = value.length >= 2 ? value : 'pt';\n    } else {\n      this._locale = getShortBrowserLanguage();\n    }\n  }\n  get locale() {\n    return this._locale || getShortBrowserLanguage();\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') onblur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('p-change') onchange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  abstract writeValue(value: any): void;\n\n  abstract refreshValue(value: Date): void;\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.objMask = this.buildMask();\n  }\n\n  // Converte um objeto string em Date\n  getDateFromString(dateString: string) {\n    const day = parseInt(dateString.substring(this.format.indexOf('d'), this.format.indexOf('d') + 2), 10);\n    const month = parseInt(dateString.substring(this.format.indexOf('m'), this.format.indexOf('m') + 2), 10) - 1;\n    const year = parseInt(dateString.substring(this.format.indexOf('y'), this.format.indexOf('y') + 4), 10);\n\n    const date = new Date(year, month, day);\n\n    setYearFrom0To100(date, year);\n\n    return (date.getFullYear() === year && date.getMonth() === month && date.getDate() === day) ? date : null;\n  }\n\n  // Formata a data.\n  formatToDate(value: Date) {\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar o modelo.\n  controlModel(date: Date) {\n    this.date = date;\n    if (date && this.isExtendedISO) {\n      this.callOnChange(convertDateToISOExtended(this.date, this.hour));\n    } else if (date && !this.isExtendedISO) {\n      this.callOnChange(convertDateToISODate(this.date));\n    } else {\n      date === undefined ? this.callOnChange('') : this.callOnChange('Data invÃ¡lida');\n    }\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  callOnChange(value: any, retry: boolean = true) {\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    } else if (retry) {\n      setTimeout(() => this.callOnChange(value, false));\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\n  protected buildMask() {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new PoMask(mask, true);\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    // Verifica se jÃ¡ possui algum error pattern padrÃ£o.\n    this.errorPattern = this.errorPattern !== 'Data invÃ¡lida' && this.errorPattern !== 'Data fora do perÃ­odo' ? this.errorPattern : '';\n\n    if (dateFailed(c.value)) {\n      this.errorPattern = this.errorPattern || 'Data invÃ¡lida';\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if ((this.date && !validateDateRange(this.date, this._minDate, this._maxDate))) {\n      this.errorPattern = this.errorPattern || 'Data fora do perÃ­odo';\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, HostListener, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { formatYear, isMobile, setYearFrom0To100 } from '../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\n\nimport { PoCalendarComponent } from './po-calendar/po-calendar.component';\nimport { PoDatepickerBaseComponent } from './po-datepicker-base.component';\n\nconst poCalendarContentOffset = 8;\nconst poCalendarPositionDefault = 'bottom-left';\n\n/**\n * @docsExtends PoDatepickerBaseComponent\n *\n * @example\n *\n * <example name=\"po-datepicker-basic\" title=\"Portinari Datepicker Basic\">\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.ts\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.po.ts\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.e2e-spec.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-labs\" title=\"Portinari Datepicker Labs\">\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-airfare\" title=\"Portinari Datepicker - Airfare\">\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-airfare-reactive-form\" title=\"Portinari Datepicker - Airfare Reactive Form\">\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-datepicker',\n  templateUrl: './po-datepicker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoDatepickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoDatepickerComponent),\n      multi: true,\n    },\n    PoControlPositionService\n  ]\n})\nexport class PoDatepickerComponent extends PoDatepickerBaseComponent implements AfterViewInit, OnDestroy {\n\n  date;\n  el: ElementRef;\n  hour: string;\n\n  private clickListener;\n  private readonly dateRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])$');\n  private readonly isoRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])' +\n  'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n  '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n  '(?:|:?[0-5]\\\\d)$');\n  private timeoutChange: any;\n  private valueBeforeChange: string;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ViewChild('calendar', { static: true }) calendar: PoCalendarComponent;\n  @ViewChild('dialogPicker', { read: ElementRef, static: true }) dialogPicker: ElementRef;\n  @ViewChild('iconDatepicker', { read: ElementRef, static: true }) iconDatepicker: ElementRef;\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  constructor(private controlPosition: PoControlPositionService, private renderer: Renderer2, el: ElementRef) {\n    super();\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.setDialogPickerStyleDisplay('none');\n    // PÃµe o foco no Input, setado pelo p-focus\n    if (this.autofocus) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoDatepickerComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoDatepickerComponent, { static: true }) datepicker: PoDatepickerComponent;\n   *\n   * focusDatepicker() {\n   *   this.datepicker.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  togglePicker() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (!this.calendar.visible) {\n      this.calendar.init();\n      this.setCalendarPosition();\n      this.initializeListeners();\n\n    } else {\n      this.inputEl.nativeElement.disabled = false;\n      this.closeCalendar();\n    }\n  }\n\n  dateSelected() {\n    if (!this.verifyMobile()) {\n      this.inputEl.nativeElement.focus();\n    }\n\n    this.inputEl.nativeElement.value = this.formatToDate(this.date);\n    this.controlModel(this.date);\n    this.controlChangeEmitter();\n    this.closeCalendar();\n  }\n\n  // Esconde Picker quando for clicado fora\n  wasClickedOnPicker(event: any): void {\n    if (!this.dialogPicker || !this.iconDatepicker) {\n      return;\n    }\n\n    if ((!this.dialogPicker.nativeElement.contains(event.target) || this.hasOverlayClass(event.target)) &&\n      !this.iconDatepicker.nativeElement.contains(event.target) && !this.hasAttrCalendar(event.target)) {\n        this.closeCalendar();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup($event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keyup($event);\n    // Controla a atualizaÃ§Ã£o do model, verificando se a data Ã© valida\n    if (this.objMask.valueToModel || this.objMask.valueToModel === '') {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(this.getDateFromString(this.inputEl.nativeElement.value));\n        this.date = this.getDateFromString(this.inputEl.nativeElement.value);\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n    } else {\n      this.date = undefined;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown($event?: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keydown($event);\n  }\n\n  hasInvalidClass() {\n    return (this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== '');\n  }\n\n  getErrorPattern() {\n    return (this.errorPattern !== '' && this.hasInvalidClass()) ? this.errorPattern : '';\n  }\n\n  clear() {\n    this.valueBeforeChange = this.formatToDate(this.date);\n    this.date = undefined;\n    this.controlModel(this.date);\n\n    this.controlChangeEmitter();\n  }\n\n  eventOnBlur($event: any) {\n\n    const date = this.inputEl.nativeElement.value;\n    const newDate = date ? this.getDateFromString(date) : undefined;\n    this.objMask.blur($event);\n    this.onblur.emit();\n\n    if (this.objMask.valueToModel) {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(newDate);\n        this.date = newDate;\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n\n    } else {\n      this.date = undefined;\n      this.callOnChange(this.date);\n    }\n\n    this.controlChangeEmitter();\n\n  }\n\n  eventOnClick($event) {\n    if (this.verifyMobile()) {\n      $event.target.blur();\n\n      // abre o calendar quando clicar no input somente no mobile\n      setTimeout(() => this.togglePicker(), 0);\n    } else {\n      // Atualiza a posiÃ§Ã£o do cursor ao clicar\n      this.objMask.click($event);\n    }\n  }\n\n  formatToDate(value: Date) {\n    if (!value) {\n      return undefined;\n    }\n\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  refreshValue(value: Date) {\n    if (value) {\n      this.inputEl.nativeElement.value = this.formatToDate(value);\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    if (this.inputEl && value) {\n      if (value instanceof Date) {\n        const dateString = value.toString();\n        this.hour = 'T' + dateString.substring(16, 24) + dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n        this.date = value;\n        this.inputEl.nativeElement.value = this.formatToDate(value);\n\n      } else if (this.isValidDateIso(value) || this.isValidExtendedIso(value)) {\n\n        if (this.isValidDateIso(value)) {\n          this.isExtendedISO = false;\n        } else {\n          this.hour = value.substring(10, 25);\n          this.isExtendedISO = true;\n        }\n        const day = parseInt(value.substring(8, 10), 10);\n        const month = parseInt(value.substring(5, 7), 10) - 1;\n        const year = parseInt(value.substring(0, 4), 10);\n\n        const dateTemp = new Date(year, month, day);\n\n        setYearFrom0To100(dateTemp, year);\n\n        this.date = dateTemp;\n        this.inputEl.nativeElement.value = this.formatToDate(dateTemp);\n      } else {\n        this.inputEl.nativeElement.value = '';\n        this.date = undefined;\n      }\n      this.controlModel(this.date);\n    } else if (this.inputEl) {\n      this.inputEl.nativeElement.value = '';\n      this.date = undefined;\n    }\n\n    this.valueBeforeChange = this.formatToDate(this.date);\n  }\n\n  isValidDateIso(value: string) {\n    return this.dateRegex.test(value);\n  }\n\n  isValidExtendedIso(value) {\n    return this.isoRegex.test(value);\n  }\n\n  hasOverlayClass(element: any) {\n    return element.classList.contains('po-calendar-overlay');\n  }\n\n  /* istanbul ignore next */\n  verifyMobile() {\n    return isMobile();\n  }\n\n  private closeCalendar() {\n    this.calendar.close();\n    this.removeListeners();\n    this.setDialogPickerStyleDisplay('none');\n  }\n\n  private controlChangeEmitter() {\n    const dateModelFormatted = this.formatToDate(this.date);\n\n    if (dateModelFormatted !== this.valueBeforeChange) {\n      this.valueBeforeChange = dateModelFormatted;\n\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.onchange.emit(dateModelFormatted);\n      }, 200);\n    }\n  }\n\n  private hasAttrCalendar(element: any) {\n    const attrCalendar = 'attr-calendar';\n\n    return (element && element.hasAttribute(attrCalendar)) || (element.parentElement && element.parentElement.hasAttribute(attrCalendar));\n  }\n\n  private initializeListeners() {\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnPicker(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.closeCalendar();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\n  }\n\n  private removeListeners() {\n    if (this.clickListener) {\n      this.clickListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setDialogPickerStyleDisplay(value) {\n    this.dialogPicker.nativeElement.style.display = value;\n  }\n\n  private setCalendarPosition() {\n    this.setDialogPickerStyleDisplay('block');\n\n    this.controlPosition.setElements(\n      this.dialogPicker.nativeElement,\n      poCalendarContentOffset,\n      this.inputEl,\n      ['top-left', 'bottom-left'],\n      false,\n      true\n    );\n\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, poLocaleDefault } from './../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\nimport { PoDatepickerRangeLiterals } from './interfaces/po-datepicker-range-literals.interface';\nimport { PoDateService } from './../../../services/po-date/po-date.service';\n\nexport const poDatepickerRangeLiteralsDefault = {\n  en: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'Date in invalid format',\n    startDateGreaterThanEndDate: 'Start date greater than end date',\n  },\n  es: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'Fecha en formato no vÃ¡lido',\n    startDateGreaterThanEndDate: 'Fecha de inicio mayor que fecha final',\n  },\n  pt: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'Data no formato invÃ¡lido',\n    startDateGreaterThanEndDate: 'Data inicial maior que data final',\n  },\n  ru: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'ÐÐ°ÑÐ° Ð² Ð½ÐµÐ²ÐµÑÐ½Ð¾Ð¼ ÑÐ¾ÑÐ¼Ð°ÑÐµ',\n    startDateGreaterThanEndDate: 'ÐÐ°ÑÐ° Ð½Ð°ÑÐ°Ð»Ð° Ð±Ð¾Ð»ÑÑÐµ Ð´Ð°ÑÑ Ð¾ÐºÐ¾Ð½ÑÐ°Ð½Ð¸Ñ',\n  }\n};\n\n/**\n * @description\n *\n * O `po-datepicker-range` Ã© um componente para seleÃ§Ã£o de um perÃ­odo entre duas datas, onde Ã© possÃ­vel informar apenas\n * a data inicial ou a data final.\n *\n * O componente `[(ngModel)]` do `po-datepicker-range` trabalha com um objeto que implementa a interface\n * `PoDatepickerRange`, contendo as seguintes propriedades:\n * ```\n * { \"start\": '2017-11-28', \"end\": '2017-11-30' }\n * ```\n *\n * <a id=\"accepted-formats\"></a>\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * new Date(2017, 10, 28);\n * ```\n *\n * > O componente respeitarÃ¡ o formato passado para o *model* via codificaÃ§Ã£o. PorÃ©m, caso seja feita alteraÃ§Ã£o em algum\n * dos valores de data em tela, o componente atribuirÃ¡ o formato **Data (E8601DAw.): yyyy-mm-dd** ao model.\n *\n * Importante:\n *\n * - Quando preenchidas a data inicial e final, a data inicial deve ser sempre menor ou igual a data final;\n * - Ao passar uma data invÃ¡lida via codificaÃ§Ã£o, o valor serÃ¡ mantido no *model* e o `input` da tela aparecerÃ¡ vazio;\n * - Permite trabalhar com as duas datas separadamente atravÃ©s das propriedades `p-start-date` e `p-end-date` no lugar do\n * `[(ngModel)]`, no entanto sem a validaÃ§Ã£o do formulÃ¡rio;\n * - Para a validaÃ§Ã£o do formulÃ¡rio, utilize o `[(ngModel)]`.\n */\nexport abstract class PoDatepickerRangeBaseComponent implements ControlValueAccessor, Validator {\n\n  errorMessage: string = '';\n\n  private _clean?: boolean = false;\n  private _disabled?;\n  private _endDate?;\n  private _literals?: any;\n  private _noAutocomplete?: boolean = false;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n  private _startDate?;\n  private onChangeModel: any;\n  private validatorChange: any;\n\n  protected dateRange: PoDatepickerRange = { start: '', end: '' };\n  protected format: any = 'dd/mm/yyyy';\n  protected isDateRangeInputFormatValid: boolean = true;\n  protected isStartDateRangeInputValid: boolean = true;\n  protected onTouchedModel: any;\n\n  get isDateRangeInputValid() {\n    return this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita aÃ§Ã£o para limpar o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-clean') set clean(clean: boolean) {\n    this._clean = convertToBoolean(clean);\n  }\n\n  get clean() {\n    return this._clean;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data final.\n   */\n  @Input('p-end-date') set endDate(date: string | Date) {\n    this._endDate = this.convertPatternDateFormat(date);\n    this.dateRange.end = this.endDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get endDate() {\n    return this._endDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-datepicker-range`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format',\n   *    startDateGreaterThanEndDate: 'End date less than start date'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-datepicker-range\n   *   [p-literals]=\"customLiterals\">\n   * </po-datepicker-range>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoDatepickerRangeLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poDatepickerRangeLiteralsDefault[poLocaleDefault],\n        ...poDatepickerRangeLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poDatepickerRangeLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poDatepickerRangeLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data inicial.\n   */\n  @Input('p-start-date') set startDate(date: string | Date) {\n    this._startDate = this.convertPatternDateFormat(date);\n    this.dateRange.start = this.startDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get startDate() {\n    return this._startDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao alterar valor do campo.\n   */\n  @Output('p-change') onChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(protected poDateService: PoDateService) { }\n\n  protected abstract resetDateRangeInputValidation(): void;\n\n  protected abstract updateScreenByModel(dateRange: PoDatepickerRange);\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n\n    const value: PoDatepickerRange = control.value || {};\n    const startDate = value.start ? this.convertPatternDateFormat(value.start) : '';\n    const endDate = value.end ? this.convertPatternDateFormat(value.end) : '';\n\n    if (this.requiredDateRangeFailed(startDate, endDate)) {\n      this.errorMessage = '';\n\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (this.dateRangeObjectFailed(control.value) || this.dateRangeFormatFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.invalidFormat;\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    if (this.dateRangeFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.startDateGreaterThanEndDate;\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n  writeValue(dateRange: PoDatepickerRange): void {\n    this.resetDateRangeInputValidation();\n\n    if (!dateRange || this.dateRangeObjectFailed(dateRange)) {\n      this.dateRange = { start: '', end: '' };\n    }\n\n    if (!dateRange) {\n      this.validateModel(this.dateRange);\n    }\n\n    if (this.dateRangeObjectFailed(dateRange)) {\n      this.updateModel(dateRange);\n    }\n\n    if (this.isDateRangeObject(dateRange)) {\n      this.dateRange = {\n        start: this.convertPatternDateFormat(dateRange.start),\n        end: this.convertPatternDateFormat(dateRange.end)\n      };\n\n      this.updateModel(this.dateRange);\n    }\n\n    this.updateScreenByModel(this.dateRange);\n  }\n\n  protected dateFormatFailed(value: string): boolean {\n    return value && !this.poDateService.isValidIso(value);\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    const model = typeof(value) === 'object' ? { ...value } : value;\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(model);\n    }\n\n  }\n\n  protected validateModel(value: any) {\n    const model = { ...value };\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private convertPatternDateFormat(value: any) {\n\n    if (value instanceof Date) {\n      return this.poDateService.convertDateToISO(value);\n    }\n\n    return value;\n  }\n\n  private dateRangeFailed(startDate: string, endDate: string): boolean {\n    return !this.poDateService.isDateRangeValid(endDate, startDate) || !this.isStartDateRangeInputValid;\n  }\n\n  private dateRangeFormatFailed(startDate: string, endDate: string): boolean {\n    return this.dateFormatFailed(endDate) || this.dateFormatFailed(startDate) || !this.isDateRangeInputFormatValid;\n  }\n\n  private dateRangeObjectFailed(value): boolean {\n    return value && !this.isDateRangeObject(value);\n  }\n\n  private isDateRangeObject(value): boolean {\n    return value && value.hasOwnProperty('start') && value.hasOwnProperty('end');\n  }\n\n  private requiredDateRangeFailed(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputValid &&\n      requiredFailed(this.required, this.disabled, startDate) &&\n      requiredFailed(this.required, this.disabled, endDate);\n  }\n\n}\n","import { Component, ElementRef, forwardRef, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\nimport { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';\nimport { PoDateService } from './../../../services/po-date/po-date.service';\nimport { PoMask } from '../po-input/po-mask';\n\nconst arrowLeftKey = 37;\nconst arrowRightKey = 39;\nconst backspaceKey = 8;\nconst poDatepickerRangeDateLengthDefault = 10;\n\n/**\n * @docsExtends PoDatepickerRangeBaseComponent\n *\n * @example\n *\n * <example name=\"po-datepicker-range-basic\" title=\"Portinari Datepicker Range Basic\">\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-labs\" title=\"Portinari Datepicker Range Labs\">\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-vacations\" title=\"Portinari Datepicker Range - Vacations Suggestion\">\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-vacations-reactive-form\" title=\"Portinari Datepicker Range - Vacations Reactive Form\">\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html\">\n *  </file>\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts\">\n *  </file>\n * </example>\n */\n@Component({\n  selector: 'po-datepicker-range',\n  templateUrl: './po-datepicker-range.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\n    multi: true,\n  }]\n})\nexport class PoDatepickerRangeComponent extends PoDatepickerRangeBaseComponent implements OnInit {\n\n  private poDatepickerRangeElement: ElementRef<any>;\n  private poMaskObject: PoMask;\n\n  @ViewChild('dateRangeField', { read: ElementRef, static: true }) dateRangeField: ElementRef;\n  @ViewChild('endDateInput', { read: ElementRef, static: true }) endDateInput: ElementRef;\n  @ViewChild('startDateInput', { read: ElementRef, static: true }) startDateInput: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  get enableCleaner(): boolean {\n    return (this.startDateInputValue || this.endDateInputValue) && !this.disabled && !this.readonly;\n  }\n\n  get endDateInputName(): string {\n    return 'end-date';\n  }\n\n  get endDateInputValue(): string {\n    return this.endDateInput.nativeElement.value;\n  }\n\n  get getErrorMessage(): string {\n    return (this.errorMessage !== '' && this.hasInvalidClass()) ? this.errorMessage : '';\n  }\n\n  get isDateRangeInputUncompleted(): boolean {\n    return this.endDateInputValue.length < poDatepickerRangeDateLengthDefault\n      && this.startDateInputValue.length < poDatepickerRangeDateLengthDefault;\n  }\n\n  get isDirtyDateRangeInput(): boolean {\n    return this.endDateInputValue.length > 0 || this.startDateInputValue.length > 0;\n  }\n\n  get startDateInputName(): string {\n    return 'start-date';\n  }\n\n  get startDateInputValue(): string {\n    return this.startDateInput.nativeElement.value;\n  }\n\n  static getKeyCode(event: KeyboardEvent) {\n    return event.keyCode || event.which;\n  }\n\n  static getTargetElement(event: any) {\n    return event.target || event.srcElement;\n  }\n\n  static isValidKey(keyCode: number): boolean {\n    const isNumericKey = keyCode >= 48 && keyCode <= 57;\n    const isNumericNumpadKey = keyCode >= 96 && keyCode <= 105;\n\n    return isNumericKey || isNumericNumpadKey;\n  }\n\n  constructor(poDateService: PoDateService, poDatepickerRangeElement: ElementRef) {\n    super(poDateService);\n    this.poDatepickerRangeElement = poDatepickerRangeElement;\n  }\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.poMaskObject = this.buildMask();\n  }\n\n  clear() {\n    this.resetDateRangeInputValidation();\n    this.dateRange = { start: '', end: '' };\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoDatepickerRangeComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;\n   *\n   * focusDatepickerRange() {\n   *   this.datepickerRange.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.startDateInput.nativeElement.focus();\n    }\n  }\n\n  onBlur() {\n    this.removeFocusFromDatePickerRangeField();\n  }\n\n  onFocus() {\n    this.applyFocusOnDatePickerRangeField();\n  }\n\n  onKeydown(event?: any) {\n\n    if (this.readonly) {\n      return;\n    }\n\n    if (this.isSetFocusOnBackspace(event)) {\n      event.preventDefault();\n      this.setFocusOnBackspace();\n    } else {\n      this.poMaskObject.keydown(event);\n    }\n\n  }\n\n  onKeyup(event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    const isStartDateTargetEvent = event.target.name === this.startDateInputName;\n\n    this.setFocus(event);\n    this.poMaskObject.keyup(event);\n    this.updateModelByScreen(isStartDateTargetEvent);\n  }\n\n  resetDateRangeInputValidation() {\n    this.isStartDateRangeInputValid = true;\n    this.isDateRangeInputFormatValid = true;\n  }\n\n  updateScreenByModel(model: PoDatepickerRange) {\n    const dateRange = { start: model.start as string, end: model.end as string };\n    const isStartDateValid = this.poDateService.isDateRangeValid(dateRange.end, dateRange.start);\n    const isDateValid = date => !this.dateFormatFailed(date) && isStartDateValid;\n\n    const endDateFormated = isDateValid(dateRange.end) ? this.formatModelToScreen(dateRange.end) : '';\n    const startDateFormated = isDateValid(dateRange.start) ? this.formatModelToScreen(dateRange.start) : '';\n\n    this.endDateInput.nativeElement.value = endDateFormated;\n    this.startDateInput.nativeElement.value = startDateFormated;\n  }\n\n  private applyFocusOnDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.add('po-datepicker-range-field-focused');\n  }\n\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\n  private buildMask(): PoMask {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new PoMask(mask, true);\n  }\n\n  private formatDate(format: string, day: string = '', month: string = '', year: string = ''): string {\n    let dateFormatted = format;\n\n    day = day && day.includes('T') ? day.slice(0, 2) : day;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + day).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (month)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', String(year));\n\n    return dateFormatted;\n  }\n\n  private formatScreenToModel(value: string = ''): string {\n    const [day, month, year] = value.split('/');\n\n    return value ? this.formatDate('yyyy-mm-dd', day, month, year) : '';\n  }\n\n  private formatModelToScreen(value: string = ''): string {\n    const [year, month, day] = value.split('-');\n\n    return value ? this.formatDate(this.format, day, month, year) : '';\n  }\n\n  private getDateRangeFormatValidation(startDate: string, endDate: string, isStartDateTargetEvent: boolean):\n    { isValid: boolean, dateRangeModel: PoDatepickerRange } {\n\n    this.setDateRangeInputValidation(startDate, endDate);\n\n    return {\n      isValid: this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid,\n      dateRangeModel: this.getValidatedModel(startDate, endDate, isStartDateTargetEvent)\n    };\n\n  }\n\n  private getValidatedModel(startDate: string, endDate: string, isStartDateTargetEvent: boolean): PoDatepickerRange {\n    const dateRangeModel = { start: '', end: '' };\n\n    dateRangeModel.end = (isStartDateTargetEvent || this.isStartDateRangeInputValid)\n      && !this.dateFormatFailed(endDate) ? endDate : '' ;\n\n    dateRangeModel.start = (!isStartDateTargetEvent || this.isStartDateRangeInputValid)\n      && !this.dateFormatFailed(startDate) ? startDate : '';\n\n    return dateRangeModel;\n  }\n\n  private hasInvalidClass(): boolean {\n    return (this.poDatepickerRangeElement.nativeElement.classList.contains('ng-invalid') &&\n      this.poDatepickerRangeElement.nativeElement.classList.contains('ng-dirty'));\n  }\n\n  private isEqualBeforeValue(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputFormatValid && endDate === this.dateRange.end && startDate === this.dateRange.start;\n  }\n\n  private isSetFocusOnBackspace(event: any) {\n    return event.target.name === this.endDateInputName &&\n      this.endDateInput.nativeElement.selectionStart === 0 && this.endDateInput.nativeElement.selectionEnd === 0 &&\n      event.keyCode === backspaceKey;\n  }\n\n  private removeFocusFromDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.remove('po-datepicker-range-field-focused');\n  }\n\n  private setDateRangeInputValidation(startDate: string, endDate: string) {\n    this.isStartDateRangeInputValid = this.poDateService.isDateRangeValid(endDate, startDate);\n\n    this.isDateRangeInputFormatValid = !this.dateFormatFailed(startDate) && !this.dateFormatFailed(endDate);\n  }\n\n  private setFocus(event: any) {\n    const inputElement = PoDatepickerRangeComponent.getTargetElement(event);\n    const keyCode = PoDatepickerRangeComponent.getKeyCode(event);\n    const inputName = inputElement['name'];\n\n    this.setFocusOnArrowLeft(keyCode, inputName);\n    this.setFocusOnArrowRight(keyCode, inputName, inputElement);\n    this.setFocusOnStartDateCompleted(keyCode, inputName);\n  }\n\n  private setFocusAndPosition(position: number, inputElement: ElementRef, selectionRange: number) {\n    this.focusOnElement(inputElement);\n\n    setTimeout(() => {\n      inputElement.nativeElement.setSelectionRange(selectionRange, selectionRange);\n      this.poMaskObject.initialPosition = position;\n      this.poMaskObject.finalPosition = position;\n    });\n  }\n\n  private focusOnElement(inputElement: ElementRef) {\n    inputElement.nativeElement.focus();\n  }\n\n  private setFocusOnArrowLeft(keyCode: number, inputName: string) {\n    const isCursorAtStartOfInput = this.endDateInput.nativeElement.selectionStart === 0;\n\n    if (inputName === this.endDateInputName && isCursorAtStartOfInput && keyCode === arrowLeftKey) {\n      const inputLength = this.startDateInput.nativeElement.value.length;\n      this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n    }\n  }\n\n  private setFocusOnArrowRight(keyCode: number, inputName: string, inputElement: any) {\n    const isCursorAtEndOfInput = this.startDateInput.nativeElement.selectionStart === inputElement.value.length;\n\n    if (inputName === this.startDateInputName && isCursorAtEndOfInput && keyCode === arrowRightKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private setFocusOnBackspace() {\n    const inputLength = this.startDateInput.nativeElement.value.length;\n\n    this.startDateInput.nativeElement.value = this.startDateInputValue.slice(0, -1);\n    this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n  }\n\n  private setFocusOnStartDateCompleted(keyCode: number, inputName: string) {\n    const isLastKeyPressed = this.startDateInput.nativeElement.selectionStart === poDatepickerRangeDateLengthDefault;\n    const isNewDateCompleted = this.startDateInputValue.length === poDatepickerRangeDateLengthDefault && isLastKeyPressed;\n    const isValidKey = PoDatepickerRangeComponent.isValidKey(keyCode);\n\n    if (inputName === this.startDateInputName && isNewDateCompleted && isValidKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private updateModelByScreen(isStartDateTargetEvent: boolean) {\n    const endDateFormatted = this.formatScreenToModel(this.endDateInputValue);\n    const startDateFormatted = this.formatScreenToModel(this.startDateInputValue);\n\n    if (this.isDateRangeInputUncompleted && this.isDirtyDateRangeInput) {\n      this.updateModel(this.dateRange);\n      return;\n    }\n\n    if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {\n      this.resetDateRangeInputValidation();\n      this.validateModel(this.dateRange);\n      return;\n    }\n\n    const dateFormatValidation = this.getDateRangeFormatValidation(startDateFormatted, endDateFormatted, isStartDateTargetEvent);\n\n    if (dateFormatValidation.isValid) {\n      this.dateRange = { start: startDateFormatted, end: endDateFormatted };\n      this.updateModel(this.dateRange);\n      this.onChange.emit({ ...this.dateRange });\n    }\n\n    if (!dateFormatValidation.isValid) {\n      this.dateRange = { ...dateFormatValidation.dateRangeModel };\n      this.updateModel(dateFormatValidation.dateRangeModel);\n    }\n\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed, maxlengpoailed, minlengpoailed, patternFailed } from './../validators';\nimport { PoMask } from './po-mask';\n\n/**\n * @description\n *\n * Este Ã© um componente baseado em input, com vÃ¡rias propriedades do input nativo e outras\n * propriedades extras como: mÃ¡scara, pattern, mensagem de erro e etc.\n * VocÃª deve informar a variÃ¡vel que contÃ©m o valor como [(ngModel)]=\"variavel\", para que o\n * input receba o valor da variÃ¡vel e para que ela receba as alteraÃ§Ãµes do valor (two-way-databinding).\n * A propriedade name Ã© obrigatÃ³ria para que o formulÃ¡rio e o model funcionem corretamente.\n *\n * Importante:\n *\n * - Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o vocÃª precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * Exemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\"\n */\nexport abstract class PoInputBaseComponent implements ControlValueAccessor, Validator {\n\n  private _autofocus?: boolean;\n  private _maxlength?: number;\n  private _minlength?: number;\n  private _noAutocomplete?: boolean = false;\n  private _placeholder?: string = '';\n\n  protected passedWriteValue: boolean = false;\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('p-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, desabilita o campo.\n   *\n   * @default `false`\n   */\n  disabled?: boolean = false;\n  @Input('p-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  /** Indica que o campo serÃ¡ somente leitura. */\n  readonly?: boolean = false;\n  @Input('p-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o input estÃ¡ desabilitado `(p-disabled)`.\n   *\n   * @default `false`\n   */\n  required?: boolean = false;\n  @Input('p-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set autofocus(focus: boolean) {\n    this._autofocus = convertToBoolean(focus);\n  }\n\n  get autofocus() {\n    return this._autofocus;\n  }\n\n  /** Se verdadeiro, o campo receberÃ¡ um botÃ£o para ser limpo. */\n  clean?: boolean = false;\n  @Input('p-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo.\n   * Quando o campo possuir uma mÃ¡scara `(p-mask)` serÃ¡ automaticamente validado por ela, porÃ©m\n   * Ã© possÃ­vel definir um p-pattern para substituir a validaÃ§Ã£o da mÃ¡scara.\n   */\n  pattern?: string;\n  @Input('p-pattern') set setPattern(pattern: string) {\n    this.pattern = pattern;\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando o `pattern` ou a mÃ¡scara nÃ£o for satisfeita.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('p-maxlength') set maxlength(value: number) {\n    if (!isNaN(parseInt(<any> value, 10))) {\n      this._maxlength = parseInt(<any> value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._maxlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get maxlength() {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('p-minlength') set minlength(value: number) {\n    if (!isNaN(parseInt(<any> value, 10))) {\n      this._minlength = parseInt(<any> value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._minlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get minlength() {\n    return this._minlength;\n  }\n\n  /**\n   * @description\n   *\n   * Indica uma mÃ¡scara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.\n   * A mÃ¡scara gera uma validaÃ§Ã£o automÃ¡tica do campo, podendo esta ser substituÃ­da por um REGEX especÃ­fico\n   * atravÃ©s da propriedade p-pattern.\n   * O campo serÃ¡ sinalizado e o formulÃ¡rio ficarÃ¡ invÃ¡lido quando o valor informado estiver fora do padrÃ£o definido,\n   * mesmo quando desabilitado.\n   */\n  mask?: string = '';\n  @Input('p-mask') set setMask(mask: string) {\n    this.mask = mask;\n\n    // Atualiza MÃ¡scara do Campo\n    this.objMask = new PoMask(this.mask, this.maskFormatModel);\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Indica se o `model` receberÃ¡ o valor formatado pela mÃ¡scara ou apenas o valor puro (sem formataÃ§Ã£o).\n   *\n   * @default `false`\n   */\n  maskFormatModel?: boolean = false;\n  @Input('p-mask-format-model') set setMaskFormatModel(maskFormatModel: string) {\n    this.maskFormatModel = maskFormatModel === '' ? true : convertToBoolean(maskFormatModel);\n\n    if (this.objMask instanceof PoMask) {\n      this.objMask.formatModel = this.maskFormatModel;\n\n      this.validateModel();\n    }\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') blur?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('p-enter') enter?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  type: string;\n\n  onChangePropagate: any = null;\n  onTouched: any = null;\n  objMask: any;\n  modelLastUpdate: any;\n\n  callOnChange(value: any) {\n    this.updateModel(value);\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  callUpdateModelWithTimeout(value) {\n    setTimeout(() => this.updateModel(value));\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoNomeDoComponenteComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoNomeDoComponenteComponent, { static: true }) nomeDoComponente: PoNomeDoComponenteComponent;\n   *\n   * focusComponent() {\n   *   this.nomeDoComponente.focus();\n   * }\n   * ```\n   */\n  abstract focus(): void;\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  updateModel(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, this.getScreenValue())) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (maxlengpoailed(this.maxlength, this.getScreenValue())) {\n      return { maxlength: {\n        valid: false,\n      }};\n    }\n\n    if (minlengpoailed(this.minlength, this.getScreenValue())) {\n      return { minlength: {\n        valid: false,\n      }};\n    }\n\n    if (patternFailed(this.pattern, c.value)) {\n      this.validatePatternOnWriteValue(c.value);\n      return { pattern: {\n        valid: false,\n      }};\n    }\n\n    return this.extraValidation(c);\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  // MÃ©todo que receberÃ¡ o valor do model\n  abstract writeValueModel(value: any): void;\n\n  // ValidaÃ§Ãµes do campo\n  abstract extraValidation(c: AbstractControl): { [key: string]: any; };\n\n  // Deve retornar o valor do campo\n  abstract getScreenValue(): string;\n\n  // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).\n  private validatePatternOnWriteValue(value: string) {\n    if (value && this.passedWriteValue) {\n\n      setTimeout(() => {\n        this.updateModel(value);\n      });\n\n      this.passedWriteValue = false;\n    }\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { convertToInt } from '../../../utils/util';\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\n\nconst PO_DECIMAL_DEFAULT_DECIMALS_LENGTH = 2;\nconst PO_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH = 13;\n\n/**\n *\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-decimal Ã© um input especÃ­fico para receber apenas nÃºmeros decimais.\n * Quando utilizado, o componente terÃ¡ comportamento de um campo de 'text' com algumas caracterÃ­sticas:\n *\n * - Aceita apenas nÃºmeros;\n * - Utiliza ',' como separador de decimal;\n * - Utiliza '.' para separaÃ§Ã£o de milhar;\n * - Ã possÃ­vel configurar a quantidade de casas decimais e a quantidade de digitos do campo.\n *\n * @example\n *\n * <example name=\"po-decimal-basic\" title=\"Portinari Decimal Basic\">\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.html\"> </file>\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-labs\" title=\"Portinari Decimal Labs\">\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.html\"> </file>\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-hourly-wage\" title=\"Portinari Decimal - Hourly Wage\">\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.html\"> </file>\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-hourly-wage-reactive-form\" title=\"Portinari Decimal - Hourly Wage Reactive Form\">\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-decimal',\n  templateUrl: './po-decimal.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoDecimalComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoDecimalComponent),\n    multi: true,\n  }\n  ]\n})\nexport class PoDecimalComponent extends PoInputBaseComponent implements AfterViewInit {\n\n  private _decimalsLength?: number = PO_DECIMAL_DEFAULT_DECIMALS_LENGTH;\n  private _thousandMaxlength?: number = PO_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH;\n\n  private decimalSeparator: string = ',';\n  private fireChange: boolean = false;\n  private isKeyboardAndroid: boolean = false;\n  private minusSign: string = '-';\n  private oldDotsLength = null;\n  private thousandSeparator: string = '.';\n  private valueBeforeChange: any;\n\n  private regex = {\n    thousand: new RegExp('\\\\' + '.' , 'g'),\n    decimal: new RegExp('\\\\' + ',' , 'g')\n  };\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade mÃ¡xima de casas decimais.\n   *\n   * @default `2`\n   */\n  @Input('p-decimals-length') set decimalsLength(value: number) {\n    this._decimalsLength = convertToInt(value, PO_DECIMAL_DEFAULT_DECIMALS_LENGTH);\n\n  }\n\n  get decimalsLength() {\n    return this._decimalsLength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * NÃºmero mÃ¡ximo de dÃ­gitos antes do separador de decimal. O valor mÃ¡ximo possÃ­vel deve ser menor ou igual a 13.\n   *\n   * @default `13`\n   */\n  @Input('p-thousand-maxlength') set thousandMaxlength(value: number) {\n    const thousandMaxlength = convertToInt(value, PO_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH);\n\n    this._thousandMaxlength = thousandMaxlength <= PO_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH ?\n    thousandMaxlength : PO_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH;\n  }\n\n  get thousandMaxlength() {\n    return this._thousandMaxlength;\n  }\n\n  constructor(private el: ElementRef) {\n    super();\n    this.isKeyboardAndroid = !!navigator.userAgent.match(/Android/i);\n  }\n\n  ngAfterViewInit() {\n    this.putFocus();\n    this.setPaddingInput();\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  getScreenValue() {\n    return (this.inputEl) ? this.inputEl.nativeElement.value : '';\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.getScreenValue() !== ''\n    );\n  }\n\n  hasLetters(value: string = '') {\n    return value.match(/[a-zA-Z:;+=_Â´`^~\"'?!@#$%Â¨&*()><{}Ã§Ã\\[\\]/\\\\|]+/);\n  }\n\n  isValidNumber(event: any): boolean {\n    // - event.key nÃ£o existia em alguns browsers, como Samsung browser e Firefox.\n    const keyValue = <any> String.fromCharCode(event.which);\n    const validKey = event.which !== 8 && event.which !== 0;\n\n    return !this.hasLetters(keyValue) && validKey;\n  }\n\n  // funÃ§Ã£o responsÃ¡vel por adicionar os zeroes com as casa decimais ao sair do campo.\n  onBlur(event: any) {\n    const value = event.target.value;\n\n    if (value) {\n\n      if (this.hasLetters(value) || this.containsMoreThanOneComma(value)) {\n        this.setViewValue('');\n        this.callOnChange(undefined);\n        return;\n      }\n\n      const valueWithoutThousandSeparator = this.formatValueWithoutThousandSeparator(value);\n      this.setViewValue(this.formatToViewValue(valueWithoutThousandSeparator));\n    }\n\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  onFocus(event: FocusEvent) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.getScreenValue();\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  onInput(event: any) {\n    const selectionStart = event.target.selectionStart;\n    const selectionEnd = event.target.selectionEnd;\n\n    let modelValue;\n    let viewValue;\n\n    // - Browsers nativos do Android ex: Samsung Browser.\n    if (this.isKeyboardAndroid) {\n      this.onInputKeyboardAndroid(event);\n    }\n\n    modelValue = this.formatValueWithoutThousandSeparator(event.target.value);\n    modelValue = this.addZeroBefore(modelValue);\n    viewValue = this.formatMask(modelValue);\n\n    // validaÃ§Ã£o para nÃ£o quebrar IE com placeholder definido e Input vazio\n    if (viewValue) {\n      this.setViewValue(viewValue);\n      this.setCursorInput(event, selectionStart, selectionEnd);\n    }\n\n    this.callOnChange(this.formatToModelValue(modelValue));\n  }\n\n  onInputKeyboardAndroid(event: any) {\n    const inputValue = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const hasLetters = this.hasLetters(inputValue);\n\n    if (hasLetters) {\n      this.setViewValue(inputValue.replace(hasLetters[0], ''));\n\n      return event.preventDefault();\n    } else {\n      const position = selectionStart - 1;\n      const key = inputValue.charAt(position);\n\n      this.setPositionValue(event);\n\n      if (this.isValidKey(event, key)) {\n        this.setViewValue(inputValue);\n      }\n    }\n  }\n\n  onKeyPress(event: KeyboardEvent) {\n    this.isValidKey(event);\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        const formatedViewValue = this.formatToViewValue(value);\n        this.setViewValue(formatedViewValue);\n      } else {\n        this.setViewValue('');\n      }\n    }\n\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  // reponsÃ¡vel por adicionar 0 antes da virgula (decimalSeparator).\n  private addZeroBefore(value) {\n    const isDecimalSeparator = value === this.decimalSeparator;\n\n    return isDecimalSeparator ? `0${value}` : value;\n  }\n\n  private containsComma(value) {\n    return value.includes(this.decimalSeparator);\n  }\n\n  private containsMoreThanOneComma(value: string = '') {\n    const foundComma = value.match(/,/g);\n\n    return !!(foundComma && foundComma.length > 1);\n  }\n\n  private controlChangeEmitter() {\n    const elementValue = this.getScreenValue();\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do p-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      this.fireChange = true;\n      setTimeout(() => {\n        if (this.fireChange) {\n          this.change.emit(elementValue);\n        }\n      }, 200);\n    }\n  }\n\n  private formatMask(value: string) {\n    // necessÃ¡rio para nÃ£o adicionar . nas casa decimais.\n    // por exemplo: 12.345,123.45 (errado)\n    // 12.345,12345 (correto)\n\n    if (value.match(this.regex.decimal)) {\n      const regex = new RegExp('(\\\\d)(?=(\\\\d{3})+(?!\\\\d),)', 'g');\n      return value.toString().replace(regex, '$1.');\n    }\n\n    return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n  }\n\n  private formatToModelValue(value: string) {\n    const formattedValue = this.replaceCommaToDot(value);\n    const parsedValue = formattedValue ? parseFloat(Number(formattedValue).toFixed(this.decimalsLength)) : undefined;\n\n    return parsedValue === 0 || parsedValue ? parsedValue : undefined;\n  }\n\n  private formatToViewValue(value: string) {\n    let formatedNumber;\n    let numberValue;\n    let valueBeforeDot;\n    let valueAfterDot;\n\n    // - NecessÃ¡rio para tratar valores que contenham decimalSeparator\n    value = this.replaceCommaToDot(value);\n\n    numberValue = Number(value).toFixed(this.decimalsLength);\n\n    valueBeforeDot = this.getValueBeforeSeparator(numberValue, this.thousandSeparator);\n    valueAfterDot = this.getValueAfterSeparator(numberValue, this.thousandSeparator);\n\n    formatedNumber = this.formatMask(valueBeforeDot);\n\n    if (this.decimalsLength === 0) {\n      return formatedNumber;\n    } else {\n      return formatedNumber + this.decimalSeparator + valueAfterDot;\n    }\n\n  }\n\n  private formatValueWithoutThousandSeparator(value: string = '') {\n    return value.toString().replace(this.regex.thousand, '');\n  }\n\n  private getValueAfterSeparator(value = '', separator) {\n    return value.split(separator)[1] || '';\n  }\n\n  private getValueBeforeSeparator(value = '', separator) {\n    return value.split(separator)[0] || '';\n  }\n\n  private hasLessDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength < this.oldDotsLength) {\n        this.oldDotsLength = dotsLength;\n        return true;\n      }\n    }\n\n    if (!value) { this.oldDotsLength = null; }\n\n    return false;\n  }\n\n  private hasMoreDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength > this.oldDotsLength) {\n          this.oldDotsLength = dotsLength;\n          return true;\n      }\n    }\n\n    if (!value) { this.oldDotsLength = null; }\n\n    return false;\n  }\n\n  private hasMinusSignInvalidPosition(event: any): boolean {\n    const keyIsMinusSign = event.key === this.minusSign;\n    const selectionStart = event.target.selectionStart;\n\n    return keyIsMinusSign && selectionStart !== 0;\n  }\n\n  private isInvalidKey(event: any, charCode: any) {\n    const isInvalidNumber = !this.isValidNumber(event);\n\n    return this.verifyInsertComma(event) || this.verifyThousandLength(event) ||\n      this.verifyValueAfterComma(event) || this.verifyInsertMinusSign(event) ||\n      this.hasMinusSignInvalidPosition(event) || isInvalidNumber ||\n      this.validateCursorPositionBeforeSeparator(event) || this.verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode);\n  }\n\n  private isKeyDecimalSeparator(event) {\n    return event.key === this.decimalSeparator || event.char === this.decimalSeparator;\n  }\n\n  private isPositionAfterDecimalSeparator(positionCursor, value) {\n    const indexComma = value && value.indexOf(this.decimalSeparator);\n\n    if (indexComma && this.decimalsLength > 0) {\n      return positionCursor > indexComma;\n    }\n  }\n\n  private isSelectionStartDifferentSelectionEnd(target: any) {\n    return target.selectionStart !== target.selectionEnd;\n  }\n\n  private isValidKey(event: any, key?: string) {\n    const charCode = event.which || event.keyCode;\n    const validKey = event.which === 8 || event.which === 0;\n\n    if (validKey && !this.isKeyboardAndroid) {\n      return;\n    }\n\n    if (key) {\n      event.key = key;\n    }\n\n    if (this.isInvalidKey(event, charCode)) {\n      event.preventDefault();\n      return false;\n    }\n    return true;\n  }\n\n  // Quando decimalsLength for 0 nÃ£o deve permitir informar vÃ­rgula (decimalSeparator)\n  private verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode: number) {\n    return (charCode === 44 && this.decimalsLength === 0);\n  }\n\n  private putFocus() {\n    if (this.autofocus) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  private setInitialSelectionRange(target: any, selectionStart, selectionEnd) {\n    if (selectionStart === 1 && selectionEnd === 1) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n    return target.setSelectionRange(selectionStart - 1, selectionEnd - 1);\n  }\n\n  private replaceAt(value, index, replace) {\n    return value.substring(0, index) + replace + value.substring(index + 1);\n  }\n\n  private replaceCommaToDot(value: string = '') {\n    return value.toString().replace(this.regex.decimal, '.');\n  }\n\n  private setCursorInput(event, selectionStart, selectionEnd) {\n    const target = event.target;\n    const viewValue = target.value;\n\n    // Caso houver mais . do que anteriormente soma o valor com 1.\n    if (this.hasMoreDot(viewValue) || viewValue === ('0' + this.decimalSeparator)) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n\n    // Caso houver menos . do que anteriormente subtrai o valor por 1.\n    if (this.hasLessDot(viewValue)) {\n      this.setInitialSelectionRange(target, selectionStart, selectionEnd);\n    }\n    return target.setSelectionRange(selectionStart, selectionEnd);\n  }\n\n  private setPositionValue(event: any) {\n    const value = event.target.value;\n    const position = event.target.selectionStart - 1;\n\n    if (position > 0 && event.key === this.minusSign) {\n      event.target.value = value.substring(0, position) + value.substr(position + 1);\n    }\n  }\n\n  private setViewValue(value: string) {\n    this.inputEl.nativeElement.value = value;\n  }\n\n  private validateCursorPositionBeforeSeparator(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparator = this.getValueBeforeSeparator(target.value, this.decimalSeparator);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return target.selectionStart <= valueBeforeSeparator.length &&\n    valueBeforeSeparatorOriginal.length === this.thousandMaxlength &&\n    !this.isKeyDecimalSeparator(event);\n  }\n\n  private verifyThousandLength(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return valueBeforeSeparatorOriginal.length >= this.thousandMaxlength &&\n      !this.isKeyDecimalSeparator(event) &&\n      this.isPositionAfterDecimalSeparator(target.selectionStart - this.decimalsLength, target.value);\n  }\n\n  private verifyInsertComma(e: any): boolean {\n    const hasComma = this.containsComma(e.target.value);\n\n    return hasComma && e.key === this.decimalSeparator;\n  }\n\n  private verifyInsertMinusSign(event: any): boolean {\n    const value = event.target.value;\n    const indexMinusSign = (value.lastIndexOf(this.minusSign) !== -1);\n    const positionMinusSign = value.lastIndexOf('-') ;\n    const occurancesMinusSign = value.match(new RegExp('-', 'g'));\n\n    if (this.isKeyboardAndroid && indexMinusSign && occurancesMinusSign.length > 1) {\n      event.target.value = this.replaceAt(value, positionMinusSign, '');\n    }\n    return indexMinusSign && event.key === this.minusSign;\n  }\n\n  private verifyValueAfterComma(event: any): boolean {\n    const value = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const valueAfterSeparator = this.getValueAfterSeparator(value, this.decimalSeparator);\n\n    return this.isPositionAfterDecimalSeparator(selectionStart, value) && valueAfterSeparator.length >= this.decimalsLength;\n  }\n\n}\n","import { AfterViewInit, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\n\nexport abstract class PoInputGeneric extends PoInputBaseComponent implements AfterViewInit {\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  type = 'text';\n\n  el: ElementRef;\n  valueBeforeChange: any;\n  timeoutChange: any;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  constructor(el: ElementRef) {\n    super();\n\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.afterViewInit();\n  }\n\n  afterViewInit() {\n    this.putFocus();\n    if (this.type !== 'password') {\n      this.setPaddingInput();\n    }\n  }\n\n  focus() {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  putFocus() {\n    if (this.autofocus) {\n      this.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown(e: any) {\n    if (this.mask && !this.readonly && e.target.keyCode !== 229) {\n      this.eventOnBlur(e);\n      this.objMask.keydown(e);\n    }\n  }\n\n  @HostListener('keyup', ['$event']) onKeyup(e: any) {\n    if (this.mask && !this.readonly) {\n      if (e.target.keyCode !== 229) {\n        this.eventOnBlur(e);\n        this.objMask.keyup(e);\n      }\n      this.callOnChange(this.objMask.valueToModel);\n    }\n  }\n\n  eventOnInput(e: any) {\n    if (!this.mask) {\n      const value = this.validMaxLength(this.maxlength, e.target.value);\n      this.inputEl.nativeElement.value = value;\n      this.callOnChange(value);\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return ((maxlength || maxlength === 0) && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnFocus(e: any) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur(e: any) {\n    if (this.mask) {\n      this.objMask.blur(e);\n    }\n\n    if (e.type === 'blur') {\n      this.blur.emit();\n      this.controlChangeEmitter();\n    }\n\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do p-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(elementValue);\n      }, 200);\n    }\n  }\n\n  eventOnClick(e: any) {\n    // Atualiza a posiÃ§Ã£o do cursor ao clicar\n    if (this.mask) {\n      this.objMask.click(e);\n    }\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== ''\n    );\n  }\n\n  getErrorPattern() {\n    return (this.errorPattern !== '' && this.hasInvalidClass()) ? this.errorPattern : '';\n  }\n\n  validateClassesForPattern() {\n    const value = this.getScreenValue();\n    const element = this.el.nativeElement;\n\n    if (value && !this.verifyPattern(this.pattern, value)) {\n      element.classList.add('ng-invalid');\n      element.classList.add('ng-dirty');\n    } else {\n      element.classList.remove('ng-invalid');\n    }\n  }\n\n  verifyPattern(pattern: string, value: any) {\n    return new RegExp(pattern).test(value);\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  writeValueModel(value) {\n    this.passedWriteValue = true;\n    if (this.inputEl) {\n      if (value) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.callUpdateModelWithTimeout(this.objMask.valueToModel);\n\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else {\n        // Se o valor for indefinido, deve limpar o campo.\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.changeModel.emit(value);\n    }\n  }\n\n  getScreenValue() {\n    const screenValue = this.inputEl && this.inputEl.nativeElement.value || undefined;\n\n    if (this.type === 'number') {\n      const parsedValue = parseFloat(screenValue);\n      return parsedValue || parsedValue === 0 ? parsedValue : null;\n    } else {\n      return screenValue;\n    }\n  }\n\n  abstract extraValidation(c: AbstractControl): { [key: string]: any; };\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-email Ã© um input especÃ­fico para receber E-mail, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"po-email-basic\" title=\"Portinari Email Basic\">\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.html\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.ts\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-email-labs\" title=\"Portinari Email Labs\">\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.html\"> </file>\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-email-newsletter\" title=\"Portinari Email - Newsletter\">\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.html\"> </file>\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-email',\n  templateUrl: '../po-input/po-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoEmailComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoEmailComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoEmailComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\n\n  icon = 'po-icon-mail';\n\n  maxlength: number = 254;\n\n  type = 'email';\n\n  pattern = '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z]{2,6}(?:\\\\.[a-z]{2})?)$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n    extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-login Ã© um input especÃ­fico para login. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"po-login-basic\" title=\"Portinari Login Basic\">\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-login-labs\" title=\"Portinari Login Labs\">\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-login-confirm\" title=\"Portinari Login - Confirm Identity\">\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.html\"> </file>\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-login',\n  templateUrl: './po-login.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoLoginComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoLoginComponent),\n    multi: true,\n  }]\n})\nexport class PoLoginComponent extends PoInputGeneric {\n\n  type = 'text';\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoLookupColumn } from './interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from './interfaces/po-lookup-filter.interface';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupLiterals } from './interfaces/po-lookup-literals.interface';\n\n/**\n * @description\n *\n * Componente utilizado para abrir uma janela de busca com uma tabela que lista dados de um serviÃ§o. Nesta janela Ã© possÃ­vel buscar e\n * selecionar o registro que serÃ¡ enviado para o campo. O `po-lookup` permite que o usuÃ¡rio digite um valor e pressione a tecla *TAB* para\n * buscar um registro.\n *\n * > Caso o campo seja iniciado ou preenchido com um valor inexistente na busca, o mesmo serÃ¡ limpado.\n * No segundo caso ocorrerÃ¡ apÃ³s este perder o foco; ambos os casos o campo ficarÃ¡ invÃ¡lido quando requerido.\n *\n * Este componente nÃ£o Ã© recomendado quando a busca dos dados possuir poucas informaÃ§Ãµes, para isso utilize outros componentes como o\n * `po-select` ou o `po-combo`.\n */\nexport abstract class PoLookupBaseComponent implements ControlValueAccessor, OnDestroy, OnInit, Validator {\n\n  private _autofocus?: boolean = false;\n  private _disabled?: boolean = false;\n  private _filterService: PoLookupFilter | string;\n  private _noAutocomplete: boolean;\n  private _required?: boolean = false;\n\n  protected getSubscription: Subscription;\n  protected keysDescription: Array<any>;\n  protected oldValue: string = '';\n  protected valueToModel;\n\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  service: any;\n\n  /**\n   * Label do campo.\n   *\n   * > Quando utilizar esta propriedade o seu valor serÃ¡ utilizado como tÃ­tulo da modal do componente caso nÃ£o tenha\n   * sido definido um `modalTitle` na propriedade `p-literals`.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @description\n   *\n   * Objeto com as literais usadas no `po-lookup`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select',\n   *    modalSecondaryActionLabel: 'Cancel',\n   *    modalPlaceholder: 'Search Value',\n   *    modalTableNoColumns: 'No columns',\n   *    modalTableNoData: 'No data',\n   *    modalTableLoadingData: 'Loading data',\n   *    modalTableLoadMoreData: 'Load more',\n   *    modalTitle: 'Select a user'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-lookup\n   *   [p-literals]=\"customLiterals\">\n   * </po-lookup>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') literals?: PoLookupLiterals;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @description\n   *\n   * Indica a coluna que serÃ¡ utilizada como valor do campo.\n   *\n   * > AtenÃ§Ã£o: Caso nÃ£o seja passada ou tenha o conteÃºdo incorreto, nÃ£o irÃ¡ atualizar o model do formulÃ¡rio.\n   */\n  @Input('p-field-value') fieldValue: string;\n\n  /** Indica a coluna que serÃ¡ utilizada como descriÃ§Ã£o do campo e como filtro dentro da janela. */\n  @Input('p-field-label') fieldLabel: string;\n\n  /** Valor que serÃ¡ repassado como parÃ¢metro aos mÃ©todos do serviÃ§o que implementam a interface `PoLookupFilter`. */\n  @Input('p-filter-params') filterParams?: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o do campo.\n   *\n   * Recebe uma funÃ§Ã£o que deve retornar uma *string* com o/os valores do objeto formatados para exibiÃ§Ã£o, por exemplo:\n   *\n   * ```\n   * fieldFormat(obj) {\n   *   return `${obj.id} - ${obj.name}`;\n   * }\n   * ```\n   * > Esta propriedade sobrepÃµe o valor da propriedade `p-field-label` na descriÃ§Ã£o do campo.\n   */\n  @Input('p-field-format') fieldFormat?: (value) => string;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\n   */\n  @Input('p-columns') columns?: Array<PoLookupColumn>;\n\n  /**\n   * ServiÃ§o responsÃ¡vel por buscar os dados da tabela na janela. Pode ser informado um serviÃ§o que implemente a interface\n   * `PoLookupFilter` ou uma URL.\n   *\n   * Quando utilizada uma URL de um serviÃ§o, serÃ¡ concatenada nesta URL o valor que deseja-se filtrar, por exemplo:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&filter=Peter\n   * ```\n   *\n   * Caso utilizar ordenaÃ§Ã£o, a coluna ordenada serÃ¡ enviada atravÃ©s do parÃ¢metro `order`, por exemplo:\n   * - Coluna decrescente:\n   * ```\n   *  url + ?page=1&pageSize=20&filter=Peter&order=-name\n   * ```\n   *\n   * - Coluna ascendente:\n   * ```\n   *  url + ?page=1&pageSize=20&filter=Peter&order=name\n   * ```\n   *\n   * Se for definido a propriedade `p-filter-params`, o mesmo tambÃ©m serÃ¡ concatenado. Por exemplo, para o\n   * parÃ¢metro `{ age: 23 }` a URL ficaria:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\n   * ```\n   *\n   * > Esta URL deve retornar e receber os dados no padrÃ£o de\n   * [API da PORTINARI](http://tdn.portinari.com/display/public/INT/Guia+de+implementacao+das+APIs+PORTINARI) e utiliza os valores\n   * definidos nas propriedades `p-field-label` e `p-field-value` para a construÃ§Ã£o do `po-lookup`.\n   */\n  @Input('p-filter-service') set filterService(filterService: PoLookupFilter | string) {\n    this._filterService = filterService;\n    this.setService(this.filterService);\n  }\n\n  get filterService() {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (p-disabled).\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.valueToModel);\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set autofocus(focus: boolean) {\n    this._autofocus = convertToBoolean(focus);\n  }\n\n  get autofocus(): boolean {\n    return this._autofocus;\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default false\n   * @optional\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer algum erro na requisiÃ§Ã£o de busca do item.\n   * SerÃ¡ passado por parÃ¢metro o objeto de erro retornado.\n   */\n  @Output('p-error') onError?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer alguma seleÃ§Ã£o.\n   * SerÃ¡ passado por parÃ¢metro o objeto com o valor selecionado.\n   */\n  @Output('p-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private defaultService: PoLookupFilterService) {}\n\n  ngOnDestroy() {\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.initializeColumn();\n  }\n\n  private initializeColumn(): void {\n    if (this.fieldLabel) {\n      this.keysDescription = [this.fieldLabel];\n    } else {\n      this.keysDescription = [];\n\n      this.keysDescription = this.columns.filter(element => element.fieldLabel)\n        .map(element => element.property);\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  // Seleciona o valor do model.\n  selectValue(valueSelected: any) {\n    this.valueToModel = valueSelected[this.fieldValue];\n\n    this.callOnChange(this.valueToModel);\n    this.selected.emit(valueSelected);\n  }\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada.\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  searchById(value: string) {\n    if (typeof(value) === 'string') {\n      value = value.trim();\n    }\n\n    if (value !== '') {\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams).subscribe(element => {\n        if (element) {\n          this.oldValue = element[this.fieldLabel];\n          this.selectValue(element);\n          this.setViewValue(this.getFormattedLabel(element), element);\n        } else {\n          this.cleanModel();\n        }\n      }, error => {\n        this.cleanModel();\n        this.onError.emit(error);\n      });\n\n    } else {\n      this.cleanModel();\n    }\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value && value instanceof Object) {\n      // Esta condiÃ§Ã£o Ã© executada quando Ã© retornado o objeto selecionado do componente Po Lookup Modal.\n      this.oldValue = value[this.fieldLabel];\n      this.valueToModel = value[this.fieldValue];\n      this.setViewValue(this.getFormattedLabel(value), value);\n    } else if (value) {\n      // Esta condiÃ§Ã£o Ã© executada somente quando Ã© passado o ID para realizar a busca pelo ID.\n      this.searchById(value);\n    } else {\n      this.cleanViewValue();\n    }\n  }\n\n  // Atribui um ou mais valores ao campo.\n  abstract setViewValue(value: any, object: any): void;\n\n  // MÃ©todo com a implementaÃ§Ã£o para abrir o lookup.\n  abstract openLookup(): void;\n\n  protected cleanModel() {\n    this.cleanViewValue();\n    this.callOnChange(undefined);\n  }\n\n  protected cleanViewValue() {\n    this.setViewValue('', {});\n    this.oldValue = '';\n    this.valueToModel = null;\n  }\n\n  // Formata a label do campo.\n  protected getFormattedLabel(value: any): string {\n    return value ? this.keysDescription.map(column => value[column]).join(' - ') : '';\n  }\n\n  // Chama o mÃ©todo writeValue e preenche o model.\n  protected selectModel(value: any) {\n    this.writeValue(value);\n    if (value && value instanceof Object) {\n      this.selectValue(value);\n    }\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private setService(service: PoLookupFilter | string) {\n\n    if (isTypeof(service, 'object')) {\n      this.service = <PoLookupFilterService> service;\n    }\n\n    if (service && isTypeof(service, 'string')) {\n      this.service = this.defaultService;\n      this.service.setUrl(service);\n    }\n\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente po-lookup.\n */\n@Injectable()\nexport class PoLookupFilterService implements PoLookupFilter {\n\n  private url: string;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getFilteredItems(filteredItemsParams: PoLookupFilteredItemsParams): Observable<any> {\n    const { filterParams, ...restFilteredItemsParams } = filteredItemsParams;\n\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    const params = { ...restFilteredItemsParams, ...validatedFilterParams };\n\n    return this.httpClient.get(this.url, { params });\n  }\n\n  getObjectByValue(value: string, filterParams?: any): Observable<any> {\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    return this.httpClient.get(`${this.url}/${value}`, { params: validatedFilterParams });\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  private validateParams(params: any) {\n    return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;\n  }\n\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { Observable , Subscription } from 'rxjs';\nimport { browserLanguage, isTypeof, poLocaleDefault } from '../../../../utils/util';\nimport { PoModalAction } from '../../../../components/po-modal';\nimport { PoModalComponent } from '../../../../components/po-modal/po-modal.component';\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\nimport { PoTableColumnSortType } from '../../../po-table';\nimport { poTableLiteralsDefault } from '../../../po-table/po-table-base.component';\n\nimport { PoLookupColumn } from '../interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\nimport { PoLookupResponseApi } from '../interfaces/po-lookup-response-api.interface';\n\nexport const poLookupLiteralsDefault = {\n  en: <PoLookupLiterals> {\n    modalPrimaryActionLabel: 'Select',\n    modalSecondaryActionLabel: 'Cancel',\n    modalPlaceholder: 'Search',\n    modalTitle: 'Select a record',\n    modalTableNoColumns: poTableLiteralsDefault.en.noColumns,\n    modalTableNoData: poTableLiteralsDefault.en.noData,\n    modalTableLoadingData: poTableLiteralsDefault.en.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.en.loadMoreData\n  },\n  es: <PoLookupLiterals> {\n    modalPrimaryActionLabel: 'Seleccionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Buscar',\n    modalTitle: 'Seleccione un registro',\n    modalTableNoColumns: poTableLiteralsDefault.es.noColumns,\n    modalTableNoData: poTableLiteralsDefault.es.noData,\n    modalTableLoadingData: poTableLiteralsDefault.es.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.es.loadMoreData\n  },\n  pt: <PoLookupLiterals> {\n    modalPrimaryActionLabel: 'Selecionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Pesquisar',\n    modalTitle: 'Selecione um registro',\n    modalTableNoColumns: poTableLiteralsDefault.pt.noColumns,\n    modalTableNoData: poTableLiteralsDefault.pt.noData,\n    modalTableLoadingData: poTableLiteralsDefault.pt.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.pt.loadMoreData\n  },\n  ru: <PoLookupLiterals>{\n    modalPrimaryActionLabel: 'Ð²ÑÐ±Ð¸ÑÐ°ÑÑ',\n    modalSecondaryActionLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    modalPlaceholder: 'Ð¿Ð¾Ð¸ÑÐº',\n    modalTitle: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ Ð·Ð°Ð¿Ð¸ÑÑ',\n    modalTableNoColumns: poTableLiteralsDefault.ru.noColumns,\n    modalTableNoData: poTableLiteralsDefault.ru.noData,\n    modalTableLoadingData: poTableLiteralsDefault.ru.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.ru.loadMoreData\n  }\n};\n\n/**\n * @docsPrivate\n *\n * Classe base do componente Po Lookup Modal.\n */\nexport abstract class PoLookupModalBaseComponent implements OnDestroy, OnInit {\n\n  private _literals: any;\n  private _title: any;\n\n  hasNext = true;\n  isLoading = false;\n  page = 1;\n  pageSize = 10;\n  primaryAction: PoModalAction = {\n    action: () => {\n      this.items.forEach(element => {\n        if (element['$selected']) {\n          this.model.emit(element);\n          this.poModal.close();\n        }\n      });\n    },\n    label: this.literals.modalPrimaryActionLabel\n  };\n  searchValue: string = '';\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.model.emit(null);\n      this.poModal.close();\n    },\n    label: this.literals.modalSecondaryActionLabel\n  };\n  tableLiterals: any;\n\n  protected sort: PoTableColumnSort;\n\n  private filterSubscription: Subscription;\n  private searchSubscription: Subscription;\n  private showMoreSubscription: Subscription;\n\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\n   */\n  @Input('p-columns') columns: Array<PoLookupColumn>;\n\n  /** Lista de itens da tabela. */\n  @Input('p-items') items: Array<any>;\n\n  /** Objeto com as literais usadas no `po-lookup-modal`. */\n  @Input('p-literals') set literals(value: PoLookupLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poLookupLiteralsDefault[poLocaleDefault],\n        ...poLookupLiteralsDefault[browserLanguage()],\n        ...value\n      };\n      if (value.modalTitle) {\n        this.title = this.literals.modalTitle;\n      }\n    } else {\n      this._literals = poLookupLiteralsDefault[browserLanguage()];\n    }\n    this.primaryAction.label = this.literals.modalPrimaryActionLabel;\n    this.secondaryAction.label = this.literals.modalSecondaryActionLabel;\n    this.setTableLiterals();\n  }\n\n  get literals() {\n    return this._literals || poLookupLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da modal. */\n  @Input('p-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('p-filter-service') filterService: PoLookupFilter;\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('p-filter-params') filterParams: any;\n\n  /** Evento utilizado ao selecionar um registro da tabela. */\n  @Output('p-change-model') model: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnDestroy() {\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n\n    if (this.showMoreSubscription) {\n      this.showMoreSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.initializeData();\n    this.setTableLiterals();\n  }\n\n  search(): void {\n    this.page = 1;\n    if (this.searchValue) {\n      this.isLoading = true;\n      this.searchSubscription = this.getFilteredItems(this.searchValue).subscribe(data => {\n        this.items = data.items;\n        this.hasNext = data.hasNext;\n        this.isLoading = false;\n      });\n    } else {\n      this.initializeData();\n    }\n  }\n\n  showMoreEvent() {\n    this.page ++;\n    this.isLoading = true;\n    this.showMoreSubscription = this.getFilteredItems(this.searchValue).subscribe(data => {\n      data.items.forEach(item => {\n        this.items.push(item);\n      });\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  // MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n  abstract openModal(): void;\n\n  private getFilteredItems(filter: string): Observable<PoLookupResponseApi> {\n    const { page, pageSize, filterParams } = this;\n\n    if (this.filterService.getFilteredItems) {\n      const filteredParams: PoLookupFilteredItemsParams = this.getFilteredParams(filter);\n\n      return this.filterService.getFilteredItems(filteredParams);\n    }\n\n    return this.filterService.getFilteredData(filter, page, pageSize, filterParams);\n  }\n\n  private getFilteredParams(filter: string) {\n    const { page, pageSize, filterParams, sort } = this;\n\n    const filteredParams = {};\n    const order = this.getOrderParam(sort);\n    const params = { filter, page, pageSize, order, filterParams };\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && params[key]) {\n        filteredParams[key] = params[key];\n      }\n    }\n\n    return filteredParams;\n  }\n\n  private getOrderParam(sort: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sort;\n\n    if (!column) {\n      return;\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return `-${column.property}`;\n    }\n\n    return `${column.property}`;\n  }\n\n  private initializeData(): void {\n    this.isLoading = true;\n\n    this.filterSubscription = this.getFilteredItems('').subscribe(data => {\n      this.items = data.items;\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  private setTableLiterals() {\n    this.tableLiterals = {\n      'noColumns': this.literals.modalTableNoColumns,\n      'noData': this.literals.modalTableNoData,\n      'loadingData': this.literals.modalTableLoadingData,\n      'loadMoreData': this.literals.modalTableLoadMoreData,\n    };\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { fromEvent, Observable } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\n\nimport { PoLookupModalBaseComponent } from '../po-lookup-modal/po-lookup-modal-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoLookupModalBaseComponent\n */\n@Component({\n  selector: 'po-lookup-modal',\n  templateUrl: './po-lookup-modal.component.html'\n})\nexport class PoLookupModalComponent extends PoLookupModalBaseComponent implements OnInit {\n\n  @ViewChild('inpsearch', { static: true }) inputSearchEl: ElementRef;\n\n  keyUpObservable: Observable<any> = null;\n\n  containerHeight: number = 375;\n  tableHeight: number = 370;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.initializeEventInput();\n    this.setTableHeight();\n  }\n\n  initializeEventInput(): void {\n    this.keyUpObservable = fromEvent(this.inputSearchEl.nativeElement, 'keyup')\n      .pipe(\n        filter((e: any) => this.validateEnterPressed(e)),\n        debounceTime(400)\n      );\n\n    this.keyUpObservable.subscribe(() => {\n      this.search();\n    });\n  }\n\n  openModal() {\n    this.poModal.open();\n  }\n\n  sortBy(sort: PoTableColumnSort) {\n    this.sort = sort;\n  }\n\n  private setTableHeight() {\n    if (window.innerHeight < 615) {\n      this.tableHeight -= 50;\n      this.containerHeight -= 50;\n    }\n  }\n\n  private validateEnterPressed(e: any) {\n    return e.keyCode === 13;\n  }\n\n}\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../../../services/po-component-injector/po-component-injector.service';\nimport { PoLookupColumn } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-filter.interface';\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\nimport { PoLookupModalComponent } from '../po-lookup-modal/po-lookup-modal.component';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por controlar a abertura do componente Po Lookup Modal.\n */\n@Injectable()\nexport class PoLookupModalService {\n\n  private componentRef: ComponentRef<any> = null;\n\n  selectValueEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {}\n\n  /**\n   * MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n   *\n   * @param service {PoLookupFilter} ServiÃ§o responsÃ¡vel por realizar a busca no serviÃ§o dos dados.\n   * @param columns {Array<PoLookupColumn>} DefiniÃ§Ã£o das colunas na modal de busca.\n   * @param filterParams {any} Valor que serÃ¡ repassado aos mÃ©todos do serviÃ§o para auxiliar no filtro dos dados.\n   * @param title {string} DefiniÃ§Ã£o do tÃ­tulo da modal.\n   * @param literals {PoLookupLiterals} Literais utilizadas no componente.\n   */\n  openModal(params: {\n    service: PoLookupFilter,\n    columns: Array<PoLookupColumn>,\n    filterParams: any,\n    title: string,\n    literals: PoLookupLiterals\n  }): void {\n    const { service, columns, filterParams, title, literals } = params;\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoLookupModalComponent);\n    this.componentRef.instance.title = title;\n    this.componentRef.instance.columns = columns;\n    this.componentRef.instance.filterService = service;\n    this.componentRef.instance.filterParams = filterParams;\n    this.componentRef.instance.literals = literals;\n    this.componentRef.instance.model.subscribe($event => {\n      this.selectValue($event);\n    });\n    this.componentRef.changeDetectorRef.detectChanges();\n    this.componentRef.instance.openModal();\n\n  }\n\n  // Este metodo Ã© chamado quando Ã© selecionado um item na lookup modal.\n  selectValue(value) {\n    if (value) {\n      this.selectValueEvent.emit(value);\n    }\n    this.componentRef.destroy();\n  }\n}\n","import { Component, ElementRef, forwardRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS , NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoLookupBaseComponent } from './po-lookup-base.component';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupModalService } from './services/po-lookup-modal.service';\n\n/**\n * @docsExtends PoLookupBaseComponent\n *\n * @description\n *\n * Quando existe muitos dados o po-lookup por padrÃ£o traz apenas 10 itens na tabela e os demais sÃ£o carregados por demanda atravÃ©s do\n * botÃ£o 'Carregar mais resultados'. Para que funcione corretamente, Ã© importante que o serviÃ§o siga o\n * [Guia de implementaÃ§Ã£o das APIs TOTVS](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).\n *\n * Importante:\n *\n * - Caso o po-lookup contenha o [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o serÃ¡ necessÃ¡rio informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * ```\n * <po-lookup\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-lookup>\n * ```\n *\n * @example\n *\n * <example name=\"po-lookup-basic\" title=\"Portinari Lookup Basic\">\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.html\"> </file>\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-labs\" title=\"Portinari Lookup Labs\">\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.html\"> </file>\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero\" title=\"Portinari Lookup - Hero\">\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero-reactive-form\" title=\"Portinari Lookup - Hero Reactive Form\">\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-sw-films\" title=\"Portinari Lookup - Star Wars films\">\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.html\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.ts\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-lookup',\n  templateUrl: './po-lookup.component.html',\n  providers: [\n    PoLookupFilterService,\n    PoLookupModalService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoLookupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoLookupComponent),\n      multi: true,\n    }]\n})\nexport class PoLookupComponent extends PoLookupBaseComponent implements OnDestroy, OnInit {\n\n  private modalSubscription: Subscription;\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  constructor(poLookupFilterService: PoLookupFilterService, private poLookupModalService: PoLookupModalService) {\n    super(poLookupFilterService);\n  }\n\n  ngOnDestroy() {\n    if (this.modalSubscription) {\n      this.modalSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoLookupComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\n   *\n   * focusLookup() {\n   *   this.lookup.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  openLookup(): void {\n    if (this.isAllowedOpenModal()) {\n      const { service, columns, filterParams, literals } = this;\n\n      this.poLookupModalService.openModal({ service, columns, filterParams, title: this.label, literals });\n\n      if (!this.modalSubscription) {\n        this.modalSubscription = this.poLookupModalService.selectValueEvent.subscribe(element => {\n          this.selectModel(element);\n        });\n      }\n    }\n  }\n\n  setViewValue(value: any, object: any): void {\n    if (this.fieldFormat) {\n      this.setInputValueWipoieldFormat(object);\n    } else {\n      this.inputEl.nativeElement.value = this.valueToModel || this.valueToModel === 0 ? value : '';\n    }\n  }\n\n  getViewValue(): string {\n    return this.inputEl.nativeElement.value;\n  }\n\n  searchEvent() {\n    const value = this.getViewValue();\n\n    if (this.oldValue !== value) {\n      this.searchById(value);\n    }\n  }\n\n  private isAllowedOpenModal(): boolean {\n\n    if (!this.service) {\n      console.warn('No service informed');\n    }\n\n    return !!(this.service && !this.disabled);\n  }\n\n  private setInputValueWipoieldFormat(objectSelected: any) {\n    const isEmpty = Object.keys(objectSelected).length === 0;\n    const fieldFormated = this.fieldFormat(objectSelected);\n\n    this.oldValue = isEmpty ? '' : fieldFormated;\n    this.inputEl.nativeElement.value = isEmpty ? '' : fieldFormated;\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { PoMultiselectLiterals } from '../../index';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de pesquisa que serÃ¡ criado dentro do dropdown do `po-multiselect`.\n */\n@Component({\n  selector: 'po-multiselect-search',\n  templateUrl: './po-multiselect-search.component.html',\n})\nexport class PoMultiselectSearchComponent {\n\n  private _placeholder?: string;\n\n  /** Propriedade que recebe as literais definidas no `po-multiselect`. */\n  @Input('p-literals') literals?: PoMultiselectLiterals;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('p-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;\n  }\n\n  get placeholder() {\n    return this._placeholder || this.literals.placeholderSearch;\n  }\n\n  /** Evento que serÃ¡ disparado a cada tecla digitada no campo de busca. */\n  @Output('p-change') change = new EventEmitter();\n\n  @ViewChild('inputElement', {read: ElementRef, static: true }) inputElement: ElementRef;\n\n  onChange(event) {\n    this.change.emit({event: event, value: this.inputElement.nativeElement.value});\n  }\n\n  setFocus() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  clean() {\n    this.inputElement.nativeElement.value = '';\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoMultiselectLiterals } from '../../index';\nimport { PoMultiselectOption } from '../po-multiselect-option.interface';\nimport { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que construÃ­ra o dropdown, contendo o campo de pesquisa e os itens para seleÃ§Ã£o.\n */\n@Component({\n  selector: 'po-multiselect-dropdown',\n  templateUrl: './po-multiselect-dropdown.component.html'\n})\nexport class PoMultiselectDropdownComponent {\n\n  scrollTop = 0;\n  show: boolean = false;\n  haveOptions: boolean = false;\n\n  /** Propriedade que indica se o campo de pesquisa deverÃ¡ ser escondido. */\n  @Input('p-hide-search') hideSearch?: boolean = false;\n\n  /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */\n  @Input('p-literals') literals?: PoMultiselectLiterals;\n\n  /** Placeholder do campo de pesquisa. */\n  @Input('p-placeholder-search') placeholderSearch: string;\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes selecionadas. */\n  @Input('p-selected-values') selectedValues: Array<any> = [];\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes que deverÃ£o ser criadas no dropdown. */\n  @Input('p-options') options: Array<PoMultiselectOption> = [];\n\n  /** Evento disparado a cada tecla digitada na pesquisa. */\n  @Output('p-change-search') changeSearch = new EventEmitter();\n\n  /** Evento disparado a cada alteraÃ§Ã£o na lista das opÃ§Ãµes selecionadas. */\n  @Output('p-change') change = new EventEmitter();\n\n  /**\n   * Evento disparado quando for detectada uma aÃ§Ã£o que necessite fechar o dropdown.\n   * Por exemplo, no caso de ser teclado TAB dentro do dropdown, entÃ£o Ã© disparado este evento\n   * para notificar o componente principal que deve fechar o dropdown.\n   */\n  @Output('p-close-dropdown') closeDropdown = new EventEmitter();\n\n  @ViewChild('container', { read: ElementRef, static: true }) container: ElementRef;\n  @ViewChild('ulElement', {read: ElementRef, static: true }) ulElement: ElementRef;\n  @ViewChild('searchElement', { static: false }) searchElement: PoMultiselectSearchComponent;\n\n  scrollTo(index) {\n    this.scrollTop = (index <= 2) ? 0 : (index * 44) - 88;\n  }\n\n  isSelectedItem(option: PoMultiselectOption) {\n    return this.selectedValues.some(selectedItem => selectedItem === option.value);\n  }\n\n  clickItem(check, option) {\n    this.updateSelectedValues(check, option);\n\n    if (!this.hideSearch) {\n      this.searchElement.setFocus();\n    }\n  }\n\n  updateSelectedValues(checked, option) {\n    if (checked) {\n      this.selectedValues.push(option.value);\n    } else {\n      const indexSelectedValues = this.selectedValues.indexOf(option.value);\n      this.selectedValues.splice(indexSelectedValues, 1);\n    }\n\n    this.change.emit(this.selectedValues);\n  }\n\n  callChangeSearch(event) {\n    this.changeSearch.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: any) {\n    if (event.keyCode === 9) {\n      this.closeDropdown.emit();\n    }\n  }\n\n  controlVisibility(toOpen) {\n    this.show = toOpen;\n    this.checkInitialOptions();\n\n    setTimeout(() => {\n      if (toOpen && this.searchElement && !this.hideSearch) {\n        this.searchElement.setFocus();\n        this.searchElement.clean();\n      }\n    });\n  }\n\n  private checkInitialOptions() {\n    if (this.options.length) {\n      this.haveOptions = true;\n    }\n  }\n\n}\n","/**\n * @usedBy PoMultiselectComponent\n *\n * @description\n *\n * Define o tipo de busca usado no po-multiselect.\n */\nexport enum PoMultiselectFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { AfterContentChecked, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { browserLanguage, convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions, sortOptionsByProperty,\n          poLocaleDefault } from '../../../utils/util';\nimport { requiredFailed } from './../validators';\n\nimport { PoMultiselectFilterMode } from './po-multiselect-filter-mode.enum';\nimport { PoMultiselectLiterals } from './po-multiselect-literals.interface';\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\n\nexport const poMultiselectLiteralsDefault = {\n  en: <PoMultiselectLiterals> {\n    noData: 'No data found',\n    placeholderSearch: 'Search'\n  },\n  es: <PoMultiselectLiterals> {\n    noData: 'Datos no encontrados',\n    placeholderSearch: 'Busca'\n  },\n  pt: <PoMultiselectLiterals> {\n    noData: 'Nenhum dado encontrado',\n    placeholderSearch: 'Buscar'\n  },\n  ru: <PoMultiselectLiterals>{\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    placeholderSearch: 'Ð¸ÑÐºÐ°ÑÑ'\n  }\n};\n\n/**\n * @description\n *\n * O po-multiselect Ã© um componente de mÃºltipla seleÃ§Ã£o.\n * Este componente Ã© recomendado para dar ao usuÃ¡rio a opÃ§Ã£o de selecionar vÃ¡rios itens em uma lista.\n *\n * Quando a lista possuir poucos itens, deve-se dar preferÃªncia para o uso do po-checkbox-group, por ser mais simples\n * e mais rÃ¡pido para a seleÃ§Ã£o do usuÃ¡rio.\n *\n * Este componente tambÃ©m nÃ£o deve ser utilizado em casos onde a seleÃ§Ã£o seja Ãºnica. Nesses casos, deve-se utilizar o\n * po-select, po-combo ou po-radio-group.\n */\nexport abstract class PoMultiselectBaseComponent implements AfterContentChecked, ControlValueAccessor, OnInit, Validator {\n\n  private _autofocus?: boolean = false;\n  private _disabled?: boolean = false;\n  private _filterMode?: PoMultiselectFilterMode = PoMultiselectFilterMode.startsWith;\n  private _hideSearch?: boolean = false;\n  private _literals: PoMultiselectLiterals;\n  private _options: Array<PoMultiselectOption>;\n  private _required?: boolean = false;\n  private _sort?: boolean = false;\n\n  private lastLengthModel;\n  private onModelChange: any;\n  // tslint:disable-next-line\n  private onModelTouched: any;\n  private readyToValidation = false;\n\n  selectedOptions: Array<PoMultiselectOption> = [];\n  visibleOptionsDropdown: Array<PoMultiselectOption> = [];\n  visibleDisclaimers = [];\n\n  /** Label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-multiselect`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoMultiselectLiterals = {\n   *    noData: 'Nenhum dado encontrado',\n   *    placeholderSearch: 'Buscar'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoMultiselectLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\n   *\n   * ```\n   * <po-multiselect\n   *   [p-literals]=\"customLiterals\">\n   * </po-po-multiselect>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoMultiselectLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poMultiselectLiteralsDefault[poLocaleDefault],\n        ...poMultiselectLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poMultiselectLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poMultiselectLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /**\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('p-placeholder-search') placeholderSearch?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (p-disabled).\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = <any>required === '' ? true : convertToBoolean(required);\n    this.updateModelToValidate();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n    this.updateModelToValidate();\n\n    this.updateVisibleItems();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo de pesquisa existente dentro do dropdown do po-multiselect.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-search') set hideSearch(hideSearch: boolean) {\n    this._hideSearch = <any>hideSearch === '' ? true : convertToBoolean(hideSearch);\n  }\n\n  get hideSearch() {\n    return this._hideSearch;\n  }\n\n  /**\n   * @description\n   *\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface PoMultiselectOption.\n   * Esta lista deve conter os valores e os labels que serÃ£o apresentados na tela.\n   */\n  @Input('p-options') set options(options: Array<PoMultiselectOption>) {\n    this._options = options;\n\n    this.validAndSortOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que a lista definida na propriedade p-options serÃ¡ ordenada pelo label antes de ser apresentada no\n   * dropdown.\n   *\n   * @default `false`\n   */\n  @Input('p-sort') set sort(sort: boolean) {\n    this._sort = <any>sort === '' ? true : convertToBoolean(sort);\n\n    this.validAndSortOptions();\n  }\n\n  get sort() {\n    return this._sort;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set autofocus(focus: boolean) {\n    this._autofocus = convertToBoolean(focus);\n  }\n\n  get autofocus() {\n    return this._autofocus;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no campo de busca, quando habilitado.\n   * Valores definidos no enum: PoMultiselectFilterMode\n   *\n   * @default `startsWith`\n   */\n  @Input('p-filter-mode') set filterMode(filterMode: PoMultiselectFilterMode) {\n    this._filterMode = (filterMode in PoMultiselectFilterMode) ? filterMode : PoMultiselectFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = PoMultiselectFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = PoMultiselectFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = PoMultiselectFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode() {\n    return this._filterMode;\n  }\n\n  /** Pode ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected clickOutListener: () => void;\n  protected resizeListener: () => void;\n\n  ngOnInit() {\n    this.updateList(this.options);\n  }\n\n  ngAfterContentChecked() {\n    // Seta esta variÃ¡vel para indicar que a tela jÃ¡ foi carregada e podem ser aplicadas as validaÃ§Ãµes.\n    // A partir desse momento, toda vez que uma propriedade que interfere na validaÃ§Ã£o, for alterada, o model serÃ¡ atualizado\n    // para que o campo seja validado novamente.\n    this.readyToValidation = true;\n  }\n\n  validAndSortOptions() {\n    if (this.options && this.options.length) {\n\n      removeUndefinedAndNullOptions(this.options);\n      removeDuplicatedOptions(this.options);\n      this.setUndefinedLabels(this.options);\n\n      if (this.sort) {\n        sortOptionsByProperty(this.options, 'label');\n      }\n    }\n  }\n\n  setUndefinedLabels(options) {\n    options.forEach(option => {\n      if (!option['label']) {\n        option.label = option.value;\n      }\n    });\n  }\n\n  updateList(options: Array<PoMultiselectOption>) {\n    if (options) {\n      this.visibleOptionsDropdown = options;\n    }\n  }\n\n  // Emite a atualizaÃ§Ã£o do model caso esta propriedade seja alterada dinamicamente.\n  updateModelToValidate() {\n    if (this.readyToValidation) {\n\n      // Este timeout Ã© necessÃ¡rio para quando for atualizado o model e uma propriedade do Datepicker ao mesmo tempo.\n      // Caso contrÃ¡rio, o writeValue nÃ£o Ã© disparado, nÃ£o atualizando o model do componente.\n      setTimeout(() => {\n        this.callOnChange(this.selectedOptions);\n      });\n    }\n  }\n\n  callOnChange(selectedOptions: Array<PoMultiselectOption>) {\n    if (this.onModelChange) {\n      this.onModelChange(this.getValuesFromOptions(selectedOptions));\n      this.eventChange(selectedOptions);\n    }\n  }\n\n  eventChange(selectedOptions) {\n    if (selectedOptions && this.lastLengthModel !== selectedOptions.length) {\n      this.change.emit(selectedOptions);\n    }\n    this.lastLengthModel = selectedOptions ? selectedOptions.length : null;\n  }\n\n  getValuesFromOptions(selectedOptions: Array<PoMultiselectOption>) {\n    return selectedOptions && selectedOptions.length ? selectedOptions.map(option => option.value) : [];\n  }\n\n  getLabelByValue(value) {\n    const index = this.options.findIndex(option => option.value === value);\n    return this.options[index].label;\n  }\n\n  changeItems(selectedValues) {\n    this.updateSelectedOptions(selectedValues);\n    this.callOnChange(this.selectedOptions);\n  }\n\n  searchByLabel(search: string, options: Array<PoMultiselectOption>, filterMode: PoMultiselectFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<PoMultiselectOption> = [];\n      options.forEach(option => {\n        if (option.label && this.compareMethod(search, option, filterMode)) {\n          newOptions.push(option);\n        }\n      });\n      this.visibleOptionsDropdown = newOptions;\n    }\n  }\n\n  compareMethod(search: string, option: PoMultiselectOption, filterMode: PoMultiselectFilterMode) {\n    switch (filterMode) {\n      case PoMultiselectFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case PoMultiselectFilterMode.contains:\n        return this.contains(search, option);\n      case PoMultiselectFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n  updateSelectedOptions(values) {\n    this.selectedOptions = [];\n\n    values.forEach(value => {\n      this.options.forEach(option => {\n        if (option.value === value) {\n          this.selectedOptions.push(option);\n        }\n      });\n    });\n\n    this.updateVisibleItems();\n  }\n\n  writeValue(values: any): void {\n    if (!values) {\n      values = [];\n      this.callOnChange([]);\n    }\n\n    // Validar se todos os items existem entre os options, senÃ£o atualizar o model\n    this.updateSelectedOptions(values);\n\n    if (this.selectedOptions.length < values.length) {\n      this.callOnChange(this.selectedOptions);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  abstract updateVisibleItems(): void;\n\n}\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, DoCheck, ElementRef, forwardRef, OnDestroy, Renderer2, ViewChild\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { isMobile } from './../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoMultiselectBaseComponent } from './po-multiselect-base.component';\n\nconst poMultiselectContainerOffset = 8;\nconst poMultiselectContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoMultiselectBaseComponent\n *\n * @example\n *\n * <example name=\"po-multiselect-basic\" title=\"Portinari Multiselect Basic\">\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-labs\" title=\"Portinari Multiselect Labs\">\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation\" title=\"Portinari Multiselect - Vacation\">\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation-reactive-form\" title=\"Portinari Multiselect - Vacation Reactive Form\">\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-multiselect',\n  templateUrl: './po-multiselect.component.html',\n  providers: [\n    PoControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoMultiselectComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoMultiselectComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoMultiselectComponent extends PoMultiselectBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  @ViewChild('dropdownElement', { read: ElementRef, static: true }) dropdownElement: ElementRef;\n  @ViewChild('dropdownElement', { static: true }) dropdown;\n  @ViewChild('disclaimerContainer', { read: ElementRef, static: true }) disclaimerContainerElement: ElementRef;\n  @ViewChild('iconElement', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', {read: ElementRef, static: true }) inputElement: ElementRef;\n\n  disclaimerOffset = 0;\n  dropdownIcon: string = 'po-icon-arrow-down';\n  dropdownOpen: boolean = false;\n  initialized = false;\n  positionDisclaimerExtra;\n  timeoutResize;\n  visibleElement = false;\n\n  private isCalculateVisibleItems: boolean = true;\n\n  constructor(\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: PoControlPositionService,\n    private el: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.inputElement.nativeElement.focus();\n    }\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const inputWidth = this.inputElement.nativeElement.offsetWidth;\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {\n      this.debounceResize();\n      this.visibleElement = true;\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoMultiselectComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;\n   *\n   * focusMultiselect() {\n   *   this.multiselect.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  getInputWidth() {\n    return this.el.nativeElement.querySelector('.po-input').offsetWidth - 40;\n  }\n\n  getDisclaimersWidth() {\n    const disclaimers = this.el.nativeElement.querySelectorAll('po-disclaimer');\n    return Array.from(disclaimers).map(disclaimer => disclaimer['offsetWidth']);\n  }\n\n  calculateVisibleItems() {\n    const disclaimersWidth = this.getDisclaimersWidth();\n    const inputWidth = this.getInputWidth();\n    const extraDisclaimerSize = 38;\n    const disclaimersVisible = disclaimersWidth[0];\n\n    this.visibleDisclaimers = [];\n\n    if (inputWidth > 0) {\n      let sum = 0;\n      let i = 0;\n      for (i = 0; i < this.selectedOptions.length; i++) {\n        sum += disclaimersWidth[i];\n        this.visibleDisclaimers.push(this.selectedOptions[i]);\n\n        if (sum > inputWidth) {\n          sum -= disclaimersWidth[i];\n          this.isCalculateVisibleItems = false;\n          break;\n        }\n      }\n\n      if (disclaimersVisible || !this.selectedOptions.length) {\n\n        if (i === this.selectedOptions.length) {\n          this.isCalculateVisibleItems = false;\n          return;\n        }\n\n        if (sum + extraDisclaimerSize > inputWidth) {\n          this.visibleDisclaimers.splice(-2, 2);\n          const label = '+' + (this.selectedOptions.length + 1 - i).toString();\n          this.visibleDisclaimers.push({value: '', label: label});\n        } else {\n          this.visibleDisclaimers.splice(-1, 1);\n          const label = '+' + (this.selectedOptions.length - i).toString();\n          this.visibleDisclaimers.push({value: '', label: label});\n        }\n\n      }\n    }\n  }\n\n  updateVisibleItems() {\n    this.visibleDisclaimers = [].concat(this.selectedOptions);\n\n    this.debounceResize();\n\n    // quando estiver dentro de modal\n    if (!this.inputElement.nativeElement.offsetWidth) {\n      this.isCalculateVisibleItems = true;\n    }\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateVisibleItems();\n    }, 200);\n  }\n\n  onKeyDown(event?: any) {\n    if (event.keyCode === PoKeyCodeEnum.arrowUp || event.keyCode === PoKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n      this.controlDropdownVisibility(true);\n      return;\n    }\n\n    if (event.keyCode === PoKeyCodeEnum.tab) {\n      this.controlDropdownVisibility(false);\n      return;\n    }\n  }\n\n  toggleDropdownVisibility() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.controlDropdownVisibility(!this.dropdownOpen);\n  }\n\n  openDropdown(toOpen) {\n\n    if (toOpen && !this.disabled) {\n      this.controlDropdownVisibility(true);\n    }\n\n  }\n\n  controlDropdownVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  scrollToSelectedOptions() {\n  if (this.selectedOptions && this.selectedOptions.length) {\n      const index = this.options.findIndex(option => option.value === this.selectedOptions[0].value);\n      this.dropdown.scrollTo(index);\n    }\n  }\n\n  setVisibleOptionsDropdown(options) {\n    this.visibleOptionsDropdown = options;\n  }\n\n  changeSearch(event) {\n    (event && event.value) ? this.searchByLabel(event.value, this.options, this.filterMode) : this.setVisibleOptionsDropdown(this.options);\n\n    // timeout necessÃ¡rio para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input\n    setTimeout(() => this.adjustContainerPosition());\n  }\n\n  getPlaceholder() {\n    return (this.placeholder && !this.visibleDisclaimers.length) ? this.placeholder : '';\n  }\n\n  closeDisclaimer(value) {\n    const index = this.selectedOptions.findIndex(option => option.value === value);\n    this.selectedOptions.splice(index, 1);\n\n    this.updateVisibleItems();\n    this.callOnChange(this.selectedOptions);\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (!this.inputElement.nativeElement.contains(event.target) &&\n      !this.iconElement.nativeElement.contains(event.target) &&\n      !this.dropdownElement.nativeElement.contains(event.target) &&\n      !this.disclaimerContainerElement.nativeElement.contains(event.target) &&\n      this.dropdownOpen) {\n\n      this.controlDropdownVisibility(false);\n    }\n  }\n\n  private adjustContainerPosition(): void {\n    this.controlPosition.adjustPosition(poMultiselectContainerPositionDefault);\n  }\n\n  private close(): void {\n    this.dropdownIcon = 'po-icon-arrow-down';\n    this.dropdownOpen = false;\n\n    this.dropdown.controlVisibility(false);\n    this.setVisibleOptionsDropdown(this.options);\n\n    this.removeListeners();\n  }\n\n  private initializeListeners(): void {\n    this.clickOutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.updateVisibleItems();\n\n      isMobile() ? this.adjustContainerPosition() : this.close();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  }\n\n  private open(): void {\n    this.dropdownIcon = 'po-icon-arrow-up';\n    this.dropdownOpen = true;\n\n    this.dropdown.controlVisibility(true);\n    this.setVisibleOptionsDropdown(this.options);\n    this.initializeListeners();\n    this.scrollToSelectedOptions();\n\n    this.changeDetector.detectChanges();\n    this.setPositionDropdown();\n  }\n\n  private removeListeners(): void {\n    if (this.clickOutListener) {\n      this.clickOutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown(): void {\n    this.controlPosition.setElements(\n      this.dropdown.container.nativeElement,\n      poMultiselectContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que constrÃ³i cada item no dropdown, contendo o checkbox e o label.\n */\n@Component({\n  selector: 'po-multiselect-item',\n  templateUrl: './po-multiselect-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoMultiselectItemComponent {\n\n  /** RÃ³tulo do item. */\n  @Input('p-label') label: string;\n\n  /** Esta propriedade indica se o campo estÃ¡ selecionado ou nÃ£o. */\n  @Input('p-selected') selected?: boolean = false;\n\n  /** Evento que serÃ¡ disparado toda vez que o usuÃ¡rio marcar ou desmarcar um item. */\n  @Output('p-change') change = new EventEmitter();\n\n  itemClicked() {\n    this.selected = !this.selected;\n    this.change.emit(this.selected);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { isIE } from './../../../../utils/util';\nimport { PoKeyCodeEnum } from './../../../../enums/po-key-code.enum';\n\nconst poRichTextBodyCommands = [\n  'bold', 'italic', 'underline', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertUnorderedList', 'Createlink'\n];\n\n@Component({\n  selector: 'po-rich-text-body',\n  templateUrl: './po-rich-text-body.component.html'\n})\nexport class PoRichTextBodyComponent implements OnInit {\n\n  private timeoutChange: any;\n  private valueBeforeChange: any;\n\n  @ViewChild('bodyElement', { static: true }) bodyElement: ElementRef;\n\n  @Input('p-height') height?: string;\n\n  @Input('p-model-value') modelValue?: string;\n\n  @Input('p-placeholder') placeholder?: string;\n\n  @Input('p-readonly') readonly?: string;\n\n  @Output('p-change') change = new EventEmitter<any>();\n\n  @Output('p-commands') commands = new EventEmitter<any>();\n\n  @Output('p-shortcut-command') shortcutCommand = new EventEmitter<any>();\n\n  @Output('p-value') value = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.bodyElement.nativeElement.designMode = 'on';\n\n    // timeout necessÃ¡rio para setar o valor vindo do writeValue do componente principal.\n    setTimeout(() => this.updateValueWithModelValue());\n  }\n\n  executeCommand(command: (string | { command: any, value: string | any })) {\n    this.bodyElement.nativeElement.focus();\n\n    if (typeof (command) === 'object') {\n\n      if (command.command === 'InsertHTML') {\n        const { command: linkCommand, value : { urlLink }, value : { urlLinkText} } = command;\n\n        this.handleCommandLink(linkCommand, urlLink, urlLinkText);\n      } else {\n        document.execCommand(command.command, false, command.value);\n      }\n    } else {\n      document.execCommand(command, false, null);\n    }\n\n    this.updateModel();\n    this.value.emit(this.modelValue);\n  }\n\n  onBlur() {\n    if (this.modelValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(this.modelValue);\n      }, 200);\n    }\n  }\n\n  focus(): void {\n    this.bodyElement.nativeElement.focus();\n  }\n\n  onClick() {\n    this.emitSelectionCommands();\n  }\n\n  onFocus() {\n    this.valueBeforeChange = this.modelValue;\n  }\n\n  onKeyDown(event) {\n    const keyL = event.keyCode === PoKeyCodeEnum.keyL;\n\n    if (keyL && event.ctrlKey || keyL && event.metaKey) {\n      event.preventDefault();\n      this.shortcutCommand.emit();\n    }\n  }\n\n  onKeyUp() {\n    // Tratamento necessÃ¡rio para eliminar a tag <br> criada no firefox quando o body for limpo.\n    const bodyElement = this.bodyElement.nativeElement;\n\n    if (!bodyElement.innerText.trim() && bodyElement.childNodes.length === 1 && bodyElement.querySelector('br')) {\n      bodyElement.querySelector('br').remove();\n    }\n\n    this.updateModel();\n    this.emitSelectionCommands();\n  }\n\n  update() {\n    setTimeout(() => this.updateModel());\n    setTimeout(() => this.onKeyUp());\n  }\n\n  private cursorPositionedInALink() {\n    const link = document.getSelection();\n\n    return link.focusNode.parentElement.tagName === 'A';\n  }\n\n  private emitSelectionCommands() {\n    const commands = poRichTextBodyCommands.filter(command => document.queryCommandState(command));\n    const rgbColor = document.queryCommandValue('ForeColor');\n    const hexColor = this.rgbToHex(rgbColor);\n\n    if (this.cursorPositionedInALink()) {\n      commands.push('Createlink');\n    }\n\n    this.commands.emit({commands, hexColor});\n  }\n\n  private handleCommandLink(linkCommand: string, urlLink: string, urlLinkText: string) {\n    if (isIE()) {\n      this.insertHtmlLinkElement(urlLink, urlLinkText);\n    } else {\n      // necessÃ¡rio '&nbsp;' no fim pois o Firefox mantÃ©m o cursor dentro da tag;\n      const linkValue = `<a class=\"po-rich-text-link\" href=\"${urlLink}\" target=\"_blank\">${urlLinkText || urlLink}</a>`;\n\n      document.execCommand(linkCommand, false, linkValue);\n    }\n  }\n\n  // tratamento especÃ­fico para IE pois nÃ£o suporta o comando 'insertHTML'.\n  private insertHtmlLinkElement(urlLink: string, urlLinkText: string) {\n    constÂ selectionÂ =Â document.getSelection();\n    const selectionRange = selection.getRangeAt(0);\n    const elementLink = document.createElement('a');\n    const elementlinkText = document.createTextNode(urlLinkText);\n\n    elementLink.appendChild(elementlinkText);\n    elementLink.href = urlLink;\n    elementLink.setAttribute('target', '_blank');\n    elementLink.classList.add('po-rich-text-link');\n\n    selectionRange.deleteContents();\n    selectionRange.insertNode(elementLink);\n  }\n\n  private rgbToHex(rgb) {\n    // Tratamento necessÃ¡rio para converter o cÃ³digo rgb para hexadecimal.\n    const sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n\n    let r = (+rgb[0]).toString(16);\n    let g = (+rgb[1]).toString(16);\n    let b = (+rgb[2]).toString(16);\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n\n  private updateModel() {\n    this.modelValue = this.bodyElement.nativeElement.innerHTML;\n\n    this.value.emit(this.modelValue);\n  }\n\n  private updateValueWithModelValue() {\n    if (this.modelValue) {\n      this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);\n    }\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\n/**\n * @description\n *\n * O componente `po-rich-text` Ã© um editor de textos enriquecidos.\n *\n * Para ediÃ§Ã£o de texto simples sem formataÃ§Ã£o recomenda-se o uso do componente [**po-textarea**](/documentation/po-textarea).\n *\n * > No navegador Internet Explorer nÃ£o Ã© possÃ­vel alterar a cor do texto.\n */\nexport abstract class PoRichTextBaseComponent implements ControlValueAccessor, Validator {\n\n  private _height?: number;\n  private _placeholder: string;\n  private _readonly: boolean;\n  private _required: boolean;\n\n  invalid: boolean = false;\n  onChangeModel: any = null;\n  value: string;\n\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando a propriedade required estiver habilitada e o campo for limpo apÃ³s algo ser digitado.\n   */\n  @Input('p-error-message') errorMessage?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da Ã¡rea de ediÃ§Ã£o de texto.\n   *\n   * > Altura mÃ­nima do componente Ã© `94` e a altura mÃ¡xima Ã© `262`.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('p-label') label?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('p-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(value: boolean) {\n    this._required = convertToBoolean(value);\n\n    this.validateModel(this.value);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /** Evento disparado ao deixar o campo e que recebe como parÃ¢metro o valor alterado. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao modificar valor do model e que recebe como parÃ¢metro o valor alterado. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, false, abstractControl.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    // Quando o rich-text nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    }\n  }\n\n  protected validateModel(value: any) {\n    if (this.validatorChange) {\n      this.validatorChange(value);\n    }\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy, ViewChild } from '@angular/core';\n\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoRichTextBaseComponent } from './po-rich-text-base.component';\nimport { PoRichTextBodyComponent } from './po-rich-text-body/po-rich-text-body.component';\n\n/**\n * @docsExtends PoRichTextBaseComponent\n *\n * @example\n *\n * <example name=\"po-rich-text-basic\" title=\"Portinari Rich Text Basic\">\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-labs\" title=\"Portinari Rich Text Labs\">\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-recipe\" title=\"Portinari Rich Text Recipe\">\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe-image-base-64.ts\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-rich-text',\n  templateUrl: './po-rich-text.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoRichTextComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoRichTextComponent),\n    multi: true,\n  }]\n})\nexport class PoRichTextComponent extends PoRichTextBaseComponent implements AfterViewInit, OnDestroy {\n\n  private listener = this.validateClassesForRequired.bind(this);\n  private modelLastUpdate: any;\n\n  @ViewChild(PoRichTextBodyComponent, { static: true }) bodyElement: PoRichTextBodyComponent;\n\n  get errorMsg() {\n    return (this.errorMessage !== '' && !this.value && this.required && this.invalid) ? this.errorMessage : '';\n  }\n\n  constructor(private element: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    if (!this.onChangeModel) {\n      this.element.nativeElement.addEventListener('keyup', this.listener);\n      this.element.nativeElement.addEventListener('keydown', this.listener);\n      this.element.nativeElement.addEventListener('cut', this.listener);\n      this.element.nativeElement.addEventListener('paste', this.listener);\n    }\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangeModel) {\n      this.element.nativeElement.removeEventListener('keyup', this.listener);\n      this.element.nativeElement.removeEventListener('keydown', this.listener);\n      this.element.nativeElement.removeEventListener('cut', this.listener);\n      this.element.nativeElement.removeEventListener('paste', this.listener);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoRichTextComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoRichTextComponent, { static: true }) richText: PoRichTextComponent;\n   *\n   * focusRichText() {\n   *   this.richText.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    this.bodyElement.focus();\n  }\n\n  onChangeValue(value: any) {\n    this.change.emit(value);\n  }\n\n  updateValue(value: string) {\n    this.value = value;\n    this.invalid = !value;\n    this.controlChangeModelEmitter(this.value);\n    this.updateModel(this.value);\n  }\n\n  private controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  private validateClassesForRequired() {\n    setTimeout(() => {\n      const value = this.value;\n      const element = this.element.nativeElement;\n\n      if (!value && this.required) {\n        element.classList.add('ng-invalid');\n        element.classList.add('ng-dirty');\n      } else {\n        element.classList.remove('ng-invalid');\n      }\n    });\n  }\n\n}\n","export const poRichTextLiteralsDefault = {\n  en: {\n    bold: 'Bold',\n    italic: 'Italic',\n    underline: 'Underline',\n    left: 'Left',\n    center: 'Center',\n    right: 'Right',\n    justify: 'Justify',\n    textColor: 'Text color',\n    unorderedList: 'Bulleted list',\n    insertLink: 'Insert link',\n    linkTextLabel: 'Text with link',\n    linkUrlTextHelper: 'Paste in the text box below the copied browser link',\n    linkUrlTextPlaceholder: 'Enter the link address that will be attached to the text.',\n    cancel: 'Cancel',\n    insert: 'Insert',\n    insertImage: 'Insert image',\n    urlImage: 'URL image'\n  },\n  es: {\n    bold: 'Negrita',\n    italic: 'Cursiva',\n    underline: 'Subrayado',\n    left: 'Izquierda',\n    center: 'Centro',\n    right: 'Derecha',\n    justify: 'Justificado',\n    textColor: 'Color del texto',\n    unorderedList: 'Lista con viÃ±etas',\n    insertLink: 'Insertar el link',\n    linkTextLabel: 'Texto con enlace',\n    linkUrlTextHelper: 'Pegue en el cuadro de texto debajo del enlace del navegador copiado',\n    linkUrlTextPlaceholder: 'Ingrese la direcciÃ³n del enlace que se adjuntarÃ¡ al texto.',\n    cancel: 'Cancelar',\n    insert: 'Insertar',\n    insertImage: 'Insertar imagen',\n    urlImage: 'Imagen URL'\n  },\n  pt: {\n    bold: 'Negrito',\n    italic: 'ItÃ¡lico',\n    underline: 'Sublinhado',\n    left: 'Esquerda',\n    center: 'Centro',\n    right: 'Direita',\n    justify: 'Justificado',\n    textColor: 'Cor do texto',\n    unorderedList: 'Lista com marcadores',\n    insertLink: 'Inserir link',\n    linkTextLabel: 'Texto com link',\n    linkUrlTextHelper: 'Cole na caixa de texto abaixo o link copiado do navegador',\n    linkUrlTextPlaceholder: 'Insira o endereÃ§o do link que serÃ¡ anexado ao texto',\n    cancel: 'Cancelar',\n    insert: 'Inserir',\n    insertImage: 'Inserir imagem',\n    urlImage: 'Imagem em URL'\n  }\n};\n","/**\r\n * @docsPrivate\r\n *\r\n * @usedBy PoRichTextComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* `PoRichTextModalType` para especificaÃ§Ã£o dos tipos de modal.\r\n */\r\nexport enum PoRichTextModalType {\r\n\r\n/**\r\n * Exibe os dados para inserÃ§Ã£o de imagens.\r\n */\r\nImage = 'image',\r\n\r\n/**\r\n * Exibe os dados para inserÃ§Ã£o de link e texto customizado para link.\r\n */\r\nLink = 'link'\r\n\r\n}\r\n","import { ComponentRef } from '@angular/core';\n\nimport { PoNotification } from './po-notification.interface';\nimport { PoToaster } from './po-toaster/po-toaster.interface';\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\nimport { PoToasterType } from './po-toaster/po-toaster-type.enum';\n\n/**\n * @description\n *\n * ServiÃ§o responsÃ¡vel por emitir as notificaÃ§Ãµes em uma pÃ¡gina. SÃ£o disponibilizados os mÃ©todos de:\n *\n * - success,\n * - warning,\n * - error,\n * - information.\n *\n * Cada um destes mÃ©todos recebe como parÃ¢metro o objeto \"PoNotification\" que contÃ©m os dados da mensagem e o\n * objeto ViewContainerRef que Ã© a representaÃ§Ã£o do container do componente onde serÃ¡ criada a notificaÃ§Ã£o.\n *\n * Estas notificaÃ§Ãµes serÃ£o exibidas durante 10 segundos por padrÃ£o, podendo ser alterada conforme necessidade.\n * ApÃ³s este tempo a mesma Ã© removida automaticamente.\n *\n */\nexport abstract class PoNotificationBaseService {\n\n   // Array responsÃ¡vel por guardar a instÃ¢ncia de po-toaster's superiores.\n  stackTop: Array<ComponentRef<any>> = [];\n\n  // Array responsÃ¡vel por guardar a instÃ¢ncia de po-toaster's inferiores.\n  stackBottom: Array<ComponentRef<any>> = [];\n\n  // DuraÃ§Ã£o da notificaÃ§Ã£o ativa.\n  private defaultDuration = 10000;\n\n  /**\n   * Emite uma notificaÃ§Ã£o de sucesso.\n   *\n   * @param notification {PoNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o.\n   */\n  public success(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Success));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de atenÃ§Ã£o.\n   *\n   * @param notification {PoNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public warning(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Warning));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de erro.\n   *\n   * @param notification {PoNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public error(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Error));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de informaÃ§Ã£o.\n   *\n   * @param notification {PoNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public information(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Information));\n  }\n\n  /**\n   * Define em milissegundos a duraÃ§Ã£o padrÃ£o para as notificaÃ§Ãµes.\n   *\n   * > PadrÃ£o 10 segundos.\n   *\n   * @param defaultDuration {number} DuraÃ§Ã£o em milisegundos\n   */\n  public setDefaultDuration(defaultDuration: number) {\n    this.defaultDuration = defaultDuration;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * Cria um objeto do tipo PoToaster de acordo o tipo.\n   *\n   * @param notification {PoNotification | string} Objeto PoNotification com os dados da notificaÃ§Ã£o\n   */\n  private buildToaster(notification: PoNotification | string, type: PoToasterType): PoToaster {\n    let index = 0;\n    let orientation;\n\n    if ((<PoNotification>notification).orientation === undefined ||\n        (<PoNotification>notification).orientation === PoToasterOrientation.Bottom) {\n      index = this.stackBottom.length;\n      orientation = PoToasterOrientation.Bottom;\n    } else {\n      index = this.stackTop.length;\n      orientation = PoToasterOrientation.Top;\n    }\n\n    const toaster: PoToaster = {\n      componentRef: undefined,\n      message: (<PoNotification>notification).message || <string>notification,\n      type: type,\n      orientation: orientation,\n      action: (<PoNotification>notification).action,\n      actionLabel: (<PoNotification>notification).actionLabel,\n      position: index,\n      duration: (<PoNotification>notification).duration || this.defaultDuration\n    };\n\n    if ((<PoNotification>notification).action) {\n      toaster.action = (param: any) => {\n        (<PoNotification>notification).action();\n        this.destroyToaster(param.componentRef);\n      };\n    }\n\n    return toaster;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por criar o po-toaster.\n   *\n   * @param toaster {PoToaster} Objeto contendo as informaÃ§Ãµes do toaster.\n   */\n  abstract createToaster(toaster: PoToaster): void;\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por destruir o po-toaster.\n   *\n   * @param toaster {ComponentRef} NÃºmero da posiÃ§Ã£o ou instancia do toaster a ser destruÃ­do.\n   * @param orientation {PoToasterOrientation} OrientaÃ§Ã£o do PoToaster: Top ou Bottom\n   */\n  abstract destroyToaster(toaster: ComponentRef<any>): void;\n\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\nimport { PoNotificationBaseService } from './po-notification-base.service';\nimport { PoToaster } from './po-toaster/po-toaster.interface';\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\n\n/**\n * @docsExtends PoNotificationBaseService\n *\n * @example\n *\n * <example name=\"po-notification-basic\" title=\"Portinari Notification Basic\">\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.html\"> </file>\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-notification-labs\" title=\"Portinari Notification Labs\">\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.html\"> </file>\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-notification-sales\" title=\"Portinari Notification - Sales\">\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.html\"> </file>\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.ts\"> </file>\n * </example>\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoNotificationService extends PoNotificationBaseService {\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {\n    super();\n  }\n\n  createToaster(toaster: PoToaster): void {\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoToasterComponent);\n\n    toaster.componentRef = componentRef;\n\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.configToaster(toaster);\n\n    if (toaster.orientation === PoToasterOrientation.Top) {\n      this.stackTop.push(componentRef);\n    } else {\n      this.stackBottom.push(componentRef);\n    }\n\n    this.observableOnClose(componentRef);\n\n    if (toaster.action === undefined) {\n      setTimeout(() => {\n        this.destroyToaster(componentRef);\n      }, toaster.duration);\n    }\n  }\n\n  destroyToaster(toaster: any): void {\n    let stack;\n\n    if (toaster.instance.orientation === PoToasterOrientation.Top) {\n      stack = this.stackTop;\n    } else {\n      stack = this.stackBottom;\n    }\n\n    const index = stack.indexOf(toaster);\n    stack.splice(index, 1);\n\n    this.poComponentInjector.destroyComponentInApplication(toaster);\n\n    for (let count = 0; count < stack.length; count++) {\n      stack[count].instance.changePosition(count);\n    }\n  }\n\n  private observableOnClose(componentRef: any) {\n    componentRef.instance.observableOnClose.subscribe(() => {\n      this.destroyToaster(componentRef);\n    });\n  }\n\n}\n","// Enum de status de envio dos arquivos.\nexport enum PoUploadStatus {\n  // Enviou com sucesso.\n  Uploaded,\n  // EstÃ¡ enviando.\n  Uploading,\n  // Ocorreu algum erro no envio.\n  Error,\n  // NÃ£o enviou ou aconteceu algum erro.\n  None\n}\n","import { PoUploadStatus } from './po-upload-status.enum';\n\n// Classe responsÃ¡vel pelo arquivo do PO Upload\nexport class PoUploadFile {\n  // Nome do arquivo.\n  public name: string;\n  // Arquivo bruto.\n  public rawFile: File;\n  // Status de envio do arquivo.\n  public status?: PoUploadStatus;\n  // Identificador do arquivo.\n  public uid: string;\n  // ExtensÃ£o do arquivo.\n  public extension: string;\n  // Tamanho do arquivo em bytes;\n  public size: number;\n\n  // propriedade para auxiliar a exibiÃ§Ã£o do texto no componente progress\n  displayName?: string;\n\n  // porcentagem utilizada para repassar ao componente progress\n  percent?: number;\n\n  constructor(file: any) {\n    if (file) {\n      this.name = file.name;\n      this.displayName = `${file.name} - ${this.getFileSize(file.size)}`;\n      this.extension = this.getExtension(file.name);\n      this.size = file.size;\n      this.rawFile = file;\n      this.uid = this.generateUUID();\n      this.status = PoUploadStatus.None;\n    }\n  }\n\n  private getExtension(value: string) {\n    if (value) {\n      const extension = value.substr(value.lastIndexOf('.'));\n      return extension.toLowerCase();\n    }\n\n    return '';\n  }\n\n  private generateUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n\n  // Retorna o tamanho do arquivo em KBytes.\n  private getFileSize(size: number): string {\n    let kbSize = 0;\n\n    if (size) {\n        kbSize = Math.ceil(size / 1024);\n    }\n\n    return `${kbSize} KB`;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { browserLanguage, convertToBoolean, isEquals, isIE, isMobile, poLocaleDefault } from '../../../utils/util';\r\nimport { requiredFailed } from '../validators';\r\n\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadFileRestrictions } from './interfaces/po-upload-file-restriction.interface';\r\nimport { PoUploadLiterals } from './interfaces/po-upload-literals.interface';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoUploadStatus } from './po-upload-status.enum';\r\n\r\nexport const poUploadLiteralsDefault = {\r\n  en: <PoUploadLiterals>{\r\n    files: 'files',\r\n    folders: 'folders',\r\n    selectFile: 'Select file',\r\n    selectFiles: 'Select files',\r\n    selectFolder: 'Select folder',\r\n    deleteFile: 'Delete',\r\n    cancel: 'Cancel',\r\n    tryAgain: 'Try again',\r\n    startSending: 'Start sending',\r\n    dragFilesHere: 'Drag files here',\r\n    dragFoldersHere: 'Drag folders here',\r\n    selectFilesOnComputer: 'or select files on your computer',\r\n    selectFolderOnComputer: 'or select folder on your computer',\r\n    dropFilesHere: 'Drop files here',\r\n    dropFoldersHere: 'Drop folders here',\r\n    invalidDropArea: '{0} were not dropped in the correct area',\r\n    invalidFileType: 'Failed to load {0} file(s) as it is not the allowed file type.',\r\n    invalidAmount: 'Failed to load {0} file(s), as it exceeds the limit amount of files.',\r\n    invalidFormat: 'Failed to load {0} file(s), as it does not match the format(s): {1}.',\r\n    invalidSize: 'Failed to load {0} files(s), as it is not the allowed size: from {1} to {2}.',\r\n    numberOfFilesAllowed: '{0} file(s) allowed',\r\n    allowedFormats: 'Accepted file formats: {0}.',\r\n    allowedFileSizeRange: 'Size limit per file: from {0} to {1}',\r\n    maxFileSizeAllowed: 'Size limit per file: {0} maximum',\r\n    minFileSizeAllowed: 'Size limit per file: {0} minimum',\r\n    errorOccurred: 'An error has occurred',\r\n    sentWithSuccess: 'Sent with success'\r\n  },\r\n  es: <PoUploadLiterals>{\r\n    files: 'archivos',\r\n    folders: 'carpetas',\r\n    selectFile: 'Seleccionar archivo',\r\n    selectFiles: 'Seleccionar archivos',\r\n    selectFolder: 'Seleccionar carpeta',\r\n    deleteFile: 'Borrar',\r\n    cancel: 'Cancelar',\r\n    tryAgain: 'Intentar de nuevo',\r\n    startSending: 'Iniciar carga',\r\n    dragFilesHere: 'Arrastra los archivos aquÃ­',\r\n    dragFoldersHere: 'Arrastra las carpetas aquÃ­',\r\n    selectFilesOnComputer: 'o selecciona los archivos en tu computadora',\r\n    selectFolderOnComputer: 'o selecciona la carpeta en tu computadora',\r\n    dropFilesHere: 'Deja los archivos aquÃ­',\r\n    dropFoldersHere: 'Deja las carpetas aquÃ­',\r\n    invalidDropArea: 'Los {0} no se insertaron en la ubicaciÃ³n correcta',\r\n    invalidFileType: 'Error al cargar {0} archivo (s) ya que no es el tipo de archivo permitido',\r\n    invalidAmount: 'Error al cargar {0} archivo (s) ya que excede la cantidad limite de archivos.',\r\n    invalidFormat: 'Error al cargar {0} archivo (s) ya que no coincide con el formato (s): {1}.',\r\n    invalidSize: 'Error al cargar {0} archivo (s) ya que no cumple con el tamaÃ±o permitido: desde {1} hasta {2}.',\r\n    numberOfFilesAllowed: '{0} archivo(s) permitido(s)',\r\n    allowedFormats: 'Formatos aceptados: {0}.',\r\n    allowedFileSizeRange: 'Limite de tamaÃ±o de archivo: desde {0} hasta {1}',\r\n    maxFileSizeAllowed: 'Limite de tamaÃ±o de archivo: hasta {0}',\r\n    minFileSizeAllowed: 'Limite de tamaÃ±o de archivo: minimo {0}',\r\n    errorOccurred: 'Ocurrio un error',\r\n    sentWithSuccess: 'Enviado con Ã©xito'\r\n  },\r\n  pt: <PoUploadLiterals>{\r\n    files: 'arquivos',\r\n    folders: 'diretÃ³rios',\r\n    selectFile: 'Selecionar arquivo',\r\n    selectFiles: 'Selecionar arquivos',\r\n    selectFolder: 'Selecionar pasta',\r\n    deleteFile: 'Excluir',\r\n    cancel: 'Cancelar',\r\n    tryAgain: 'Tentar Novamente',\r\n    startSending: 'Iniciar envio',\r\n    dragFilesHere: 'Arraste os arquivos aqui',\r\n    dragFoldersHere: 'Arraste as pastas aqui',\r\n    selectFilesOnComputer: 'ou selecione os arquivos no computador',\r\n    selectFolderOnComputer: 'ou selecione a pasta no computador',\r\n    dropFilesHere: 'Solte os arquivos aqui',\r\n    dropFoldersHere: 'Solte as pastas aqui',\r\n    invalidDropArea: 'Os {0} nÃ£o foram inseridos no local correto',\r\n    invalidFileType: 'Falha ao carregar {0} arquivo (s), pois nÃ£o Ã© o tipo de arquivo permitido',\r\n    invalidAmount: 'Falha ao carregar {0} arquivo(s), pois excede(m) a quantidade limite de arquivos.',\r\n    invalidFormat: 'Falha ao carregar {0} arquivo(s), pois nÃ£o corresponde(m) ao(s) formato(s): {1}.',\r\n    invalidSize: 'Falha ao carregar {0} arquivo(s), pois nÃ£o atende ao tamanho permitido: {1} atÃ© {2}.',\r\n    numberOfFilesAllowed: 'Quantidade mÃ¡xima: {0} arquivo(s)',\r\n    allowedFormats: 'Formatos adotados: {0}.',\r\n    allowedFileSizeRange: 'Limite de tamanho por arquivo: de {0} atÃ© {1}',\r\n    maxFileSizeAllowed: 'Limite de tamanho por arquivo: atÃ© {0}',\r\n    minFileSizeAllowed: 'Limite de tamanho por arquivo: no mÃ­nimo {0}',\r\n    errorOccurred: 'Ocorreu um erro',\r\n    sentWithSuccess: 'Enviado com sucesso'\r\n  },\r\n  ru: <PoUploadLiterals>{\r\n    files: 'ÑÐ°Ð¹Ð»Ñ',\r\n    folders: 'Ð¿Ð°Ð¿ÐºÐ¸ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸',\r\n    selectFile: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»',\r\n    selectFiles: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ',\r\n    selectFolder: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ Ð¿Ð°Ð¿ÐºÑ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸',\r\n    deleteFile: 'ÑÐ´Ð°Ð»ÑÑÑ',\r\n    cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\r\n    tryAgain: 'Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·',\r\n    startSending: 'ÐÐ°ÑÐ°ÑÑ Ð·Ð°Ð³ÑÑÐ·ÐºÑ',\r\n    dragFilesHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ ÑÑÐ´Ð°',\r\n    dragFoldersHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÑÐ´Ð° Ð¿Ð°Ð¿ÐºÐ¸',\r\n    selectFilesOnComputer: 'Ð¸Ð»Ð¸ Ð²ÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ Ð½Ð° ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑÐµ',\r\n    selectFolderOnComputer: 'Ð¸Ð»Ð¸ Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð¿Ð°Ð¿ÐºÑ Ð½Ð° Ð²Ð°ÑÐµÐ¼ ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑÐµ',\r\n    dropFilesHere: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ°Ð¹Ð»Ñ Ð·Ð´ÐµÑÑ',\r\n    dropFoldersHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÑÐ´Ð° Ð¿Ð°Ð¿ÐºÐ¸',\r\n    invalidDropArea: '{0} Ð½Ðµ Ð±ÑÐ»Ð¸ Ð²ÑÑÐ°Ð²Ð»ÐµÐ½Ñ Ð² Ð¿ÑÐ°Ð²Ð¸Ð»ÑÐ½Ð¾Ð¼ Ð¼ÐµÑÑÐµ.',\r\n    invalidFileType: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, ÑÐ°Ðº ÐºÐ°Ðº ÑÑÐ¾ Ð½ÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¸Ð¿ ÑÐ°Ð¹Ð»Ð°',\r\n    invalidAmount: 'NÃ£o foi possÃ­vel carregar os arquivos {0} porque eles excederam o limite de arquivos.',\r\n    invalidFormat: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, ÑÐ°Ðº ÐºÐ°Ðº Ð¾Ð½Ð¸ Ð½Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑ ÑÐ¾ÑÐ¼Ð°ÑÑ (Ð°Ð¼): {1}.',\r\n    invalidSize: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, Ð¿Ð¾ÑÐºÐ¾Ð»ÑÐºÑ Ð¾Ð½Ð¸ Ð½Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑ ÑÐ°Ð·ÑÐµÑÐµÐ½Ð½Ð¾Ð¼Ñ ÑÐ°Ð·Ð¼ÐµÑÑ: Ð¾Ñ {1} Ð´Ð¾ {2}.',\r\n    numberOfFilesAllowed: 'ÐÐ°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾: {0} ÑÐ°Ð¹Ð»Ð¾Ð²',\r\n    allowedFormats: 'Ð¤Ð¾ÑÐ¼Ð°ÑÑ Ð¿ÑÐ¸Ð½ÑÑÑ: {0}.',\r\n    allowedFileSizeRange: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð¾Ñ {0} Ð´Ð¾ {1}',\r\n    maxFileSizeAllowed: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð´Ð¾ {0}',\r\n    minFileSizeAllowed: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð½Ðµ Ð¼ÐµÐ½ÐµÐµ {0}',\r\n    errorOccurred: 'ÐÑÐ¾Ð¸Ð·Ð¾ÑÐ»Ð° Ð¾ÑÐ¸Ð±ÐºÐ°.',\r\n    sentWithSuccess: 'Ð£ÑÐ¿ÐµÑÐ½Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾'\r\n  }\r\n};\r\n\r\nconst poUploadFormFieldDefault = 'files';\r\n\r\nconst poUploadMaxFileSize = 31457280; // 30MB\r\nconst poUploadMinFileSize = 0;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-upload` permite que o usuÃ¡rio envie arquivo(s) ao servidor e acompanhe o progresso.\r\n * Este componente tambÃ©m possibilita algumas configuraÃ§Ãµes como:\r\n *  â Envio de diretÃ³rios, onde ele acessa o diretÃ³rio selecionado assim como seus sub-diretÃ³rios;\r\n *  - MÃºltipla seleÃ§Ã£o, onde o usuÃ¡rio pode enviar mais de um arquivo ao servidor.\r\n *  - Auto envio, onde o arquivo Ã© enviado imediatamente apÃ³s a seleÃ§Ã£o do usuÃ¡rio, nÃ£o necessitando que o usuÃ¡rio\r\n * clique em enviar.\r\n *  - RestriÃ§Ãµes de formatos de arquivo e tamanho.\r\n *  - FunÃ§Ã£o de sucesso que serÃ¡ disparada quando os arquivos forem enviados com sucesso.\r\n *  - FunÃ§Ã£o de erro que serÃ¡ disparada quando houver erro no envio dos arquivos.\r\n *  - Permite habilitar uma Ã¡rea onde os arquivos podem ser arrastados.\r\n */\r\nexport abstract class PoUploadBaseComponent implements ControlValueAccessor, Validator {\r\n\r\n  private _directory?: boolean;\r\n  private _disabled?: boolean;\r\n  private _dragDrop?: boolean = false;\r\n  private _fileRestrictions?: PoUploadFileRestrictions;\r\n  private _formField?: string;\r\n  private _hideRestrictionsInfo?: boolean;\r\n  private _hideSelectButton?: boolean;\r\n  private _hideSendButton?: boolean;\r\n  private _isMultiple?: boolean;\r\n  private _literals?: any;\r\n  private _required?: boolean;\r\n\r\n  allowedExtensions: string;\r\n  currentFiles: Array<PoUploadFile>;\r\n\r\n  canHandleDirectory: boolean;\r\n  onModelChange: any;\r\n  onModelTouched: any;\r\n\r\n  private validatorChange: any;\r\n\r\n  protected extensionNotAllowed = 0;\r\n  protected quantityNotAllowed = 0;\r\n  protected sizeNotAllowed = 0;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a seleÃ§Ã£o de diretÃ³rios contendo um ou mais arquivos para envio.\r\n   *\r\n   * > A habilitaÃ§Ã£o desta propriedade se restringe apenas Ã  seleÃ§Ã£o de diretÃ³rios.\r\n   *\r\n   * > DefiniÃ§Ã£o nÃ£o suportada pelo browser **Internet Explorer**, todavia serÃ¡ possÃ­vel a seleÃ§Ã£o de arquivos padrÃ£o.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-directory') set directory(value: boolean) {\r\n    this._directory = convertToBoolean(value);\r\n\r\n    this.canHandleDirectory = this._directory && !isIE() && !isMobile();\r\n    this.setDirectoryAttribute(this.canHandleDirectory);\r\n  }\r\n\r\n  get directory() {\r\n    return this._directory;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define em *pixels* a altura da Ã¡rea onde podem ser arrastados os arquivos. A altura mÃ­nima aceita Ã© `160px`.\r\n   *\r\n   * > Esta propriedade funciona somente se a propriedade `p-drag-drop` estiver habilitada.\r\n   *\r\n   * @default `320`\r\n   */\r\n  @Input('p-drag-drop-height') dragDropHeight: number;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe a Ã¡rea onde Ã© possÃ­vel arrastar e selecionar os arquivos. Quando estiver definida, omite o botÃ£o para seleÃ§Ã£o de arquivos\r\n   * automaticamente.\r\n   *\r\n   * > Recomendamos utilizar apenas um `po-upload` com esta funcionalidade por tela.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-drag-drop') set dragDrop(value: boolean) {\r\n    this._dragDrop = convertToBoolean(value);\r\n  }\r\n\r\n  get dragDrop() {\r\n    return this._dragDrop;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta visualmente as informaÃ§Ãµes de restriÃ§Ãµes para o upload.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-restrictions-info') set hideRestrictionsInfo(value: boolean) {\r\n    this._hideRestrictionsInfo = convertToBoolean(value);\r\n  }\r\n\r\n  get hideRestrictionsInfo() {\r\n    return this._hideRestrictionsInfo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Omite o botÃ£o de seleÃ§Ã£o de arquivos.\r\n   *\r\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\r\n   * pela chamada do mÃ©todo `selectFiles()` para seleÃ§Ã£o de arquivos.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-select-button') set hideSelectButton(value: boolean) {\r\n    this._hideSelectButton = convertToBoolean(value);\r\n  }\r\n  get hideSelectButton(): boolean {\r\n    return this._hideSelectButton;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Omite o botÃ£o de envio de arquivos.\r\n   *\r\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\r\n   * pela chamada do mÃ©todo `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-send-button') set hideSendButton(value: boolean) {\r\n    this._hideSendButton = convertToBoolean(value);\r\n  }\r\n  get hideSendButton(): boolean {\r\n    return this._hideSendButton;\r\n  }\r\n\r\n  /** RÃ³tulo do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-upload`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoUploadLiterals = {\r\n   *    cancel: 'Desistir',\r\n   *    deleteFile: 'Deletar',\r\n   *  };\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:,\r\n   *    selectFile: 'Buscar arquivo',\r\n   * ```\r\n   *    startSending: 'Enviar'\r\n   *   tryAgain: 'RecomeÃ§ar',\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoUploadLiterals = {\r\n   *    deleteFile: 'Deletar'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\r\n   *\r\n   * ```\r\n   * <po-upload\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-upload>\r\n   * ```\r\n   *\r\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\r\n   */\r\n  @Input('p-literals') set literals(value: PoUploadLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poUploadLiteralsDefault[poLocaleDefault],\r\n        ...poUploadLiteralsDefault[browserLanguage()],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poUploadLiteralsDefault[browserLanguage()];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poUploadLiteralsDefault[browserLanguage()];\r\n  }\r\n\r\n  /** Texto de apoio para o campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** URL que deve ser feita a requisiÃ§Ã£o com os arquivos selecionados. */\r\n  @Input('p-url') url: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto que segue a definiÃ§Ã£o da interface `PoUploadFileRestrictions`,\r\n   * que possibilita definir tamanho mÃ¡ximo/mÃ­nimo e extensÃ£o dos arquivos permitidos.\r\n   */\r\n  @Input('p-restrictions') set fileRestrictions(restrictions: PoUploadFileRestrictions) {\r\n    this._fileRestrictions = this.initRestrictions(restrictions);\r\n\r\n    this.setAllowedExtensions(restrictions);\r\n  }\r\n\r\n  get fileRestrictions(): PoUploadFileRestrictions {\r\n    return this._fileRestrictions;\r\n  }\r\n\r\n  /** Define o valor do atributo `name` do componente. */\r\n  @Input('name') name: string = 'file';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nome do campo de formulÃ¡rio que serÃ¡ enviado para o serviÃ§o informado na propriedade `p-url`.\r\n   *\r\n   * @default `files`\r\n   */\r\n  @Input('p-form-field') set formField(value: string) {\r\n    this._formField = value && typeof value === 'string' ? value : poUploadFormFieldDefault;\r\n\r\n    this.getUploadService().formField = this.formField;\r\n  }\r\n\r\n  get formField(): string {\r\n    return this._formField;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo serÃ¡ desabilitado.\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n\r\n    this.validateModel(this.currentFiles);\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se o envio do arquivo serÃ¡ automÃ¡tico ao selecionar o mesmo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-upload') autoUpload?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se pode selecionar mais de um arquivo.\r\n   *\r\n   * > Se utilizada a `p-directory`, habilita-se automaticamente esta propriedade.\r\n   */\r\n  @Input('p-multiple') set isMultiple(value: boolean) {\r\n    this._isMultiple = convertToBoolean(value);\r\n  }\r\n\r\n  get isMultiple() {\r\n    return this.canHandleDirectory ? true : this._isMultiple;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\r\n   *\r\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\r\n   *  - O campo conter `p-required`;\r\n   *  - NÃ£o possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.currentFiles);\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o que serÃ¡ executada no momento de realizar o envio do arquivo,\r\n   * onde serÃ¡ possÃ­vel adicionar informaÃ§Ãµes ao parÃ¢metro que serÃ¡ enviado na requisiÃ§Ã£o.\r\n   * Ã passado por parÃ¢metro um objeto com o arquivo e a propiedade data nesta propriedade pode ser informado algum dado,\r\n   * que serÃ¡ enviado em conjunto com o arquivo na requisiÃ§Ã£o, por exemplo:\r\n   *\r\n   * ```\r\n   *   event.data = {id: 'id do usuario'};\r\n   * ```\r\n   */\r\n  @Output('p-upload') onUpload?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Evento serÃ¡ disparado quando ocorrer algum erro no envio do arquivo.\r\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpErrorResponse`.\r\n   */\r\n  @Output('p-error') onError?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Evento serÃ¡ disparado quando o envio do arquivo for realizado com sucesso.\r\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpResponse`.\r\n   */\r\n  @Output('p-success') onSuccess?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da *tag* `form`.\r\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(protected uploadService: PoUploadService) { }\r\n\r\n  abstract sendFeedback(): void;\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\r\n\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false,\r\n        }\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  writeValue(model: any): void {\r\n    if (model) {\r\n      if (!isEquals(this.currentFiles, model)) {\r\n\r\n        this.currentFiles = this.parseFiles(model);\r\n      }\r\n    } else {\r\n\r\n      this.currentFiles = undefined;\r\n    }\r\n  }\r\n\r\n  protected isExceededFileLimit(currentFilesLength: number): boolean {\r\n    return this.isMultiple &&\r\n      this.fileRestrictions &&\r\n      this.fileRestrictions.maxFiles > 0 &&\r\n      this.fileRestrictions.maxFiles <= currentFilesLength;\r\n  }\r\n\r\n  // Faz o parse dos arquivos selecionados para arquivos do formato PoUploadFile e atualiza os arquivos correntes.\r\n  protected parseFiles(files: Array<File>): Array<PoUploadFile> {\r\n    let poUploadFiles: Array<PoUploadFile> = this.currentFiles || [];\r\n    const filesLength = files.length;\r\n\r\n    for (let i = 0; i < filesLength; i++) {\r\n\r\n      if (this.isExceededFileLimit(poUploadFiles.length)) {\r\n        this.quantityNotAllowed = filesLength - this.fileRestrictions.maxFiles;\r\n        break;\r\n      }\r\n      const file = new PoUploadFile(files[i]);\r\n\r\n      if (this.checkRestrictions(file)) {\r\n        poUploadFiles = this.insertFileInFiles(file, poUploadFiles);\r\n      }\r\n\r\n    }\r\n    this.sendFeedback();\r\n    return poUploadFiles;\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  // Verifica se o arquivo estÃ¡ de acordo com as restriÃ§Ãµes.\r\n  private checkRestrictions(file: PoUploadFile): boolean {\r\n    const restrictions = this.fileRestrictions;\r\n\r\n    if (restrictions) {\r\n      const allowedExtensions = restrictions.allowedExtensions;\r\n      const minFileSize = restrictions.minFileSize;\r\n      const maxFileSize = restrictions.maxFileSize;\r\n\r\n      const isAccept = allowedExtensions ? this.isAllowedExtension(file.extension, allowedExtensions) : true;\r\n      const isAcceptSize = file.size >= minFileSize && file.size <= maxFileSize;\r\n\r\n      if (!isAcceptSize) {\r\n        this.sizeNotAllowed = this.sizeNotAllowed + 1;\r\n      }\r\n\r\n      return isAccept && isAcceptSize;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private existsFileSameName(file: PoUploadFile, files: Array<PoUploadFile>): boolean {\r\n    return files.some(currentFile => file.name === currentFile.name);\r\n  }\r\n\r\n  private getUploadService(): PoUploadService {\r\n    return this.uploadService;\r\n  }\r\n\r\n  private insertFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\r\n\r\n    if (this.existsFileSameName(newFile, files)) {\r\n\r\n      return this.updateExistsFileInFiles(newFile, files);\r\n    }\r\n\r\n    if (this.isMultiple) {\r\n\r\n      files.push(newFile);\r\n    } else {\r\n\r\n      files.splice(0, files.length, newFile);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  private isAllowedExtension(extension: string, allowedExtensions: Array<string> = []): boolean {\r\n    const isAllowed = allowedExtensions.some(ext => ext.toLowerCase() === extension);\r\n    if (!isAllowed) {\r\n      this.extensionNotAllowed = this.extensionNotAllowed + 1;\r\n    }\r\n    return isAllowed;\r\n  }\r\n\r\n  private setAllowedExtensions(restrictions: PoUploadFileRestrictions = {}) {\r\n    const _allowedExtensions = restrictions.allowedExtensions || [];\r\n\r\n    this.allowedExtensions = _allowedExtensions.join(',');\r\n  }\r\n\r\n  private initRestrictions(restrictions: PoUploadFileRestrictions): PoUploadFileRestrictions {\r\n\r\n    if (!restrictions) {\r\n      return;\r\n    }\r\n\r\n    const minFileSize = restrictions.minFileSize || poUploadMinFileSize;\r\n    const maxFileSize = restrictions.maxFileSize || poUploadMaxFileSize;\r\n\r\n    return {\r\n      ...restrictions,\r\n      maxFileSize: maxFileSize,\r\n      minFileSize: minFileSize\r\n    };\r\n\r\n  }\r\n\r\n  private updateExistsFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\r\n    const fileIndex = files.findIndex(currentFile => newFile.name === currentFile.name && currentFile.status !== PoUploadStatus.Uploaded);\r\n\r\n    if (fileIndex !== -1) {\r\n      files.splice(fileIndex, 1, newFile);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  abstract setDirectoryAttribute(value: boolean);\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop-area',\r\n  templateUrl: './po-upload-drag-drop-area.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropAreaComponent {\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-height') height: number;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Input('p-overlay') overlay: boolean;\r\n\r\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('selectFilesLink', { static: false }) selectFilesLinkElement: ElementRef;\r\n\r\n  constructor(public elementRef: ElementRef) {}\r\n\r\n  focus() {\r\n    this.selectFilesLinkElement.nativeElement.focus();\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { convertToInt } from '../../../../utils/util';\r\n\r\nimport { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';\r\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\r\n\r\nconst PoUploadDragDropHeightDefault = 320;\r\nconst PoUploadDragDropHeightMin = 160;\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop',\r\n  templateUrl: './po-upload-drag-drop.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropComponent {\r\n\r\n  private _dragDropHeight?: number = PoUploadDragDropHeightDefault;\r\n\r\n  areaElement: HTMLElement;\r\n  isDragOver: boolean = false;\r\n\r\n  @ViewChild('dragDropOverlay', { read: ElementRef, static: false }) dragDropOverlayElement: ElementRef;\r\n  @ViewChild(PoUploadDragDropAreaComponent, { static: true }) dragDropAreaComponent: PoUploadDragDropAreaComponent;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-drag-drop-height') set dragDropHeight(value: number) {\r\n    const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);\r\n\r\n    this._dragDropHeight = (dragDropHeight < PoUploadDragDropHeightMin) ? PoUploadDragDropHeightMin : dragDropHeight;\r\n  }\r\n\r\n  get dragDropHeight() {\r\n    return this._dragDropHeight;\r\n  }\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) { }\r\n\r\n  focus() {\r\n    this.dragDropAreaComponent.focus();\r\n  }\r\n\r\n  onAreaElement(element: HTMLElement) {\r\n    this.areaElement = element;\r\n\r\n    // necessÃ¡rio para nÃ£o ocorrer o erro HasBeenChecked\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  onDragLeave() {\r\n    this.isDragOver = false;\r\n  }\r\n\r\n  onDragOver() {\r\n    this.isDragOver = true;\r\n  }\r\n\r\n  onFileChange(files) {\r\n    this.isDragOver = false;\r\n\r\n    this.fileChange.emit(files);\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { PoUploadFile } from './po-upload-file';\n\nimport { Observable, Subscription } from 'rxjs';\n\n@Injectable()\nexport class PoUploadBaseService {\n\n  formField: string = 'files';\n  requests: Array<any> = [];\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * MÃ©todo responsÃ¡vel por enviar os arquivos ao servidor, conforme o parÃ¢metro URL.\n   *\n   * @param url URL da requisiÃ§Ã£o a ser efetuada.\n   * @param files Arquivos a serem enviados.\n   * @param tOnUpload FunÃ§Ã£o a ser executada quando o arquivo for enviado ao servidor.\n   * @param uploadCallback FunÃ§Ã£o que serÃ¡ executada enquanto os arquivos estiverem sendo enviados.\n   * @param successCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o for efetuada com sucesso.\n   * @param errorCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o foi efetuada com sucesso.\n   */\n  public upload(\n    url: string,\n    files: Array<PoUploadFile>,\n    tOnUpload: EventEmitter<any>,\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\n    successCallback: (file: PoUploadFile, event: any) => void,\n    errorCallback: (file: PoUploadFile, event: any) => void) {\n\n    const filesLength = files.length;\n    const uploadEvent: any = {\n      data: {},\n      file: null\n    };\n\n    for (let i = 0; i < filesLength; i++) {\n      const formData: FormData = new FormData();\n      const file = files[i];\n      const fileName = file.rawFile.name;\n\n      formData.append(this.formField, file.rawFile, fileName);\n\n      // FunÃ§Ã£o upload, onde o desenvolvedor pode enviar dados para a requisiÃ§Ã£o.\n      if (tOnUpload) {\n        uploadEvent['file'] = file;\n        tOnUpload.emit(uploadEvent);\n\n        formData.append('data', JSON.stringify(uploadEvent.data));\n      }\n\n      this.sendFile(url, file, formData, uploadCallback, successCallback, errorCallback);\n    }\n  }\n\n  public sendFile(\n    url: string,\n    file: PoUploadFile,\n    formData: FormData,\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\n    successCallback: (file: PoUploadFile, event: any) => void,\n    errorCallback: (file: PoUploadFile, event: any) => void) {\n\n    const request = this.getRequest(url, formData).subscribe(event => {\n\n      if (event.type === HttpEventType.UploadProgress) {\n        this.addRequest(file, request);\n\n        const percentDone = Math.round(100 * event.loaded / event.total);\n        uploadCallback(file, percentDone);\n\n      } else if (event instanceof HttpResponse) {\n        // Sucesso, arquivos enviados.\n        successCallback(file, event);\n      }\n    },\n    (err: HttpErrorResponse) => {\n      errorCallback(file, err);\n    });\n  }\n\n  public getRequest(url: string, formData: FormData): Observable<any> {\n    const req = new HttpRequest('POST', url, formData, {\n      reportProgress: true\n    });\n\n    return this.http.request(req);\n  }\n\n  public stopRequestByFile(file: any, callback: () => void) {\n    const requestObj = this.requests.find(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (requestObj) {\n      const request = requestObj.request;\n      request.unsubscribe();\n      this.removeRequest(requestObj);\n      callback();\n    }\n  }\n\n  public removeRequest(requestObj: any) {\n    const index = this.requests.indexOf(requestObj);\n    this.requests.splice(index, 1);\n  }\n\n  public addRequest(file: PoUploadFile, request: Subscription) {\n    const hasRequest = this.requests.some(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (!hasRequest) {\n      this.requests.push({file, request});\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoUploadBaseService } from './po-upload-base.service';\n\n@Injectable()\nexport class PoUploadService extends PoUploadBaseService { }\n","import { Component, ElementRef, forwardRef, Renderer2, ViewChild } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { formatBytes, isMobile } from '../../../utils/util';\r\nimport { PoButtonComponent } from './../../po-button/po-button.component';\r\nimport { PoI18nPipe } from '../../../services/po-i18n/po-i18n.pipe';\r\nimport { PoNotificationService } from '../../../services/po-notification/po-notification.service';\r\nimport { PoProgressStatus } from '../../po-progress/enums/po-progress-status.enum';\r\n\r\nimport { PoUploadBaseComponent } from './po-upload-base.component';\r\nimport { PoUploadDragDropComponent } from './po-upload-drag-drop/po-upload-drag-drop.component';\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoUploadStatus } from './po-upload-status.enum';\r\n\r\n/**\r\n * @docsExtends PoUploadBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-upload-basic\" title=\"Portinari Upload Basic\">\r\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-labs\" title=\"Portinari Upload Labs\">\r\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-resume\" title=\"Portinari Upload - Resume\">\r\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-rs\" title=\"Portinari Upload - Realize & Show\">\r\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-upload',\r\n  templateUrl: './po-upload.component.html',\r\n  providers: [\r\n    PoI18nPipe,\r\n    PoUploadService,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoUploadComponent),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoUploadComponent),\r\n      multi: true,\r\n    }\r\n  ]\r\n})\r\nexport class PoUploadComponent extends PoUploadBaseComponent {\r\n\r\n  infoByUploadStatus: { [key: string ]: { text: (percent?: number) => string, icon?: string } } = {\r\n    [PoUploadStatus.Uploaded]: {\r\n      text: () => this.literals.sentWithSuccess,\r\n      icon: 'po-icon-ok'\r\n    },\r\n    [PoUploadStatus.Error]: {\r\n      text: () => this.literals.errorOccurred\r\n    },\r\n    [PoUploadStatus.Uploading]: {\r\n      text: percent => percent + '%'\r\n    }\r\n  };\r\n\r\n  progressStatusByFileStatus = {\r\n    [PoUploadStatus.Uploaded]: PoProgressStatus.Success,\r\n    [PoUploadStatus.Error]: PoProgressStatus.Error\r\n  };\r\n\r\n  private calledByCleanInputValue: boolean = false;\r\n\r\n  @ViewChild('inputFile', {read: ElementRef, static: true }) private inputFile: ElementRef;\r\n  @ViewChild(PoUploadDragDropComponent, { static: false }) private poUploadDragDropComponent: PoUploadDragDropComponent;\r\n  @ViewChild('uploadButton', { static: false }) private uploadButton: PoButtonComponent;\r\n\r\n  constructor(\r\n    uploadService: PoUploadService,\r\n    public renderer: Renderer2,\r\n    private i18nPipe: PoI18nPipe,\r\n    private notification: PoNotificationService) {\r\n    super(uploadService);\r\n  }\r\n\r\n  get displayDragDrop(): boolean {\r\n    return this.dragDrop && !isMobile();\r\n  }\r\n\r\n  get displaySendButton(): boolean {\r\n    const currentFiles = this.currentFiles || [];\r\n    return !this.hideSendButton && !this.autoUpload && (currentFiles.length > 0 && this.hasFileNotUploaded);\r\n  }\r\n\r\n  get selectFileButtonLabel() {\r\n    if (this.canHandleDirectory) {\r\n      return this.literals.selectFolder;\r\n    } else if (this.isMultiple) {\r\n      return this.literals.selectFiles;\r\n    } else {\r\n      return this.literals.selectFile;\r\n    }\r\n  }\r\n\r\n  get hasMoreThanFourItems(): boolean {\r\n    return this.currentFiles && this.currentFiles.length > 4;\r\n  }\r\n\r\n  get hasMultipleFiles(): boolean {\r\n    return this.currentFiles && this.currentFiles.length > 1;\r\n  }\r\n\r\n  get hasFileNotUploaded(): boolean {\r\n    if (Array.isArray(this.currentFiles)) {\r\n      return this.currentFiles.some(file => file.status !== PoUploadStatus.Uploaded);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get isDisabled(): boolean {\r\n    const currentFiles = this.currentFiles || [];\r\n\r\n    return !!(this.hasAnyFileUploading(currentFiles) ||\r\n    !this.url ||\r\n    this.disabled ||\r\n    this.isExceededFileLimit(currentFiles.length));\r\n  }\r\n\r\n  get maxFiles(): number {\r\n    return this.isMultiple && this.fileRestrictions && this.fileRestrictions.maxFiles;\r\n  }\r\n\r\n  cancel(file: PoUploadFile) {\r\n    if (file.status === PoUploadStatus.Uploading) {\r\n      return this.stopUpload(file);\r\n    }\r\n\r\n    this.removeFile(file);\r\n  }\r\n\r\n  /** MÃ©todo responsÃ¡vel por **limpar** o(s) arquivo(s) selecionado(s). */\r\n  clear() {\r\n    this.currentFiles = undefined;\r\n    this.updateModel([]);\r\n    this.cleanInputValue();\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o que atribui foco ao componente.\r\n   *\r\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoUploadComponent } from '@portinari/portinari-ui';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoUploadComponent, { static: true }) upload: PoUploadComponent;\r\n   *\r\n   * focusUpload() {\r\n   *   this.upload.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus() {\r\n    if (!this.disabled) {\r\n      if (this.uploadButton) {\r\n        this.uploadButton.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.displayDragDrop) {\r\n        this.poUploadDragDropComponent.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Verifica se existe algum arquivo sendo enviado ao serviÃ§o.\r\n  hasAnyFileUploading(files: Array<PoUploadFile>) {\r\n    if (files && files.length) {\r\n      return files.some(file => file.status === PoUploadStatus.Uploading);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // retorna se o status do arquivo Ã© diferente de enviado\r\n  isAllowCancelEvent(status: PoUploadStatus) {\r\n    return status !== PoUploadStatus.Uploaded;\r\n  }\r\n\r\n  // FunÃ§Ã£o disparada ao selecionar algum arquivo.\r\n  onFileChange(event): void {\r\n\r\n    // necessÃ¡rio este tratamento quando para IE, pois nele o change Ã© disparado quando o campo Ã© limpado tambÃ©m\r\n    if (this.calledByCleanInputValue) {\r\n      this.calledByCleanInputValue = false;\r\n      return event.preventDefault();\r\n    }\r\n\r\n    const files = event.target.files;\r\n    this.updateFiles(files);\r\n\r\n    this.cleanInputValue();\r\n  }\r\n\r\n  onFileChangeDragDrop(files) {\r\n    this.updateFiles(files);\r\n  }\r\n\r\n  // Remove o arquivo passado por parÃ¢metro da lista dos arquivos correntes.\r\n  removeFile(file): void {\r\n    const index = this.currentFiles.indexOf(file);\r\n    this.currentFiles.splice(index, 1);\r\n\r\n    this.updateModel([...this.currentFiles]);\r\n  }\r\n\r\n  /** MÃ©todo responsÃ¡vel por **abrir** a janela para seleÃ§Ã£o de arquivo(s). */\r\n  selectFiles() {\r\n    this.calledByCleanInputValue = false;\r\n    this.inputFile.nativeElement.click();\r\n  }\r\n\r\n  sendFeedback(): void {\r\n\r\n    if (this.sizeNotAllowed > 0) {\r\n      const minFileSize = formatBytes(this.fileRestrictions.minFileSize);\r\n      const maxFileSize = formatBytes(this.fileRestrictions.maxFileSize);\r\n      const args = [ this.sizeNotAllowed, minFileSize || '0', maxFileSize ];\r\n      this.setPipeArguments('invalidSize', args);\r\n      this.sizeNotAllowed = 0;\r\n    }\r\n\r\n    if (this.extensionNotAllowed > 0) {\r\n      const allowedExtensionsFormatted = this.fileRestrictions.allowedExtensions.join(', ').toUpperCase();\r\n      const args = [ this.extensionNotAllowed, allowedExtensionsFormatted ];\r\n      this.setPipeArguments('invalidFormat', args);\r\n      this.extensionNotAllowed = 0;\r\n    }\r\n\r\n    if (this.quantityNotAllowed > 0) {\r\n      const args = [ this.quantityNotAllowed ];\r\n      this.setPipeArguments('invalidAmount', args);\r\n      this.quantityNotAllowed = 0;\r\n    }\r\n\r\n  }\r\n\r\n  /** MÃ©todo responsÃ¡vel por **enviar** o(s) arquivo(s) selecionado(s). */\r\n  sendFiles(): void {\r\n    if (this.currentFiles && this.currentFiles.length) {\r\n\r\n      this.uploadFiles(this.currentFiles);\r\n    }\r\n  }\r\n\r\n  setDirectoryAttribute(canHandleDirectory: boolean) {\r\n    if (canHandleDirectory) {\r\n      this.renderer.setAttribute(this.inputFile.nativeElement, 'webkitdirectory', 'true');\r\n    } else {\r\n      this.renderer.removeAttribute(this.inputFile.nativeElement, 'webkitdirectory');\r\n    }\r\n  }\r\n\r\n  // Caso o componente estiver no modo AutoUpload, o arquivo tambÃ©m serÃ¡ removido da lista.\r\n  stopUpload(file: PoUploadFile) {\r\n    this.uploadService.stopRequestByFile(file, () => {\r\n      if (this.autoUpload) {\r\n        this.removeFile(file);\r\n      } else {\r\n        this.stopUploadHandler(file);\r\n      }\r\n    });\r\n  }\r\n\r\n  trackByFn(index, file: PoUploadFile) {\r\n    return file.uid;\r\n  }\r\n\r\n  // Envia os arquivos passados por parÃ¢metro, exceto os que jÃ¡ foram enviados ao serviÃ§o.\r\n  uploadFiles(files: Array<PoUploadFile>) {\r\n    const filesFiltered = files.filter(file => file.status !== PoUploadStatus.Uploaded);\r\n\r\n    this.uploadService.upload(this.url, filesFiltered, this.onUpload,\r\n      (file, percent): any => { // UPLOADING\r\n        this.uploadingHandler(file, percent);\r\n\r\n      }, (file, eventResponse): any => { // SUCCESS\r\n        this.responseHandler(file, PoUploadStatus.Uploaded);\r\n        this.onSuccess.emit(eventResponse);\r\n\r\n      }, (file, eventError): any => { // Error\r\n        this.responseHandler(file, PoUploadStatus.Error);\r\n        this.onError.emit(eventError);\r\n    });\r\n  }\r\n\r\n  private cleanInputValue() {\r\n    this.calledByCleanInputValue = true;\r\n    this.inputFile.nativeElement.value = '';\r\n  }\r\n\r\n  // funÃ§Ã£o disparada na resposta do sucesso ou error\r\n  private responseHandler(file: PoUploadFile, status: PoUploadStatus) {\r\n    file.status = status;\r\n    file.percent = 100;\r\n  }\r\n\r\n  // mÃ©todo responsÃ¡vel por setar os argumentos do i18nPipe de acordo com a restriÃ§Ã£o.\r\n  private setPipeArguments(literalAttributes: string, literalArguments?) {\r\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], literalArguments);\r\n    this.notification.information(pipeArguments);\r\n  }\r\n\r\n  // FunÃ§Ã£o disparada ao parar um envio de arquivo.\r\n  private stopUploadHandler(file: PoUploadFile) {\r\n    file.status = PoUploadStatus.None;\r\n    file.percent = 0;\r\n  }\r\n\r\n  private updateFiles(files) {\r\n    this.currentFiles = this.parseFiles(files);\r\n\r\n    this.updateModel([...this.currentFiles]);\r\n\r\n    if (this.autoUpload) {\r\n      this.uploadFiles(this.currentFiles);\r\n    }\r\n  }\r\n\r\n  // Atualiza o ngModel para os arquivos passados por parÃ¢metro.\r\n  private updateModel(files: Array<PoUploadFile>) {\r\n    const modelFiles: Array<PoUploadFile> = this.mapCleanUploadFiles(files);\r\n    this.onModelChange ? this.onModelChange(modelFiles) : this.ngModelChange.emit(modelFiles);\r\n  }\r\n\r\n  // FunÃ§Ã£o disparada enquanto o arquivo estÃ¡ sendo enviado ao serviÃ§o.\r\n  private uploadingHandler(file: any, percent: number) {\r\n    file.status = PoUploadStatus.Uploading;\r\n    file.percent = percent;\r\n  }\r\n\r\n  // retorna os objetos do array sem as propriedades: percent e displayName\r\n  private mapCleanUploadFiles(files: Array<PoUploadFile>): Array<PoUploadFile> {\r\n    const mapedByUploadFile = progressFile => {\r\n      const { percent, displayName, ...uploadFile } = progressFile;\r\n\r\n      return uploadFile;\r\n    };\r\n\r\n    return files.map(mapedByUploadFile);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { AbstractControl, NgForm } from '@angular/forms';\r\n\r\nimport { convertImageToBase64 } from '../../../../utils/util';\r\nimport { PoLanguageService } from './../../../../services/po-language/po-language.service';\r\n\r\nimport { PoModalAction, PoModalComponent } from '../../../po-modal';\r\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\r\nimport { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';\r\nimport { PoUploadComponent } from '../../po-upload/po-upload.component';\r\nimport { PoUploadFileRestrictions } from '../../po-upload/interfaces/po-upload-file-restriction.interface';\r\n\r\nconst uploadRestrictions = ['.apng', '.bmp', '.gif', '.ico', '.jpeg', '.jpg', '.png', '.svg'];\r\n\r\n@Component({\r\n  selector: 'po-rich-text-modal',\r\n  templateUrl: './po-rich-text-modal.component.html'\r\n})\r\nexport class PoRichTextModalComponent {\r\n\r\n  modalType: PoRichTextModalType;\r\n  savedCursorPosition;\r\n  selection = document.getSelection();\r\n  uploadModel: Array<any>;\r\n  uploadRestrictions: PoUploadFileRestrictions = {\r\n    allowedExtensions: uploadRestrictions\r\n  };\r\n  urlImage: string;\r\n  urlLink: string;\r\n  urlLinkText: string;\r\n\r\n  private savedSelection: Range | null;\r\n\r\n  readonly literals = {\r\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  modalCancelAction: PoModalAction = {\r\n    label: this.literals.cancel,\r\n    action: () => {\r\n      this.modal.close();\r\n      this.cleanUpFields();\r\n    }\r\n  };\r\n\r\n  modalConfirmAction: PoModalAction = {\r\n    label: this.literals.insert,\r\n    disabled: false,\r\n    action: () => this.insertElementRef()\r\n  };\r\n\r\n  modalLinkConfirmAction = {\r\n    label: this.literals.insertLink,\r\n    disabled: true,\r\n    action: () => this.toInsertLink(this.urlLink, this.urlLinkText)\r\n  };\r\n\r\n  get modalTitle(): string {\r\n    return this.modalType === 'image' ? this.literals.insertImage : this.literals.insertLink;\r\n  }\r\n\r\n  get isUploadValid(): boolean {\r\n    return !!(this.uploadModel && this.uploadModel.length);\r\n  }\r\n\r\n  get isUrlValid(): boolean {\r\n    return !!this.urlImage && this.modalImageForm && this.modalImageForm.valid;\r\n  }\r\n\r\n  get modalPrimaryAction() {\r\n    return this.modalType === 'image' ? this.modalConfirmAction : this.modalLinkConfirmAction;\r\n  }\r\n\r\n  @ViewChild('modal', { static: true }) modal: PoModalComponent;\r\n\r\n  @ViewChild('modalImageForm', { static: false }) modalImageForm: NgForm;\r\n\r\n  @ViewChild('upload', { static: true }) upload: PoUploadComponent;\r\n\r\n  @ViewChild('modalImage', { static: true }) modalImage: ElementRef;\r\n\r\n  @ViewChild('modalLink', { static: true }) modalLink: PoModalComponent;\r\n\r\n  @ViewChild('modalLinkForm', { static: false }) modalLinkForm: NgForm;\r\n\r\n  @Output('p-command') command = new EventEmitter<string | { command: string, value: string | any }>();\r\n\r\n  constructor(private languageService: PoLanguageService) {}\r\n\r\n  async convertToBase64() {\r\n    if (this.isUploadValid) {\r\n      const uploadImage = this.uploadModel[0].rawFile;\r\n      return await convertImageToBase64(uploadImage);\r\n    }\r\n  }\r\n\r\n  emitCommand(value) {\r\n    let command: string;\r\n    if (value && this.modalType === PoRichTextModalType.Image) {\r\n      command = 'insertImage';\r\n      this.command.emit(({ command, value }));\r\n    }\r\n  }\r\n\r\n  formModelValidate() {\r\n    return this.modalLinkConfirmAction.disabled = this.modalLinkForm && this.modalLinkForm.invalid;\r\n  }\r\n\r\n  async insertElementRef() {\r\n\r\n    let uploadImage: string;\r\n\r\n    if (this.modalType === PoRichTextModalType.Image && !this.urlImage) {\r\n      uploadImage = await this.convertToBase64();\r\n    }\r\n\r\n    this.retrieveCursorPosition();\r\n    this.modal.close();\r\n\r\n    if (this.isUrlValid || this.isUploadValid) {\r\n      this.emitCommand(this.urlImage || uploadImage);\r\n    }\r\n    this.cleanUpFields();\r\n  }\r\n\r\n  openModal(type: PoRichTextModalType) {\r\n    this.modalType = type;\r\n\r\n    if (this.modalType === PoRichTextModalType.Image) {\r\n      this.saveCursorPosition();\r\n    } else {\r\n      this.saveSelectionTextRange();\r\n      this.formReset(this.modalLinkForm.control);\r\n      this.formModelValidate();\r\n    }\r\n\r\n    this.modal.open();\r\n  }\r\n\r\n  private checkIfIsEmpty(urlLink: string, urlLinkText: string) {\r\n    return urlLinkText === undefined || urlLinkText.trim() === '' ? urlLink : urlLinkText;\r\n  }\r\n\r\n  private cleanUpFields() {\r\n    this.urlImage = undefined;\r\n    this.urlLink = undefined;\r\n    this.urlLinkText = undefined;\r\n    this.uploadModel = undefined;\r\n  }\r\n\r\n  private formReset(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private restoreSelection() {\r\n    if (this.savedSelection) {\r\n      if (this.selection) {\r\n        this.selection.removeAllRanges();\r\n        this.selection.addRange(this.savedSelection);\r\n      }\r\n      return true;\r\n    }  else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private retrieveCursorPosition() {\r\n    this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);\r\n  }\r\n\r\n  private saveCursorPosition() {\r\n    this.savedCursorPosition = [ this.selection.focusNode, this.selection.focusOffset ];\r\n  }\r\n\r\n  private saveSelectionTextRange() {\r\n    if (this.selection.anchorNode !== null) {\r\n      this.savedSelection = this.selection.getRangeAt(0);\r\n      this.urlLinkText = this.selection.toString();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private toInsertLink(urlLink, urlLinkText) {\r\n    this.modal.close();\r\n    this.restoreSelection();\r\n\r\n    const urlLinkTextValue = this.checkIfIsEmpty(urlLink, urlLinkText);\r\n    const command: string = 'InsertHTML';\r\n    const value = { urlLink: urlLink, urlLinkText: urlLinkTextValue };\r\n\r\n    this.command.emit({ command, value });\r\n\r\n    this.cleanUpFields();\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isIE } from '../../../../utils/util';\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\n\nimport { PoButtonGroupItem } from '../../../po-button-group';\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\nimport { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';\nimport { PoRichTextToolbarButtonGroupItem } from '../interfaces/po-rich-text-toolbar-button-group-item.interface';\n\nconst poRichTextDefaultColor = '#000000';\n\n@Component({\n  selector: 'po-rich-text-toolbar',\n  templateUrl: './po-rich-text-toolbar.component.html'\n})\nexport class PoRichTextToolbarComponent implements AfterViewInit {\n\n  private _readonly: boolean;\n  private selection = document.getSelection();\n\n  readonly literals = {\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\n  };\n\n  alignButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'justifyleft',\n      icon: 'po-icon-align-left',\n      tooltip: this.literals.left,\n      action: this.emitAlignCommand.bind(this, 'justifyleft'),\n      selected: true\n    },\n    {\n      command: 'justifycenter',\n      icon: 'po-icon-align-center',\n      tooltip: this.literals.center,\n      action: this.emitAlignCommand.bind(this, 'justifycenter')\n    },\n    {\n      command: 'justifyright',\n      icon: 'po-icon-align-right',\n      tooltip: this.literals.right,\n      action: this.emitAlignCommand.bind(this, 'justifyright')\n    },\n    {\n      command: 'justifyfull',\n      icon: 'po-icon-align-justify',\n      tooltip: this.literals.justify,\n      action: this.emitAlignCommand.bind(this, 'justifyfull')\n    }\n  ];\n\n  formatButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'bold',\n      icon: 'po-icon-text-bold',\n      tooltip: this.literals.bold,\n      action: this.emitCommand.bind(this, 'bold')\n    },\n    {\n      command: 'italic',\n      icon: 'po-icon-text-italic',\n      tooltip: this.literals.italic,\n      action: this.emitCommand.bind(this, 'italic')\n    },\n    {\n      command: 'underline',\n      icon: 'po-icon-text-underline',\n      tooltip: this.literals.underline,\n      action: this.emitCommand.bind(this, 'underline')\n    }\n  ];\n\n  listButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'insertUnorderedList',\n      icon: 'po-icon-list',\n      tooltip: this.literals.unorderedList,\n      action: this.emitCommand.bind(this, 'insertUnorderedList')\n    }\n  ];\n\n  linkButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'Createlink',\n      icon: 'po-icon-link',\n      tooltip: `${this.literals.insertLink} (Ctrl + L)`,\n      action: () => this.modal.emit(PoRichTextModalType.Link)\n    }\n  ];\n\n  mediaButtons: Array<PoButtonGroupItem> = [\n    {\n      tooltip: this.literals.insertImage,\n      icon: 'po-icon-picture',\n      action: () => this.modal.emit(PoRichTextModalType.Image)\n    }\n  ];\n\n  @ViewChild('colorPickerInput', { read: ElementRef, static: false }) colorPickerInput: ElementRef;\n\n  @ViewChild('toolbarElement', { static: true }) toolbarElement: ElementRef;\n\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = value;\n    this.toggleDisableButtons(this._readonly);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  @Output('p-command') command = new EventEmitter<string | { command: string, value: string }>();\n\n  @Output('p-modal') modal = new EventEmitter<any>();\n\n  get isInternetExplorer() {\n    return isIE();\n  }\n\n  constructor(private languageService: PoLanguageService) { }\n\n  ngAfterViewInit() {\n    this.removeButtonFocus();\n    this.setColorInColorPicker(poRichTextDefaultColor);\n  }\n\n  changeTextColor(value) {\n    const command = 'foreColor';\n\n    this.command.emit({ command, value });\n  }\n\n  setButtonsStates(obj: {commands: Array<string>, hexColor: string}) {\n    if (!this.readonly) {\n      this.alignButtons.forEach(button => button.selected = obj.commands.includes(button.command));\n      this.formatButtons.forEach(button => button.selected = obj.commands.includes(button.command));\n      this.listButtons[0].selected = obj.commands.includes(this.listButtons[0].command);\n      this.linkButtons[0].selected = obj.commands.includes(this.linkButtons[0].command);\n      this.setColorInColorPicker(obj.hexColor);\n    }\n  }\n\n  shortcutTrigger() {\n    this.modal.emit(PoRichTextModalType.Link);\n  }\n\n  private emitAlignCommand(command: string) {\n    const index = this.alignButtons.findIndex(btn => btn.command === command);\n\n    if (this.alignButtons[index].selected) {\n      this.alignButtons[index].selected = false;\n    }\n\n    this.command.emit(command);\n  }\n\n  private emitCommand(command: string) {\n    this.command.emit(command);\n  }\n\n  private removeButtonFocus() {\n    const buttons = this.toolbarElement.nativeElement.querySelectorAll('button');\n\n    buttons.forEach(button => button.setAttribute('tabindex', '-1'));\n  }\n\n  private setColorInColorPicker(color: string): void {\n    this.colorPickerInput.nativeElement.value = color;\n  }\n\n  private toggleDisableButtons(state: boolean) {\n    this.alignButtons.forEach(button => button.disabled = state);\n    this.formatButtons.forEach(button => button.disabled = state);\n    this.listButtons[0].disabled = state;\n    this.linkButtons[0].disabled = state;\n    this.mediaButtons[0].disabled = state;\n  }\n\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @example\n *\n * <example name=\"po-input-basic\" title=\"Portinari Input Basic\">\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.html\"> </file>\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-input-labs\" title=\"Portinari Input Labs\">\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.html\"> </file>\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-input-reactive-form\" title=\"Portinari Input - Reactive Form\">\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-input',\n  templateUrl: './po-input.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoInputComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoInputComponent),\n    multi: true,\n  }]\n})\nexport class PoInputComponent extends PoInputGeneric {\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import {  ElementRef } from '@angular/core';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\nexport abstract class PoNumberBaseComponent extends PoInputGeneric {\n\n  type = 'number';\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  eventOnInput(e: any) {\n    if (!this.mask) {\n      let value = e.target.value;\n      const valueMaxlength = this.validMaxLength(this.maxlength, value);\n\n      if (value !== valueMaxlength) {\n        value = valueMaxlength;\n\n        this.inputEl.nativeElement.value = value;\n      }\n\n      this.callOnChange(this.formatNumber(value));\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n\n    if (maxlength && value.length > maxlength) {\n      const substringValue = value.toString().substring(0, maxlength);\n\n      if (substringValue && this.isEndWithDot(substringValue)) {\n        return substringValue.toString().substring(0, maxlength - 1);\n      }\n\n      return substringValue;\n    }\n\n    return value;\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.onChangePropagate(this.objMask.valueToModel);\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else { // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n\n    this.changeModel.emit(value);\n\n  }\n\n  private isEndWithDot(value: string) {\n    return value && value.lastIndexOf('.') === value.length - 1;\n  }\n\n  private formatNumber(value) {\n    return value ? Number(value) : null;\n  }\n\n}\n","import { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { minFailed, maxFailed } from '../validators';\n\nimport { PoNumberBaseComponent } from './po-number-base.component';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-number Ã© um input especÃ­fico para receber apenas nÃºmeros.\n * Ã possÃ­vel configurar um valor mÃ­nimo, mÃ¡ximo e um step com p-min, p-max e p-step,\n * respectivamente.\n *\n * @example\n *\n * <example name=\"po-number-basic\" title=\"Portinari Number Basic\">\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.html\"> </file>\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-labs\" title=\"Portinari Number Labs\">\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.html\"> </file>\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-calculate\" title=\"Portinari Number - Calculate\">\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.html\"> </file>\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-number',\n  templateUrl: './po-number.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoNumberComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoNumberComponent),\n    multi: true,\n  }]\n})\nexport class PoNumberComponent extends PoNumberBaseComponent {\n\n  /** Valor mÃ­nimo. */\n  min?: number;\n  @Input('p-min') set setMin(min: string) {\n    const parsedInt = parseInt(min, 10);\n    this.min = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /** Valor mÃ¡ximo. */\n  max?: number;\n  @Input('p-max') set setMax(max: string) {\n    const parsedInt = parseInt(max, 10);\n    this.max = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Intervalo.\n   *\n   * @default 1\n   */\n  @Input('p-step') step?: string = '1';\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (minFailed(this.min, abstractControl.value)) {\n      return { min: {\n        valid: false,\n      }};\n    }\n\n    if (maxFailed(this.max, abstractControl.value)) {\n      return { max: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n}\n","import { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-password Ã© um input especÃ­fico para senhas. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"po-password-basic\" title=\"Portinari Password Basic\">\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.html\"> </file>\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-labs\" title=\"Portinari Password Labs\">\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.html\"> </file>\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-reset\" title=\"Portinari Password - Reset\">\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.html\"> </file>\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-password',\n  templateUrl: './po-password.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoPasswordComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoPasswordComponent),\n    multi: true,\n  }]\n})\nexport class PoPasswordComponent extends PoInputGeneric {\n\n  private _hidePasswordPeek?: boolean = false;\n\n  type = 'password';\n  visiblePassword = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite esconder a funÃ§Ã£o de espiar a senha digitada.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-password-peek') set hidePasswordPeek(value: boolean) {\n    this._hidePasswordPeek = convertToBoolean(value);\n    if (value) {\n      this.visiblePassword = false;\n      this.type = 'password';\n    }\n  }\n\n  get hidePasswordPeek(): boolean {\n    return this._hidePasswordPeek;\n  }\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  showPassword() {\n    this.visiblePassword = !this.visiblePassword;\n    this.type = this.type === 'password' ? 'text' : 'password';\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, removeDuplicatedOptions } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoRadioGroupOption } from './po-radio-group-option.interface';\n\nconst poRadioGroupColumnsDefaultLength: number = 6;\nconst poRadioGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `po-radio-group` deve ser utilizado para disponibilizar mÃºltiplas opÃ§Ãµes ao usuÃ¡rio, permitindo a ele que\n * selecione apenas uma delas. Seu uso Ã© recomendado para um nÃºmero pequeno de opÃ§Ãµes, caso contrÃ¡rio, recomenda-se o uso\n * do [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\n *\n * Este nÃ£o Ã© um componente de multiseleÃ§Ã£o, se for este o caso, deve-se utilizar o\n * [**po-checkbox-group**](/documentation/po-checkbox-group).\n *\n * > Ao passar um valor para o *model* que nÃ£o esteja na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n */\nexport abstract class PoRadioGroupBaseComponent implements ControlValueAccessor, Validator {\n\n  private _columns: number = poRadioGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _options: Array<PoRadioGroupOption>;\n  private _required?: boolean = false;\n\n  mdColumns: number = poRadioGroupColumnsDefaultLength;\n  value: any;\n\n  private onChangePropagate: any = null;\n  private validatorChange;\n\n  /** Nome das opÃ§Ãµes. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a quantidade de colunas para exibiÃ§Ã£o das opÃ§Ãµes.\n   *\n   * **ConsideraÃ§Ãµes:**\n   *  - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   *  - O nÃºmero mÃ¡ximo de colunas Ã© invariÃ¡vel nas seguintes resoluÃ§Ãµes:\n   *    + `sm`: `1`\n   *    + `md`: `2`\n   *\n   * @default `2`\n   */\n  @Input('p-columns') set columns(value: number) {\n    const columns = convertToInt(value, poRadioGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Lista de opÃ§Ãµes que serÃ£o exibidas.\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoRadioGroupOption.\n   */\n  @Input('p-options') set options(value: Array<PoRadioGroupOption>) {\n    this._options = value;\n    removeDuplicatedOptions(this.options);\n  }\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Evento ao alterar valor do campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // Deve retornar o valor elemento que contÃ©m o valor passado por parÃ¢metro\n  abstract getElementByValue(value: any): any;\n\n  // FunÃ§Ã£o que controla quando deve ser emitido onChange e atualiza o Model\n  changeValue(changedValue: any) {\n    if (this.onChangePropagate) {\n      this.onChangePropagate(changedValue);\n    }\n\n    if (this.value !== changedValue) {\n      this.change.emit(changedValue);\n    }\n\n    this.value = changedValue;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n\n  registerOnTouched(fn: any) { }\n\n  registerOnValidatorChange(fn: any) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  writeValue(modelValue: any) {\n    this.value = modelValue;\n\n    // Busca radio com o valor especificado\n    const element = this.getElementByValue(modelValue);\n    if (!element && this.onChangePropagate) {\n      this.value = undefined;\n      this.onChangePropagate(this.value);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = poRadioGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poRadioGroupColumnsDefaultLength;\n  }\n\n  private validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n}\n","import { Component, DoCheck, ElementRef, forwardRef, Input, IterableDiffers, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { removeDuplicatedOptions } from '../../../utils/util';\n\nimport { PoRadioGroupBaseComponent } from './po-radio-group-base.component';\n\n/**\n * @docsExtends PoRadioGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-radio-group-basic\" title=\"Portinari Radio Group Basic\">\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.ts\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-labs\" title=\"Portinari Radio Group Labs\">\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-translator\" title=\"Portinari Radio Group - Translator\">\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-translator-reactive-form\" title=\"Portinari Radio Group - Translator Reactive Form\">\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-radio-group',\n  templateUrl: './po-radio-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoRadioGroupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoRadioGroupComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoRadioGroupComponent extends PoRadioGroupBaseComponent implements DoCheck {\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n  @ViewChildren('inputRadio') radioLabels: QueryList<ElementRef>;\n\n  differ: any;\n\n  constructor(differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n    }\n  }\n\n  eventClick(value: any, disabled: any) {\n    if (!disabled) {\n      this.changeValue(value);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoRadioGroupComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoRadioGroupComponent, { static: true }) radio: PoRadioGroupComponent;\n   *\n   * focusRadio() {\n   *   this.radio.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.radioLabels && !this.disabled) {\n      const radioLabel = this.radioLabels.find((_, index) => !this.options[index].disabled);\n\n      if (radioLabel) {\n        radioLabel.nativeElement.focus();\n      }\n    }\n  }\n\n  getElementByValue(value) {\n    return this.inputEl.nativeElement.querySelector(`input[value='${value}']`);\n  }\n\n  onKeyUp(event: KeyboardEvent, value) {\n    const key = event.keyCode || event.which;\n\n    if (this.isArrowKey(key)) {\n      this.changeValue(value);\n    }\n  }\n\n  private isArrowKey(key: number) {\n    return key >= 37 && key <= 40;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoSelectOption } from './po-select-option.interface';\n\n/**\n * @description\n *\n * O componente po-select exibe uma lista de valores e permite que o usuÃ¡rio selecione um desses valores.\n * Os valores listados podem ser fixos ou dinÃ¢micos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\n * O po-select nÃ£o permite que o usuÃ¡rio informe um valor diferente dos valores listados, isso garante a consistÃªncia da informaÃ§Ã£o.\n * O po-select nÃ£o permite que sejam passados valores duplicados, undefined e null para as opÃ§Ãµes, excluindo-os da lista.\n *\n * > Ao passar um valor para o _model_ que nÃ£o estÃ¡ na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n *\n * TambÃ©m existe a possibilidade de utilizar um _template_ para a exibiÃ§Ã£o dos itens da lista,\n * veja mais em **[p-select-option-template](/documentation/po-select-option-template)**.\n */\nexport abstract class PoSelectBaseComponent implements ControlValueAccessor, Validator {\n\n  private _disabled?: boolean = false;\n  private _options: Array<PoSelectOption>;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n\n  private onValidatorChange;\n\n  /** Adiciona uma label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto nenhuma opÃ§Ã£o estiver selecionada. */\n  @Input('p-placeholder') placeholder?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * Nesta propriedade deve ser definido uma coleÃ§Ã£o de objetos que implementam a interface PoSelectOption.\n   * Caso esta lista estiver vazia, o model serÃ¡ undefined.\n   */\n  @Input('p-options') set options(options: Array<PoSelectOption>) {\n    this._options = options;\n    removeDuplicatedOptions(this._options);\n    removeUndefinedAndNullOptions(this._options);\n    this.onUpdateOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: string | boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente para leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required')\n  set required(required: string | boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n  get required() {\n    return this._required;\n  }\n\n  changeDetector: ChangeDetectorRef;\n  onModelChange: any;\n  onModelTouched: any;\n  readyToValidation: boolean = false;\n\n  protected clickoutListener: () => void;\n\n  constructor(public element: ElementRef, changeDetector: ChangeDetectorRef) {\n    this.element = element;\n    this.changeDetector = changeDetector;\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return (this.onModelChange) ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  onChange(value) {\n    this.change.emit(value);\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this._required, this._disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n    return null;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: any) {\n    this.onValidatorChange = fn;\n  }\n\n  private validateModel() {\n    if (this.onValidatorChange) {\n      this.onValidatorChange();\n    }\n  }\n\n  abstract onUpdateOptions(): void;\n\n  abstract updateModel(selectOption: PoSelectOption): void;\n\n  abstract writeValue(value: any): void;\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoSelectComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista suspensa do componente.\n *\n * > Quando utilizada em _mobile_ serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`\n * dentro da tag `po-select`.\n *\n * Para obter a referÃªncia do item atual, use `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [p-options]=\"options\">\n *     <ng-template p-select-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </po-select>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [p-options]=\"options\">\n *     <div *p-select-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </po-select>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-select-option-template]'\n})\nexport class PoSelectOptionTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, ContentChild, Component, DoCheck, ElementRef, forwardRef, HostListener,\n  IterableDiffers, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { isMobile, removeDuplicatedOptions, removeUndefinedAndNullOptions, validValue } from '../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoSelectBaseComponent } from './po-select-base.component';\nimport { PoSelectOption } from './po-select-option.interface';\nimport { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';\n\nconst poSelectContentOffset = 8;\nconst poSelectContentPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoSelectBaseComponent\n *\n * @example\n *\n * <example name=\"po-select-basic\" title=\"Portinari Select Basic\">\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.html\"> </file>\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-labs\" title=\"Portinari Select Labs\">\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.html\"> </file>\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-customer-registration\" title=\"Portinari Select - Customer registration\">\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.html\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts\"> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>\n * </example>\n */\n@Component({\n  selector: 'po-select',\n  templateUrl: './po-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoSelectComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoSelectComponent),\n      multi: true,\n    },\n    PoControlPositionService\n  ]\n})\nexport class PoSelectComponent extends PoSelectBaseComponent implements DoCheck {\n\n  displayValue;\n  isMobile: any = isMobile();\n  modelValue: any;\n  open: boolean = false;\n  selectedValue: any;\n  selectIcon: string = 'po-icon-arrow-down';\n  scrollPosition: number;\n\n  private differ: any;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ContentChild(PoSelectOptionTemplateDirective, { static: true }) selectOptionTemplate: PoSelectOptionTemplateDirective;\n\n  @ViewChild('contentList', {read: ElementRef, static: true}) contentList: ElementRef;\n  @ViewChild('icon', {read: ElementRef, static: true}) iconElement: ElementRef;\n  @ViewChild('select', {read: ElementRef, static: true}) selectElement: ElementRef;\n  @ViewChild('selectButton', {read: ElementRef, static: true}) selectButtonElement: ElementRef;\n\n  constructor(\n    element: ElementRef,\n    changeDetector: ChangeDetectorRef,\n    differs: IterableDiffers,\n    public renderer: Renderer2,\n    private controlPosition: PoControlPositionService) {\n\n    super(element, changeDetector);\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  get isInvisibleSelectNative() {\n    return this.readonly && this.isMobile;\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown($event?: any) {\n\n    const charCode = $event.which || $event.keyCode;\n\n    // Tratamentos para quando o readonly for ativado.\n    if (this.readonly) {\n      // deve matar o evento do teclado devido a alterar o valor do model mesmo com os options fechados\n      if (charCode !== PoKeyCodeEnum.tab) {\n        this.disableDefaultEventAndToggleButton();\n        $event.preventDefault();\n      }\n      return;\n    }\n\n    // Seleciona os itens com as teclas \"up\" e \"down\"\n    if ((!this.open || $event.altKey) && (charCode === PoKeyCodeEnum.arrowDown || charCode === PoKeyCodeEnum.arrowUp)) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Abre o po-select com as teclas \"enter\" e \"espaÃ§o\"\n    if (charCode === PoKeyCodeEnum.enter || charCode === PoKeyCodeEnum.space) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Fecha o po-select com a tecla \"tab\"\n    if (this.open && charCode === PoKeyCodeEnum.tab) {\n      $event.preventDefault();\n      this.toggleButton();\n    }\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n      removeUndefinedAndNullOptions(this.options);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoSelectComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;\n   *\n   * focusSelect() {\n   *   this.select.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.selectElement.nativeElement.focus();\n    }\n  }\n\n  hideDropDown() {\n    this.selectIcon = 'po-icon-arrow-down';\n    this.selector('.po-select-container').classList.remove('po-select-show');\n    this.open = false;\n\n    this.changeDetector.markForCheck();\n    this.selectElement.nativeElement.focus();\n\n    this.removeListeners();\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) ||\n        (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  onOptionClick(option: PoSelectOption) {\n    this.updateModel(option);\n    this.toggleButton();\n  }\n\n  // Altera o valor ao selecionar um item.\n  onSelectChange(value: any) {\n    if (value && this.options && this.options.length) {\n      const optionFound: PoSelectOption = this.findOptionValue(value);\n\n      if (optionFound) {\n        this.updateModel(optionFound);\n        this.setScrollPosition(optionFound.value);\n      }\n    }\n  }\n\n  onUpdateOptions() {\n    if (this.modelValue) {\n      this.onSelectChange(this.modelValue);\n    }\n  }\n\n  scrollValue(index, clientHeight) {\n    const heightScrollValue: number = (index) * this.getSelectItemHeight();\n\n    return this.scrollPosition = heightScrollValue > clientHeight ? heightScrollValue :  0;\n  }\n\n  selector(query: string): Element {\n    return this.element.nativeElement.querySelector(query);\n  }\n\n  toggleButton(): void {\n    this.open ? this.hideDropDown() : this.showDropdown();\n  }\n\n  // Atualiza valores\n  updateModel(option: PoSelectOption): void {\n    if (this.selectedValue !== option.value) {\n      this.selectedValue = option.value;\n      this.selectElement.nativeElement.value = option.value;\n      this.callModelChange(option.value);\n      this.displayValue = option.label;\n      this.onChange(option.value);\n    }\n  }\n\n  // Esconde Content do Select quando for clicado fora\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (!this.selectButtonElement.nativeElement.contains(event.target) &&\n        !this.iconElement.nativeElement.contains(event.target)) {\n      this.hideDropDown();\n    }\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n    const optionFound: PoSelectOption = this.findOptionValue(value);\n\n    if (optionFound) {\n      this.selectElement.nativeElement.value = optionFound.value;\n      this.selectedValue = optionFound.value;\n      this.displayValue = (optionFound.label);\n      this.setScrollPosition(optionFound.value);\n\n    } else if (validValue(this.selectedValue)) {\n      this.selectElement.nativeElement.value = undefined;\n      this.callModelChange(undefined);\n      this.selectedValue = undefined;\n      this.displayValue = undefined;\n    }\n\n    this.modelValue = value;\n    this.changeDetector.detectChanges();\n  }\n\n  // MÃ©todo necessÃ¡rio para bloquear o evento default do select nativo.\n  // Ao utilizar event.preventDefault(), nos navegadores Firefox e IE o mesmo nÃ£o cancela o evento.\n  private disableDefaultEventAndToggleButton() {\n    this.selectElement.nativeElement.style.display = 'none';\n\n    setTimeout(() => {\n      this.selectElement.nativeElement.style.display = 'block';\n      this.toggleButton();\n    });\n  }\n\n  private findOptionValue(value: any) {\n    return this.options.find(option => this.isEqual(option.value, value));\n  }\n\n  private getSelectItemHeight() {\n    const selectItem = this.selector('div.po-select-item');\n\n    return selectItem && selectItem.clientHeight;\n  }\n\n  private initializeListeners() {\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropDown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    this.eventResizeListener();\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown() {\n\n    this.controlPosition.setElements(\n      this.contentList.nativeElement,\n      poSelectContentOffset,\n      this.selectButtonElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\n  }\n\n  private setScrollPosition(value: any) {\n    const ulDropdpwn = this.element.nativeElement.querySelector('ul.po-select-content');\n\n    if (value && this.options && this.options.length) {\n      const optionFound: PoSelectOption = this.findOptionValue(value);\n\n      if (optionFound) {\n        const index = this.options.indexOf(optionFound);\n        ulDropdpwn.scrollTop =  this.scrollValue(index, ulDropdpwn.clientHeight);\n      }\n    }\n  }\n\n  private showDropdown() {\n    if (!this.readonly) {\n      this.selectElement.nativeElement.focus();\n      this.selectIcon = 'po-icon-arrow-up';\n      this.selector('.po-select-container').classList.add('po-select-show');\n      this.open = true;\n      this.changeDetector.markForCheck();\n      this.setPositionDropdown();\n      this.initializeListeners();\n\n      if (this.options && this.options.length) {\n        this.setScrollPosition(this.selectedValue);\n      }\n    }\n  }\n\n}\n","/**\n * @usedBy PoSwitchComponent\n *\n * @description\n *\n * Enum para posicionar o label do valor do po-switch.\n */\nexport enum PoSwitchLabelPosition {\n  /** Posiciona o label do lado esquerdo do switch. */\n  Right,\n  /** Posiciona o label do lado direito do switch. */\n  Left\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n\n/**\n * @description\n *\n * O componente `po-switch` Ã© um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\n * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade especÃ­fica.\n *\n * Pode-se ligar ou deligar o botÃ£o utilizando a tecla de espaÃ§o ou o clique do mouse.\n *\n * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\n * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensÃ£o do usuÃ¡rio.\n *\n * > O componente nÃ£o altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.\n */\nexport class PoSwitchBaseComponent implements ControlValueAccessor {\n\n  private _disabled?: boolean = false;\n\n  propagateChange: any;\n  switchValue: boolean = false;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /** RÃ³tulo exibido pelo componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /**\n   * Texto exibido quando o valor do componente for `true`.\n   *\n   * @default `true`\n   */\n  labelOn?: string = 'true';\n  @Input('p-label-on') set setLabelOn(label: string) {\n    this.labelOn = label || 'true';\n  }\n\n  /**\n   * Texto exibido quando o valor do componente for `false`.\n   *\n   * @default `false`\n   */\n  labelOff?: string = 'false';\n  @Input('p-label-off') set setLabelOff(label: string) {\n    this.labelOff = label || 'false';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * PosiÃ§Ã£o de exibiÃ§Ã£o do rÃ³tulo.\n   *\n   * > Por padrÃ£o exibe Ã  direita.\n   */\n  labelPosition?: PoSwitchLabelPosition = PoSwitchLabelPosition.Right;\n  @Input('p-label-position') set setLabelPosition(position: PoSwitchLabelPosition) {\n    this.labelPosition = (position in PoSwitchLabelPosition) ? parseInt(<any>position, 10) : PoSwitchLabelPosition.Right;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue(value: any) {\n    if (this.switchValue !== value) {\n      this.switchValue = value;\n\n      if (this.propagateChange) {\n        this.propagateChange(value);\n      } else {\n        this.ngModelChange.emit(value);\n      }\n      this.change.emit(this.switchValue);\n    }\n  }\n\n  eventClick() {\n    if (!this.disabled) {\n      this.changeValue(!this.switchValue);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(value: any): void {\n    if (value !== this.switchValue) {\n      this.switchValue = !!value;\n    }\n  }\n\n}\n","import { AfterViewChecked, ChangeDetectorRef, Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoSwitchBaseComponent } from './po-switch-base.component';\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n\n/**\n * @docsExtends PoSwitchBaseComponent\n *\n * @example\n *\n * <example name=\"po-switch-basic\" title=\"Portinari Switch Basic\">\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.html\"> </file>\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-labs\" title=\"Portinari Switch Labs\">\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.html\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order\" title=\"Portinari Switch - Order Summary\">\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.html\"> </file>\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order-reactive-form\" title=\"Portinari Switch - Order Summary Reactive Form\">\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-switch',\n  templateUrl: './po-switch.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoSwitchComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoSwitchComponent extends PoSwitchBaseComponent implements AfterViewChecked {\n\n  @ViewChild('switchContainer', { static: true }) switchContainer: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoSwitchComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;\n   *\n   * focusSwitch() {\n   *   this.switch.focus();\n   * }\n   * ```\n   */\n  focus() {\n    if (!this.disabled) {\n      this.switchContainer.nativeElement.focus();\n    }\n  }\n\n  getLabelPosition() {\n    switch (this.labelPosition) {\n      case PoSwitchLabelPosition.Left: return 'left';\n      case PoSwitchLabelPosition.Right: return 'right';\n      default: return 'right';\n    }\n  }\n\n  getSwitchPosition() {\n    switch (this.labelPosition) {\n      case PoSwitchLabelPosition.Left: return 'right';\n      case PoSwitchLabelPosition.Right: return 'left';\n      default: return 'left';\n    }\n  }\n\n  onKeyDown(event) {\n    if (event.which === 32 || event.keyCode === 32)  {\n      event.preventDefault();\n      this.eventClick();\n    }\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../../utils/util';\nimport { maxlengpoailed, minlengpoailed, requiredFailed } from '../validators';\n\n/**\n * @description\n *\n * Este Ã© um componente de entrada de dados que possibilita o preechimento com mÃºltiplas linhas.\n * Ã recomendado para observaÃ§Ãµes, detalhamentos e outras situaÃ§Ãµes onde o usuÃ¡rio deva preencher com um texto.\n *\n * Importante:\n *\n * - A propriedade `name` Ã© obrigatÃ³ria para que o formulÃ¡rio e o `model` funcionem corretamente. Do contrÃ¡rio, ocorrerÃ¡ um erro de\n * _Angular_, onde serÃ¡ necessÃ¡rio informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\n *\n * ```\n * <po-textarea\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-textarea>\n * ```\n */\nexport abstract class PoTextareaBaseComponent implements ControlValueAccessor, Validator {\n\n  private _autofocus: boolean = false;\n  private _disabled: boolean = false;\n  private _maxlength: number;\n  private _minlength: number;\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _rows: number = 3;\n\n  private modelLastUpdate: any;\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Placeholder, mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(readonly: boolean) {\n    this._readonly = convertToBoolean(readonly);\n  }\n\n  get readonly(): boolean {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o _input_ estÃ¡ desabilitado `(p-disabled)`.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set autofocus(focus: boolean) {\n    this._autofocus = convertToBoolean(focus);\n  }\n\n  get autofocus(): boolean {\n    return this._autofocus;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('p-minlength') set minlength(minlength: number) {\n    this._minlength = convertToInt(minlength);\n    this.validateModel();\n  }\n\n  get minlength(): number {\n    return this._minlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('p-maxlength') set maxlength(maxlength: number) {\n    this._maxlength = convertToInt(maxlength);\n    this.validateModel();\n  }\n\n  get maxlength(): number {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade de linhas que serÃ£o exibidas.\n   *\n   * @default `3`\n   */\n  @Input('p-rows') set rows(value: number) {\n    this._rows = isNaN(parseInt(<any>value, 10)) || value < 3 ? 3 : parseInt(<any>value, 10);\n  }\n  get rows(): number {\n    return this._rows;\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') blur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('p-enter') enter?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter<any>();\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  // FunÃ§Ãµes `registerOnChange`, `registerOnTouched` e `registerOnValidatorChange` implementadas referentes ao ControlValueAccessor\n  // usadas para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(func: any): void {\n    this.validatorChange = func;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (minlengpoailed(this.minlength, abstractControl.value)) {\n      return { minlength: {\n        valid: false,\n      }};\n    }\n\n    if (maxlengpoailed(this.maxlength, abstractControl.value)) {\n      return { maxlength: {\n        valid: false,\n      }};\n    }\n\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  abstract writeValueModel(value: any): void;\n\n}\n","import { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoTextareaBaseComponent } from './po-textarea-base.component';\n\n/**\n * @docsExtends PoTextareaBaseComponent\n *\n * @example\n *\n * <example name=\"po-textarea-basic\" title=\"Portinari Textarea Basic\" >\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.html\"> </file>\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-labs\" title=\"Portinari Textarea Labs\" >\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.html\"> </file>\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-email\" title=\"Portinari Textarea - Email\" >\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.html\"> </file>\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-email-reactive-form\" title=\"Portinari Textarea - Email Reactive Form\" >\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-textarea',\n  templateUrl: './po-textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoTextareaComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoTextareaComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoTextareaComponent extends PoTextareaBaseComponent {\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  valueBeforeChange: any;\n  fireChange: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoTextareaComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoTextareaComponent, { static: true }) textarea: PoTextareaComponent;\n   *\n   * focusTextarea() {\n   *   this.textarea.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  writeValueModel(value: any): void {\n    if (this.inputEl) {\n      if (!value) {\n        // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      } else {\n        this.inputEl.nativeElement.value = value;\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return (maxlength && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnInput(event: any) {\n    const value = this.validMaxLength(this.maxlength, event.target.value);\n    this.callOnChange(value);\n    this.inputEl.nativeElement.value = value;\n  }\n\n  eventOnFocus() {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur() {\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    if (elementValue !== this.valueBeforeChange) {\n      this.change.emit(elementValue);\n    }\n  }\n\n}\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\n\r\nimport { PoI18nPipe } from '../../../../services/po-i18n/po-i18n.pipe';\r\nimport { PoNotificationService } from '../../../../services/po-notification/po-notification.service';\r\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\r\n\r\n@Directive({\r\n  selector: '[p-upload-drag-drop]',\r\n  providers: [ PoI18nPipe ]\r\n})\r\nexport class PoUploadDragDropDirective {\r\n\r\n  timeout: any;\r\n\r\n  private files: Array<File>;\r\n  private invalidFileType: number;\r\n\r\n  @Input('p-area-element') areaElement: HTMLElement;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Output('p-drag-leave') dragLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-drag-over') dragOver: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private i18nPipe: PoI18nPipe, private notification: PoNotificationService) { }\r\n\r\n  @HostListener('document:dragleave', ['$event']) onDragLeave(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.timeout = setTimeout(() => this.dragLeave.emit(), 30);\r\n  }\r\n\r\n  @HostListener('document:dragover', ['$event']) onDragOver(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    if (!this.disabled) {\r\n      this.dragOver.emit();\r\n    }\r\n  }\r\n\r\n  @HostListener('document:drop', ['$event']) onDrop(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.getFilesFromDataTransferItems(event);\r\n    this.dragLeave.emit();\r\n  }\r\n\r\n  private getFilesFromDataTransferItems(event: DragEvent) {\r\n    if (!this.disabled) {\r\n      this.invalidFileType = 0;\r\n      if (this.directoryCompatible) {\r\n        this.getOnlyDirectories(event.dataTransfer.items).then(() => {\r\n          this.sendFiles(event, this.files);\r\n        });\r\n      } else {\r\n        const files = this.getOnlyFiles(event.dataTransfer.files);\r\n        this.sendFiles(event, files);\r\n      }\r\n    }\r\n  }\r\n\r\n  // analisa as entradas recursivamente\r\n  private async getFilesFromEntry(entry) {\r\n    if (entry.isFile) {\r\n      const file = await this.readFile(entry);\r\n      return [file];\r\n    } else if (entry.isDirectory) {\r\n      return await this.readDirectory(entry);\r\n    }\r\n  }\r\n\r\n  private async getOnlyDirectories(dataTransferItems) {\r\n    const entries = [];\r\n\r\n    // lista todas as entradas antes de analisÃ¡-las\r\n    for (const item of dataTransferItems) {\r\n      entries.push(item.webkitGetAsEntry());\r\n    }\r\n\r\n    this.files = [];\r\n    for (const entry of entries) {\r\n      if (entry.isFile) {\r\n        this.invalidFileType++;\r\n      } else {\r\n        const newFiles = await this.getFilesFromEntry(entry);\r\n        this.files = this.files.concat(newFiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return only files. If it is a directory, invalidFileType counts.\r\n  private getOnlyFiles(fileList: FileList): Array<File> {\r\n    return Array.from(fileList).reduce((newFiles, file) => {\r\n      if (file.type) {\r\n        return newFiles.concat(file);\r\n      } else {\r\n        this.invalidFileType++;\r\n      }\r\n      return newFiles;\r\n    }, []);\r\n  }\r\n\r\n  private readFile(entry) {\r\n    return new Promise(resolve => {\r\n      entry.file(file => {\r\n        resolve(file);\r\n      });\r\n    });\r\n  }\r\n\r\n  private async readDirectory(entry) {\r\n    const dirReader = entry.createReader();\r\n    let files = [];\r\n    let newFiles;\r\n\r\n    newFiles = await this.readDirectoryEntries(dirReader);\r\n    files = files.concat(newFiles);\r\n    return files;\r\n  }\r\n\r\n  private readDirectoryEntries(dirReader) {\r\n    return new Promise(resolve => {\r\n      dirReader.readEntries(async entries => {\r\n        let files = [];\r\n        for (const entry of entries) {\r\n          const itemFiles = await this.getFilesFromEntry(entry);\r\n          files = files.concat(itemFiles);\r\n        }\r\n        resolve(files);\r\n      });\r\n    });\r\n  }\r\n\r\n  private sendFeedback(invalidFiles: number) {\r\n    if (invalidFiles) {\r\n      this.setPipeArguments('invalidFileType', invalidFiles);\r\n    }\r\n  }\r\n\r\n  private sendFiles(event, files) {\r\n    if (this.areaElement.contains(event.target)) {\r\n\r\n      if (files.length > 0) {\r\n        this.fileChange.emit(files);\r\n      }\r\n\r\n      this.sendFeedback(this.invalidFileType);\r\n    } else {\r\n      const invalidDropAreaArg = this.directoryCompatible ? this.literals.folders : this.literals.files;\r\n      this.setPipeArguments('invalidDropArea', invalidDropAreaArg);\r\n    }\r\n  }\r\n\r\n  // mÃ©todo responsÃ¡vel por setar os argumentos do i18nPipe.\r\n  private setPipeArguments(literalAttributes: string, args?) {\r\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], args);\r\n    this.notification.information(pipeArguments);\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2,\nViewChild } from '@angular/core';\n\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\n\n@Component({\n  selector: 'po-upload-drag-drop-area-overlay',\n  templateUrl: 'po-upload-drag-drop-area-overlay.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadDragDropAreaOverlayComponent implements AfterViewInit {\n\n  @ViewChild('DragDropAreaFixed', { read: ElementRef, static: true }) DragDropAreaFixed: ElementRef;\n\n  @Input('p-directory-compatible') directoryCompatible: boolean;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-literals') literals: PoUploadLiterals;\n\n  @Input('p-target') target: ElementRef;\n\n  @Output('p-area-element') areaElement: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    if (this.target) {\n      this.setPosition(this.target);\n    }\n    this.areaElement.emit(this.DragDropAreaFixed.nativeElement);\n  }\n\n  private setPosition(targetElement: ElementRef) {\n    const boundingClientRect = targetElement.nativeElement.getBoundingClientRect();\n    const clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];\n\n    clientRectKeys.forEach(clientRectKey => {\n      const clientRectValue = boundingClientRect[clientRectKey];\n\n      this.renderer.setStyle(this.DragDropAreaFixed.nativeElement, clientRectKey, `${clientRectValue}px`);\n    });\n  }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { browserLanguage, formatBytes, poLocaleDefault } from '../../../../utils/util';\n\nimport { poUploadLiteralsDefault } from '../po-upload-base.component';\n\n@Component({\n  selector: 'po-upload-file-restrictions',\n  templateUrl: './po-upload-file-restrictions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadFileRestrictionsComponent implements OnInit {\n\n  private _allowedExtensions: string;\n  private _maxFileSize: string;\n  private  _minFileSize: string;\n\n  literals: any;\n\n  @Input('p-allowed-extensions') set allowedExtensions(value) {\n    this._allowedExtensions = this.formatAllowedExtensions(<any>value);\n  }\n\n  get allowedExtensions(): string {\n    return this._allowedExtensions;\n  }\n\n  @Input('p-max-files') maxFiles: number;\n\n  @Input('p-max-file-size') set maxFileSize(value) {\n    this._maxFileSize = formatBytes(<any>value);\n  }\n\n  get maxFileSize(): string {\n    return this._maxFileSize;\n  }\n\n  @Input('p-min-file-size') set minFileSize(value) {\n    this._minFileSize = formatBytes(<any>value);\n  }\n\n  get minFileSize(): string {\n    return this._minFileSize;\n  }\n\n  get language(): string {\n    return browserLanguage();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.setLiterals();\n  }\n\n  private formatAllowedExtensions(allowedExtensions: Array<string>): string {\n    const conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y' };\n\n    return allowedExtensions ? allowedExtensions\n      .join(', ')\n      .toUpperCase()\n      .replace(/,(?=[^,]*$)/, ` ${conjunction[this.language]}`) : undefined;\n  }\n\n  private setLiterals() {\n    this.literals = {\n      ...poUploadLiteralsDefault[poLocaleDefault],\n      ...poUploadLiteralsDefault[this.language],\n    };\n\n    this.changeDetector.detectChanges();\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-url Ã© um input especÃ­fico para receber URL, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"po-url-basic\" title=\"Portinari Url Basic\">\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.html\"> </file>\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-url-labs\" title=\"Portinari Url Labs\">\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.html\"> </file>\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-url-shortener\" title=\"Portinari Url - Shortener\">\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.html\"> </file>\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-url',\n  templateUrl: '../po-input/po-input.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoUrlComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoUrlComponent),\n    multi: true\n  }]\n})\nexport class PoUrlComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\n\n  icon = 'po-icon-world';\n\n  maxlength: number = 254;\n\n  type = 'url';\n\n  pattern = '^((https|http):\\\\/\\\\/)?' + // protocol\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n  '(\\\\:\\\\d+)?(\\\\/[-A-Za-z\\\\d%_.~+]*)*' + // port and path\n  '(\\\\?[;&A-Za-z\\\\d%_.~+=-]*)?' + // query string\n  '(\\\\#[-A-Za-z\\\\d_]*)?$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    setTimeout(() => {\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { PoButtonGroupModule } from '../po-button-group/index';\nimport { PoButtonModule } from '../po-button/index';\nimport { PoCheckboxGroupModule } from './po-checkbox-group/po-checkbox-group.module';\nimport { PoContainerModule } from '../po-container/index';\nimport { PoDisclaimerModule } from './../po-disclaimer/po-disclaimer.module';\nimport { PoFieldContainerModule } from './po-field-container/po-field-container.module';\nimport { PoLoadingModule } from '../po-loading/index';\nimport { PoModalModule } from '../po-modal/po-modal.module';\nimport { PoProgressModule } from './../po-progress/po-progress.module';\nimport { PoServicesModule } from '../../services/services.module';\nimport { PoTableModule } from '../po-table/po-table.module';\nimport { PoTooltipModule } from './../../directives/po-tooltip/po-tooltip.module';\n\nimport { PoCalendarComponent } from './po-datepicker/po-calendar/po-calendar.component';\nimport { PoCleanComponent } from './po-clean/po-clean.component';\nimport { PoComboComponent } from './po-combo/po-combo.component';\nimport { PoComboOptionTemplateDirective } from './po-combo/po-combo-option-template/po-combo-option-template.directive';\nimport { PoDatepickerComponent } from './po-datepicker/po-datepicker.component';\nimport { PoDatepickerRangeComponent } from './po-datepicker-range/po-datepicker-range.component';\nimport { PoDecimalComponent } from './po-decimal/po-decimal.component';\nimport { PoEmailComponent } from './po-email/po-email.component';\nimport { PoLoginComponent } from './po-login/po-login.component';\nimport { PoLookupComponent } from './po-lookup/po-lookup.component';\nimport { PoLookupModalComponent } from './po-lookup/po-lookup-modal/po-lookup-modal.component';\nimport { PoMultiselectDropdownComponent } from './po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component';\nimport { PoMultiselectComponent } from './po-multiselect/po-multiselect.component';\nimport { PoMultiselectItemComponent } from './po-multiselect/po-multiselect-item/po-multiselect-item.component';\nimport { PoMultiselectSearchComponent } from './po-multiselect/po-multiselect-search/po-multiselect-search.component';\nimport { PoRichTextBodyComponent } from './po-rich-text/po-rich-text-body/po-rich-text-body.component';\nimport { PoRichTextComponent } from './po-rich-text/po-rich-text.component';\nimport { PoRichTextModalComponent } from './po-rich-text/po-rich-text-modal/po-rich-text-modal.component';\nimport { PoRichTextToolbarComponent } from './po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component';\nimport { PoInputComponent } from './po-input/po-input.component';\nimport { PoNumberComponent } from './po-number/po-number.component';\nimport { PoPasswordComponent } from './po-password/po-password.component';\nimport { PoRadioGroupComponent } from './po-radio-group/po-radio-group.component';\nimport { PoSelectComponent } from './po-select/po-select.component';\nimport { PoSelectOptionTemplateDirective } from './po-select/po-select-option-template/po-select-option-template.directive';\nimport { PoSwitchComponent } from './po-switch/po-switch.component';\nimport { PoTextareaComponent } from './po-textarea/po-textarea.component';\nimport { PoUploadComponent } from './po-upload/po-upload.component';\nimport { PoUploadDragDropComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.component';\nimport { PoUploadDragDropDirective } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.directive';\nimport {\n  PoUploadDragDropAreaOverlayComponent\n} from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component';\nimport { PoUploadDragDropAreaComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component';\nimport { PoUploadFileRestrictionsComponent } from './po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component';\nimport { PoUrlComponent } from './po-url/po-url.component';\n\n/**\n * @description\n *\n * MÃ³dulo dos componentes po-combo, po-checkbox-group, po-datepicker, po-datepicker-range, po-email, po-input, po-lookup,\n * po-number, po-multiselect, po-password, po-radio-group, po-select, po-switch, po-textarea, po-upload e po-url.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    PoButtonGroupModule,\n    PoButtonModule,\n    PoCheckboxGroupModule,\n    PoContainerModule,\n    PoDisclaimerModule,\n    PoFieldContainerModule,\n    PoLoadingModule,\n    PoModalModule,\n    PoProgressModule,\n    PoServicesModule,\n    PoTableModule,\n    PoTooltipModule\n  ],\n  exports: [\n    PoCheckboxGroupModule,\n    PoCleanComponent,\n    PoComboComponent,\n    PoComboOptionTemplateDirective,\n    PoDecimalComponent,\n    PoDatepickerComponent,\n    PoDatepickerRangeComponent,\n    PoEmailComponent,\n    PoInputComponent,\n    PoLoginComponent,\n    PoLookupComponent,\n    PoLookupModalComponent,\n    PoMultiselectComponent,\n    PoNumberComponent,\n    PoPasswordComponent,\n    PoRadioGroupComponent,\n    PoRichTextComponent,\n    PoSelectComponent,\n    PoSelectOptionTemplateDirective,\n    PoSwitchComponent,\n    PoTextareaComponent,\n    PoUploadComponent,\n    PoUrlComponent\n  ],\n  declarations: [\n    PoCalendarComponent,\n    PoCleanComponent,\n    PoComboComponent,\n    PoComboOptionTemplateDirective,\n    PoDecimalComponent,\n    PoDatepickerComponent,\n    PoDatepickerRangeComponent,\n    PoEmailComponent,\n    PoInputComponent,\n    PoLoginComponent,\n    PoLookupComponent,\n    PoLookupModalComponent,\n    PoMultiselectComponent,\n    PoMultiselectDropdownComponent,\n    PoMultiselectItemComponent,\n    PoMultiselectSearchComponent,\n    PoNumberComponent,\n    PoPasswordComponent,\n    PoRadioGroupComponent,\n    PoRichTextBodyComponent,\n    PoRichTextComponent,\n    PoRichTextModalComponent,\n    PoRichTextToolbarComponent,\n    PoSelectComponent,\n    PoSelectOptionTemplateDirective,\n    PoSwitchComponent,\n    PoTextareaComponent,\n    PoUploadComponent,\n    PoUploadDragDropComponent,\n    PoUploadDragDropDirective,\n    PoUploadDragDropAreaOverlayComponent,\n    PoUploadDragDropAreaComponent,\n    PoUploadFileRestrictionsComponent,\n    PoUrlComponent\n  ],\n  providers: [],\n  entryComponents: [\n    PoCalendarComponent,\n    PoLookupModalComponent,\n    PoRichTextModalComponent\n  ]\n})\nexport class PoFieldModule { }\n","/**\n * @usedBy PoInfoComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `po-info`.\n */\nexport enum PoInfoOrientation {\n\n  /** O valor serÃ¡ exibido na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe o valor na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n\n}\n","import { Input } from '@angular/core';\n\nimport { PoInfoOrientation } from './po-info-orietation.enum';\n\nconst poInfoOrientationDefault = PoInfoOrientation.Vertical;\n\nexport class PoInfoBaseComponent {\n\n  private _labelSize: number;\n  private _orientation: PoInfoOrientation = poInfoOrientationDefault;\n\n  public readonly poInfoOrientation = PoInfoOrientation;\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('p-label') label: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade de [colunas](/guides/grid-system) usadas para a exibiÃ§Ã£o da `p-label` quando o componente for\n   * utilizado na orientaÃ§Ã£o horizontal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `[1 .. 11]`\n   *\n   * > A propriedade `p-value` recebe o nÃºmero de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.\n   */\n  @Input('p-label-size') set labelSize(value: number) {\n    if (isNaN(parseInt(<any>value, 10))) {\n      this._labelSize = undefined;\n    } else {\n      value = parseInt(<any>value, 10);\n\n      this._labelSize = (value < 1 || value > 11) ? undefined : value;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o layout de exibiÃ§Ã£o.\n   *\n   * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informaÃ§Ãµes exibidas.\n   *\n   * @default `vertical`\n   */\n  @Input('p-orientation') set orientation(value: PoInfoOrientation) {\n    this._orientation = (<any>Object).values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;\n  }\n  get orientation(): PoInfoOrientation {\n    return this._orientation;\n  }\n\n  /** Valor do conteÃºdo a ser exibido. */\n  @Input('p-value') value?: string;\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoInfoBaseComponent } from './po-info-base.component';\n\n/**\n * @docsExtends PoInfoBaseComponent\n *\n * @description\n *\n * Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e\n * valor na parte inferior. Facilita a exibiÃ§Ã£o de dados pois vem com layout padrÃ£o Portinari.\n *\n * @example\n *\n * <example name=\"po-info-basic\" title=\"Portinari Info Basic\">\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.html\"> </file>\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-info-labs\" title=\"Portinari Info Labs\">\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.html\"> </file>\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-info',\n  templateUrl: './po-info.component.html'\n})\nexport class PoInfoComponent extends PoInfoBaseComponent { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoInfoComponent } from './po-info.component';\n/**\n * @description\n *\n * MÃ³dulo do componente po-info.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoInfoComponent\n  ],\n  exports: [PoInfoComponent],\n  providers: [],\n  schemas: []\n})\nexport class PoInfoModule { }\n","/**\n * @usedBy PoTagComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagOrientation {\n\n  /** A tag serÃ¡ exibida na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe a tag na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n}\n","/**\n * @usedBy PoTagComponent\n *\n * @description\n *\n * Define os tipos disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagType {\n\n  /** Erro, perigo, problema ou aviso crÃ­tico. */\n  Danger = 'danger',\n\n  /** Informativo ou explicativo. */\n  Info = 'info',\n\n  /** ConfirmaÃ§Ã£o, resultados positivos ou Ãªxito */\n  Success = 'success',\n\n  /** Aviso ou advertÃªncia. */\n  Warning = 'warning'\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\n\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\nimport { PoTagOrientation } from './enums/po-tag-orientation.enum';\nimport { PoTagType } from './enums/po-tag-type.enum';\n\nconst poTagColors = (<any>Object).values(PoColorPaletteEnum);\nconst poTagOrientationDefault = PoTagOrientation.Vertical;\n\n/**\n * @description\n *\n * Este componente permite exibir um valor em forma de um marcador colorido, sendo possÃ­vel definir uma legenda e realizar customizaÃ§Ãµes\n * na cor, iconografia e tipo.\n *\n * AlÃ©m disso, Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada tanto ao *click* quanto atravÃ©s das teclas *enter/space* enquanto navega\n * utilizando a tecla *tab*.\n *\n * Seu uso Ã© recomendado para informaÃ§Ãµes que necessitem de destaque em forma de marcaÃ§Ã£o.\n */\nexport class PoTagBaseComponent {\n\n  private _color?: string;\n  private _icon?: boolean | string;\n  private _inverse?: boolean;\n  private _orientation?: PoTagOrientation = poTagOrientationDefault;\n  private _type?: PoTagType;\n\n  public readonly poTagOrientation = PoTagOrientation;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma cor para a *tag*.\n   *\n   * Valores vÃ¡lidos:\n   *  - <span class=\"dot po-color-01\"></span> `color-01`\n   *  - <span class=\"dot po-color-02\"></span> `color-02`\n   *  - <span class=\"dot po-color-03\"></span> `color-03`\n   *  - <span class=\"dot po-color-04\"></span> `color-04`\n   *  - <span class=\"dot po-color-05\"></span> `color-05`\n   *  - <span class=\"dot po-color-06\"></span> `color-06`\n   *  - <span class=\"dot po-color-07\"></span> `color-07`\n   *  - <span class=\"dot po-color-08\"></span> `color-08`\n   *  - <span class=\"dot po-color-09\"></span> `color-09`\n   *  - <span class=\"dot po-color-10\"></span> `color-10`\n   *  - <span class=\"dot po-color-11\"></span> `color-11`\n   *  - <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * > **AtenÃ§Ã£o:** A propriedade `p-type` sobrepÃµe esta definiÃ§Ã£o.\n   */\n  @Input('p-color') set color(value: string) {\n    this._color = poTagColors.includes(value) ? value : undefined;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define ou ativa um Ã­cone que serÃ¡ exibido ao lado do valor da *tag*.\n   *\n   * > Veja os valores vÃ¡lidos na [biblioteca de Ã­cones](guides/icons).\n   *\n   * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o Ã­cone seja exibido conforme descriÃ§Ãµes abaixo:\n   * - <span class=\"po-icon po-icon-ok\"></span> - `success`\n   * - <span class=\"po-icon po-icon-warning\"></span> - `warning`\n   * - <span class=\"po-icon po-icon-close\"></span> - `danger`\n   * - <span class=\"po-icon po-icon-info\"></span> - `info`\n   *\n   * @default `false`\n   */\n  @Input('p-icon') set icon(value: boolean | string) {\n    if (this.type) {\n      this._icon = convertToBoolean(value);\n\n    } else {\n      this._icon = value;\n\n    }\n  }\n\n  get icon(): boolean | string {\n    return this._icon;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a inversÃ£o de cores configuradas no componente, possibilitando uma visualizaÃ§Ã£o de status ativo e inativo.\n   *\n   * > A cor do texto, do Ã­cone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,\n   * e a cor do fundo fica branca.\n   *\n   * @default `false`\n   */\n  @Input('p-inverse') set inverse(value: boolean) {\n    this._inverse = convertToBoolean(value);\n  }\n\n  get inverse(): boolean {\n    return this._inverse;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma legenda que serÃ¡ exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o *layout* de exibiÃ§Ã£o.\n   *\n   * @default `vertical`\n   */\n  @Input('p-orientation') set orientation(value: PoTagOrientation) {\n    this._orientation = (<any>Object).values(PoTagOrientation).includes(value) ? value : poTagOrientationDefault;\n  }\n\n  get orientation(): PoTagOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo da *tag*.\n   *\n   * Valores vÃ¡lidos:\n   *  - `success`: cor verde utilizada para simbolizar sucesso ou Ãªxito.\n   *  - `warning`: cor amarela que representa aviso ou advertÃªncia.\n   *  - `danger`: cor vermelha para erro ou aviso crÃ­tico.\n   *  - `info`: cor cinza escuro que caracteriza conteÃºdo informativo.\n   *\n   * > Quando esta propriedade for definida, irÃ¡ sobrepor a definiÃ§Ã£o de `p-color` e `p-icon` somente serÃ¡ exibido caso seja `true`.\n   *\n   * @default `info`\n   */\n  @Input('p-type') set type(value: PoTagType) {\n    this._type = (<any>Object).values(PoTagType).includes(value) ? value : undefined;\n  }\n\n  get type(): PoTagType {\n    return this._type;\n  }\n\n  /** Texto da tag. */\n  @Input('p-value') value: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ executada ao clicar sobre o `po-tag` e que receberÃ¡ como parÃ¢metro um objeto contendo o seu valor e tipo.\n   */\n  @Output('p-click') click?: EventEmitter<any> = new EventEmitter<PoTagItem>();\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Define os Ã­cones disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagIcon {\n\n  /** Ãcone fechar. */\n  Danger = 'po-icon-close',\n\n  /** Ãcone de informaÃ§Ã£o. */\n  Info = 'po-icon-info',\n\n  /** Ãcone que representa confirmaÃ§Ã£o. */\n  Success = 'po-icon-ok',\n\n  /** Ãcone com ponto de exclamaÃ§Ã£o. */\n  Warning = 'po-icon-warning'\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { PoKeyCodeEnum } from '../../enums/po-key-code.enum';\n\nimport { PoTagBaseComponent } from './po-tag-base.component';\nimport { PoTagIcon } from './enums/po-tag-icon.enum';\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\nimport { PoTagType } from './enums/po-tag-type.enum';\n\nconst poTagTypeDefault = 'po-tag-' + PoTagType.Info;\n\n/**\n * @docsExtends PoTagBaseComponent\n *\n * @example\n *\n * <example name=\"po-tag-basic\" title=\"Portinari Tag Basic\">\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.html\"> </file>\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tag-labs\" title=\"Portinari Tag Labs\">\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.html\"> </file>\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tag-bank-account\" title=\"Portinari Tag - Bank Account\">\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.html\"> </file>\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tag',\n  templateUrl: './po-tag.component.html'\n})\nexport class PoTagComponent extends PoTagBaseComponent implements OnInit {\n\n  isClickable: boolean;\n\n  ngOnInit() {\n    this.isClickable = this.click.observers.length > 0;\n  }\n\n  get iconFromType() {\n    switch (this.type) {\n      case PoTagType.Danger: return PoTagIcon.Danger;\n\n      case PoTagType.Info: return PoTagIcon.Info;\n\n      case PoTagType.Success: return PoTagIcon.Success;\n\n      case PoTagType.Warning: return PoTagIcon.Warning;\n    }\n  }\n\n  get iconTypeString() {\n    return typeof this.icon === 'string';\n  }\n\n  get tagColor() {\n    if (this.type) {\n      return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;\n    }\n\n    if (this.color && !this.type) {\n      return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;\n    }\n\n    if (!this.type && !this.color) {\n      return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;\n    }\n  }\n\n  get tagOrientation() {\n    return this.orientation === this.poTagOrientation.Horizontal;\n  }\n\n  onClick() {\n    const submittedTagItem: PoTagItem = { value: this.value, type: this.type };\n    this.click.emit(submittedTagItem);\n  }\n\n  onKeyPressed(event: any, keyCode: string) {\n    const isValidKey = event.keyCode === PoKeyCodeEnum[keyCode];\n\n    if (isValidKey) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onClick();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTagComponent } from './po-tag.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-tag`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoTagComponent\n  ],\n  exports: [\n    PoTagComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoTagModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\n\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\n\n/**\n *\n * @description\n *\n * Componente para criaÃ§Ã£o de formulÃ¡rios dinÃ¢micos a partir de uma lista de objetos.\n *\n * TambÃ©m Ã© possÃ­vel verificar se o formulÃ¡rio estÃ¡ vÃ¡lido e informar valores para a exibiÃ§Ã£o de informaÃ§Ãµes.\n *\n * > Temos uma ferramenta para criaÃ§Ã£o de formulÃ¡rios, onde Ã© possÃ­vel inicializÃ¡-lo atravÃ©s de um JSON.\n * [**Veja aqui**](tools/dynamic-form).\n */\nexport class PoDynamicFormBaseComponent {\n\n  private _groupForm?: boolean = false;\n\n  /**\n   * @description\n   *\n   * ColeÃ§Ã£o de objetos que implementam a interface `PoDynamicFormField`, para definiÃ§Ã£o dos campos que serÃ£o criados\n   * dinamicamente.\n   *\n   * > Ex: `[ { property: 'name' } ]`\n   *\n   * Regras de tipagem e criaÃ§Ã£o dos componentes:\n   *\n   * - Caso o *type* informado seja *boolean* o componente criado serÃ¡ o `po-switch`.\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-decimal`,\n   * caso seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-input`.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-decimal`, caso seja\n   * informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-input`.\n   * - Caso a lista possua a propriedade `options` e a mesma possua atÃ© 3 itens o componente criado serÃ¡ o `po-radio-group`\n   * ou `po-checkbox-group` se informar a propriedade `optionsMulti`.\n   * - Caso a mesma possua 3 ou mais itens, serÃ¡ criado o componente `po-select` ou, `po-multiselect` se a propriedade `optionsMulti`\n   * for verdadeira.\n   * - Caso o *type* informado seja *date* ou *datetime* o componente criado serÃ¡ o `po-datepicker`.\n   * - Caso seja informado a propriedade `optionsService` o componente criado serÃ¡ o `po-combo`.\n   * - Caso o *type* informado seja *time* o componente criado serÃ¡ um `po-input` podendo receber um *mask* para formatar\n   * o valor exibido, caso nÃ£o seja informado um *mask* o componente serÃ¡ criado com a mÃ¡scara '99:99' por padrÃ£o.\n   * - Caso a lista possua a propriedade `rows` e esta seja definida com valor maior ou igual a 3 o componente criado serÃ¡\n   * o `po-textarea`, caso o valor da propriedade `rows` seja menor que 3 o componente criado serÃ¡ o `po-input`.\n   * - Caso seja informada a propriedade `secret` o componente criado serÃ¡ o `po-password`.\n   * - Caso o *type* informado seja *string* o componente criado serÃ¡ o `po-input`.\n   *\n   * @default `[]`\n   */\n  @Input('p-fields') fields: Array<PoDynamicFormField>;\n\n  /**\n   * Objeto que serÃ¡ utilizado como valor para exibir as informaÃ§Ãµes, serÃ¡ recuperado e preenchido atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `p-fields`.\n   *\n   * Pode iniciar com valor ou apenas com um objeto vazio que serÃ¡ preenchido conforme descrito acima.\n   *\n   * > Ex: `{ name: 'po' }`\n   */\n  @Input('p-value') value: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Na inicializaÃ§Ã£o do componente serÃ¡ repassado o objeto de formulÃ¡rio utilizado no componente,\n   * podendo ser utilizado para validaÃ§Ãµes e/ou detecÃ§Ã£o de mudanÃ§a dos valores.\n   *\n   * Portanto existem duas maneiras de recuperar o formulÃ¡rio,\n   * atravÃ©s de *template reference* e atravÃ©s do *output*, veja os exemplos abaixo:\n   *\n   * > *template reference*\n   *\n   * ```html\n   *  <po-dynamic-form #dynamicForm>\n   *  </po-dynamic-form>\n   *\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.form.invalid\">\n   *  </po-button>\n   *\n   * ```\n   *\n   * > *Output*\n   *\n   * ```html\n   *  ...\n   *  <po-dynamic-form (p-form)=\"getForm($event)\">\n   *  </po-dynamic-form>\n   *\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.invalid\">\n   *  </po-button>\n   *  ...\n   *\n   * ```\n   *\n   * ```ts\n   *  ...\n   *\n   *  export class AppComponent {\n   *\n   *    dynamicForm: NgForm;\n   *\n   *    getForm(form: NgForm) {\n   *      this.dynamicForm = form;\n   *    }\n   *\n   *  }\n   * ```\n   *\n   * > Caso a propriedade `p-group-form` for verdadeira nÃ£o serÃ¡ repassado o formulÃ¡rio, pois o mesmo utilizarÃ¡\n   * o formulÃ¡rio pai.\n   */\n  @Output('p-form') formOutput: EventEmitter<NgForm> = new EventEmitter<NgForm>();\n\n  /**\n   * @optional\n   *\n   * @description\n   * Ao informar esta propriedade, o componente passarÃ¡ a utilizar o formulÃ¡rio pai para criar os `FormControl`\n   * e com isso Ã© possÃ­vel recuperar o valor do formulÃ¡rio e suas validaÃ§Ãµes a partir do formulÃ¡rio pai.\n   *\n   * ```html\n   * <form #parentForm=\"ngForm\">\n   *\n   *   <po-dynamic-form p-group-form [p-fields]=\"fields\"></po-dynamic-form>\n   *\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"parentForm.invalid\"></po-button>\n   * </form>\n   * ```\n   */\n  @Input('p-group-form') set groupForm(value: boolean) {\n    this._groupForm = <any> value === '' ? true : convertToBoolean(value);\n  }\n\n  get groupForm(): boolean {\n    return this._groupForm;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';\n\n/**\n * @docsExtends PoDynamicFormBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-form-basic\" title=\"Portinari Dynamic Form Basic\">\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-form-register\" title=\"Portinari Dynamic Form - Register\">\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-dynamic-form',\n  templateUrl: './po-dynamic-form.component.html'\n})\nexport class PoDynamicFormComponent extends PoDynamicFormBaseComponent {\n\n  private _form: NgForm;\n\n  @ViewChild('dynamicForm', { static: false }) set form(value: NgForm) {\n    // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError\n    setTimeout(() => {\n      this._form = value;\n\n      this.emitForm();\n    });\n  }\n\n  get form() {\n    return this._form || <any> {};\n  }\n\n  private emitForm() {\n    if (!this.groupForm && this.formOutput.observers.length) {\n      this.formOutput.emit(this.form);\n    }\n  }\n\n}\n","import { PoDynamicViewField } from './po-dynamic-view/po-dynamic-view-field.interface';\n\nexport function getGridColumnsClasses(smColumns, mdColumns, lgColumns, xlColumns, gridColumns) {\n  const systemGrid = {\n    sm: smColumns || gridColumns || 12,\n    md: mdColumns || gridColumns || 6,\n    lg: lgColumns || gridColumns || 4,\n    xl: xlColumns || gridColumns || 3\n  };\n\n  return `po-sm-${systemGrid.sm} po-md-${systemGrid.md} po-lg-${systemGrid.lg} po-xl-${systemGrid.xl}`;\n}\n\nexport function isVisibleField(field: PoDynamicViewField): boolean {\n  const containsVisible = 'visible' in field;\n\n  return containsVisible ? field.visible : true;\n}\n","/**\n * @usedBy PoDynamicFormComponent\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de campo que serÃ¡ criado dinamicamente.\n */\nexport enum PoDynamicFieldType {\n\n  /** Valor booleano. */\n  Boolean = 'boolean',\n\n  /** Valor numÃ©rico que contÃ©m casas decimais e milhar. */\n  Currency = 'currency',\n\n  /** Valor para data. */\n  Date = 'date',\n\n  /** Valor para data e hora. */\n  DateTime = 'datetime',\n\n  /** Utilizado para informar/exibir hora. */\n  Time = 'time',\n\n  /** Valor nÃºmerico. */\n  Number = 'number',\n\n  /** Texto. */\n  String = 'string'\n\n}\n","import { Input } from '@angular/core';\nimport { TitleCasePipe } from '@angular/common';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { getGridColumnsClasses, isVisibleField } from '../../po-dynamic.util';\nimport { PoDynamicFieldType } from '../../po-dynamic-field-type.enum';\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\nimport { PoDynamicFormFieldInternal } from './po-dynamic-form-field-internal.interface';\n\nexport class PoDynamicFormFieldsBaseComponent {\n\n  private _fields: Array<PoDynamicFormField>;\n  private _value?: any = {};\n\n  visibleFields: Array<PoDynamicFormFieldInternal> = [];\n\n  // array de objetos que implementam a interface PoDynamicFormField, que serÃ£o exibidos no componente.\n  @Input('p-fields') set fields(value: Array<PoDynamicFormField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  // valor que serÃ¡ utilizado para iniciar valor no componente.\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(private titleCasePipe: TitleCasePipe) {}\n\n  compareTo(value, compareTo) {\n    return value === compareTo;\n  }\n\n  // retorna um array com os objetos configurados e visiveis.\n  protected getVisibleFields() {\n    const visibleFields = [];\n\n    this.fields.forEach(field => {\n      if (this.existsProperty(visibleFields, field.property)) {\n        this.printError(`\"po-dynamic-form\" property \"${field.property}\" estÃ¡ duplicado. Interface: PoDynamicFormField.`);\n        return;\n      }\n\n      if (!field['property']) {\n        this.printError('\"po-dynamic-form\" Ã obrigatÃ³rio ser especificado um property.');\n        return;\n      }\n\n      if (isVisibleField(field)) {\n        visibleFields.push(this.createField(field));\n      }\n    });\n\n    return visibleFields;\n  }\n\n  // converte um array em string para um array de objetos que contem label e value.\n  private convertOptions(options: Array<any>): Array<{ label: string, value: string }> {\n    const everyOptionString = options.every(option => typeof option === 'string');\n\n    if (everyOptionString) {\n      return options.map(value => ({label: value, value}));\n    }\n\n    return options;\n  }\n\n  // cria um novo objeto com as classes de grid system, com control (tipo do componente) e label default.\n  private createField(field: PoDynamicFormField): PoDynamicFormFieldInternal {\n    const control = this.getComponentControl(field);\n    const options = !!field.options ? this.convertOptions(field.options) : undefined;\n\n    const componentClass = getGridColumnsClasses(field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns);\n\n    return {\n      label: this.titleCasePipe.transform(field.property),\n      ...field,\n      componentClass,\n      control,\n      options\n    };\n  }\n\n  private existsProperty(fields: Array<PoDynamicFormField>, property: string) {\n    return fields.some(field => {\n      return field.property === property;\n    });\n  }\n\n  // recupera o componente de acordo com algumas regras do field.\n  private getComponentControl(field: PoDynamicFormField = <any> {}) {\n    const type = field && field.type ? field.type.toLocaleLowerCase() : 'string';\n\n    if (this.isNumberType(field, type)) {\n      return 'number';\n    } else if (this.isCurrencyType(field, type)) {\n      return 'decimal';\n    } else if (this.isSelect(field)) {\n      return 'select';\n    } else if (this.isRadioGroup(field)) {\n      return 'radioGroup';\n    } else if (this.isCheckboxGroup(field)) {\n      return 'checkboxGroup';\n    } else if (this.isMultiselect(field)) {\n      return 'multiselect';\n    } else if (this.compareTo(type, PoDynamicFieldType.Boolean)) {\n      return 'switch';\n    } else if (this.compareTo(type, PoDynamicFieldType.Date) || this.compareTo(type, PoDynamicFieldType.DateTime)) {\n      return 'datepicker';\n    } else if (this.compareTo(type, PoDynamicFieldType.Time)) {\n      field.mask = field.mask || '99:99';\n\n      return 'input';\n    } else if (this.isCombo(field)) {\n      return 'combo';\n    } else if (this.isLookup(field)) {\n      return 'lookup';\n    } else if (this.isTextarea(field)) {\n      return 'textarea';\n    } else if (this.isPassword(field)) {\n      return 'password';\n    }\n\n    return 'input';\n  }\n\n  private isCheckboxGroup(field: PoDynamicFormField) {\n    const { optionsService, optionsMulti, options } = field;\n\n    return !optionsService && optionsMulti && !!options && options.length <= 3;\n  }\n\n  private isCombo(field: PoDynamicFormField) {\n    const { optionsService } = field;\n\n    return !!optionsService && isTypeof(optionsService, 'string');\n  }\n\n  private isCurrencyType(field: PoDynamicFormField, type: string) {\n    const { mask, pattern } = field;\n\n    return this.compareTo(type, PoDynamicFieldType.Currency) && (!mask && !pattern);\n  }\n\n  private isLookup(field: PoDynamicFormField) {\n    const { searchService } = field;\n\n    return !!searchService && isTypeof(searchService, 'string');\n  }\n\n  private isMultiselect(field: PoDynamicFormField) {\n    const { optionsService, optionsMulti, options } = field;\n\n    return !optionsService && optionsMulti && !!options && options.length > 3;\n  }\n\n  private isNumberType(field: PoDynamicFormField, type: string) {\n    const { mask, pattern } = field;\n\n    return this.compareTo(type, PoDynamicFieldType.Number) && (!mask && !pattern);\n  }\n\n  private isPassword(field: PoDynamicFormField) {\n    const { secret } = field;\n\n    return secret;\n  }\n\n  private isRadioGroup(field: PoDynamicFormField) {\n    const { optionsMulti, options } = field;\n\n    return !optionsMulti && !!options && options.length <= 3;\n  }\n\n  private isSelect(field: PoDynamicFormField) {\n    const { optionsMulti, options } = field;\n\n    return !optionsMulti && !!options && options.length > 3;\n  }\n\n  private isTextarea(field: PoDynamicFormField) {\n    const { rows } = field;\n\n    return rows && rows >= 3;\n  }\n\n  private printError(error: string) {\n    console.error(error);\n  }\n\n}\n","import { Component, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { PoDynamicFormFieldsBaseComponent } from './po-dynamic-form-fields-base.component';\nimport { TitleCasePipe } from '@angular/common';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de criaÃ§Ã£o dos campos dinÃ¢micos.\n */\n@Component({\n  selector: 'po-dynamic-form-fields',\n  templateUrl: 'po-dynamic-form-fields.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class PoDynamicFormFieldsComponent extends PoDynamicFormFieldsBaseComponent implements OnChanges {\n\n  constructor(titleCasePipe: TitleCasePipe) {\n    super(titleCasePipe);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n}\n","import { Input } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\n\nimport { getGridColumnsClasses, isVisibleField } from '../po-dynamic.util';\nimport { PoDynamicViewField } from './po-dynamic-view-field.interface';\n\n/**\n *\n * @description\n *\n * Componente para listar dados dinamicamente a partir de uma lista de objetos.\n *\n * > Por padrÃ£o esse componente cria `po-info` para exibiÃ§Ã£o, Ã© possÃ­vel criar `po-tag` passando a propriedade { tag: true }.\n *\n */\nexport class PoDynamicViewBaseComponent {\n\n  private _fields: Array<PoDynamicViewField> = [];\n  private _showAllValue: boolean = false;\n  private _value = {};\n\n  visibleFields = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de objetos que implementam a interface `PoDynamicView`.\n   *\n   * > Ex: `[ { property: 'age' } ]`\n   *\n   * Regras de tipagem e formataÃ§Ã£o dos valores exibidos:\n   *\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado o *format* o mesmo recebe \"'BRL', 'symbol', '1.2-2'\"\n   * como formato padrÃ£o.\n   * - Caso o *type* informado seja *date* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy' como formato padrÃ£o.\n   * - Caso o *type* informado seja *dateTime* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy HH:mm:ss' como formato padrÃ£o.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado o *format* o mesmo nÃ£o serÃ¡ formatado.\n   * - Caso o *type* informado seja *time* e nÃ£o seja informado o *format* o mesmo recebe 'HH:mm:ss.ffffff' como formato padrÃ£o.\n   *\n   * > As propriedades informadas serÃ£o exibidas mesmo nÃ£o contendo valor de referÃªncia no objeto da propriedade `p-value`.\n   *\n   * @default `[]`\n   */\n  @Input('p-fields') set fields(fields: Array<PoDynamicViewField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se exibirÃ¡ todas as informaÃ§Ãµes contidas dentro do objeto informado na propriedade `p-value`.\n   *\n   * @default `false`\n   */\n  @Input('p-show-all-value') set showAllValue(value: boolean) {\n    this._showAllValue = convertToBoolean(value);\n  }\n\n  get showAllValue() {\n    return this._showAllValue;\n  }\n\n  /**\n   * @description\n   *\n   * Objeto que serÃ¡ utilizado para exibir as informaÃ§Ãµes dinÃ¢micas, o valor serÃ¡ recuperado atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `p-fields`.\n   *\n   * > Ex: `{ age: '35' }`\n   */\n  @Input('p-value') set value(value: object) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(\n    private currencyPipe: CurrencyPipe,\n    private datePipe: DatePipe,\n    private decimalPipe: DecimalPipe,\n    private timePipe: PoTimePipe,\n    private titleCasePipe: TitleCasePipe) { }\n\n  // retorna os fields com os valores recuperados do objeto value.\n  protected getConfiguredFields() {\n    const newFields = [];\n\n    this.fields.forEach(field => {\n      if (isVisibleField(field)) {\n        newFields.push(this.createField(field));\n      }\n    });\n\n    return newFields;\n  }\n\n  // retorna fields ligado ao value mais os atributos do value que nÃ£o possuiam fields.\n  protected getMergedFields() {\n    const mergedFields = [...this.getConfiguredFields()];\n\n    this.getValueFields().forEach(valueField => {\n      const fieldIndex = mergedFields.findIndex(field => field.property === valueField.property);\n      const property = valueField.property;\n\n      if (fieldIndex === -1) {\n        mergedFields.push(this.createField({ property }));\n      }\n    });\n\n    return mergedFields;\n  }\n\n  // retorna o objeto value como fields.\n  protected getValueFields() {\n    return Object.keys(this.value).map(property => {\n      return this.createField({ property });\n    });\n  }\n\n  private createField(field: PoDynamicViewField) {\n    const property = field.property;\n    const value = this.transformValue(field.type, this.value[property], field.format);\n\n    const classesGridColumns = getGridColumnsClasses(field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns);\n\n    return {\n      property,\n      value,\n      label: this.titleCasePipe.transform(property),\n      cssClass: classesGridColumns,\n      ...field\n    };\n  }\n\n  private transformValue(type: string, value, format) {\n    let transformedValue = value;\n\n    switch (type) {\n      case 'currency':\n        transformedValue = this.currencyPipe.transform(value, format || 'BRL', 'symbol', '1.2-2');\n        break;\n      case 'date':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy');\n        break;\n      case 'dateTime':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy HH:mm:ss');\n        break;\n      case 'number':\n        transformedValue = this.decimalPipe.transform(value, format);\n        break;\n      case 'time':\n        transformedValue = this.timePipe.transform(value, format || 'HH:mm:ss.ffffff');\n        break;\n    }\n\n    return transformedValue;\n  }\n\n}\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\n\nimport { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';\n\n/**\n * @docsExtends PoDynamicViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-view-basic\" title=\"Portinari Dynamic View Basic\">\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee\" title=\"Portinari Dynamic View - Employee\">\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-dynamic-view',\n  templateUrl: './po-dynamic-view.component.html'\n})\nexport class PoDynamicViewComponent extends PoDynamicViewBaseComponent implements OnChanges {\n\n  constructor(\n    currencyPipe: CurrencyPipe,\n    datePipe: DatePipe,\n    decimalPipe: DecimalPipe,\n    timePipe: PoTimePipe,\n    titleCasePipe: TitleCasePipe) {\n\n    super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields || changes.value || changes.showAllValue) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  private getVisibleFields() {\n    if (this.showAllValue) {\n      return this.getMergedFields();\n    }\n\n    return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();\n  }\n\n}\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoDividerModule } from '../po-divider/po-divider.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoInfoModule } from '../po-info/po-info.module';\nimport { PoTagModule } from '../po-tag/po-tag.module';\nimport { PoTimeModule } from '../../pipes/po-time/po-time.module';\nimport { PoTimePipe } from '../../pipes/po-time/po-time.pipe';\n\nimport { PoDynamicFormComponent } from './po-dynamic-form/po-dynamic-form.component';\nimport { PoDynamicFormFieldsComponent } from './po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component';\nimport { PoDynamicViewComponent } from './po-dynamic-view/po-dynamic-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoDividerModule,\n    PoInfoModule,\n    PoFieldModule,\n    PoTagModule,\n    PoTimeModule\n  ],\n  declarations: [\n    PoDynamicFormComponent,\n    PoDynamicFormFieldsComponent,\n    PoDynamicViewComponent\n  ],\n  exports: [\n    PoDynamicFormComponent,\n    PoDynamicViewComponent\n  ],\n  providers: [ CurrencyPipe, DatePipe, DecimalPipe, PoTimePipe, TitleCasePipe ]\n})\nexport class PoDynamicModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-cell-action',\n  templateUrl: './po-grid-cell-action.component.html',\n  // styleUrls: ['./po-grid-cell-action.component.css']\n  styles: [`\n  .po-grid-cell-action-content {\n    border-bottom: 1px solid #eceeee;\n    border-left: none;\n    border-right: 1px solid #eceeee;\n    border-top: none;\n    font-family: NunitoSans;\n    font-size: 14px;\n    height: 44px;\n    line-height: 1.71;\n    margin: 0;\n    max-height: 44px;\n    max-width: 56px;\n    min-height: 44px;\n    min-width: 56px;\n    padding: 10px 16px;\n    text-align: center;\n    width: 56px;\n  }\n\n  .po-grid-cell-action-content:focus {\n    border: none;\n    outline: 1px solid #0c9abe;\n  }\n  `]\n})\nexport class PoGridCellActionComponent {\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-value') value?: string;\n\n  constructor() { }\n\n  onKeyDownContent(event) {\n    // console.log('onKeyDownContent: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n\n      // this.openActions(this.value);\n\n      return;\n    }\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-cell',\n  templateUrl: './po-grid-cell.component.html',\n  // styleUrls: ['./po-grid-cell.component.css'],\n  styles: [`\n  .po-grid-cell-content, .po-grid-cell-input {\n    border-bottom: 1px solid #eceeee;\n    border-left: none;\n    border-right: 1px solid #eceeee;\n    border-top: none;\n    font-family: NunitoSans;\n    font-size: 14px;\n    height: 44px;\n    line-height: 1.71;\n    margin: 0;\n    overflow: hidden;\n    padding: 10px 16px;\n    text-align: left;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .po-grid-cell-center {\n    text-align: center;\n  }\n\n  .po-grid-cell-right {\n    text-align: right;\n  }\n\n  .po-grid-cell-content:focus {\n    border: none;\n    outline: 1px solid #0c9abe;\n  }\n\n  .po-grid-cell-required {\n    border: 1px dashed red;\n  }\n\n  .po-grid-cell-input {\n    border: 1px solid #0c9abe;\n    box-shadow: 0px 0px 4px 4px rgba(0, 0, 0, 0.10);\n    outline: none;\n    position: relative;\n    min-width: 100%;\n    max-width: 100%;\n    width: 100%;\n  }\n  `]\n})\nexport class PoGridCellComponent {\n\n  private _width: (string | number);\n\n  _value: any = '';\n  edit: boolean = false;\n  editValue: string = '';\n\n  @Input('p-align') align?: string = 'left';\n\n  @Input('p-freeze') freeze?: boolean = false;\n\n  @Input('p-tab-index') tabIndex?: number = -1;\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-width') set width(value: (string | number)) {\n    this._width = value;\n\n    if (this.freeze && !this._width) {\n      this._width = 100;\n    }\n  }\n  get width(): (string | number) {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('p-readonly') readonly?: boolean = false;\n\n  @Input('p-required') required?: boolean = false;\n\n  @Output('p-valueChange') valueChange = new EventEmitter<any>();\n  // @Input('p-value') value?: string;\n  @Input('p-value') set value(value: any) {\n    this._value = value;\n    this.valueChange.emit(this._value);\n  }\n  get value(): any {\n    return this._value;\n  }\n\n  @ViewChild('inputElement', { static: true }) inputElement: ElementRef;\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n  onKeyDownContent(event: any) {\n    // console.log('onKeyDownContent: ', event);\n\n    // BACKSPACE / DELETE\n    if ((!event.ctrlKey) && ((event.keyCode === 8) || (event.keyCode === 46))) {\n\n      if (this.readonly) {\n        return;\n      }\n\n      event.preventDefault();\n      this.value = '';\n      return;\n    }\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      this.onEditCell(this.value);\n      return;\n    }\n\n    // A..Z - 0..9\n    if ((event.keyCode >= 65) && (event.keyCode <= 90) || (event.keyCode >= 48) && (event.keyCode <= 57)) {\n      event.preventDefault();\n      this.onEditCell(event.key);\n      return;\n    }\n  }\n\n  dblclick(event: any) {\n    // console.log('dblclick: ', event);\n\n    event.preventDefault();\n\n    this.onEditCell(this.value);\n  }\n\n  onBlurInput(event: any) {\n    // console.log('onBlurInput: ', event);\n\n    this.value = this.editValue;\n    this.editValue = undefined;\n    this.edit = false;\n  }\n\n  onKeyDownInput(event: any) {\n    // console.log('onKeyDownInput: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      this.value = this.editValue;\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n    }\n\n    // ESCAPE\n    if (event.keyCode === 27) {\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n      event.stopPropagation();\n    }\n  }\n\n  private onEditCell(value: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.editValue = value;\n    this.edit = true;\n    this.changeDetectorRef.detectChanges();\n    this.inputElement.nativeElement.focus();\n  }\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoGridRowActions } from './po-grid-row-actions.interface';\n\n/**\n * @description\n *\n * Componente grid.\n *\n * AÃ§Ãµes / atalhos:\n *\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\n * - ARROW-DOWN: Navega para celula inferior;\n * - ARROW-RIGHT: Navega para celula direita;\n * - ARROW-LEFT: Navega para celula esquerda;\n * - TAB: Navega para prÃ³xima celula;\n * - SHIFT+TAB: Navega para celula anterior;\n * - CTRL+DEL: Remove linha;\n * - DEL/BACKSPACE: Limpa celula;\n * - ENTER: Edita linha com valor atual/Confirma ediÃ§Ã£o da celula;\n * - DOUBLE-CLICK: Edita linha com valor atual;\n * - ESC: Cancela ediÃ§Ã£o da celula / Cancela inserÃ§Ã£o de linhas em branco;\n * - A..Z/0..9: Inicia ediÃ§Ã£o com valor em branco.\n *\n * @example\n *\n * <example name=\"po-grid-basic\" title=\"Portinari Grid Basic\">\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.html\"> </file>\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-grid',\n  templateUrl: './po-grid.component.html',\n  // styleUrls: ['./po-grid.component.css']\n  styles: [`\n  .po-grid-wrapper {\n    /* margin: 30px; */\n    overflow: auto;\n    border: 1px solid #eceeee;\n    /* width: 100%; */\n    /* border: 1px solid red; */\n    /* display: table-cell; */\n  }\n\n  .po-grid {\n    display: table;\n    border-right: none;\n    border-bottom: none;\n  }\n\n  .po-grid-cell-normal::-webkit-scrollbar, .po-grid-row-wrapper::-webkit-scrollbar {\n    border-radius: 2px;\n    height: 4px;\n    opacity: 0.5;\n    width: 4px;\n  }\n  .po-grid-cell-normal::-webkit-scrollbar-thumb, .po-grid-row-wrapper::-webkit-scrollbar-thumb {\n    background-color: #0c9abe;\n  }\n\n  .po-grid .fixed {\n    display: table;\n  }\n\n  .po-grid-header-group {\n    display: table-header-group;\n  }\n\n  .po-grid-body {\n    display: table-row-group;\n  }\n\n  .po-grid-row {\n    display: table-row;\n  }\n\n  .po-grid-title, .po-grid-cell {\n    display: table-cell;\n    border: none;\n  }\n\n  .po-grid-cell-freeze {\n    border-right: 2px solid #ceeaf2;\n  }\n\n  .po-grid-cell-action {\n    color: blue;\n    border-left: 2px solid #ceeaf2;\n  }\n\n  .po-grid-freeze, .po-grid-actions {\n    width: 100%;\n  }\n\n  .po-grid-normal {\n    width: 100%;\n  }\n\n  .po-grid-cell-normal {\n    overflow: auto;\n  }\n\n  .po-grid-footer {\n    display: table-footer-group;\n  }\n\n  .po-grid-footer-wrapper {\n    border: 1px solid #eceeee;\n    border-top: none;\n  }\n  `]\n})\nexport class PoGridComponent implements OnDestroy {\n\n  lastCell: string = '0-0';\n  lastRow: number = 0;\n  lastColumn: number = 0;\n  currencyCell: string = '0-0';\n  currencyRow: number = 0;\n  currencyColumn: number = 0;\n  currencyObj: any;\n\n  logger = false;\n\n  width = '100%';\n  widporeeze = 0;\n  widthActions = 0;\n\n  private resizeListener: () => void;\n  private timeoutResize;\n\n  @ViewChild('table', { static: true }) tableElement: ElementRef;\n  @ViewChild('wrapper', { static: true }) tableWrapper: ElementRef;\n\n  private _columns = [];\n\n  /**\n   * @description\n   *\n   * AÃ§Ãµes disparadas quando uma linha do grid Ã© manipulada.\n   */\n  @Input('p-row-actions') rowActions: PoGridRowActions = {};\n\n  /**\n   * Colunas exibidas no grid.\n   */\n  @Input('p-columns') set columns(value: Array<any>) {\n    this._columns = [...value];\n\n    this._columns.forEach(column => {\n      column.label = column.label || column.property;\n\n      if (column.freeze === true) {\n        column.cssWidth = `${column.width || 100}px`;\n      } else {\n        column.cssWidth = column.width ? `${column.width}px` : '100%';\n      }\n    });\n  }\n  get columns(): Array<any> {\n    return this._columns.filter(column => column.freeze !== true && column.action !== true);\n  }\n\n  /**\n   * Lista com os dados que serÃ£o exibidos no grid.\n   */\n  @Input('p-data') data: Array<any> = [];\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private elRef: ElementRef,\n    renderer: Renderer2) {\n\n    this.debounceResize();\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n\n    this.timeoutResize = setTimeout(() => {\n      const widthTableWrapper = this.tableWrapper.nativeElement.offsetWidth;\n      this.width = `${widthTableWrapper - (this.widporeeze + 8) - this.widthActions}px`;\n    }, 100);\n  }\n\n  get freezeColumns() {\n    const freezeColumns = this._columns.filter(column => column.freeze === true);\n\n    this.widporeeze = freezeColumns.reduce((prev, current) => prev + (current.width || 100), 0);\n\n    return freezeColumns;\n  }\n\n  get actionColumns() {\n    const actionsColumns = this._columns.filter(column => column.action === true);\n\n    this.widthActions = actionsColumns.length > 0 ? 56 : 0;\n\n    return actionsColumns;\n  }\n\n  cancelRow(event: any, row: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      return;\n    }\n\n    const [x] = (el.id).split('-');\n\n    if (this.isEmptyRow(x)) {\n      if (!this.removeRow(event, row)) {\n        return;\n      }\n\n      this.currencyObj = Object.assign({}, this.data[this.currencyRow - 1]);\n    } else {\n      this.data[+x - 1] = Object.assign({}, this.currencyObj);\n      setTimeout(() => this.selectCell(this.currencyRow, this.currencyColumn));\n    }\n  }\n\n  removeRow(event: any, row: any): boolean {\n\n    if (this.rowActions.beforeRemove && !this.rowActions.beforeRemove(Object.assign({}, row))) {\n      return false;\n    }\n\n    const index = this.data.indexOf(row);\n\n    this.data.splice(index, 1);\n\n    this.changeDetectorRef.detectChanges();\n\n    if ((this.data.length === 0) || (index === this.data.length)) {\n      this.selectCell(this.currencyRow - 1, this.currencyColumn);\n    } else {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n    }\n\n    return true;\n  }\n\n  tableKeydown(event: any, direction: string) {\n    let [row, col] = event.target.id.split('-');\n    row = +row;\n    col = +col;\n    let prow = +row;\n    let pcol = +col;\n\n    // event.preventDefault();\n    // event.stopPropagation();\n\n    // debugger;\n    if (direction === 'down') {\n      if (row <= this.data.length) {\n        prow++;\n      }\n\n      if (row === this.data.length) {\n        if (row === 0 || !this.isEmptyRow(row)) {\n          if (this.saveRow(row)) {\n            if (!this.insertRow()) {\n              return;\n            }\n          } else {\n            return;\n          }\n        } else {\n          prow--;\n        }\n      }\n    } else if ((direction === 'up') && (row > 0)) {\n      prow--;\n    } else if ((direction === 'left') && (col > 0)) {\n      pcol--;\n    } else if ((direction === 'right') && (col < this._columns.length - 1)) {\n      pcol++;\n    } else if (direction === 'next') {\n      if (col < this._columns.length - 1) {\n        pcol++;\n        event.preventDefault();\n      } else if (row < this.data.length) {\n        pcol = 0;\n        prow++;\n        event.preventDefault();\n      }\n    } else if (direction === 'prior') {\n      if (col > 0) {\n        pcol--;\n        event.preventDefault();\n      } else if (row > 0) {\n        pcol = this._columns.length - 1;\n        prow--;\n        event.preventDefault();\n      }\n    }\n\n    if (this.currencyCell === `${prow}-${pcol}`) {\n      // console.log('vazou');\n      return;\n    }\n\n    // debugger;\n    if (prow !== this.currencyRow && row > 0 && this.data.length >= row) {\n      if (!this.isEmptyRow(row)) {\n        if (!this.saveRow(row)) {\n          return;\n        }\n      } else {\n        if (!this.removeRow(event, row)) {\n          return;\n        }\n      }\n    }\n\n    if (this.currencyRow !== prow) {\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('mudou de linha');\n    }\n\n    this.lastCell = event.target.id;\n    this.lastRow = row;\n    this.lastColumn = col;\n\n    this.selectCell(prow, pcol);\n  }\n\n  tableClick(event: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n      return;\n    }\n\n    if (this.currencyCell === el.id) {\n      return;\n    }\n\n    const [row, col] = (el.id).split('-');\n    const prow = +row;\n    const pcol = +col;\n\n    if (prow !== this.currencyRow) {\n      if (this.currencyRow > 0) {\n        if (!this.isEmptyRow(this.currencyRow)) {\n          if (!this.saveRow(this.currencyRow)) {\n            this.selectCell(this.currencyRow, this.currencyColumn);\n            return;\n          }\n        } else {\n          if (!this.removeRow(event, row)) {\n            return;\n          }\n        }\n      }\n\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('>>>>>>> ', prow - 1);\n    }\n\n    this.lastCell = this.currencyCell;\n    this.lastRow = this.currencyRow;\n    this.lastColumn = this.currencyColumn;\n\n    this.currencyCell = el.id;\n    this.currencyRow = prow;\n    this.currencyColumn = pcol;\n  }\n\n  saveRow(row: number): boolean {\n    // console.log(this.data[row - 1]);\n\n    const obj = this.data[row - 1];\n\n    if (!Object.keys(obj).some(prop => obj[prop] !== this.currencyObj[prop])) {\n      // console.log('tudo igual');\n      return true;\n    }\n\n    if (this.rowActions.beforeSave && !this.rowActions.beforeSave(obj, this.currencyObj)) {\n      return false;\n    }\n\n    const requireds = [];\n\n    this.columns.forEach(column => {\n      if (column.required === true && !obj[column.property]) {\n        requireds.push(column.property);\n      }\n    });\n\n    return requireds.length === 0;\n  }\n\n  insertRow() {\n    const obj = {};\n\n    if (this.rowActions.beforeInsert && !this.rowActions.beforeInsert(obj)) {\n      return false;\n    }\n\n    // this.currencyObj = Object.assign({}, obj);\n\n    this.data.push(obj);\n    this.changeDetectorRef.detectChanges();\n\n    return true;\n  }\n\n  isEmptyRow(row: number) {\n    const obj = this.data[row - 1];\n\n    if (!obj) { // title\n      return false;\n    }\n\n    const filled = Object.keys(obj).some(property => obj[property]);\n\n    return !filled;\n  }\n\n  selectCell(row: number, col: number) {\n    const nextCell = this.elRef.nativeElement.querySelector(`[id='${row}-${col}']`);\n\n    if (nextCell) {\n      this.currencyCell = `${row}-${col}`;\n      this.currencyRow = row;\n      this.currencyColumn = col;\n      nextCell.focus();\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-head',\n  templateUrl: './po-grid-head.component.html',\n  // styleUrls: ['./po-grid-head.component.css']\n  styles: [`\n  .po-grid-head-content {\n    border-bottom: 2px solid #ceeaf2;\n    border-left: none;\n    border-right: 1px solid #eceeee;\n    border-top: none;\n    color: #0c9abe;\n    font-family: NunitoSans-bold;\n    font-size: 14px;\n    height: 44px;\n    line-height: 1.71;\n    margin: 0;\n    max-height: 44px;\n    min-height: 44px;\n    overflow: hidden;\n    padding: 10px 16px;\n    text-align: left;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .po-grid-head-center {\n    text-align: center;\n  }\n\n  .po-grid-head-right {\n    text-align: right;\n  }\n\n  .po-grid-head-content:focus {\n    border: 1px solid #0c9abe;\n    outline: none;\n  }\n  `]\n})\nexport class PoGridHeadComponent {\n\n  private _width: (string | number);\n\n  @Input('p-align') align?: string = 'left';\n\n  @Input('p-freeze') boolean?: boolean = false;\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-tab-index') tabIndex?: number = -1;\n\n  @Input('p-width') set width(value: (string | number)) {\n    this._width = value;\n  }\n  get width(): (string | number) {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('p-title') title?: string;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule } from './../../components/po-field/po-field.module';\n\nimport { PoGridCellActionComponent } from './po-grid-cell-action/po-grid-cell-action.component';\nimport { PoGridCellComponent } from './po-grid-cell/po-grid-cell.component';\nimport { PoGridComponent } from './po-grid.component';\nimport { PoGridHeadComponent } from './po-grid-head/po-grid-head.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-grid.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    PoFieldModule\n  ],\n  declarations: [\n    PoGridCellActionComponent,\n    PoGridCellComponent,\n    PoGridComponent,\n    PoGridHeadComponent\n  ],\n  exports: [\n    PoGridComponent\n  ]\n})\nexport class PoGridModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault, convertToBoolean } from '../../utils/util';\n\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewLiterals } from './interfaces/po-list-view-literals.interface';\n\nexport const poListViewLiteralsDefault = {\n  en: <PoListViewLiterals> {\n    hideDetails: 'Hide details',\n    loadMoreData: 'Load more data',\n    noData: 'No data found',\n    selectAll: 'Select all',\n    showDetails: 'Show details'\n  },\n  es: <PoListViewLiterals> {\n    hideDetails: 'Ocultar detalles',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    noData: 'Datos no encontrados',\n    selectAll: 'Seleccionar todos',\n    showDetails: 'Mostrar detalles'\n  },\n  pt: <PoListViewLiterals> {\n    hideDetails: 'Ocultar detalhes',\n    loadMoreData: 'Carregar mais resultados',\n    noData: 'Nenhum dado encontrado',\n    selectAll: 'Selecionar todos',\n    showDetails: 'Exibir detalhes'\n  },\n  ru: <PoListViewLiterals> {\n    hideDetails: 'Ð¡ÐºÑÑÑÑ Ð´ÐµÑÐ°Ð»Ð¸',\n    loadMoreData: 'ÐÐ°Ð³ÑÑÐ·Ð¸ÑÑ Ð±Ð¾Ð»ÑÑÐµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð²',\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    selectAll: 'ÐÑÐ±ÑÐ°ÑÑ Ð²ÑÐµ',\n    showDetails: 'ÐÐ¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð´ÐµÑÐ°Ð»Ð¸'\n  }\n};\n\n/**\n * @description\n *\n * Componente de lista que recebe um array de objetos e renderiza de forma dinÃ¢mica os dados de\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\n *  **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\n * **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n *\n * O componente disponibiliza uma Ã¡rea especÃ­fica para exibiÃ§Ã£o informaÃ§Ãµes adicionais,\n * atravÃ©s da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n */\nexport class PoListViewBaseComponent {\n\n  private _actions: Array<PoListViewAction>;\n  private _height: number;\n  private _hideSelectAll: boolean;\n  private _items: Array<any>;\n  private _literals: PoListViewLiterals;\n  private _select: boolean;\n  private _showMoreDisabled: boolean;\n\n  popupTarget: any;\n  selectAll: boolean = false;\n  showHeader: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes que serÃ£o exibidas no componente.\n   */\n  @Input('p-actions') set actions(value: Array<PoListViewAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-list-view` em *pixels*.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todos os itens.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-select-all') set hideSelectAll(hideSelectAll: boolean) {\n    this._hideSelectAll = convertToBoolean(hideSelectAll);\n    this.showMainHeader();\n  }\n\n  get hideSelectAll() {\n    return this._hideSelectAll;\n  }\n\n  /** Lista de itens que serÃ£o exibidos no componente. */\n  @Input('p-items') set items(value: Array<any>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-list-view`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoListViewLiterals = {\n   *    hideDetail: 'Ocultar detalhes completamente',\n   *    loadMoreData: 'Mais dados',\n   *    showDetail: 'Mostrar mais detalhes',\n   *    selectAll: 'Selecionar todos os itens'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoListViewLiterals = {\n   *    showDetail: 'Mostrar mais detalhes'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-list-view\n   *   [p-literals]=\"customLiterals\">\n   * </po-list-view>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoListViewLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poListViewLiteralsDefault[poLocaleDefault],\n        ...poListViewLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poListViewLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poListViewLiteralsDefault[browserLanguage()];\n  }\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ usado como link para o tÃ­tulo. */\n  @Input('p-property-link') propertyLink?: string;\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ exibido como o tÃ­tulo de cada item. */\n  @Input('p-property-title') propertyTitle?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinÃ¢mica `$selected` para identificar se o\n   * item estÃ¡ selecionado, por exemplo:\n   *\n   * ```\n   *  item.$selected\n   *\n   *  // ou\n   *\n   *  item['$selected']\n   * ```\n   *\n   * @default `false`\n   */\n  @Input('p-select') set select(select: boolean) {\n    this._select = convertToBoolean(select);\n    this.showMainHeader();\n  }\n\n  get select() {\n    return this._select;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o botÃ£o `Carregar Mais Resultados` serÃ¡ desabilitado.\n   */\n  @Input('p-show-more-disabled') set showMoreDisabled(value: boolean) {\n    this._showMoreDisabled = convertToBoolean(value);\n  }\n\n  get showMoreDisabled(): boolean {\n    return this._showMoreDisabled;\n  }\n\n  /**\n   * Recebe uma aÃ§Ã£o, que serÃ¡ executada quando clicar no botÃ£o \"Carregar mais resultados\".\n   *\n   * > Caso nenhuma aÃ§Ã£o for definida o mesmo nÃ£o ficarÃ¡ visÃ­vel.\n   */\n  @Output('p-show-more') showMore?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o que serÃ¡ executada ao clicar no tÃ­tulo.\n   *\n   * Ao ser disparado, o mÃ©todo inserido na aÃ§Ã£o irÃ¡ receber como parÃ¢metro o item da lista clicado.\n   */\n  @Output('p-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  onClickAction(listViewAction: PoListViewAction, item) {\n    const cleanItem = this.deleteInternalAttrs(item);\n    if (listViewAction.action) {\n      listViewAction.action(cleanItem);\n    }\n  }\n\n  onShowMore(): void {\n    this.showMore.emit();\n  }\n\n  runTitleAction(listItem: any) {\n    const itemWithPublicProperties = this.deleteInternalAttrs(listItem);\n    this.titleAction.emit(itemWithPublicProperties);\n  }\n\n  selectAllListItems() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n    }\n  }\n\n  selectListItem(row: any) {\n    row.$selected = !row.$selected;\n\n    this.selectAll = this.checkIfItemsAreSelected(this.items);\n  }\n\n  private deleteInternalAttrs(item) {\n    const itemCopy = item ? { ...item } : undefined;\n\n    for (const key in itemCopy) {\n      if (itemCopy.hasOwnProperty(key) && key.startsWith('$')) {\n        delete itemCopy[key];\n      }\n    }\n\n    return itemCopy;\n  }\n\n  private checkIfItemsAreSelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private showMainHeader() {\n    this.showHeader = !!(this.select && !this.hideSelectAll && this.items && this.items.length);\n  }\n\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes essenciais de cada item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-list-view\n *   p-property-title=\"name\"\n *   [p-items]=\"[{id: 1, name: \"Register\", email: register@portinari.com}]\">\n *\n *   <ng-template p-list-view-content-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-list-view\n *    p-property-title=\"name\"\n *    [p-items]=\"[{id: 1, name: \"Register\", email: register@portinari.com}]\">\n *\n *    <div *p-list-view-content-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-list-view>\n * ...\n *\n * ```\n *\n * A diretiva **p-list-view-content-template**, possibilita tambÃ©m alterar o tÃ­tulo dos itens. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz a alteraÃ§Ã£o, Ã  propriedade `p-title`,\n * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    template: `\n *      ...\n *      <po-list-view\n *        [p-items]=\"items\">\n *        <ng-template p-list-view-content-template let-item [p-title]=\"customTitle\">\n *          <div class=\"po-row\">\n *            <po-info class=\"po-md-12\" p-label=\"Customer\" [p-value]=\"item.customer\"></po-info>\n *          </div>\n *        </ng-template>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public items = [{\n *      code: 1200,\n *      product: 'Rice',\n *      customer: 'Supermarket 1',\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      customer: 'Supermarket 2'\n *    }];\n *\n *    customTitle(item) {\n *      return `${item.code} - ${item.product}`;\n *    }\n * }\n * ```\n */\n@Directive({\n  selector: '[p-list-view-content-template]'\n})\nexport class PoListViewContentTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `string`, que serÃ¡ utilizado como o tÃ­tulo de cada item da lista.\n   *\n   * > Por parÃ¢metro serÃ¡ enviado o item corrente, onde poderÃ¡ utilizÃ¡-lo para recuperar dados sobre o mesmo.\n   */\n  @Input('p-title') title: (item) => string;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n/**\n * @usedBy PoListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes adicionais de cada item, construindo um\n * botÃ£o `Exibir detalhes` abaixo do conteÃºdo principal do item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-list-view\n *   p-property-title=\"name\"\n *   [p-items]=\"items\">\n *\n *   <ng-template p-list-view-detail-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n *       <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-list-view\n *    p-property-title=\"name\"\n *    [p-items]=\"items\">\n *    <div *p-list-view-detail-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-list-view>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-list-view-detail-template]'\n})\nexport class PoListViewDetailTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `boolean`, que serÃ¡ utilizado como a validaÃ§Ã£o para que o detalhe de item\n   * da lista inicie aberto ou fechado.\n   *\n   */\n  @Input('p-show-detail') showDetail: (item) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, ChangeDetectorRef, Component, ContentChild, DoCheck, IterableDiffers, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\n\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewBaseComponent } from './po-list-view-base.component';\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\n\n/**\n * @docsExtends PoListViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-list-view-basic\" title=\"Portinari List View Basic\">\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-list-view-labs\" title=\"Portinari List View Labs\">\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.html\"> </file>\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-list-view-hiring-processes\" title=\"Portinari List View - Hiring Processes\">\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-list-view',\n  templateUrl: './po-list-view.component.html',\n  animations: [\n    trigger('showHideDetail', [\n      state('*', style({ 'overflow-y': 'visible' })),\n      state('void', style({ 'overflow-y': 'hidden' })),\n      transition('* => void', [\n        style({ height: '*', 'overflow-y': 'hidden' }),\n        animate(100, style({ height: 0 }))\n      ]),\n      transition('void => *', [\n        style({ height: '0' }),\n        animate(100, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class PoListViewComponent extends PoListViewBaseComponent implements AfterContentInit, DoCheck {\n\n  @ContentChild(PoListViewContentTemplateDirective, { static: true }) listViewContentTemplate: PoListViewContentTemplateDirective;\n  @ContentChild(PoListViewDetailTemplateDirective, { static: true }) listViewDetailTemplate: PoListViewDetailTemplateDirective;\n\n  @ViewChild('popup', { static: true }) poPopupComponent: PoPopupComponent;\n\n  private differ;\n\n  constructor(private changeDetector: ChangeDetectorRef, differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  get hasContentTemplate(): boolean {\n    return !!this.listViewContentTemplate;\n  }\n\n  get hasDetailTemplate(): boolean {\n    return !!this.listViewDetailTemplate;\n  }\n\n  get displayShowMoreButton(): boolean {\n    return this.items && this.items.length > 0 && this.showMore.observers.length > 0;\n  }\n\n  get showButtonsActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 0 && this.visibleActions.length <= 2;\n  }\n\n  get showPopupActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 2;\n  }\n\n  get titleHasAction() {\n    return this.titleAction.observers.length > 0;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterContentInit(): void {\n    this.initShowDetail();\n  }\n\n  ngDoCheck() {\n    this.checkItemsChange();\n  }\n\n  checkTitleType(item: any) {\n    if (this.propertyLink && item[this.propertyLink] ) {\n      return item[this.propertyLink].startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n  getItemTitle(item) {\n    return this.hasContentTemplate && this.listViewContentTemplate.title ?\n    this.listViewContentTemplate.title(item) : item[this.propertyTitle];\n  }\n\n  hasItems(): boolean {\n    return this.items && this.items.length > 0;\n  }\n\n  returnBooleanValue(listViewAction: PoListViewAction, item: any) {\n    return isTypeof(listViewAction.disabled, 'function') ? (<any>listViewAction).disabled(item) : listViewAction.disabled;\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n  togglePopup(item, targetRef: HTMLElement) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.poPopupComponent.toggle(item);\n  }\n\n  private checkItemsChange() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && this.items && this.items.length && this.select && !this.hideSelectAll) {\n      this.showHeader = true;\n    }\n  }\n\n  private initShowDetail() {\n    if (this.items && this.items.length > 0 && this.hasDetailTemplate && this.listViewDetailTemplate.showDetail) {\n      this.items.forEach(item => item.$showDetail = this.listViewDetailTemplate.showDetail(item));\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoButtonModule } from '../po-button/po-button.module';\nimport { PoPopupModule } from '../po-popup/po-popup.module';\n\nimport { PoListViewComponent } from './po-list-view.component';\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-list-view`.\n *\n * > Para o correto funcionamento do componente `po-list-view`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoButtonModule,\n    PoPopupModule\n  ],\n  declarations: [\n    PoListViewComponent,\n    PoListViewContentTemplateDirective,\n    PoListViewDetailTemplateDirective\n  ],\n  exports: [\n    PoListViewComponent,\n    PoListViewContentTemplateDirective,\n    PoListViewDetailTemplateDirective\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoListViewModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nconst PO_BADGE_COLORS = [\n  'color-01',\n  'color-02',\n  'color-03',\n  'color-04',\n  'color-05',\n  'color-06',\n  'color-07',\n  'color-08',\n  'color-09',\n  'color-10',\n  'color-11',\n  'color-12',\n];\nconst PO_BADGE_COLOR_DEFAULT = 'color-07';\n\n/**\n * @description\n *\n * @docsPrivate\n *\n * Componente utilizado no `po-menu` para exibir por exemplo a quantidade de tarefas pendentes.\n */\nexport class PoBadgeBaseComponent {\n\n  private _color: string;\n  private _value: number;\n\n  badgeValue: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a cor de fundo do componente e aceita os valores:\n   *\n   * <span class=\"dot po-color-01\"></span> `color-01`\n   *\n   * <span class=\"dot po-color-02\"></span> `color-02`\n   *\n   * <span class=\"dot po-color-03\"></span> `color-03`\n   *\n   * <span class=\"dot po-color-04\"></span> `color-04`\n   *\n   * <span class=\"dot po-color-05\"></span> `color-05`\n   *\n   * <span class=\"dot po-color-06\"></span> `color-06`\n   *\n   * <span class=\"dot po-color-07\"></span> `color-07`\n   *\n   * <span class=\"dot po-color-08\"></span> `color-08`\n   *\n   * <span class=\"dot po-color-09\"></span> `color-09`\n   *\n   * <span class=\"dot po-color-10\"></span> `color-10`\n   *\n   * <span class=\"dot po-color-11\"></span> `color-11`\n   *\n   * <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * @default `color-07`\n   */\n  @Input('p-color') set color(value: string) {\n    this._color = PO_BADGE_COLORS.includes(value) ? value : PO_BADGE_COLOR_DEFAULT;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @description\n   *\n   * NÃºmero exibido no componente, caso o mesmo seja maior que 99 o valor exibido serÃ¡ 99+.\n   */\n  @Input('p-value') set value(value: number) {\n    this._value = convertToInt(value);\n    this.setBadgeValue(this._value);\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  private setBadgeValue(value: number) {\n    const validRangeValue = (value || value === 0) && (value >= 0 && value < 100);\n    this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoBadgeBaseComponent } from './po-badge-base.component';\n\n/**\n * @docsExtends PoBadgeBaseComponent\n *\n * @docsPrivate\n */\n@Component({\n  selector: 'po-badge',\n  templateUrl: './po-badge.component.html'\n})\nexport class PoBadgeComponent extends PoBadgeBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoBadgeComponent } from './po-badge.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-badge.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoBadgeComponent\n  ],\n  exports: [\n    PoBadgeComponent\n  ]\n})\nexport class PoBadgeModule { }\n","import { Input } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { browserLanguage, convertToBoolean, convertToInt, isExternalLink, isTypeof, poLocaleDefault, validValue } from '../../utils/util';\n\nimport { PoMenuFilter } from './po-menu-filter/po-menu-filter.interface';\nimport { PoMenuItem } from './po-menu-item.interface';\nimport { PoMenuService } from './services/po-menu.service';\n\nexport const poMenuLiteralsDefault = {\n  en: { itemNotFound: 'Item not found.' },\n  es: { itemNotFound: 'Elemento no encontrado.' },\n  pt: { itemNotFound: 'Item nÃ£o encontrado.' }\n};\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral que Ã© utilizado para navegaÃ§Ã£o nas pÃ¡ginas de uma aplicaÃ§Ã£o.\n *\n * O componente po-menu recebe uma lista de objetos do tipo `MenuItem` com as informaÃ§Ãµes dos itens de menu como\n * textos, links para redirecionamento, aÃ§Ãµes, atÃ© 4 nÃ­veis de menu e Ã­cones para o primeiro nÃ­vel de menu.\n */\nexport abstract class PoMenuBaseComponent {\n\n  private _collapsed = false;\n  private _filter = false;\n  private _level;\n  private _logo: string;\n  private _maxLevel = 4;\n  private _menus = [];\n  private _params: any;\n  private _service: string | PoMenuFilter;\n  private _shortLogo: string;\n\n  allowIcons: boolean;\n  allowCollapseMenu: boolean;\n\n  filteredItems;\n  filterService: PoMenuFilter;\n\n  readonly literals = {\n    ...poMenuLiteralsDefault[poLocaleDefault],\n    ...poMenuLiteralsDefault[browserLanguage()]\n  };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.\n   *\n   * > Utilize esta propriedade para iniciar o menu colapsado.\n   *\n   * > Ao utilizar os mÃ©todos [`colapse`](documentation/po-menu#colapseMethod), [`expand`](documentation/po-menu#expandMethod) e\n   * [`toggle`](documentation/po-menu#toggleMethod) o valor desta propriedade nÃ£o Ã© alterado.\n   *\n   * **Importante:**\n   *\n   * > O menu serÃ¡ colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   *\n   * @default `false`\n   */\n  @Input('p-collapsed') set collapsed(collapsed: boolean) {\n    this._collapsed = convertToBoolean(collapsed);\n\n    this.validateCollapseClass();\n  }\n\n  get collapsed() {\n    return this._collapsed;\n  }\n\n  /** Lista dos itens do menu. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('p-menus') set menus(menus: Array<PoMenuItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  get maxLevel() {\n    return this._maxLevel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um campo para pesquisa no menu.\n   * A pesquisa Ã© realizada em todos os nÃ­veis do menu e busca apenas pelos itens que contÃ©m uma aÃ§Ã£o e/ou link definidos,\n   * ou tambÃ©m, pode ser realizada atravÃ©s de um serviÃ§o definido na propriedade `p-service`.\n   *\n   * > O campo de pesquisa Ã© desabilitado se o menu estiver colapsado.\n   *\n   * @default `false`\n   */\n  @Input('p-filter') set filter(filter: boolean) {\n    this._filter = <any>filter === '' ? true : convertToBoolean(filter);\n    this.filteredItems = [...this._menus];\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ utilizado para realizar o filtro de itens do\n   * menu quando realizar uma busca. Caso haja a necessidade de customizaÃ§Ã£o, pode ser informado um\n   * serviÃ§o implementando a interface `PoMenuFilter`.\n   *\n   * Caso utilizada uma URL, o serviÃ§o deve retornar os dados conforme o\n   * [Guia de implementaÃ§Ã£o de API da Portinari](http://tdn.portinari.com/display/public/INT/Guia+de+implementacao+das+APIs+PORTINARI).\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando o valor digitado\n   * no parÃ¢metro `search`, veja exemplo:\n   *\n   * > O filtro no serviÃ§o serÃ¡ realizado caso contenha no mÃ­nimo trÃªs caracteres no campo de busca, por exemplo `tot`.\n   *\n   * ```\n   * <po-menu p-service=\"/api/v1/fnd/menu\">\n   * </po-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas\n   * ```\n   *\n   * > Ã necessÃ¡rio que propriedade `p-filter` esteja habilitada.\n   */\n  @Input('p-service') set service(value: string | PoMenuFilter) {\n    this._service = value || undefined;\n\n    this.configService(this.service);\n  }\n\n  get service() {\n    return this._service;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deve ser informado um objeto que deseja-se utilizar na requisiÃ§Ã£o de filtro dos itens de menu.\n   *\n   * Caso utilizado um serviÃ§o customizado, implementando a interface `PoMenuFilter`, o valor desta propriedade\n   * serÃ¡ passado como parÃ¢metro, na funÃ§Ã£o `getFilteredData`.\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando os valores informados\n   * nesta propriedade em conjunto com o parÃ¢metro `search`, veja exemplo:\n   *\n   * ```\n   * <po-menu p-service=\"/api/v1/fnd/menu\" [p-params]=\"{ company: 1, user: 297767512 }\">\n   * </po-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512\n   * ```\n   */\n  @Input('p-params') set params(value: any) {\n    this._params = value && isTypeof(value, 'object') ? value : undefined;\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver expandido, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida o espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `24px` de altura e `224px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver colapsado, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida passa a assumir o valor informado na propriedade `p-logo` e na ausÃªncia desta o\n   * espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `48px` de altura e `48px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   * - Caso nÃ£o informar um valor, esta propriedade passa a assumir o valor informado na propriedade `p-logo`.\n   */\n  @Input('p-short-logo') set shortLogo(value: any) {\n    this._shortLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get shortLogo() {\n    return this._shortLogo;\n  }\n\n  constructor(public menuService: PoMenuService) { }\n\n  private configService(service: string | PoMenuFilter) {\n    if (typeof service === 'string' && service.trim()) {\n      // service url\n      this.menuService.configProperties(service);\n      this.filterService = this.menuService;\n\n    } else if (typeof service === 'object' && service.getFilteredData) {\n      // custom service\n      this.filterService = service;\n    } else {\n      this.filterService = undefined;\n    }\n  }\n\n  protected setMenuExtraProperties() {\n    this.allowIcons = !!this.menus.length;\n    this.allowCollapseMenu = !!this.menus.length;\n\n    this.menus.forEach(menuItem => {\n      this._level = 1;\n      this.allowIcons = this.allowIcons ? validValue(menuItem.icon) : false;\n      this.allowCollapseMenu = this.allowCollapseMenu && this.allowIcons ? validValue(menuItem.shortLabel) : false;\n      this.removeBadgeAlert(menuItem);\n      this.setMenuItemProperties(menuItem);\n\n      if (menuItem.subItems) {\n        this._level++;\n        this.processSubItems(menuItem);\n      }\n    });\n  }\n\n  protected setMenuItemProperties(menuItem: PoMenuItem): void {\n    menuItem['id'] = menuItem['id'] || uuid();\n    menuItem['level'] = this._level;\n    menuItem['type'] = this.setMenuType(menuItem);\n  }\n\n  protected validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n  private processSubItems(menu) {\n    menu.subItems.forEach((menuItem, index, menuItems) => {\n\n      const previousItem = menuItems[index - 1];\n      if (previousItem && previousItem.subItems) {\n        this._level = previousItem['level'];\n      }\n\n      if (this._level <= this.maxLevel) {\n        this.setMenuItemProperties(menuItem);\n\n        if (menuItem.subItems) {\n          this._level++;\n          this.processSubItems(menuItem);\n        }\n      }\n\n      if (!menu['badgeAlert']) {\n        menu = this.setMenuBadgeAlert(menu, menuItem);\n      }\n\n    });\n\n    menu.subItems = Object.assign([], menu.subItems);\n  }\n\n  private removeBadgeAlert(menuItem: PoMenuItem): void {\n\n    if (menuItem['badgeAlert']) {\n      delete menuItem['badgeAlert'];\n    }\n\n    if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => this.removeBadgeAlert(subItem));\n    }\n\n  }\n\n  private setMenuBadgeAlert(parent: PoMenuItem, child: PoMenuItem): PoMenuItem {\n    const childHasSubItems = child.subItems && child.subItems.length;\n    const childHasBadgeAlert = child['badgeAlert'];\n    const childHasBadge = child.badge && convertToInt(child.badge.value) >= 0;\n\n    parent['badgeAlert'] = childHasBadgeAlert || (childHasBadge && !childHasSubItems);\n\n    return parent;\n  }\n\n  private setMenuType(menuItem: PoMenuItem): string {\n    if (menuItem.subItems && menuItem.subItems.length > 0 && this._level < this.maxLevel) {\n      return 'subItems';\n    }\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: PoMenuItem): void {\n    if (!menuItem.label || menuItem.label.trim() === '') {\n      throw new Error('O atributo PoMenuItem.label nÃ£o pode ser vazio.');\n    } else if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => {\n        this.validateMenu(subItem);\n      });\n    }\n  }\n\n  protected abstract validateCollapseClass();\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoMenuComponent\n *\n * @description\n *\n * Esta diretiva permite adicionar um conteÃºdo personalizado entre a logo e o campo de filtro do cabeÃ§alho do\n * [`po-menu`](/documentation/po-menu).\n *\n * Para personalizar o conteÃºdo do cabeÃ§alho deve-se utilizar a diretiva `p-menu-header-template` dentro da *tag* do\n * [`po-menu`](/documentation/po-menu). Podendo ser utilizada de duas formas:\n *\n * Com `ng-template`\n * ```\n * ...\n * <po-menu [p-menus]=\"menus\">\n *   <ng-template p-menu-header-template>\n *     ...\n *   </ng-template>\n * </po-menu>\n * ...\n * ```\n *\n * ou com *syntax sugar*\n * ```\n * ...\n * <po-menu [p-menus]=\"menus\">\n *   <div *p-menu-header-template>\n *     ...\n *   </div>\n * </po-menu>\n * ...\n * ```\n *\n * > Quando o menu estiver colapsado ou tela for _mobile_ o conteÃºdo personalizado nÃ£o serÃ¡ exibido.\n */\n@Directive({\n  selector: '[p-menu-header-template]'\n})\nexport class PoMenuHeaderTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do po-menu.\n */\n@Injectable()\nexport class PoMenuItemsService {\n  private subjectParent = new Subject<any>();\n  private subjectChild = new Subject<any>();\n\n  // Envia informaÃ§Ãµes do click do po-menu-item para o po-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Recebe do po-menu-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n  // Recebe do po-menu as informaÃ§Ãµes processadas do click de um po-menu-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { PoMenuItemFiltered } from '../po-menu-item/po-menu-item-filtered.interface';\nimport { PoMenuFilter } from '../po-menu-filter/po-menu-filter.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a interface `PoMenuFilter`, utilizado para fazer requisiÃ§Ãµes ao serviÃ§o informado pelo usuÃ¡rio,\n * caso for uma URL, no componente `po-menu`.\n */\n@Injectable()\nexport class PoMenuService implements PoMenuFilter {\n\n  private _url: string;\n\n  get url(): string { return this._url; }\n\n  constructor(private http: HttpClient) { }\n\n  configProperties(url: string) {\n    this._url = url;\n  }\n\n  getFilteredData(search: string, params?: any): Observable<Array<PoMenuItemFiltered>> {\n    const filterParams = {\n      search,\n      ...params\n    };\n\n    return this.http.get(this.url, { params: filterParams })\n      .pipe(map((response: { items: Array<PoMenuItemFiltered> }) => response && response.items));\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { getFormattedLink, isMobile, openExternalLink } from '../../utils/util';\n\nimport { PoMenuBaseComponent } from './po-menu-base.component';\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\nimport { PoMenuItem } from './po-menu-item.interface';\nimport { PoMenuItemFiltered } from './po-menu-item/po-menu-item-filtered.interface';\nimport { PoMenuItemsService } from './services/po-menu-items.service';\nimport { PoMenuService } from './services/po-menu.service';\n\nconst poMenuDebounceTime = 400;\nconst poMenuMinLength = 3;\nconst poMenuRootLevel = 1;\n\n/**\n * @docsExtends PoMenuBaseComponent\n *\n * @description\n *\n * Aparece completo em telas com largura maior que 1200px, caso contrÃ¡rio o menu Ã© escondido e chamado por meio de um botÃ£o.\n *\n * O menu tambÃ©m pode ser colapsado. Essa opÃ§Ã£o Ã© habilitada quando todos os itens de primeiro nÃ­vel possuÃ­rem Ã­cones e textos curtos.\n * Se colapsado, somente os itens de primeiro nÃ­vel serÃ£o exibidos e, caso o item selecionado possua sub-nÃ­veis,\n * entÃ£o o menu alternarÃ¡ novamente para o estado aberto.\n *\n * Existe a possibilidade de customizar a logomarca, que Ã© exibida na parte superior do componente.\n *\n * E para adicionar um conteÃºdo personalizado entre a logomarca e o campo de filtro,\n * basta adicionar este conteÃºdo com a diretiva [**p-menu-header-template**](/documentation/po-menu-header-template).\n *\n * Caso utilizar o filtro de menus, Ã© possÃ­vel realizar buscas em serviÃ§o, apenas informando a URL do serviÃ§o ou a instÃ¢ncia de\n * um serviÃ§o customizado implementando a interface `PoMenuFilter`.\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     PoModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"po-menu-basic\" title=\"Portinari Menu Basic\">\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.html\"> </file>\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-labs\" title=\"Portinari Menu Labs\">\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.html\"> </file>\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-human-resources\" title=\"Portinari Menu - Human Resources\">\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.html\"> </file>\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.ts\"> </file>\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-menu',\n  templateUrl: './po-menu.component.html',\n  providers: [ PoMenuItemsService, PoMenuService ]\n})\nexport class PoMenuComponent extends PoMenuBaseComponent implements OnDestroy, OnInit, DoCheck {\n\n  @ContentChild(PoMenuHeaderTemplateDirective, { static: true }) menuHeaderTemplate: PoMenuHeaderTemplateDirective;\n\n  activeMenuItem: PoMenuItem;\n  collapsedMobile: boolean;\n  filterLoading = false;\n  groupedMenuItem: PoMenuItem;\n  linkActive: string;\n  mobileOpened: boolean = false;\n  noData: boolean = false;\n  parentRef: any;\n  timeoutFilter: any;\n\n  private filteringItems: boolean = false;\n  private menuInitialized: boolean = false;\n  private menuPrevious: string = null;\n  private resizeListener: () => void;\n\n  private itemSubscription: Subscription;\n  private routeSubscription: Subscription;\n\n  constructor(public changeDetector: ChangeDetectorRef,\n              viewRef: ViewContainerRef,\n              private element: ElementRef,\n              private renderer: Renderer2,\n              private router: Router,\n              private menuItemsService: PoMenuItemsService,\n              menuService: PoMenuService) {\n\n    super(menuService);\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  private get isActiveItemMenuSubMenu() {\n    return this.activeMenuItem['level'] > this.groupedMenuItem['level'];\n  }\n\n  get enableCollapse() {\n    return this.isCollapsed && !this.collapsedMobile;\n  }\n\n  get enableCollapseButton() {\n    return this.allowCollapseMenu && !this.collapsed && !this.mobileOpened;\n  }\n\n  get hasFooter() {\n    return this.allowCollapseMenu && !this.mobileOpened && this.enableCollapseButton || (this.collapsed && !this.collapsedMobile);\n  }\n\n  get isCollapsed() {\n    return this.allowCollapseMenu && this.collapsed;\n  }\n\n  ngDoCheck() {\n    if (this.filteringItems && this.filter) {\n      return;\n    }\n\n    const menuCurrent = JSON.stringify(this.menus);\n\n    if (this.menuPrevious !== menuCurrent || !this.menuInitialized) {\n      this.updateMenu();\n      this.validateCollapseClass();\n    }\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  ngOnInit() {\n    this.subscribeToMenuItem();\n    this.subscribeToRoute();\n\n    setTimeout(() => {\n      const urlRouter = this.checkingRouterChildrenFragments();\n      this.checkActiveMenuByUrl(urlRouter);\n    });\n  }\n\n  activateMenuByUrl(urlPath: string, menus: Array<PoMenuItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        const formattedLink = getFormattedLink(menu.link);\n        if (formattedLink === urlPath) {\n          this.linkActive = formattedLink;\n          this.activateMenuItem(menu);\n          return true;\n        } else {\n          return this.activateMenuByUrl(urlPath, menu.subItems);\n        }\n      });\n    }\n  }\n\n  checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  /**\n   * <a id=\"colapseMethod\"></a>\n   *\n   * *MÃ©todo para colapsar (retrair) o menu.\n   */\n  collapse() {\n    this.validateToggleMenu(true);\n  }\n\n  debounceFilter(filter: string) {\n    clearTimeout(this.timeoutFilter);\n\n    this.timeoutFilter = setTimeout(() => {\n      this.filterProcess(filter);\n    }, poMenuDebounceTime);\n  }\n\n  /**\n   * <a id=\"expandMethod\"></a>\n   *\n   * *MÃ©todo para expandir (aumentar) o menu.\n   */\n  expand() {\n    this.validateToggleMenu(false);\n  }\n\n  subscribeToMenuItem() {\n    this.itemSubscription = this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: PoMenuItem) => {\n      this.clickMenuItem(menu);\n    });\n  }\n\n  subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkingRouterChildrenFragments();\n        this.checkActiveMenuByUrl(urlRouter);\n      }\n    });\n  }\n\n  /**\n   * <a id=\"toggleMethod\"></a>\n   * *MÃ©todo que colapsa e expande o menu alternadamente.\n   *\n   * > *Os mÃ©todos apenas vÃ£o colapsar/expandir o menu se:\n   *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   */\n  toggle() {\n    this.validateToggleMenu(!this.collapsed);\n  }\n\n  toggleMenuMobile(): void {\n    this.mobileOpened = !this.mobileOpened;\n    this.collapsedMobile = this.collapsed && this.mobileOpened;\n\n    this.validateCollapseClass(this.collapsedMobile);\n\n    if (isMobile()) {\n      return;\n    }\n\n    if (this.mobileOpened) {\n      this.createResizeListener();\n    }\n  }\n\n  private activateCollapseSubMenuItem() {\n\n    this.clearGroupMenuIfFirstLevel(this.activeMenuItem);\n\n    if (!this.collapsed && this.activeMenuItem['level'] > poMenuRootLevel && this.isActiveItemMenuSubMenu) {\n      this.openParentMenu(this.activeMenuItem);\n    }\n  }\n\n  private activateMenuItem(menu: PoMenuItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = menu.link;\n    if (this.activeMenuItem['level'] > poMenuRootLevel) {\n      this.openParentMenu(this.activeMenuItem);\n    } else {\n      this.groupedMenuItem = null;\n    }\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });\n  }\n\n  private areSubMenus(menus: Array<PoMenuItem>) {\n    return menus.every(menu => menu['level'] > poMenuRootLevel);\n  }\n\n  private checkingRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private clearGroupMenuIfFirstLevel(activeMenuItem: PoMenuItem) {\n    if (activeMenuItem['level'] === poMenuRootLevel) {\n      this.groupedMenuItem = undefined;\n    }\n  }\n\n  private clickMenuItem(menu: PoMenuItem) {\n    if (menu.action) {\n      this.executeMenuAction(menu);\n    }\n\n    if (menu['type'] === 'externalLink') {\n      openExternalLink(menu.link);\n\n    } else if (menu['type'] === 'internalLink') {\n      this.activateMenuItem(menu);\n\n    } else if (menu['type'] === 'subItems') {\n      if (this.filteringItems) {\n        this.filteringItems = false;\n      }\n\n      this.groupMenuItem(menu);\n    }\n\n    if (menu['type'] !== 'subItems') {\n      this.mobileOpened = false;\n    }\n  }\n\n  private convertToMenuItemFiltered(menuItem: any = { label: '', link: '' }): PoMenuItemFiltered {\n    const { label, link } = menuItem;\n\n    const menuItemFiltered: PoMenuItemFiltered = { label, link };\n\n    this.setMenuItemProperties(menuItemFiltered);\n\n    return menuItemFiltered;\n  }\n\n  private createResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.toggleResize();\n      this.resizeListener();\n    });\n  }\n\n  private executeMenuAction(menu: PoMenuItem): void {\n    if (typeof menu.action === 'string') {\n      this.parentRef[menu.action](menu);\n    } else {\n      menu.action.call(this.parentRef, menu);\n    }\n  }\n\n  private async filterItems(filter: string) {\n    const trimFilter = filter && filter.trim();\n\n    if (trimFilter) {\n      this.filteredItems = [];\n      this.filteredItems = this.filterService ? await this.filterOnService(trimFilter) : this.filterLocalItems(trimFilter);\n      this.filteringItems = true;\n    } else {\n      this.filteredItems = [...this.menus];\n      this.filteringItems = false;\n    }\n\n  }\n\n  private filterLocalItems(filter: string) {\n    const filteredItems = [];\n\n    this.findItems(this.menus, filter.toLowerCase(), filteredItems);\n\n    return filteredItems;\n  }\n\n  private filterProcess(filter: string) {\n    this.filterLoading = true;\n\n    this.filterItems(filter).then(() => {\n\n      this.filterLoading = false;\n\n      this.showNoData();\n      this.changeDetector.detectChanges();\n      this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n\n    }).catch(error => {\n      this.filterLoading = false;\n      Promise.reject(error);\n    });\n  }\n\n  private async filterOnService(search: string = '') {\n    if (search.length >= poMenuMinLength) {\n\n      return await this.filterService.getFilteredData(search, this.params)\n        .pipe(\n          map(menuItemsFiltered => menuItemsFiltered.map(menuItem => this.convertToMenuItemFiltered(menuItem)))\n        )\n        .toPromise();\n    } else {\n      return this.filteredItems;\n    }\n  }\n\n  private findItems(menus: Array<PoMenuItem>, filter: string, filteredItems: Array<any>) {\n    menus.forEach(menu => {\n      if ((menu.label.toLowerCase().includes(filter) && !menu.subItems) ||\n          (menu.subItems && this.findItems(menu.subItems, filter, filteredItems))) {\n            filteredItems.push(menu);\n      }\n    });\n  }\n\n  private findParent(menus: Array<PoMenuItem>, menuItem: PoMenuItem): PoMenuItem {\n    const getParent = function(menuItems: Array<PoMenuItem>, id) {\n      if (menuItems) {\n        for (let index = 0; index < menuItems.length; index++) {\n          const menu = menuItems[index];\n          if (menu.subItems && menu.subItems.find(subItem => subItem['id'] === id)) {\n            return menu;\n          }\n          const found = getParent(menu.subItems, id);\n          if (found) {\n            return found;\n          }\n        }\n      }\n    };\n    return getParent(menus, menuItem['id']);\n  }\n\n  private findRootParent(menus: Array<PoMenuItem>, menu: PoMenuItem): PoMenuItem {\n\n    const findParent = this.findParent;\n\n    const getRootParent = function(menuItems: Array<PoMenuItem>, menuItem): PoMenuItem {\n\n      let parent = findParent(menuItems, menuItem);\n\n      if (parent['level'] !== poMenuRootLevel) {\n        parent = getRootParent(menuItems, parent);\n      }\n      return parent;\n    };\n    return getRootParent(menus, menu);\n  }\n\n  private getActiveMenuParent(menus: Array<PoMenuItem>, activeMenuItem: PoMenuItem, groupedMenuItem: PoMenuItem) {\n    if (this.areSubMenus([groupedMenuItem, activeMenuItem])) {\n      return this.findRootParent(menus, activeMenuItem);\n    }\n  }\n\n  private groupMenuItem(menu: PoMenuItem): void {\n    if (this.collapsed) {\n      this.toggleMenuCollapse();\n    }\n\n    menu['isOpened'] = !menu['isOpened'];\n    this.groupedMenuItem = menu;\n\n    if (this.activeMenuItem && menu['isOpened']\n      && this.isActiveItemMenuSubMenu\n      && this.isRootMenuEqualGroupedMenu(this.menus, this.activeMenuItem, menu)) {\n      this.activateMenuItem(this.activeMenuItem);\n    }\n\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n  }\n\n  private isRootMenuEqualGroupedMenu(menus: Array<PoMenuItem>, activeMenuItem: PoMenuItem, groupedMenuItem: PoMenuItem) {\n    const activeMenuRootParent = this.findRootParent(menus, activeMenuItem);\n    return activeMenuRootParent['id'] === groupedMenuItem['id'];\n  }\n\n  private openParentMenu(childMenu: PoMenuItem): void {\n    const parent = this.findParent(this.menus, childMenu);\n    parent['isOpened'] = true;\n    this.groupedMenuItem = parent;\n  }\n\n  private showNoData() {\n    this.noData = this.filteredItems.length === 0;\n  }\n\n  private toggleGroupedMenuItem() {\n    this.groupedMenuItem['isOpened'] = !this.collapsed && this.allowCollapseMenu;\n  }\n\n  private toggleMenuCollapse(collapsed: boolean = false) {\n\n    this.collapsed = collapsed;\n\n    if (this.groupedMenuItem && this.activeMenuItem) {\n      this.groupedMenuItem = this.getActiveMenuParent(this.menus, this.activeMenuItem, this.groupedMenuItem) || this.groupedMenuItem;\n      this.toggleGroupedMenuItem();\n    }\n\n    if (this.activeMenuItem) {\n      this.activateCollapseSubMenuItem();\n      this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });\n    }\n\n    this.updateMenu();\n  }\n\n  private toggleResize() {\n    if (this.mobileOpened) {\n      this.mobileOpened = false;\n      this.collapsedMobile = false;\n      this.validateCollapseClass(this.collapsedMobile);\n    }\n  }\n\n  private validateToggleMenu(collapsed: boolean) {\n\n    if (!this.allowCollapseMenu) {\n      return;\n    }\n\n    this.toggleMenuCollapse(collapsed);\n  }\n\n  private updateMenu() {\n    this.menuInitialized = true;\n    this.setMenuExtraProperties();\n    this.filteredItems = [...this.menus];\n    this.menuPrevious = JSON.stringify(this.menus);\n    this.validateMenus(this.menus);\n  }\n\n  protected validateCollapseClass(collapsedMobile?: boolean) {\n    const wrapper = this.element.nativeElement.parentNode;\n    this.renderer[this.isCollapsed && !collapsedMobile ? 'addClass' : 'removeClass'](wrapper, 'po-collapsed-menu');\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que apresenta o campo de pesquisa no po-menu.\n */\n@Component({\n  selector: 'po-menu-filter',\n  templateUrl: './po-menu-filter.component.html'\n})\nexport class PoMenuFilterComponent {\n\n  // VariÃ¡vel necessÃ¡ria para o po-clean identificar que deve ser criado.\n  readonly clean = true;\n\n  @Input('p-loading') loading: boolean;\n\n  // utilizado para repassar ao po-clean\n  @ViewChild('inputFilter', { read: ElementRef, static: true }) inputFilterElement: ElementRef;\n\n  @Output('p-filter') filter = new EventEmitter();\n\n  filterItems(search: string) {\n    this.filter.emit(search);\n  }\n\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToInt, convertToBoolean } from '../../../utils/util';\n\nimport { PoMenuItem } from '../po-menu-item.interface';\nimport { PoMenuItemsService } from '../services/po-menu-items.service';\n\n// valor para que caibam 3 linhas de `label`\nconst poMenuItemSubItemSize = 98;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do po-menu.\n */\n@Component({\n  selector: 'po-menu-item',\n  templateUrl: './po-menu-item.component.html'\n})\nexport class PoMenuItemComponent implements OnDestroy, OnInit {\n\n  private _badgeValue: number;\n  private _isSelected: boolean = false;\n  private _isSubItem: boolean = false;\n  private _subItems: Array<PoMenuItem>;\n\n  isSelectedSubItem;\n  maxHeight: number = 0;\n\n  private itemSubscription: Subscription;\n\n  // AÃ§Ã£o que serÃ¡ chamada ao clicar no item.\n  @Input('p-action') action: string | Function;\n\n  // Indica se contÃ©m algum item filho com o badge.\n  @Input('p-badge-alert') badgeAlert: boolean;\n\n  // Cor do badge.\n  @Input('p-badge-color') badgeColor: string;\n\n  // Valor do badge.\n  @Input('p-badge-value') set badgeValue(badgeValue: number) {\n    this._badgeValue = convertToInt(badgeValue);\n  }\n\n  get badgeValue() {\n    return this._badgeValue;\n  }\n\n  // Indica se o menu estÃ¡ colapsado\n  @Input('p-collapsed-menu') collapsedMenu: boolean;\n\n  // Ãcone de menu\n  @Input('p-icon') icon: string;\n\n  // Identificador do item.\n  @Input('p-id') id: string;\n\n  // Indica se o item estÃ¡ aberto (menu agrupado)\n  @Input('p-is-opened') isOpened: boolean;\n\n  // Indica se o item estÃ¡ selecionado.\n  @Input('p-is-selected') set isSelected(value: boolean) {\n    this._isSelected = convertToBoolean(value);\n\n    this.isSelectedSubItem = this.isSelected && this.isSubItem;\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n\n  // Indica se o item Ã© um sub item\n  @Input('p-is-sub-item') set isSubItem(value: boolean) {\n    this._isSubItem = convertToBoolean(value);\n  }\n\n  get isSubItem() {\n    return this._isSubItem;\n  }\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('p-label') label: string;\n\n  // Indica qual em nÃ­vel do po-menu encontra-se.\n  @Input('p-level') level: number;\n\n  // Link do item.\n  @Input('p-link') link?: string;\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('p-short-label') shortLabel: string;\n\n  // Lista de sub-items.\n  @Input('p-sub-items') set subItems(subitems: Array<PoMenuItem>) {\n    this._subItems = subitems;\n    if (this.isOpened) {\n      this.calcMenuSubItemsMaxHeight();\n    }\n  }\n\n  get subItems() {\n    return this._subItems;\n  }\n\n  // Indica o tipo de item, como 'internalLink' ou 'subItems'.\n  @Input('p-type') type: string;\n\n  @ViewChild('menuSubItems', { static: false }) menuSubItems: ElementRef;\n\n  get canShowBadge() {\n    return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;\n  }\n\n  constructor(private menuItemsService: PoMenuItemsService) { }\n\n  ngOnDestroy(): void {\n    this.itemSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n    // subscribe to menu component messages\n    this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n  clickMenuItem(event): void {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked({\n        link: this.link,\n        action: this.action,\n        id: this.id,\n        icon: this.icon,\n        label: this.label,\n        level: this.level,\n        subItems: this.subItems,\n        isSelected: this.isSelected,\n        isOpened: this.isOpened,\n        shortLabel: this.shortLabel,\n        type: this.type\n      });\n    }\n  }\n\n  private accordionAnimation(menuActive: PoMenuItem, menuOpened: PoMenuItem, hasSubItemOpened: boolean, activatedByRoute: boolean) {\n\n    if (this.id === menuOpened['id']) {\n      this.maxHeight = this.subItems.length * poMenuItemSubItemSize;\n    }\n\n    if (hasSubItemOpened) {\n      this.maxHeight = menuOpened['isOpened'] ?\n        (this.maxHeight + menuOpened.subItems.length * poMenuItemSubItemSize) :\n        (this.maxHeight - menuOpened.subItems.length * poMenuItemSubItemSize);\n\n      if (activatedByRoute) {\n        this.maxHeight = this.getMinimumHeight(0, this, menuActive);\n      }\n    }\n  }\n\n  private activateMenu(menu: any): void {\n    this.isSelected = menu && this.id === menu.id;\n  }\n\n  private calcMenuSubItemsMaxHeight() {\n    setTimeout(() => {\n      const subItems = Array.from(this.menuSubItems.nativeElement.querySelectorAll('.po-menu-item'));\n      subItems.forEach((menuItem: any) => this.maxHeight += menuItem.offsetHeight);\n    });\n  }\n\n  private getMinimumHeight(minimumHeight: number, menuItem: PoMenuItem, menuActive: PoMenuItem) {\n    minimumHeight += poMenuItemSubItemSize;\n\n    if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {\n      for (let index = 0; index < menuItem.subItems.length; index++) {\n        minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);\n      }\n    }\n\n    return minimumHeight;\n  }\n\n  private groupedMenu(menuActive: PoMenuItem, menuOpened: PoMenuItem, activatedByRoute: boolean = false): void {\n\n    const hasSubItemOpened = (menuOpened && this.id !== menuOpened['id']) ? this.hasSubItem(this.subItems, menuOpened['id']) : false;\n\n    this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);\n\n    this.isSelected = (menuActive && !this.isOpened) ? this.hasSubItem(this.subItems, menuActive['id']) : false;\n\n    if (!this.isOpened) {\n      this.maxHeight = 0;\n      return;\n    }\n    this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);\n  }\n\n  private hasSubItem(subItems: Array<PoMenuItem>, id: string): boolean {\n    if (subItems) {\n      return subItems.some(item => {\n        return item['id'] === id ? true : this.hasSubItem(item.subItems, id);\n      });\n    }\n  }\n\n  private isMenuOpened(menuOpened: PoMenuItem, hasSubItemOpened: boolean): boolean {\n    if (menuOpened) {\n      return (this.id === menuOpened['id']) ? menuOpened['isOpened'] : hasSubItemOpened;\n    }\n\n    return false;\n  }\n\n  private processMenuItem(menu) {\n\n    if (this.type === 'internalLink') {\n      this.activateMenu(menu.active);\n      return;\n    }\n\n    if (this.type === 'subItems') {\n      this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);\n      return;\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBadgeModule } from '../po-badge/po-badge.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\n\nimport { PoMenuComponent } from './po-menu.component';\nimport { PoMenuFilterComponent } from './po-menu-filter/po-menu-filter.component';\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\nimport { PoMenuItemComponent } from './po-menu-item/po-menu-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-menu.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoBadgeModule,\n    PoFieldModule,\n    PoLoadingModule\n  ],\n  declarations: [\n    PoMenuComponent,\n    PoMenuFilterComponent,\n    PoMenuHeaderTemplateDirective,\n    PoMenuItemComponent\n  ],\n  exports: [\n    PoMenuComponent,\n    PoMenuHeaderTemplateDirective\n  ]\n})\nexport class PoMenuModule { }\n","import { Input } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral composto apenas por Ã­cones e com um nÃ­vel, utilizado para navegaÃ§Ã£o\n * em pÃ¡ginas internas, externas da aplicaÃ§Ã£o ou aciona uma aÃ§Ã£o.\n *\n * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informaÃ§Ãµes dos\n * itens de menu como textos, links para redirecionamento, aÃ§Ãµes e Ã­cones.\n */\nexport class PoMenuPanelBaseComponent {\n\n  private _menus;\n\n  /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('p-menus') set menus(menus: Array<PoMenuPanelItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n\n    this.setMenuExtraProperties(this._menus);\n    this.validateMenus(this._menus);\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  private setMenuExtraProperties(menus: Array<PoMenuPanelItem>) {\n    menus.forEach(menuItem => this.setMenuItemProperties(<PoMenuPanelItemInternal> menuItem));\n  }\n\n  private setMenuItemProperties(menuItem: PoMenuPanelItemInternal) {\n    menuItem.id = menuItem.id || uuid();\n    menuItem.type = this.setMenuType(menuItem);\n  }\n\n  private setMenuType(menuItem: PoMenuPanelItem): string {\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: PoMenuPanelItem) {\n    if (!menuItem.label) {\n      throw new Error('O atributo PoMenuPanelItem.label nÃ£o pode ser vazio.');\n    }\n\n    if (!menuItem.icon) {\n      throw new Error('O atributo PoMenuPanelItem.icon nÃ£o pode ser vazio.');\n    }\n  }\n\n  private validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do po-menu-panel.\n */\n@Injectable()\nexport class PoMenuPanelItemsService {\n\n  private subjectChild = new Subject<any>();\n  private subjectParent = new Subject<any>();\n\n  // Recebe do po-menu-panel-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Recebe do po-menu-panel as informaÃ§Ãµes processadas do click de um po-menu-panel-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n\n  // Envia informaÃ§Ãµes do click do po-menu-panel-item para o po-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n}\n","import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';\n\nimport { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\n\n/**\n * @docsExtends PoMenuPanelBaseComponent\n *\n * @description\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     PoModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"po-menu-panel-basic\" title=\"Portinari Menu Panel Basic\">\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-panel-labs\" title=\"Portinari Menu Panel Labs\">\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-panel-customer\" title=\"Portinari Menu Panel - Customers\">\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-menu-panel',\n  templateUrl: './po-menu-panel.component.html'\n})\nexport class PoMenuPanelComponent extends PoMenuPanelBaseComponent implements OnDestroy, OnInit {\n\n  activeMenuItem: PoMenuPanelItem;\n  linkActive: string;\n  parentRef: any;\n\n  private routeSubscription: Subscription;\n  private itemSubscription: Subscription;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private location: Location,\n    private menuItemsService: PoMenuPanelItemsService,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n   this.subscribeToMenuItem();\n   this.subscribeToRoute();\n  }\n\n  private activateMenuByUrl(urlPath: string, menus: Array<PoMenuPanelItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        if (getFormattedLink(menu.link) === urlPath) {\n          this.activateMenuItem(menu);\n          return true;\n        }\n      });\n    }\n  }\n\n  private activateMenuItem(menu: PoMenuPanelItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = getFormattedLink(menu.link);\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });\n  }\n\n  private checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  private clickMenuItem(menu: PoMenuPanelItemInternal) {\n    if (menu.action) {\n      callFunction(menu.action, this.parentRef, menu);\n    }\n\n    if (menu.type === 'externalLink') {\n\n      openExternalLink(menu.link);\n\n    } else if (menu.type === 'internalLink') {\n\n      this.activateMenuItem(menu);\n    }\n  }\n\n  private subscribeToRoute() {\n     this.routeSubscription = this.router.events.subscribe(rounterEvent => {\n      if (rounterEvent instanceof NavigationEnd) {\n        this.checkActiveMenuByUrl(this.location.path());\n      }\n    });\n  }\n\n  private subscribeToMenuItem() {\n    this.itemSubscription =\n      this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: PoMenuPanelItemInternal) => this.clickMenuItem(menu));\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item-internal.interface';\nimport { PoMenuPanelItemsService } from '../services/po-menu-panel-items.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do po-menu-panel.\n */\n@Component({\n  selector: 'po-menu-panel-item',\n  templateUrl: './po-menu-panel-item.component.html'\n})\nexport class PoMenuPanelItemComponent implements OnDestroy, OnInit {\n\n  itemsSubscription: Subscription;\n\n  @Input('p-menu-item-internal') menuItemInternal: PoMenuPanelItemInternal;\n\n  constructor(private menuItemsService: PoMenuPanelItemsService) { }\n\n  ngOnDestroy() {\n    this.itemsSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    // subscribe to menu component messages\n    this.subscribeMenuClickedFromParent();\n  }\n\n  clickMenuItem(event) {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);\n    }\n  }\n\n  private activateMenu(menu: PoMenuPanelItemInternal) {\n    this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;\n  }\n\n  private processMenuItem(menu) {\n    if (this.menuItemInternal.type === 'internalLink') {\n      this.activateMenu(menu.active);\n    }\n  }\n\n  private subscribeMenuClickedFromParent() {\n   this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoMenuPanelComponent } from './po-menu-panel.component';\nimport { PoMenuPanelItemComponent } from './po-menu-panel-item/po-menu-panel-item.component';\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-menu-panel.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoFieldModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoMenuPanelComponent,\n    PoMenuPanelItemComponent\n  ],\n  exports: [\n    PoMenuPanelComponent\n  ],\n  providers: [\n    PoMenuPanelItemsService\n  ]\n})\nexport class PoMenuPanelModule { }\n","import { Component, Input, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'po-navbar-action',\n  templateUrl: './po-navbar-action.component.html'\n})\nexport class PoNavbarActionComponent {\n\n  private parentRef: any;\n\n  @Input('p-action') action?: Function;\n\n  @Input('p-icon') icon: string;\n\n  @Input('p-label') label: string;\n\n  @Input('p-link') link?: string;\n\n  @Input('p-tooltip-text') tooltip?: string;\n\n  constructor(viewContainerRef: ViewContainerRef, private router: Router) {\n    this.parentRef = viewContainerRef['_view']['component'];\n  }\n\n  click() {\n    if (this.action) {\n      callFunction(this.action, this.parentRef || this);\n      return;\n    }\n\n    if (this.link) {\n      return this.openUrl(this.link);\n    }\n  }\n\n  private openUrl(url: string) {\n\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoNavbarIconAction } from '../../interfaces/po-navbar-icon-action.interface';\n\n@Component({\n  selector: 'po-navbar-action-popup',\n  templateUrl: './po-navbar-action-popup.component.html'\n})\nexport class PoNavbarActionPopupComponent {\n\n  @Input('p-icon-actions') iconActions: Array<PoNavbarIconAction>;\n\n  getLastIconAction() {\n    if (this.iconActions && this.iconActions.length) {\n      return this.iconActions[this.iconActions.length - 1].icon;\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoNavbarIconAction } from '../interfaces/po-navbar-icon-action.interface';\n\n@Component({\n  selector: 'po-navbar-actions',\n  templateUrl: './po-navbar-actions.component.html'\n})\nexport class PoNavbarActionsComponent {\n\n  private _iconActions: Array<PoNavbarIconAction>;\n\n  @Input('p-icon-actions') set iconActions(actions: Array<PoNavbarIconAction>) {\n    this._iconActions = actions.map(action => ({ ...action, separator: true, url: action.link }));\n  }\n\n  get iconActions() {\n    return this._iconActions;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoNavbarActionComponent } from './po-navbar-action/po-navbar-action.component';\nimport { PoNavbarActionPopupComponent } from './po-navbar-action-popup/po-navbar-action-popup.component';\nimport { PoNavbarActionsComponent } from './po-navbar-actions.component';\nimport { PoPopupModule } from '../../po-popup/po-popup.module';\nimport { PoTooltipModule } from '../../../directives/po-tooltip/po-tooltip.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PoPopupModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoNavbarActionComponent,\n    PoNavbarActionPopupComponent,\n    PoNavbarActionsComponent\n  ],\n  exports: [\n    PoNavbarActionsComponent\n  ]\n})\nexport class PoNavbarActionsModule { }\n","import { Input } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, poLocaleDefault } from '../../utils/util';\n\nimport { PoMenuComponent } from '../po-menu';\nimport { PoNavbarIconAction } from './interfaces/po-navbar-icon-action.interface';\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\nimport { PoNavbarLiterals } from './interfaces/po-navbar-literals.interface';\n\nexport const poNavbarLiteralsDefault = {\n  en: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  es: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  pt: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  ru: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar ÑÐ²ÑÐ·Ð¸'\n  }\n};\n\n/**\n * @description\n *\n * O componente `po-navbar` Ã© um cabeÃ§alho fixo que permite apresentar uma lista de links para facilitar a navegaÃ§Ã£o pelas\n * pÃ¡ginas da aplicaÃ§Ã£o. TambÃ©m possui Ã­cones com aÃ§Ãµes.\n */\nexport abstract class PoNavbarBaseComponent {\n\n  private _iconActions: Array<PoNavbarIconAction> = [];\n  private _items: Array<PoNavbarItem> = [];\n  private _literals: PoNavbarLiterals;\n  private _logo: string;\n  private _shadow: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes apresentadas em Ã­cones no lado direito do `po-navbar`.\n   */\n  @Input('p-icon-actions') set iconActions(value: Array<PoNavbarIconAction>) {\n    this._iconActions = Array.isArray(value) ? value : [];\n  }\n\n  get iconActions(): Array<PoNavbarIconAction> {\n    return this._iconActions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de items do `po-navbar`.\n   */\n  @Input('p-items') set items(value: Array<PoNavbarItem>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items(): Array<PoNavbarItem> {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com a literal usada na propriedade `p-literals`.\n   *\n   * Para customizar a literal, basta declarar um objeto do tipo `PoNavbarLiterals` conforme exemplo abaixo:\n   *\n   * ```\n   *  const customLiterals: PoNavbarLiterals = {\n   *    navbarLinks: 'Itens de navegaÃ§Ã£o'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-navbar\n   *   [p-literals]=\"customLiterals\">\n   * </po-navbar>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoNavbarLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poNavbarLiteralsDefault[poLocaleDefault],\n        ...poNavbarLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poNavbarLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poNavbarLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a logo apresentada `po-navbar`.\n   */\n  @Input('p-logo') set logo(value: string) {\n    this._logo = value;\n\n    if (this.menu) {\n      this.validateMenuLogo();\n    }\n  }\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso jÃ¡ possua um menu na aplicaÃ§Ã£o o mesmo deve ser repassado para essa propriedade para que quando entre em modo\n   * responsivo os items do `po-navbar` possam ser adicionados no primeiro item do menu definido.\n   *\n   * > Ao utilizar menu e navbar com logo mantÃ©m apenas a logo do navbar.\n   *\n   * Exemplo:\n   *\n   * ```\n   * <po-navbar\n   *  [p-items]=\"items\"\n   *  [p-icon-actions]=\"iconActions\"\n   *  [p-menu]=\"userMenu\">\n   * </po-navbar>\n   * <div class=\"po-wrapper\">\n   *  <po-menu #userMenu\n   *   [p-menus]=\"[{ label: 'Item 1', link: '/' }]\">\n   *  </po-menu>\n   * </div>\n   * ```\n   */\n  @Input('p-menu') menu?: PoMenuComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica uma sombra na parte inferior do `po-navbar`.\n   *\n   * @default `false`\n   */\n  @Input('p-shadow') set shadow(value: boolean) {\n    this._shadow = convertToBoolean(value);\n  }\n\n  get shadow(): boolean {\n    return this._shadow;\n  }\n\n  protected abstract validateMenuLogo(): void;\n\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { PoNavbarItem } from '../../interfaces/po-navbar-item.interface';\n\nimport { isExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'po-navbar-item',\n  templateUrl: './po-navbar-item.component.html'\n})\nexport class PoNavbarItemComponent {\n\n  @Input('p-action') action: Function;\n\n  @Input('p-clickable') clickable?: boolean;\n\n  @Input('p-label') label: string;\n\n  @Input('p-link') link?: string;\n\n  @Output('p-click') click: EventEmitter<PoNavbarItem> = new EventEmitter<PoNavbarItem>();\n\n  get type() {\n    return isExternalLink(this.link) ? 'externalLink' : 'internalLink';\n  }\n\n  itemClick(label?: string, link?: string) {\n\n    if (this.action) {\n      this.action({ label, link });\n    }\n\n    this.click.emit();\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoNavbarItem } from '../interfaces/po-navbar-item.interface';\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\n\n@Component({\n  selector: 'po-navbar-items',\n  templateUrl: './po-navbar-items.component.html'\n})\nexport class PoNavbarItemsComponent implements OnInit, OnDestroy {\n\n  selectedItem: PoNavbarItem;\n\n  private routeSubscription: Subscription;\n\n  @ViewChild('navbarItemsContainer', { read: ElementRef, static: true }) navbarItemsContainer: ElementRef;\n\n  @ViewChildren(PoNavbarItemComponent, { read: ElementRef }) allNavbarItems:  QueryList<any>;\n\n  @Input('p-items') items: Array<PoNavbarItem>;\n\n  constructor(private router: Router) { }\n\n  ngOnDestroy() {\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.subscribeToRoute();\n  }\n\n  selectItem(item: PoNavbarItem) {\n    this.selectedItem = item;\n  }\n\n  private checkActiveItemByUrl(urlRouter: string) {\n    this.selectedItem = this.items.find(item => item.link === urlRouter);\n  }\n\n  private checkRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkRouterChildrenFragments();\n        this.checkActiveItemByUrl(urlRouter);\n      }\n    });\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { PoMenuItem } from '../po-menu';\nimport { PoNavbarBaseComponent } from './po-navbar-base.component';\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\nimport { PoNavbarItemsComponent } from './po-navbar-items/po-navbar-items.component';\n\nconst poNavbarNavigationWidth = 88;\nconst poNavbarMenuMedia = 768;\nconst poNavbarMatchMedia = `(max-width: ${poNavbarMenuMedia}px)`;\nconst poNavbarTiming = '250ms ease';\n\n/**\n * @docsExtends PoNavbarBaseComponent\n */\n@Component({\n  selector: 'po-navbar',\n  templateUrl: './po-navbar.component.html'\n})\nexport class PoNavbarComponent extends PoNavbarBaseComponent implements AfterViewInit, OnDestroy {\n\n  disableRight: boolean;\n  showItemsNavigation: boolean = false;\n\n  private mediaQuery: any;\n  private offset: number = 0;\n  private player: AnimationPlayer;\n  private menuItems: Array<PoMenuItem>;\n\n  protected windowResizeListener: () => void;\n\n  get navbarItemNavigationDisableLeft() {\n    return this.offset === 0;\n  }\n\n  get navbarItemNavigationDisableRight() {\n    return this.disableRight && this.offset !== 0;\n  }\n\n  @ViewChild(PoNavbarItemsComponent, { read: ElementRef, static: true }) navbarItemsElement: ElementRef;\n\n  @ViewChild(PoNavbarItemsComponent, { static: true }) navbarItems: PoNavbarItemsComponent;\n\n  constructor(private renderer: Renderer2, private builder: AnimationBuilder, private changeDetector: ChangeDetectorRef) {\n    super();\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.displayItemsNavigation.bind(this));\n  }\n\n  ngAfterViewInit() {\n    this.displayItemsNavigation();\n\n    if (this.menu) {\n      this.initNavbarMenu();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.mediaQuery) {\n      this.mediaQuery.removeListener(this.onMediaQueryChange);\n    }\n  }\n\n  navigateItems(orientation: string) {\n    orientation === 'left' ? this.navigateLeft() : this.navigateRight();\n\n    this.animate(this.offset);\n  }\n\n  private allNavbarItemsWidth() {\n    return this.navbarItems.allNavbarItems.reduce((previous: any, current: any) => previous + current.nativeElement.offsetWidth, 0);\n  }\n\n  private animate(offset: number) {\n    const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n    this.player = animation.create(this.navbarItems.navbarItemsContainer.nativeElement);\n    this.player.play();\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([\n      animate(\n        poNavbarTiming,\n        keyframes([style({ transform: `translateX(${-offset}px)` })])\n      )\n    ]);\n  }\n\n  private changeNavbarMenuItems(isCollapsedMedia: any, menuItems: Array<PoMenuItem>, navbarItems: Array<PoNavbarItem>, label: string) {\n\n    if (isCollapsedMedia) {\n      const subItems = [{ label, subItems: navbarItems }];\n      this.menu.menus = [...subItems, ...menuItems];\n    } else {\n      this.menu.menus = menuItems;\n    }\n  }\n\n  private calculateLeftNavigation() {\n\n    let calculatedOffset: number;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const navbarItemOffset = navbarItem.nativeElement.offsetLeft;\n      const navbarItemWidth = navbarItem.nativeElement.offsetWidth;\n\n      if (navbarItemOffset >= this.offset) {\n        calculatedOffset = navbarItemOffset - (this.navbarItemsWidth() - navbarItemWidth);\n        return true;\n      }\n    });\n    return calculatedOffset;\n  }\n\n  private calculateRightNavigation(itemBreakPoint: number) {\n\n    let calculatedOffset: number;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const offsetLeft = navbarItem.nativeElement.offsetLeft;\n      const finalPosition = navbarItem.nativeElement.offsetWidth + offsetLeft;\n\n      if (itemBreakPoint < finalPosition) {\n        calculatedOffset = offsetLeft;\n        return true;\n      }\n\n    });\n    return calculatedOffset;\n  }\n\n  private displayItemsNavigation() {\n    this.showItemsNavigation = this.navbarItemsWidth() < this.allNavbarItemsWidth() + poNavbarNavigationWidth;\n\n    this.changeDetector.detectChanges();\n\n    if (this.offset !== 0) {\n      this.setOffsetToZero();\n      this.animate(this.offset);\n    }\n  }\n\n  private initNavbarMenu() {\n    this.mediaQuery = window.matchMedia(poNavbarMatchMedia);\n    this.menuItems = this.menu.menus;\n\n    if (window.innerWidth < poNavbarMenuMedia) {\n      this.changeNavbarMenuItems(true, this.menuItems, this.items, this.literals.navbarLinks);\n    }\n\n    this.validateMenuLogo();\n\n    this.mediaQuery.addListener(this.onMediaQueryChange);\n  }\n\n  private navbarItemsWidth() {\n    return this.navbarItemsElement.nativeElement.offsetWidth;\n  }\n\n  private navigateLeft() {\n    this.disableRight = false;\n\n    this.offset = this.calculateLeftNavigation();\n\n    if (this.offset < 0) {\n      this.setOffsetToZero();\n    }\n  }\n\n  private navigateRight() {\n\n    const maxAllowedOffset = this.allNavbarItemsWidth() - this.navbarItemsWidth();\n    const itemBreakPoint = this.offset + this.navbarItemsWidth();\n\n    this.offset = this.calculateRightNavigation(itemBreakPoint);\n\n    this.validateMaxOffset(maxAllowedOffset);\n  }\n\n  private onMediaQueryChange = changed => {\n    this.changeNavbarMenuItems(changed.matches, this.menuItems, this.items, this.literals.navbarLinks);\n  }\n\n  private setOffsetToZero() {\n    this.offset = 0;\n  }\n\n  private validateMaxOffset(maxAllowedOffset: number) {\n    if (this.offset >= maxAllowedOffset) {\n      this.offset = maxAllowedOffset;\n      this.disableRight = true;\n    }\n  }\n\n  protected validateMenuLogo() {\n    if (this.menu.logo && this.logo) {\n      this.menu.logo = undefined;\n      this.menu.changeDetector.detectChanges();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\nimport { PoNavbarItemsComponent } from './po-navbar-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoNavbarItemComponent,\n    PoNavbarItemsComponent\n  ],\n  exports: [\n    PoNavbarItemsComponent\n  ]\n})\nexport class PoNavbarItemsModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-logo',\n  templateUrl: './po-navbar-logo.component.html'\n})\nexport class PoNavbarLogoComponent {\n  @Input('p-logo') logo?: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-item-navigation',\n  templateUrl: './po-navbar-item-navigation.component.html'\n})\nexport class PoNavbarItemNavigationComponent {\n\n  @Input('p-disable-left') disableLeft: boolean;\n\n  @Input('p-disable-right') disableRight: boolean;\n\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-item-navigation-icon',\n  templateUrl: './po-navbar-item-navigation-icon.component.html'\n})\nexport class PoNavbarItemNavigationIconComponent {\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-icon') icon: boolean;\n\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoNavbarItemNavigationComponent } from './po-navbar-item-navigation.component';\nimport { PoNavbarItemNavigationIconComponent } from './po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoNavbarItemNavigationComponent,\n    PoNavbarItemNavigationIconComponent\n  ],\n  exports: [\n    PoNavbarItemNavigationComponent,\n  ]\n})\nexport class PoNavbarItemNavigationModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoMenuModule } from '../po-menu/po-menu.module';\nimport { PoNavbarActionsModule } from './po-navbar-actions/po-navbar-actions.module';\nimport { PoNavbarComponent } from './po-navbar.component';\nimport { PoNavbarItemsModule } from './po-navbar-items/po-navbar-items.module';\nimport { PoNavbarLogoComponent } from './po-navbar-logo/po-navbar-logo.component';\nimport { PoNavbarItemNavigationModule } from './po-navbar-item-navigation/po-navbar-item-navigation.module';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-navbar`.\n *\n * > Para o correto funcionamento do componente `po-navbar`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoNavbarActionsModule,\n    PoNavbarItemsModule,\n    PoNavbarItemNavigationModule,\n    PoMenuModule\n  ],\n  declarations: [\n    PoNavbarComponent,\n    PoNavbarLogoComponent\n  ],\n  exports: [\n    PoNavbarComponent\n  ]\n})\nexport class PoNavbarModule { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page** Ã© utilizado como container principal para os componentes po-page-header, po-page-content\n * e para as aÃ§Ãµes dos componentes po-page-edit e po-page-detail.\n *\n * Quando estiver sendo utilizado o componente po-menu junto ao po-page, ambos devem estar no mesmo nÃ­vel\n * e inseridos em uma div com a classe **po-wrapper**. Esta classe serÃ¡ responsÃ¡vel por fazer os cÃ¡lculos\n * necessÃ¡rios de alinhamento dos componentes.\n *\n * O componente **po-page** tambÃ©m pode ser utilizado sem o po-menu e neste caso o corpo da pÃ¡gina deve ser\n * definido com a altura de 100% para que o po-page maximize seu tamanho.\n * ```\n * html, body {\n *   height:100%;\n * }\n * ```\n */\nexport class PoPageBaseComponent { }\n","import { Component } from '@angular/core';\n\nimport { PoPageBaseComponent } from './po-page-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoPageBaseComponent\n */\n@Component({\n  selector: 'po-page',\n  templateUrl: './po-page.component.html'\n})\nexport class PoPageComponent extends PoPageBaseComponent { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page-content** Ã© utilizado como o container para o conteÃºdo da pÃ¡gina.\n */\nexport class PoPageContentBaseComponent {\n\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { PoPageContentBaseComponent } from './po-page-content-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoPageContentBaseComponent\n */\n@Component({\n  selector: 'po-page-content',\n  templateUrl: './po-page-content.component.html'\n})\nexport class PoPageContentComponent extends PoPageContentBaseComponent implements AfterViewInit, OnDestroy {\n\n  contentOpacity: number = 0;\n  height: string = '90%';\n  overflowY: string = 'none';\n\n  constructor(public renderer: Renderer2) {\n    super();\n    this.initializeListeners();\n  }\n\n  ngAfterViewInit() {\n    this.recalculateHeaderSize();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  recalculateHeaderSize() {\n    setTimeout(() => {\n      const pageHeaderElement: HTMLElement = document.querySelector('div.po-page-header');\n\n      this.setHeightContent(pageHeaderElement);\n      this.contentOpacity = 1;\n    });\n  }\n\n  setHeightContent(poPageHeader: HTMLElement) {\n    const bodyHeight = document.body.clientHeight;\n    const pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;\n    const newHeight = bodyHeight - pageHeaderHeight;\n\n    this.height = `${newHeight}px`;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.recalculateHeaderSize();\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageAction } from '../po-page-action.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\n\n/**\n * @description\n *\n * O componente `po-page-default` Ã© utilizado como o container principal para as telas sem um template definido.\n */\nexport abstract class PoPageDefaultBaseComponent {\n\n  private _actions?: Array<PoPageAction> = [];\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.\n   */\n  @Input('p-actions') set actions(actions: Array<PoPageAction>) {\n    this._actions = Array.isArray(actions) ? actions : [];\n    this.setDropdownActions();\n  }\n\n  get actions(): Array<PoPageAction> {\n    return this._actions;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    this.poPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  // Seta a lista de aÃ§Ãµes no dropdown.\n  abstract setDropdownActions();\n\n}\n","import { AfterContentInit, Component, OnChanges, Renderer2, SimpleChange, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isTypeof } from '../../../utils/util';\nimport { PoPageAction } from '../po-page-action.interface';\n\nimport { PoPageDefaultBaseComponent } from './po-page-default-base.component';\n\n/**\n * @docsExtends PoPageDefaultBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-default-basic\" title=\"Portinari Page Default Basic\">\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-default-labs\" title=\"Portinari Page Default Labs\">\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-default-dashboard\" title=\"Portinari Page Default - Dashboard\">\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.ts\"> </file>\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-default',\n  templateUrl: './po-page-default.component.html'\n})\nexport class PoPageDefaultComponent extends PoPageDefaultBaseComponent implements AfterContentInit, OnChanges {\n\n  limitPrimaryActions: number = 3;\n  dropdownActions: Array<PoPageAction>;\n  isMobile: boolean;\n\n  private maxWidthMobile: number = 480;\n  private parentRef: ViewContainerRef;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  public ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n\n    this.renderer.listen('window', 'resize', (event: Event) => {\n      this.onResize(event);\n    });\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this.setDropdownActions();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: PoPageAction): void {\n    if (item.url) {\n\n      this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader() {\n    return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from './../../../utils/util';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageDetailLiterals } from './po-page-detail-literals.interface';\n\nexport const poPageDetailLiteralsDefault = {\n  en: <PoPageDetailLiterals> {\n    back: 'Back',\n    edit: 'Edit',\n    remove: 'Remove'\n  },\n  es: <PoPageDetailLiterals> {\n    back: 'Volver',\n    edit: 'Editar',\n    remove: 'Eliminar'\n  },\n  pt: <PoPageDetailLiterals> {\n    back: 'Voltar',\n    edit: 'Editar',\n    remove: 'Remover'\n  },\n  ru: <PoPageDetailLiterals> {\n    back: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\n    edit: 'ÑÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ',\n    remove: 'ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ðµ'\n  }\n};\n\n/**\n * @description\n *\n * O componente **po-page-detail** Ã© utilizado como container principal para a tela de detalhamento de um registro.\n * Por padrÃ£o possui 3 aÃ§Ãµes, cada aÃ§Ã£o na tela executa uma funÃ§Ã£o no componente que estÃ¡ utilizando o po-page-detail,\n * sÃ£o elas:\n *  - Voltar (funÃ§Ã£o: back);\n *  - Editar (funÃ§Ã£o: edit);\n *  - Remover (funÃ§Ã£o: remove);\n *\n * Caso nÃ£o estiver implementado alguma funÃ§Ã£o, listado anteriormente, o mesmo nÃ£o serÃ¡ apresentado.\n */\nexport class PoPageDetailBaseComponent {\n\n  private _literals: PoPageDetailLiterals;\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb: PoBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-detail`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageDetailLiterals = {\n   *    edit: 'EdiÃ§Ã£o',\n   *    remove: 'ExclusÃ£o',\n   *    back: 'Menu'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDetailLiterals = {\n   *    remove: 'Excluir registro permanentemente'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-detail\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-detail>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoPageDetailLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDetailLiteralsDefault[poLocaleDefault],\n        ...poPageDetailLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poPageDetailLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poPageDetailLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    this.poPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n}\n","/**\n * @description Verifica se existe a funÃ§Ã£o dentro do contexto.\n *\n * @param action Nome da funÃ§Ã£o que serÃ¡ verificada a existÃªncia no parentContext.\n *\n * @param parentContext Contexto da qual a funÃ§Ã£o serÃ¡ verificada.\n */\nexport function hasAction(action: string, parentContext: any): boolean {\n  return parentContext && parentContext[action];\n}\n\n/**\n * @description Executa a funÃ§Ã£o cujo o nome foi passado por parÃ¢metro.\n *\n * @param action Nome da funÃ§Ã£o que serÃ¡ executada no parentContext.\n *\n * @param parentContext Contexto da qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callAction(action: string, parentContext: any): void {\n  if (hasAction(action, parentContext)) {\n    parentContext[action]();\n  }\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoPageDetailBaseComponent } from './po-page-detail-base.component';\nimport { callAction, hasAction } from '../po-page-util/po-page-util';\n\n/**\n * @docsExtends PoPageDetailBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-detail-basic\" title=\"Portinari Page Detail Basic\">\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-detail-labs\" title=\"Portinari Page Detail Labs\">\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-detail-user\" title=\"Portinari Page Detail - User\">\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-detail',\n  templateUrl: './po-page-detail.component.html'\n})\nexport class PoPageDetailComponent extends PoPageDetailBaseComponent {\n\n  callActionFn = callAction;\n  hasActionFn = hasAction;\n  parentContext: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n    this.parentContext = viewRef['_view']['component'];\n  }\n\n  hasAnyAction(): boolean {\n    return this.hasActionFn('back', this.parentContext) ||\n      this.hasActionFn('edit', this.parentContext) ||\n      this.hasActionFn('remove', this.parentContext);\n  }\n\n  hasEditFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasActionFn('edit', this.parentContext) ? '' : 'po-icon-delete';\n    } else if (property === 'type') {\n      return this.hasActionFn('edit', this.parentContext) ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasEditOrRemoveFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasActionFn('edit', this.parentContext) || this.hasActionFn('remove', this.parentContext) ? '' : 'po-icon-arrow-left';\n    } else if (property === 'type') {\n      return this.hasActionFn('edit', this.parentContext) || this.hasActionFn('remove', this.parentContext) ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from './../../../utils/util';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageEditLiterals } from './po-page-edit-literals.interface';\n\nexport const poPageEditLiteralsDefault = {\n  en: <PoPageEditLiterals> {\n    cancel: 'Cancel',\n    save: 'Save',\n    saveNew: 'Save and New'\n  },\n  es: <PoPageEditLiterals> {\n    cancel: 'Cancelar',\n    save: 'Guardar',\n    saveNew: 'Guardar y Nuevo'\n  },\n  pt: <PoPageEditLiterals> {\n    cancel: 'Cancelar',\n    save: 'Salvar',\n    saveNew: 'Salvar e Novo'\n  },\n  ru: <PoPageEditLiterals> {\n    cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    save: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\n    saveNew: 'Ð¡Ð¾ÑÑÐ°Ð½Ð¸ÑÑ Ð¸ Ð½Ð¾Ð²ÑÐ¹'\n  }\n};\n\n/**\n * @description\n *\n * O componente **po-page-edit** Ã© utilizado como container principal para tela de ediÃ§Ã£o ou adiÃ§Ã£o de um\n * registro.\n * Por padrÃ£o possui 3 aÃ§Ãµes, cada aÃ§Ã£o na tela executa uma funÃ§Ã£o no componente que estÃ¡ utilizando o po-page-edit,\n * sÃ£o elas:\n *  - Cancelar (funÃ§Ã£o: cancel);\n *  - Salvar e Novo (funÃ§Ã£o: saveNew);\n *  - Salvar (funÃ§Ã£o: save);\n *\n * Caso nÃ£o estiver implementado alguma funÃ§Ã£o, listado anteriormente, o mesmo nÃ£o serÃ¡ apresentado.\n *\n * Os botÃµes \"Salvar\" e \"Salvar e Novo\" podem ser habilitados/desabilitados utilizando a propriedade p-disable-submit.\n * Esta propriedade pode ser utilizada para desabilitar os botÃµes caso exista um formulÃ¡rio invÃ¡lido na pÃ¡gina ou alguma\n * regra de negÃ³cio nÃ£o tenha sido atendida.\n */\nexport class PoPageEditBaseComponent {\n\n  private _literals: PoPageEditLiterals;\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /** Desabilita botÃµes de submissÃ£o (save e saveNew) */\n  @Input('p-disable-submit') disableSubmit?: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-edit`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageEditLiterals = {\n   *    cancel: 'Voltar',\n   *    save: 'Confirmar',\n   *    saveNew: 'Confirmar e criar um novo'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageEditLiterals = {\n   *    cancel: 'Cancelar processo'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-edit\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-edit>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoPageEditLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageEditLiteralsDefault[poLocaleDefault],\n        ...poPageEditLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poPageEditLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poPageEditLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    this.poPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoPageEditBaseComponent } from './po-page-edit-base.component';\nimport { callAction, hasAction } from '../po-page-util/po-page-util';\n\n/**\n * @docsExtends PoPageEditBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-edit-basic\" title=\"Portinari Page Edit Basic\">\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-edit-labs\" title=\"Portinari Page Edit Labs\">\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-edit-user\" title=\"Portinari Page Edit - User\">\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-edit',\n  templateUrl: './po-page-edit.component.html'\n})\nexport class PoPageEditComponent extends PoPageEditBaseComponent {\n  hasAction: Function = hasAction;\n  callAction: Function = callAction;\n  parentContext: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n    this.parentContext = viewRef['_view']['component'];\n  }\n\n  getIcon(icon: string): string {\n    if (icon === 'cancel') {\n      return this.isPrimaryAction('cancel') ? 'po-icon-close' : '';\n    }\n\n    if (icon === 'saveNew') {\n      return this.isPrimaryAction('saveNew') ? 'po-icon-ok' : '';\n    }\n\n    return '';\n  }\n\n  getType(type: string): string {\n    const isCancelPrimaryAction = type === 'cancel' && this.isPrimaryAction('cancel');\n    const isSaveNewPrimaryAction = type === 'saveNew' && this.isPrimaryAction('saveNew');\n\n    return isCancelPrimaryAction || isSaveNewPrimaryAction ? 'primary' : 'default';\n  }\n\n  hasAnyAction(): boolean {\n    return hasAction('cancel', this.parentContext) || hasAction('saveNew', this.parentContext) || hasAction('save', this.parentContext);\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private isPrimaryAction(action: string): boolean {\n    const hasSaveAction = !hasAction('save', this.parentContext);\n\n    if (action === 'saveNew') {\n      return hasSaveAction;\n    }\n\n    if (action === 'cancel') {\n      return !hasAction('saveNew', this.parentContext) && hasSaveAction;\n    }\n\n    return false;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page-header** Ã© responsÃ¡vel pelo tÃ­tulo da pÃ¡gina e container dos botÃµes de aÃ§Ãµes dos componentes\n * po-page-list e po-page-base.\n */\nexport class PoPageHeaderBaseComponent {\n\n  private _breadcrumb: PoBreadcrumb;\n\n  /** Objeto com propriedades do breadcrumb. */\n\n  @Input('p-breadcrumb') set breadcrumb(value: PoBreadcrumb) {\n    this._breadcrumb = value;\n  }\n  get breadcrumb(): PoBreadcrumb {\n    return this._breadcrumb;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoPageHeaderBaseComponent } from './po-page-header-base.component';\n\n/**\n * @docsPrivate\n * @docsExtends PoPageHeaderBaseComponent\n */\n@Component({\n  selector: 'po-page-header',\n  templateUrl: './po-page-header.component.html'\n})\nexport class PoPageHeaderComponent extends PoPageHeaderBaseComponent { }\n","import { Input } from '@angular/core';\n\nimport { poLocaleDefault } from './../../../utils/util';\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoDisclaimerGroup } from '../../po-disclaimer-group/po-disclaimer-group.interface';\nimport { PoPageDefaultBaseComponent } from '../po-page-default/po-page-default-base.component';\nimport { PoPageFilter } from './../po-page-filter.interface';\nimport { PoPageListLiterals } from './po-page-list-literals.interface';\n\nexport const poPageListLiteralsDefault = {\n  en: <PoPageListLiterals> {\n    otherActions: 'Other actions'\n  },\n  es: <PoPageListLiterals> {\n    otherActions: 'Otras acciones'\n  },\n  pt: <PoPageListLiterals> {\n    otherActions: 'Outras aÃ§Ãµes'\n  },\n  ru: <PoPageListLiterals> {\n    otherActions: 'ÐÑÑÐ³Ð¸Ðµ Ð´ÐµÐ¹ÑÑÐ²Ð¸Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O componente `po-page-list` Ã© utilizado como o container principal para as telas de listagem de dados,\n * podendo ser apresentado como lista ou tabela.\n *\n * Este componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma funÃ§Ã£o que serÃ¡ executada no momento\n * da filtragem. Este comportamento pode ser acionado tanto ao *click* do Ã­cone [po-icon-search](/guides/icons)\n * quanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.\n *\n * Para facilitar a manipulaÃ§Ã£o e visualizaÃ§Ã£o dos filtros aplicados, Ã© possÃ­vel tambÃ©m utilizar o componente\n * [`po-disclaimer-group`](/documentation/po-disclaimer-group).\n */\nexport abstract class PoPageListBaseComponent extends PoPageDefaultBaseComponent {\n\n  private _disclaimerGroup?: PoDisclaimerGroup;\n  private _literals: PoPageListLiterals;\n\n  protected language: string;\n  protected resizeListener: () => void;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoBreadcrumb`.\n   */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoDisclaimerGroup`.\n   */\n  @Input('p-disclaimer-group') set disclaimerGroup(value: PoDisclaimerGroup) {\n    if (!value) {\n      value = <any> {};\n    }\n\n    this._disclaimerGroup = value;\n  }\n\n  get disclaimerGroup(): PoDisclaimerGroup {\n    return this._disclaimerGroup;\n  }\n\n  /**\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoPageFilter`.\n   */\n  @Input('p-filter') filter: PoPageFilter;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-list`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageListLiterals = {\n   *    otherActions: 'Mais aÃ§Ãµes'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageListLiterals = {\n   *    otherActions: 'AÃ§Ãµes da pÃ¡gina'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-list\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-list>\n   * ```\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageListLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageListLiteralsDefault[poLocaleDefault],\n        ...poPageListLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageListLiteralsDefault[this.language];\n    }\n  }\n\n  get literals() {\n    return this._literals || poPageListLiteralsDefault[this.language];\n  }\n\n  constructor(languageService: PoLanguageService) {\n    super();\n\n    this.language = languageService.getShortLanguage();\n  }\n\n}\n","import {\n  AfterContentInit, Component, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isTypeof } from '../../../utils/util';\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoPageAction } from '../po-page-action.interface';\n\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageListBaseComponent } from './po-page-list-base.component';\n\n/**\n * @docsExtends PoPageListBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-list-basic\" title=\"Portinari Page List Basic\">\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-list-labs\" title=\"Portinari Page List Labs\">\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-list-hiring-processes\" title=\"Portinari Page List - Hiring Processes\">\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-list',\n  templateUrl: './po-page-list.component.html'\n})\nexport class PoPageListComponent extends PoPageListBaseComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n\n  advancedSearch: string;\n  dropdownActions: Array<PoPageAction>;\n  isMobile: boolean;\n  limitPrimaryActions: number = 3;\n  parentRef: ViewContainerRef;\n\n  private isRecalculate = true;\n  private maxWidthMobile: number = 480;\n\n  callFunction = callFunction;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    languageService: PoLanguageService,\n    public renderer: Renderer2,\n    private router: Router) {\n\n    super(languageService);\n    this.parentRef = viewRef['_view']['component'];\n    this.initializeListeners();\n  }\n\n  ngOnInit(): void {\n    this.advancedSearch = this.initializeFixedLiterals();\n  }\n\n  ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n  }\n\n  ngOnChanges(changes: {[propName: string]: SimpleChange}) {\n    this.setDropdownActions();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: PoPageAction): void {\n    if (item.url) {\n      this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return  !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n  callActionFilter(field: string): void {\n    this.callFunction(this.filter[field], this.parentRef);\n  }\n\n  onkeypress(key) {\n    if (key === 13) {\n      this.callActionFilter('action');\n    }\n  }\n\n  changeModel(newModel): void {\n    this.parentRef[this.filter.ngModel] = newModel;\n  }\n\n  // Recebe evento change do disclaimer e recalcula tela\n  onChangeDisclaimerGroup(disclaimers) {\n    if ((disclaimers && disclaimers.length && this.isRecalculate) || (disclaimers.length === 0 && !this.isRecalculate)) {\n      this.poPageContent.recalculateHeaderSize();\n      this.isRecalculate = !this.isRecalculate;\n    }\n\n    if (this.disclaimerGroup && this.disclaimerGroup.change) {\n      this.disclaimerGroup.change(disclaimers);\n    }\n  }\n\n  private initializeFixedLiterals() {\n    const literal = {\n      pt: {\n        advancedSearch: 'Busca avanÃ§ada'\n      },\n      en: {\n        advancedSearch: 'Advanced search'\n      },\n      es: {\n        advancedSearch: 'BÃºsqueda avanzada'\n      }\n    };\n\n    return literal[this.language].advancedSearch;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.onResize(event);\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBreadcrumbModule } from '../po-breadcrumb/po-breadcrumb.module';\nimport { PoButtonModule } from '../po-button/po-button.module';\nimport { PoDisclaimerGroupModule } from '../po-disclaimer-group/po-disclaimer-group.module';\nimport { PoDropdownModule } from '../po-dropdown/po-dropdown.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\nimport { PoModalModule } from './../po-modal/po-modal.module';\nimport { PoPageComponent } from './po-page.component';\nimport { PoPageContentComponent } from './po-page-content/po-page-content.component';\nimport { PoPageDefaultComponent } from './po-page-default/po-page-default.component';\nimport { PoPageDetailComponent } from './po-page-detail/po-page-detail.component';\nimport { PoPageEditComponent } from './po-page-edit/po-page-edit.component';\nimport { PoPageHeaderComponent } from './po-page-header/po-page-header.component';\nimport { PoPageListComponent } from './po-page-list/po-page-list.component';\n\n/**\n * @description\n * MÃ³dulo dos componentes po-page-default, po-page-edit, po-page-list, po-page-login e po-page-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoDisclaimerGroupModule,\n    PoDropdownModule,\n    PoFieldModule,\n    PoLanguageModule,\n    PoModalModule\n  ],\n  declarations: [\n    PoPageComponent,\n    PoPageContentComponent,\n    PoPageDefaultComponent,\n    PoPageDetailComponent,\n    PoPageEditComponent,\n    PoPageHeaderComponent,\n    PoPageListComponent\n  ],\n  exports: [\n    PoPageDetailComponent,\n    PoPageDefaultComponent,\n    PoPageEditComponent,\n    PoPageListComponent\n  ]\n})\nexport class PoPageModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para o conjunto de cÃ­rculos que faz a passagem de itens do `po-slide`.\n */\n@Component({\n  selector: 'po-slide-circles',\n  templateUrl: './po-slide-circles.component.html'\n})\nexport class PoSlideCirclesComponent {\n\n  /** Index do slide atual. */\n  @Input('p-current-slide-index') currentSlideIndex: number;\n\n  /** Itens do slide. */\n  @Input('p-items') items: Array<any>;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('p-click') click = new EventEmitter<any>();\n}\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from './../../utils/util';\n\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\n\nconst poSlideIntervalDefault = 4000;\n\n/**\n * @description\n *\n * Componente de slide para visualizaÃ§Ã£o e controle de elementos de forma cÃ­clica. Exibe um conjunto de imagens ou dados que permitem\n * customizar sua visualizaÃ§Ã£o utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.\n *\n * #### Boas prÃ¡ticas:\n * - Utilizar imagens no slide, mesmo quando possui conteÃºdo personalizado.\n * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\n * - Evitar utilizar mais de 5 slides, pois a ideia do componente Ã© destacar apenas informaÃ§Ãµes importantes.\n */\nexport abstract class PoSlideBaseComponent {\n\n  private _interval: number = poSlideIntervalDefault;\n  private _height?: number;\n  private _slides: Array<PoSlideItem | string | any>;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Altura do po-slide, caso seja slide com template customizado, nÃ£o assume o valor `default`.\n   *\n   * @default `336`\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = convertToInt(value);\n    this.setSlideHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides nÃ£o trocam automaticamente.\n   *\n   * @default `4000`\n   */\n  @Input('p-interval') set interval(value: number) {\n    this._interval = convertToInt(value, poSlideIntervalDefault);\n    this._interval >= 1000 ? this.startInterval() : this.cancelInterval();\n  }\n\n  get interval(): number {\n    return this._interval;\n  }\n\n  /**\n   * @description\n   *\n   * Array de imagens ou dados para o slide, pode ser de trÃªs formas:\n   *\n   * - Array implementando objetos da interface `PoSlideItem`:\n   * ```\n   * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]\n   * ```\n   * - Array de `strings` com os caminhos das imagens:\n   * ```\n   * ['/assets/image-1', '/assets/image-2' ]\n   * ```\n   * - Array com lista de itens (para utilizar template):\n   * ```\n   * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]\n   * ```\n   *\n   * > As setas de navegaÃ§Ã£o e o controle com cÃ­rculos apenas serÃ£o renderizados caso possua mais de um slide.\n   */\n  @Input('p-slides') set slides(value: Array<PoSlideItem | string | any>) {\n    this._slides = value;\n    this.setSlideItems(value);\n\n    if (value && value.length) {\n      this.startSlide();\n    }\n  }\n\n  get slides(): Array<PoSlideItem | string | any> {\n    return this._slides;\n  }\n\n  abstract setSlideHeight(height: number): void;\n\n  protected abstract cancelInterval(): void;\n  protected abstract setSlideItems(value: Array<PoSlideItem | string | any>): void;\n  protected abstract startSlide(): void;\n  protected abstract startInterval(): void;\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoSlideComponent\n *\n * @description\n *\n * Esta diretiva permite a customizaÃ§Ã£o de um slide.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item do slide corrente.\n *  - Ãndice: `index` determina o Ã­ndice do slide corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-slide\n *   [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@portinari.com' }]\">\n *\n *   <ng-template p-slide-content-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"item.id\"></po-info>\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-slide>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-slide\n *    [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@portinari.com' }]\">\n *\n *    <div *p-slide-content-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-slide>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-slide-content-template]'\n})\nexport class PoSlideContentTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nimport { isIEOrEdge } from '../../../utils/util';\n\nimport { PoSlideContentTemplateDirective } from '../directives/po-slide-content-template.directive';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para cada item do po-slide.\n */\n@Component({\n  selector: 'po-slide-item',\n  templateUrl: './po-slide-item.component.html'\n})\nexport class PoSlideItemComponent {\n\n  @ViewChild('slideItem', { static: true }) itemElement: ElementRef;\n\n  isIEOrEdge: any = isIEOrEdge();\n\n  /** AÃ§Ã£o executada ao clicar em uma imagem */\n  @Input('p-action') action: Function;\n\n  /** Texto alternativo quando a imagem nÃ£o Ã© encontrada */\n  @Input('p-alt') alt: string;\n\n  /** Dados para o template customizado */\n  @Input('p-data') data: Array<any>;\n\n  /** Caminho da imagem */\n  @Input('p-image') image: string;\n\n  /** Altura da imagem */\n  @Input('p-image-height') imageHeight: number;\n\n  /** Template customizado */\n  @Input('p-template') template: PoSlideContentTemplateDirective;\n\n  /** Link executado ao clicar em uma imagem */\n  @Input('p-link') link: string;\n\n  setLinkType() {\n    if (!this.template && this.link) {\n      return this.link.startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n}\n","import { Component, ContentChild, DoCheck , ElementRef, HostListener, QueryList, ViewChild, ViewChildren } from '@angular/core';\n\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { PoSlideBaseComponent } from './po-slide-base.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\n\nconst poSlideDefaultHeight = 336;\nconst poSlideIntervalMin = 1000;\nconst poSlideMinHeight = 192;\nconst poSlideTiming = '250ms ease';\n\n/**\n * @docsExtends PoSlideBaseComponent\n *\n * @example\n * <example name=\"po-slide-basic\" title=\"Portinari Slide Basic\">\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.html\"> </file>\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-labs\" title=\"Portinari Slide Labs\">\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.html\"> </file>\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-useful-articles\" title=\"Portinari Slide - Useful articles\">\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html\"> </file>\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-landscapes\" title=\"Portinari Slide - Landscapes\">\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.html\"> </file>\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-slide',\n  templateUrl: './po-slide.component.html',\n})\nexport class PoSlideComponent extends PoSlideBaseComponent implements DoCheck {\n\n  private isLoaded: boolean = false;\n  private player: AnimationPlayer;\n  private setInterval: any;\n\n  private get hasElements() {\n    return !!this.slide.nativeElement.offsetWidth && !!this.itemsElements && !!this.itemsElements.length;\n  }\n\n  private get isImageSlide() {\n    return !this.slideContentTemplate;\n  }\n\n  private get offset() {\n    return this.currentSlideIndex * this.slideItemWidth;\n  }\n\n  get hasSlides() {\n    return !!this.slides && !!this.slides.length;\n  }\n\n  currentSlideIndex = 0;\n  imageHeight: number;\n  slideItems: Array<PoSlideItem | any> = [];\n  slideItemWidth: number;\n\n  @ContentChild(PoSlideContentTemplateDirective, { static: true }) slideContentTemplate: PoSlideContentTemplateDirective;\n\n  @ViewChild('slide', { static: true }) private slide: ElementRef;\n\n  @ViewChildren(PoSlideItemComponent) private itemsElements: QueryList<PoSlideItemComponent>;\n\n  @HostListener('window:resize') onResize() {\n    if (this.slide) {\n      this.setSlideItemWidth();\n      this.goToItem(this.currentSlideIndex);\n    }\n  }\n\n  constructor(private builder: AnimationBuilder) {\n    super();\n  }\n\n  ngDoCheck() {\n\n    if (!this.isLoaded && this.hasElements) {\n\n      this.setSlideItemWidth();\n      this.isLoaded = true;\n\n      if (this.hasSlides) {\n        this.startSlide();\n      }\n    }\n  }\n\n  goToItem(index: number) {\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = index;\n    this.animate(this.offset);\n  }\n\n  nextControl() {\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.next();\n  }\n\n  next() {\n    if (this.currentSlideIndex + 1 === this.slideItems.length) {\n      this.currentSlideIndex = 0;\n      this.animate(0);\n      return;\n    }\n    this.currentSlideIndex = (this.currentSlideIndex + 1) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previous() {\n    if (this.currentSlideIndex === 0) {\n      this.currentSlideIndex = this.slideItems.length - 1;\n      this.animate(this.offset);\n      return;\n    }\n    this.currentSlideIndex = ((this.currentSlideIndex - 1) + this.slideItems.length) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previousControl() {\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.previous();\n  }\n\n  setSlideHeight(height: number) {\n    this.setHeight(height);\n  }\n\n  private animate(offset: number) {\n    if (this.hasElements) {\n      const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n      this.player = animation.create(this.slide.nativeElement);\n      this.player.play();\n    }\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([\n      animate(\n        poSlideTiming,\n        keyframes([style({ transform: `translateX(-${offset}px)` })])\n      )\n    ]);\n  }\n\n  private createArrayForTemplate(slides: Array<any>) {\n    this.slideItems = [...slides];\n  }\n\n  private createArrayFromSlides(slides: Array<PoSlideItem | string | any>) {\n    const isStringArray = slides.every(item => typeof item === 'string');\n\n    if (isStringArray) {\n      slides.forEach(element => this.slideItems.push({ image: `${element}` }));\n    } else {\n      this.slideItems = [...<Array<PoSlideItem>>slides];\n    }\n  }\n\n  private setDefaultHeight(height: number) {\n    if (height && height <= poSlideMinHeight || !height && this.isImageSlide) {\n      this.slide.nativeElement.style.height = `${poSlideDefaultHeight}px`;\n      this.imageHeight = poSlideDefaultHeight;\n    } else {\n      this.imageHeight = undefined;\n    }\n  }\n\n  private setHeight(height: number) {\n    if (height && height > poSlideMinHeight) {\n      this.slide.nativeElement.style.height = `${height}px`;\n      this.imageHeight = height;\n    } else {\n      this.setDefaultHeight(height);\n    }\n  }\n\n  private setSlideItemWidth() {\n    if (this.hasElements) {\n      this.slideItemWidth = this.itemsElements.first.itemElement.nativeElement.getBoundingClientRect().width;\n    }\n  }\n\n  protected cancelInterval() {\n    clearInterval(this.setInterval);\n  }\n\n  protected setSlideItems(slides: Array<PoSlideItem | string | any>) {\n\n    if (this.hasSlides) {\n      this.slideContentTemplate ? this.createArrayForTemplate(slides) : this.createArrayFromSlides(slides);\n    } else {\n      this.slideItems = [];\n      this.cancelInterval();\n    }\n  }\n\n  protected startSlide() {\n\n    this.setSlideHeight(this.height);\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = 0;\n  }\n\n  protected startInterval() {\n\n    if (this.setInterval) {\n      this.cancelInterval();\n    }\n\n    this.setInterval = this.hasSlides && this.hasElements ? setInterval(() => { this.next(); }, this.interval) : undefined;\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a seta que controla a passagem de itens do `po-slide`.\n */\n@Component({\n  selector: 'po-slide-control',\n  templateUrl: './po-slide-control.component.html'\n})\nexport class PoSlideControlComponent {\n\n  /** Tipo de controle que aceita os valores: 'previous' e 'next'. */\n  @Input('p-control') control: string;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('p-click') click = new EventEmitter<any>();\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoContainerModule } from '../po-container/po-container.module';\n\nimport { PoSlideCirclesComponent } from './po-slide-circles/po-slide-circles.component';\nimport { PoSlideComponent } from './po-slide.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideControlComponent } from './po-slide-control/po-slide-control.component';\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-slide`.\n *\n * > Para o correto funcionamento do componente `po-slide`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoContainerModule\n  ],\n  declarations: [\n    PoSlideCirclesComponent,\n    PoSlideComponent,\n    PoSlideControlComponent,\n    PoSlideContentTemplateDirective,\n    PoSlideItemComponent,\n  ],\n  exports: [\n    PoSlideComponent,\n    PoSlideContentTemplateDirective\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoSlideModule { }\n","/**\n * @usedBy PoStepperComponent\n *\n * @description\n *\n * <a id=\"stepperStatus\"></a>\n *\n * *Enums* para os status do `po-stepper` quando utilizada a propriedade `p-steps`.\n */\nexport enum PoStepperStatus {\n\n  /** Define o estado do *step* como ativo. */\n  Active = 'active',\n\n  /** Define o estado do *step* como padrÃ£o. */\n  Default = 'default',\n\n  /** Define o estado do *step* como desabilitado. */\n  Disabled = 'disabled',\n\n  /** Define o estado do *step* como concluÃ­do. */\n  Done = 'done',\n\n  /** Define o estado do *step* com erro. */\n  Error = 'error'\n\n}\n","import { AfterContentInit, Component, ElementRef, Input } from '@angular/core';\n\nimport { uuid } from '../../../utils/util';\n\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\n/**\n * @description\n *\n * O componente `po-step` Ã© utilizado para envolver e renderizar o conteÃºdo de um passo (*step*) do `po-stepper`, por exemplo:\n *\n * ```\n * <po-stepper>\n *\n *    <po-step p-label=\"EndereÃ§o\">\n *\n *        <!-- ConteÃºdo referente ao endereÃ§o -->\n *\n *    </po-step>\n *\n *    <po-step p-label=\"Pagamento\">\n *\n *        <!-- ConteÃºdo referente ao pagamento -->\n *\n *    </po-step>\n *\n *  </po-stepper>\n * ```\n *\n * A renderizaÃ§Ã£o do conteÃºdo envolvido na tela e o controle dos status sÃ£o feitos automaticamente. No qual, o primeiro\n * `po-step` encontrado serÃ¡ colocado como ativo, o prÃ³ximo fica com o status *default* e os demais ficam\n * desabilitados (*disabled*).\n *\n * Ao clicar no `po-step` que estÃ¡ com o status *default*, o que estÃ¡ ativo ficarÃ¡ com o\n * status de concluÃ­do (*done*) e o prÃ³ximo que estava desabilitado ficarÃ¡ com o status *default* e o restante permanecerÃ¡\n * com o status desabilitado.\n *\n * > Ao utilizar o `po-step`, o componente `po-stepper` funcionarÃ¡ de forma sequencial, ou seja, nÃ£o serÃ¡ possÃ­vel\n * pular para outro `po-step` que esteja com o status igual a desabilitado (*disabled*).\n *\n * Acesse a [documentaÃ§Ã£o do `po-stepper`](/documentation/po-stepper) para ter mais informaÃ§Ãµes sobre o seu funcionamento\n * e exemplos de uso.\n */\n@Component({\n  selector: 'po-step',\n  templateUrl: 'po-step.component.html'\n})\nexport class PoStepComponent implements AfterContentInit {\n\n  private _status?: PoStepperStatus = PoStepperStatus.Disabled;\n\n  // ID do step\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o chamada quando o prÃ³ximo *step* for clicado ou quando o mÃ©todo `PoStepperComponent.next()` for chamado.\n   * Ao retornar `true` define que esse *step* ficarÃ¡ ativo e o atual como concluÃ­do (*done*).\n   *\n   * Ao ser disparada, a mesma receberÃ¡ por parÃ¢metro o `PoStepComponent` atual.\n   *\n   * O contexto da funÃ§Ã£o que serÃ¡ chamada, serÃ¡ o mesmo que o do `PoStepComponent`, entÃ£o para poder alterar\n   * para o contexto do componente que o estÃ¡ utilizando, pode ser utilizado a propriedade `bind` do Javascript.\n   * Por exemplo, para a funÃ§Ã£o `validate`:\n   *\n   * ```\n   * <po-step p-label=\"Step 1\" [p-can-active-next-step]=\"validate.bind(this)\">\n   * ...\n   * </po-step>\n   * ```\n   */\n  @Input('p-can-active-next-step') canActiveNextStep: Function;\n\n  /** TÃ­tulo que serÃ¡ exibido descrevendo o passo (*step*). */\n  @Input('p-label') label: string;\n\n  // Estado de exibiÃ§Ã£o do `po-step`.\n  @Input('p-status') set status(status: PoStepperStatus) {\n    this._status = status;\n\n    this.setDisplayOnActiveOrError();\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActiveOrError();\n  }\n\n  protected setDisplayOnActiveOrError() {\n    this.elementRef.nativeElement.style.display =\n      (this.status === PoStepperStatus.Active || this.status === PoStepperStatus.Error) ? '' : 'none';\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\nconst poMediumStepSize = 32;\nconst poLargeStepSize = 48;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir os cÃ­rculos dos *steps*.\n */\n@Component({\n  selector: 'po-stepper-circle',\n  templateUrl: './po-stepper-circle.component.html'\n})\nexport class PoStepperCircleComponent {\n\n  // ConteÃºdo que irÃ¡ aparecer no cÃ­rculo do *step*.\n  @Input('p-content') content: any;\n\n  // Define se serÃ£o exibidos Ã­cones no lugar de nÃºmeros nos steps.\n  @Input('p-icons') icons: boolean;\n\n  // Tamanho do *step-circle*.\n  @Input('p-size') size: number;\n\n  // Status do *step*.\n  @Input('p-status') status: string;\n\n  get isActive(): boolean {\n    return this.status === PoStepperStatus.Active;\n  }\n\n  get isDefault(): boolean {\n    return this.status === PoStepperStatus.Default;\n  }\n\n  get isDisabled(): boolean {\n    return this.status === PoStepperStatus.Disabled;\n  }\n\n  get isDone(): boolean {\n    return this.status === PoStepperStatus.Done;\n  }\n\n  get isError(): boolean {\n    return this.status === PoStepperStatus.Error;\n  }\n\n  get isLargeStep(): boolean {\n    return this.size >= poLargeStepSize;\n  }\n\n  get isMediumStep(): boolean {\n    return this.size >= poMediumStepSize && !this.isLargeStep;\n  }\n\n}\n","/**\n *\n * @usedBy PoStepperComponent\n *\n * @description\n *\n * <a id=\"stepperOrientation\"></a>\n *\n * *Enums* para definiÃ§Ã£o da orientaÃ§Ã£o do `po-stepper`.\n */\nexport enum PoStepperOrientation {\n\n  /** Define a exibiÃ§Ã£o do componente na horizontal. */\n  Horizontal = 'horizontal',\n\n  /** Define a exibiÃ§Ã£o do componente na vertical. */\n  Vertical = 'vertical'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\nimport { PoStepperOrientation } from './enums/po-stepper-orientation.enum';\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\n\nconst poStepperOrientationDefault = PoStepperOrientation.Horizontal;\n\n/**\n * @description\n *\n * O `po-stepper` permite que um processo seja dividido em passos para que o usuÃ¡rio o realize\n * mais facilmente.\n *\n * Existem duas formas de utilizaÃ§Ã£o:\n *\n * 1 - Usando o componente [**po-step**](/documentation/po-step) para renderizar e descrever os passos.\n *\n * 2 - AtravÃ©s da propriedade `p-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\n * de renderizaÃ§Ã£o do que serÃ¡ exibido a cada *step* ativo.\n *\n * AtravÃ©s de suas propriedades, Ã© possÃ­vel definir se sua orientaÃ§Ã£o serÃ¡ horizontal ou vertical,\n * alÃ©m da possibilidade de aumentar o tamanho dos *steps*.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *steps* atravÃ©s do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\n * pressionar a tecla *enter*. AlÃ©m disso, Ã© possÃ­vel ativar a exibiÃ§Ã£o de Ã­cones no lugar de nÃºmeros nos *steps* atravÃ©s da\n * propriedade [`p-step-icons`](/documentation/po-stepper#stepIconsProperty).\n *\n * #### Utilizando os mÃ©todos do componente:\n *\n * Para acessar os mÃ©todos do componente Ã© necessÃ¡rio ter a referÃªncia do mesmo.\n *\n * Por exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\n *\n * ```\n * @ViewChild(PoStepperComponent) poStepperComponent: PoStepperComponent;\n * ```\n *\n * E para acessar o mÃ©todo:\n *\n * ```\n * poStepperComponent.next();\n * ```\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-stepper`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-stepper` por pÃ¡gina.\n */\nexport class PoStepperBaseComponent {\n\n  private _orientation?: PoStepperOrientation = poStepperOrientationDefault;\n  private _sequential?: boolean = true;\n  private _step: number = 1;\n  private _steps: Array<PoStepperItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a orientaÃ§Ã£o de exibiÃ§Ã£o do `po-stepper`.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* [PoStepperOrientation](documentation/po-stepper#stepperOrientation).\n   *\n   * @default `PoStepperOrientation.Horizontal`\n   */\n  @Input('p-orientation') set orientation(value: PoStepperOrientation) {\n    this._orientation = (<any>Object).values(PoStepperOrientation).includes(value) ? value : poStepperOrientationDefault;\n  }\n\n  get orientation(): PoStepperOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Controla o passo atual do `po-stepper`.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**po-step**](/documentation/po-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**po-step**](/documentation/po-step).\n   *\n   * @default `1`\n   */\n  @Input('p-step') set step(step: number) {\n    if (step >= 1 && step <= this.steps.length) {\n      this._step = step;\n      this._steps[this._step - 1].status = PoStepperStatus.Active;\n    }\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos itens do stepper. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**po-step**](/documentation/po-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**po-step**](/documentation/po-step).\n   */\n  @Input('p-steps') set steps(steps: Array<PoStepperItem>) {\n    this._steps = Array.isArray(steps) ? steps : [];\n    this._steps.forEach(step => step.status = PoStepperStatus.Default);\n    this.step = 1;\n  }\n\n  get steps(): Array<PoStepperItem> {\n    return this._steps;\n  }\n\n  /**\n   *\n   * @optional\n   *\n   * @description\n   *\n   * <a id=\"stepIconsProperty\"></a>\n   *\n   * Habilita a exibiÃ§Ã£o de Ã­cone ao invÃ©s de nÃºmero no centro do cÃ­rculo dos *steps*.\n   *\n   * @default `false`\n   */\n  @Input('p-step-icons') stepIcons: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tamanho dos *steps* em *pixels*, possibilitando um maior destaque.\n   *\n   * O valor informado deve ser entre `24` e `64`.\n   *\n   * > Valores que nÃ£o se enquadrarem a esta regra serÃ£o ignorados, mantendo-se o valor *default*.\n   *\n   * @default `24`\n   */\n  @Input('p-step-size') stepSize: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o `po-stepper` serÃ¡ sequencial ou aleatÃ³rio.\n   *\n   * > Ao utilizar o componente [**po-step**](/documentation/po-step), o valor desta propriedade sempre serÃ¡ verdadeiro.\n   *\n   * @default `true`\n   */\n  @Input('p-sequential') set sequential(sequential: boolean) {\n    this._sequential = convertToBoolean(sequential);\n  }\n\n  get sequential(): boolean {\n    return this._sequential;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio mudar o passo do `po-stepper`. */\n  @Output('p-change-step') onChangeStep = new EventEmitter<number | PoStepComponent>();\n\n}\n","import { AfterContentInit, ChangeDetectorRef, Component, ContentChildren, QueryList } from '@angular/core';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperBaseComponent } from './po-stepper-base.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\n\n/**\n * @docsExtends PoStepperBaseComponent\n *\n * @example\n *\n * <example name=\"po-stepper-basic\" title=\"Portinari Stepper Basic\">\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.html\"> </file>\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-labs\" title=\"Portinari Stepper Labs\">\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.html\"> </file>\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-sales\" title=\"Portinari Stepper - Sales\">\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.html\"> </file>\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-stepper',\n  templateUrl: './po-stepper.component.html'\n})\nexport class PoStepperComponent extends PoStepperBaseComponent implements AfterContentInit {\n\n  @ContentChildren(PoStepComponent) poSteps: QueryList<PoStepComponent>;\n\n  private currentActiveStep: PoStepComponent;\n  private previousActiveStep: PoStepComponent;\n\n  get currentStepIndex(): number {\n    return this.step - 1;\n  }\n\n  get stepList(): QueryList<PoStepComponent> | Array<PoStepperItem> {\n    return this.usePoSteps && this.poSteps || this.steps;\n  }\n\n  get usePoSteps(): boolean {\n    return !!this.poSteps.length;\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.activeFirstStep();\n\n    this.poSteps.changes.subscribe(() => {\n      this.controlStepsStatus(0, this.poSteps.first);\n    });\n  }\n\n  /**\n   * Altera o status do *step* para ativo.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   *\n   * @param index {number} Ãndice do `po-step` que se deseja ativar.\n   */\n  active(index: number): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const stepsArray = this.getPoSteps();\n    const step = stepsArray[index];\n    const isDisabledStep = step.status === PoStepperStatus.Disabled;\n    const isErrorStep = step.status === PoStepperStatus.Error;\n\n    if (!isDisabledStep || isErrorStep) {\n      this.changeStep(index, step);\n    }\n\n  }\n\n  /**\n   * Ativa o primeiro *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  first(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const firstStep = this.poSteps.first;\n    const firstStepIndex = 0;\n\n    this.changeStep(firstStepIndex, firstStep);\n  }\n\n  /**\n   * Ativa o prÃ³ximo *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  next(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const nextIndex = stepIndex + 1;\n    const nextStep = steps[nextIndex];\n\n    this.changeStep(nextIndex, nextStep);\n  }\n\n  /**\n   * Ativa o *step* anterior.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  previous(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const previousIndex = stepIndex - 1;\n    const previousStep = steps[previousIndex];\n\n    this.changeStep(previousIndex, previousStep);\n  }\n\n  changeStep(stepIndex: number, step?: PoStepComponent): void {\n    const isDifferentStep = (!this.currentActiveStep || step.id !== this.currentActiveStep.id);\n\n    if (this.usePoSteps && isDifferentStep && this.allowNextStep(stepIndex)) {\n      this.controlStepsStatus(stepIndex, step);\n\n      this.onChangeStep.emit(step);\n    } else if (!this.usePoSteps && stepIndex !== this.currentStepIndex && this.allowNextStep(stepIndex)) {\n      // if para tratamento do modelo antigo do po-stepper\n      this.onChangeStep.emit(stepIndex + 1);\n    }\n  }\n\n  onStepActive(step: PoStepComponent) {\n    this.currentActiveStep = step;\n\n    this.previousActiveStep = this.poSteps.find(stepChild => stepChild.status === PoStepperStatus.Active && stepChild.id !== step.id);\n\n    this.setPreviousStepAsDone();\n  }\n\n  trackByFn(step: PoStepComponent) {\n    return step.id;\n  }\n\n  private activeFirstStep() {\n    const hasStepActive = this.poSteps.some(poStep => poStep.status === PoStepperStatus.Active);\n\n    if (this.usePoSteps && !hasStepActive) {\n      this.changeStep(0, this.poSteps.first);\n    }\n  }\n\n  private allowNextStep(nextStepIndex: number): boolean {\n    if (!this.sequential) {\n      return true;\n    }\n\n    if (this.usePoSteps) {\n      return this.isBeforeStep(nextStepIndex) || this.canActiveNextStep(this.currentActiveStep);\n    }\n\n    return this.steps.slice(this.step, nextStepIndex).every(step => step.status === PoStepperStatus.Done);\n  }\n\n  private canActiveNextStep(currentActiveStep = <any> {}) {\n    if (!currentActiveStep.canActiveNextStep) {\n      return true;\n    }\n\n    const canActiveNextStep = currentActiveStep.canActiveNextStep(currentActiveStep);\n\n    currentActiveStep.status = this.getStepperStatusByCanActive(canActiveNextStep);\n\n    return canActiveNextStep;\n  }\n\n  private controlStepsStatus(stepIndex: number, step: PoStepComponent): void {\n    if (this.usePoSteps) {\n\n      this.setStepAsActive(step);\n      this.setNextStepAsDefault(step);\n\n      if (this.isBeforeStep(stepIndex)) {\n        this.setFinalSteppersAsDisabled(stepIndex);\n      }\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  private getStepperStatusByCanActive(canActiveNextStep): PoStepperStatus {\n    return canActiveNextStep ? PoStepperStatus.Done : PoStepperStatus.Error;\n  }\n\n  private getStepsAndIndex(step: PoStepComponent = <any> {}): { steps: Array<PoStepComponent>, stepIndex: number } {\n    const steps = this.getPoSteps();\n    const stepIndex = steps.findIndex(poStep => poStep.id === step.id);\n\n    return { steps, stepIndex };\n  }\n\n  private getPoSteps(): Array<PoStepComponent> {\n    return this.poSteps.toArray();\n  }\n\n  private isBeforeStep(stepIndex: number): boolean {\n    const currentActiveStepIndex = () => this.getPoSteps().findIndex(step => step.id === this.currentActiveStep.id);\n\n    return !!this.currentActiveStep && currentActiveStepIndex() >= stepIndex;\n  }\n\n  private setFinalSteppersAsDisabled(stepIndex: number): void {\n    this.getPoSteps()\n      .filter((step, index) => step && index >= stepIndex + 2)\n      .forEach(step => step.status = PoStepperStatus.Disabled);\n  }\n\n  private setStepAsActive(step: PoStepComponent): void {\n    step.status = PoStepperStatus.Active;\n  }\n\n  private setNextStepAsDefault(currentStep: PoStepComponent): void {\n    const { steps, stepIndex } = this.getStepsAndIndex(currentStep);\n    const nextIndex = stepIndex + 1;\n\n    if (nextIndex < this.poSteps.length) {\n      steps[nextIndex].status = PoStepperStatus.Default;\n    }\n  }\n\n  private setPreviousStepAsDone(): void {\n    if (this.previousActiveStep) {\n      this.previousActiveStep.status = PoStepperStatus.Done;\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir as legendas dos *steps*.\n */\n@Component({\n  selector: 'po-stepper-label',\n  templateUrl: './po-stepper-label.component.html'\n})\n\nexport class PoStepperLabelComponent {\n\n  // ConteÃºdo da label.\n  @Input('p-content') content: string;\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, poLocaleDefault } from './../../../utils/util';\n\nimport { PoStepperOrientation } from '../enums/po-stepper-orientation.enum';\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\nconst poStepperStepSizeDefault = 24;\nconst poStepperStepSizeMax = 64;\nconst poStepLiteralsDefault = {\n  en: { label: 'Step' },\n  es: { label: 'Paso' },\n  pt: { label: 'Passo' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que representa um *step* contendo as ligaÃ§Ãµes das laterais (`po-stepper-step-bar`) e a label.\n */\n@Component({\n  selector: 'po-stepper-step',\n  templateUrl: 'po-stepper-step.component.html'\n})\nexport class PoStepperStepComponent {\n\n  private _label: string;\n  private _status: PoStepperStatus;\n  private _stepIcons?: boolean = false;\n  private _stepSize: number = poStepperStepSizeDefault;\n\n  readonly literals = {\n    ...poStepLiteralsDefault[poLocaleDefault],\n    ...poStepLiteralsDefault[browserLanguage()]\n  };\n\n  // ConteÃºdo que serÃ¡ repassado para o componente `p-circle-content` atravÃ©s da propriedade `p-content`.\n  @Input('p-circle-content') circleContent: any;\n\n  // Label do *step*.\n  @Input('p-label') set label(value: string) {\n    this._label = isTypeof(value, 'string') ? value : `${this.literals.label} ${this.circleContent}`;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  // Define a orientaÃ§Ã£o de exibiÃ§Ã£o.\n  @Input('p-orientation') orientation: PoStepperOrientation;\n\n  // Define o estado de exibiÃ§Ã£o.\n  @Input('p-status') set status(value: PoStepperStatus) {\n    this._status = (value as string) ? value : undefined;\n\n    if (this.status === PoStepperStatus.Active) {\n      this.activated.emit();\n    }\n  }\n\n  get status(): PoStepperStatus {\n    return this._status;\n  }\n\n  @Input('p-step-icons') set stepIcons(stepIcons: boolean) {\n    this._stepIcons = convertToBoolean(stepIcons);\n  }\n\n  get stepIcons(): boolean {\n    return this._stepIcons;\n  }\n\n  // Tamanho do `step` em *pixels*, possibilitando um maior destaque.\n  // O valor informado deve ser entre `24` e `64`.\n  @Input('p-step-size') set stepSize(value: number) {\n    this._stepSize = (value >= poStepperStepSizeDefault && value <= poStepperStepSizeMax) ? value : poStepperStepSizeDefault;\n  }\n\n  get stepSize(): number {\n    return this._stepSize;\n  }\n\n  // Evento que serÃ¡ emitido quando o status do *step* estiver ativo (`PoStepperStatus.Active`).\n  @Output('p-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao clicar no *step*.\n  @Output('p-click') click = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao focar no *step* e pressionar a tecla *enter*.\n  @Output('p-enter') enter = new EventEmitter<any>();\n\n  get halfStepSize(): number {\n    return this.stepSize / 2;\n  }\n\n  get isVerticalOrientation(): boolean {\n    return this.orientation === PoStepperOrientation.Vertical;\n  }\n\n  get marginHorizontalBar(): number {\n    return this.isVerticalOrientation ? undefined : this.halfStepSize;\n  }\n\n  getStatusClass(status: string): string {\n    switch (status) {\n      case PoStepperStatus.Active:\n        return 'po-stepper-step-active';\n      case PoStepperStatus.Disabled:\n        return 'po-stepper-step-disabled';\n      case PoStepperStatus.Done:\n        return 'po-stepper-step-done';\n      case PoStepperStatus.Error:\n        return 'po-stepper-step-error';\n      default:\n        return 'po-stepper-step-default';\n    }\n  }\n\n  onClick(): void {\n    if (this.status !== PoStepperStatus.Disabled) {\n      this.click.emit();\n    }\n  }\n\n  onEnter(): void {\n    if (this.status !== PoStepperStatus.Disabled) {\n      this.enter.emit();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperCircleComponent } from './po-stepper-circle/po-stepper-circle.component';\nimport { PoStepperComponent } from './po-stepper.component';\nimport { PoStepperLabelComponent } from './po-stepper-label/po-stepper-label.component';\nimport { PoStepperStepComponent } from './po-stepper-step/po-stepper-step.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-stepper\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    PoStepComponent,\n    PoStepperCircleComponent,\n    PoStepperComponent,\n    PoStepperLabelComponent,\n    PoStepperStepComponent\n  ],\n  exports: [\n    PoStepComponent,\n    PoStepperComponent\n  ]\n})\nexport class PoStepperModule { }\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por manipular os botÃµes de aba.\n */\n@Component({\n  selector: 'po-tab-button',\n  templateUrl: './po-tab-button.component.html'\n})\nexport class PoTabButtonComponent implements OnChanges {\n\n  private _active: boolean;\n  private _hide: boolean;\n\n  // Ativa o botÃ£o\n  @Input('p-active') set active(value: boolean) {\n    this._active = value;\n\n    this.emitActivated();\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  // Desabilita o botÃ£o\n  @Input('p-disabled') disabled: boolean;\n\n  // Oculta o botÃ£o\n  @Input('p-hide') set hide(value: boolean) {\n    this._hide = convertToBoolean(value);\n\n    this.setDisplayOnHide();\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  // Identificador do componente\n  @Input('p-id') id: string;\n\n  // RÃ³tulo do botÃ£o\n  @Input('p-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('p-small') small: boolean;\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar ativada\n  @Output('p-activated') activated = new EventEmitter();\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar desabilitada ou escondida\n  @Output('p-change-state') changeState = new EventEmitter();\n\n  // MÃ©todo recebido do usuÃ¡rio para ser disparado quando clicar na aba\n  @Output('p-click') click = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {\n      this.changeState.emit(this);\n    }\n  }\n\n  onClick() {\n    if (!this.disabled) {\n      this.click.emit(this.id);\n    }\n  }\n\n  private emitActivated() {\n    if (this.active) {\n      this.activated.emit(this);\n    }\n  }\n\n  private setDisplayOnHide() {\n    this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, uuid } from '../../../utils/util';\n\n/**\n * @description\n *\n * O componente `po-tab` renderiza uma aba na qual envolve um conteÃºdo HTML.\n *\n * Com este componente Ã© possÃ­vel atribuir um rÃ³tulo para auxiliar na identificaÃ§Ã£o do conteÃºdo, ativar para que o mesmo seja exibido,\n * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.\n *\n * > Para controlar a navegaÃ§Ã£o entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).\n */\nexport abstract class PoTabBaseComponent {\n\n  private _active?: boolean = false;\n  private _disabled?: boolean = false;\n  private _hide?: boolean = false;\n\n  // ID da aba\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a aba exibindo seu conteÃºdo.\n   *\n   * > Sugere-se utilizar na aba de conteÃºdo inicial.\n   *\n   * @default `false`\n   */\n  @Input('p-active') set active(active: boolean) {\n    this._active = convertToBoolean(active);\n    this.setDisplayOnActive();\n  }\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a aba.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a aba.\n   *\n   * @default `false`\n   */\n  @Input('p-hide') set hide(hide: boolean) {\n    this._hide = convertToBoolean(hide);\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  /** RÃ³tulo da aba. */\n  @Input('p-label') label: string;\n\n  /** MÃ©todo disparado ao clicar na aba. */\n  @Output('p-click') click = new EventEmitter();\n\n  protected abstract setDisplayOnActive();\n\n}\n","import { AfterContentInit, Component, ElementRef } from '@angular/core';\n\nimport { PoTabBaseComponent } from './po-tab-base.component';\n\n/**\n * @docsExtends PoTabBaseComponent\n */\n@Component({\n  selector: 'po-tab',\n  templateUrl: './po-tab.component.html'\n})\nexport class PoTabComponent extends PoTabBaseComponent implements AfterContentInit {\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActive();\n  }\n\n  protected setDisplayOnActive() {\n    this.elementRef.nativeElement.style.display = this.active ? '' : 'none';\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\nimport { PoTabComponent } from '../po-tab/po-tab.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para agrupamento de componentes `po-tab-button` que os rendereiza em uma um caixa de diÃ¡logo\n * no formato de lista.\n */\n@Component({\n  selector: 'po-tab-dropdown',\n  templateUrl: './po-tab-dropdown.component.html'\n})\nexport class PoTabDropdownComponent {\n\n  @ViewChild('popover', { static: true }) popover: PoPopoverComponent;\n  @ViewChild('tabDrop', { read: ElementRef, static: true }) tabDropdown: ElementRef;\n\n  // RÃ³tulo do `po-tab-button`\n  @Input('p-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('p-small') small: boolean;\n\n  // Lista de abas\n  @Input('p-tabs') tabs: Array<PoTabComponent> = [];\n\n  // Evento que serÃ¡ emitido ao ativar uma aba\n  @Output('p-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido a aba for desabilitada ou ocultada\n  @Output('p-change-state') changeState = new EventEmitter<any>();\n\n  // Evento de click\n  @Output('p-click') click = new EventEmitter<any>();\n\n  getContainerClass() {\n    return this.small ? 'po-tab-dropdown-container-sm' : 'po-tab-dropdown-container';\n  }\n\n  togglePopover(): void {\n    this.popover.isHidden ? this.popover.open() : this.popover.close();\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\n/**\n * @description\n *\n * O componente `po-tabs` Ã© responsÃ¡vel por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,\n * ideal para facilitar a organizaÃ§Ã£o de conteÃºdos.\n *\n * Em dispositivos mÃ³veis o componente exibirÃ¡ tadas as abas de maneira linear gerando um *scroll* na horizontal. JÃ¡ em telas telas com\n * resoluÃ§Ãµes maiores, o componente exibirÃ¡ atÃ© cinco abas normalmente, porÃ©m, Ã  partir de seis abas o componente automaticamente torna\n * visÃ­vel apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.\n *\n * > As abas que estiverem agrupadas serÃ£o dispostas numa cascata suspensa que serÃ¡ exibida ao clicar no botÃ£o **Mais**.\n *\n * Ã possÃ­vel realizar a navegaÃ§Ã£o entre as abas atravÃ©s da tecla TAB do teclado.\n * Caso uma aba estiver desabilitada, nÃ£o receberÃ¡ foco de navegaÃ§Ã£o.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite utilizar uma quantidade excessiva de abas, pois irÃ¡ gerar um *scroll* muito longo no `dropdown`;\n * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.\n */\nexport class PoTabsBaseComponent {\n\n  private _small?: boolean = false;\n\n  /**\n   * @optinal\n   *\n   * @description\n   *\n   * Diminui o tamanho das abas.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n}\n","import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';\n\nimport { isMobile } from './../../utils/util';\n\nimport { PoTabComponent } from './po-tab/po-tab.component';\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\nimport { PoTabsBaseComponent } from './po-tabs-base.component';\n\nconst poTabsMaxNumberOfTabs = 5;\n\n/**\n * @docsExtends PoTabsBaseComponent\n *\n * @example\n *\n * <example name=\"po-tabs-basic\" title=\"Portinari Tabs Basic\">\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.html\"> </file>\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-labs\" title=\"Portinari Tabs Labs\">\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.html\"> </file>\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-travel\" title=\"Portinari Tabs - Travel\">\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.html\"> </file>\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-business-conf\" title=\"Portinari Tabs - Business Conference\">\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.html\"> </file>\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tabs',\n  templateUrl: './po-tabs.component.html'\n})\nexport class PoTabsComponent extends PoTabsBaseComponent {\n\n  maxNumberOfTabs = poTabsMaxNumberOfTabs;\n\n  private previousActiveTab: PoTabComponent;\n\n  // Tabs utilizados no ng-content\n  @ContentChildren(PoTabComponent) tabs: QueryList<PoTabComponent>;\n\n  @ViewChild('tabDropdown', { static: true }) tabDropdown: PoTabDropdownComponent;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  get isMobileDevice() {\n    return isMobile();\n  }\n\n  get isShowTabDropdown() {\n    return !this.isMobileDevice && this.visibleTabs.length > this.maxNumberOfTabs;\n  }\n\n  // tabs que serÃ£o apresentadas na aba \"Mais\"\n  get overflowedTabs() {\n    return this.visibleTabs.filter((_tab, index) => index > (this.maxNumberOfTabs - 2));\n  }\n\n  get visibleTabs() {\n    return this.tabs.filter(tab => !tab.hide);\n  }\n\n  closePopover(): void {\n    const containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;\n\n    if (containsPopoverVisible) {\n      this.tabDropdown.popover.close();\n    }\n  }\n\n  isVisibleTab(tab) {\n    if (this.isMobileDevice) {\n      return true;\n    }\n\n    const visibleTabIndex = this.visibleTabs.findIndex(visibleTab => visibleTab.id === tab.id);\n\n    return (this.visibleTabs.length <= this.maxNumberOfTabs) || (visibleTabIndex < (this.maxNumberOfTabs - 1));\n  }\n\n  // FunÃ§Ã£o disparada quando alguma tab ficar ativa\n  onTabActive(tab) {\n    this.previousActiveTab = this.tabs.find(tabChild => tabChild.active && tabChild.id !== tab.id);\n\n    this.deactivateTab();\n  }\n\n  // funcao serÃ¡ disparada quando mudar o estado do poTab para desabilitado ou escondido.\n  onTabChangeState(tab: PoTabComponent) {\n    if (tab.active) {\n      tab.active = false;\n\n      this.activeDistinctTab();\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  // selectiona a aba informada por parametro, caso houver click faz a emiÃ§Ã£o do evento.\n  selectedTab(tab: PoTabComponent) {\n    tab.active = true;\n\n    if (tab.click) {\n      tab.click.emit(tab);\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  trackByFn(_i, tab: PoTabComponent) {\n    return tab.id;\n  }\n\n  // ativa a previousActiveTab ou primeira tab encontrada.\n  private activeDistinctTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = true;\n    } else {\n      this.activeFirstTab();\n    }\n  }\n\n  // Ativa a primeira Tab que nÃ£o estiver desabilitada ou escondida.\n  private activeFirstTab() {\n    this.tabs.some(tabChild => {\n      if (!tabChild.disabled && !tabChild.hide) {\n        tabChild.active = true;\n        return true;\n      }\n    });\n  }\n\n  // desativa previousActiveTab e dispara a detecÃ§Ã£o de mudanÃ§a.\n  private deactivateTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = false;\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\n\nimport { PoTabButtonComponent } from './po-tab-button/po-tab-button.component';\nimport { PoTabComponent } from './po-tab/po-tab.component';\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\nimport { PoTabsComponent } from './po-tabs.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-tabs\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoPopoverModule\n  ],\n  declarations: [\n    PoTabButtonComponent,\n    PoTabComponent,\n    PoTabDropdownComponent,\n    PoTabsComponent\n  ],\n  entryComponents: [\n    PoTabButtonComponent,\n    PoTabDropdownComponent\n  ],\n  exports: [\n    PoTabComponent,\n    PoTabsComponent\n  ]\n})\nexport class PoTabsModule { }\n","import { Component, Input } from '@angular/core';\n\nimport { isTypeof } from '../../../utils/util';\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\nconst poToolbarActionsIconDefault = 'po-icon-more';\n\n/**\n * @docsPrivate\n *\n * @usedBy PoToolbarComponent\n *\n * @description\n *\n * O componente `po-toolbar-actions` tem como objetivo receber uma lista de aÃ§Ãµes e um Ã­cone que podem ser personalizados.\n */\n@Component({\n  selector: 'po-toolbar-actions',\n  templateUrl: './po-toolbar-actions.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoToolbarActionsComponent {\n\n  private _actionsIcon?: string = poToolbarActionsIconDefault;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\n\n  /** Define o Ã­cone das aÃ§Ãµes. */\n  @Input('p-actions-icon') set actionsIcon(icon: string) {\n    this._actionsIcon = isTypeof(icon, 'string') ? icon : poToolbarActionsIconDefault;\n  }\n\n  get actionsIcon() {\n    return this._actionsIcon;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nimport { PoToolbarAction } from './po-toolbar-action.interface';\nimport { PoToolbarProfile } from './po-toolbar-profile/po-toolbar-profile.interface';\n\n/**\n * @description\n *\n * O componente `po-toolbar` Ã© um cabeÃ§alho para o tÃ­tulo da aplicaÃ§Ã£o e informaÃ§Ãµes de usuÃ¡rio e notificaÃ§Ãµes quando houver necessidade.\n */\nexport class PoToolbarBaseComponent {\n\n  private _notificationNumber?: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone declarado em `p-actions-icon`.\n   */\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define um [Ã­cone](/guides/icons) para a propriedade `p-actions`.\n   *\n   * > Caso nÃ£o haja aÃ§Ãµes definidas em `p-actions`, o Ã­cone nÃ£o serÃ¡ exibido.\n   *\n   * @default `po-icon-more`\n   */\n  @Input('p-actions-icon') actionsIcon?: string;\n\n /** Define o objeto que serÃ¡ o cabeÃ§alho da lista de aÃ§Ãµes com as informaÃ§Ãµes do perfil. */\n  @Input('p-profile') profile?: PoToolbarProfile;\n\n /** Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone do perfil. */\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\n\n  /** Se falso, oculta o Ã­cone de notificaÃ§Ãµes. */\n  @Input('p-show-notification') showNotification?: boolean = true;\n\n  /** TÃ­tulo do *toolbar* e aplicaÃ§Ã£o. */\n  @Input('p-title') title: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes da notificaÃ§Ã£o.\n   */\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * NÃºmero de notificaÃ§Ãµes.\n   */\n  @Input('p-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = convertToInt(value, 0);\n  }\n\n  get notificationNumber(): number {\n    return this._notificationNumber;\n  }\n\n  get isShowProfile(): boolean {\n    return !!(this.profile || this.profileActions);\n  }\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { PoToolbarBaseComponent } from './po-toolbar-base.component';\n\n/**\n * @docsExtends PoToolbarBaseComponent\n *\n * @example\n *\n * <example name=\"po-toolbar-basic\" title=\"Portinari Toolbar Basic\">\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-toolbar-labs\" title=\"Portinari Toolbar Labs\">\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-toolbar-logged\" title=\"Portinari Toolbar - Logged\">\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-toolbar',\n  templateUrl: './po-toolbar.component.html'\n})\nexport class PoToolbarComponent extends PoToolbarBaseComponent implements OnInit {\n\n  parentRef: any;\n\n  constructor(private titleService: Title, viewRef: ViewContainerRef) {\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngOnInit(): void {\n    this.setTitle(this.title);\n  }\n\n  private setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @usedBy PoToolbarComponent\n *\n * @description\n *\n * O componente `po-toolbar-notification` tem como objetivo notificar o usuÃ¡rio de novas aÃ§Ãµes da aplicaÃ§Ã£o que necessitam de atenÃ§Ã£o,\n * como por exemplo um alerta de nova mensagem.\n *\n * O mesmo tambÃ©m permite que a cada nova notificaÃ§Ã£o seja incrementado e exibido, ou nÃ£o, este nÃºmero em uma *tag* ao lado do\n * Ã­cone de notificaÃ§Ãµes.\n */\n@Component({\n  selector: 'po-toolbar-notification',\n  templateUrl: './po-toolbar-notification.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoToolbarNotificationComponent {\n\n  private _notificationNumber?: number = 0;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\n\n  /** Define o nÃºmero de notificaÃ§Ãµes. */\n  @Input('p-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = Number.isInteger(value) ? value : 0;\n  }\n\n  get notificationNumber() {\n    return this._notificationNumber;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarProfile } from './po-toolbar-profile.interface';\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoToolbarProfileComponent\n *\n * @description\n *\n * Componente `po-toolbar-profile`.\n */\n@Component({\n  selector: 'po-toolbar-profile',\n  templateUrl: './po-toolbar-profile.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoToolbarProfileComponent {\n\n  /** Objeto que implementa a interface `PoToolbarProfile`. */\n  @Input('p-profile') profile: PoToolbarProfile;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\n\n  get profileAvatar() {\n    return this.profile ? this.profile.avatar : undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoAvatarModule } from './../po-avatar/po-avatar.module';\nimport { PoPopupModule } from '../po-popup/po-popup.module';\nimport { PoToolbarActionsComponent } from './po-toolbar-actions/po-toolbar-actions.component';\nimport { PoToolbarComponent } from './po-toolbar.component';\nimport { PoToolbarNotificationComponent } from './po-toolbar-notification/po-toolbar-notification.component';\nimport { PoToolbarProfileComponent } from './po-toolbar-profile/po-toolbar-profile.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-toolbar\n *\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoAvatarModule,\n    PoPopupModule\n  ],\n  declarations: [\n    PoToolbarActionsComponent,\n    PoToolbarComponent,\n    PoToolbarNotificationComponent,\n    PoToolbarProfileComponent\n  ],\n  exports: [\n    PoToolbarComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoToolbarModule { }\n","import { Input, Output, EventEmitter } from '@angular/core';\n\nimport { convertToBoolean, isTypeof } from '../../utils/util';\n\n/**\n *\n * @description\n *\n * O componente `po-widget` Ã© recomendado para exibiÃ§Ã£o de *dashboards*, podendo ser utilizado\n * para incluir vÃ¡rios tipos de conteÃºdo como: grÃ¡ficos, tabelas, grids e imagens.\n *\n * AlÃ©m da exibiÃ§Ã£o de conteÃºdos, este componente possibilita adicionar aÃ§Ãµes e um link\n * para ajuda, como tambÃ©m possibilita ser utilizado com ou sem sombra.\n *\n * Para controlar sua largura, Ã© possÃ­vel utilizar o [Grid System](/guides/grid-system) para um maior\n * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\nexport abstract class PoWidgetBaseComponent {\n\n  private _background?: string;\n  private _disabled?: boolean = false;\n  private _height?: number;\n  private _help?: string;\n  private _noShadow?: boolean = false;\n  private _primary?: boolean = false;\n  private _primaryLabel?: string;\n  private _title?: string;\n\n  containerHeight?: string = 'auto';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AplicaÃ§Ã£o de imagem de fundo.\n   * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,\n   * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.\n   *\n   */\n  @Input('p-background') set background(value: string) {\n    this._background = (value && typeof value === 'string') ? value : undefined;\n  }\n\n  get background() {\n    return this._background;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todas as aÃ§Ãµes do componente.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.onDisabled.emit(this.disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-widget`.\n   * A altura mÃ­nima para o `po-widget` depende do que serÃ¡ exibido atravÃ©s das propriedades `p-primary-label`,\n   * `p-setting`, `p-help` e `p-title`.\n   * > Caso nÃ£o seja informado valor, a propriedade irÃ¡ assumir o tamanho do conteÃºdo.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = parseInt(<any> value, 10);\n    this.setHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Link de ajuda\n   */\n  @Input('p-help') set help(value: string) {\n    this._help = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get help(): string {\n    return this._help;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a sombra do `po-widget`.\n   *\n   * @default `true`\n   */\n  @Input('p-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = <any>value === '' ? true : convertToBoolean(value);\n    this.setHeight(this.height);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * OpÃ§Ã£o para que o `po-widget` fique em destaque.\n   *\n   * @default `false`\n   */\n  @Input('p-primary') set primary(value: boolean) {\n    this._primary = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get primary(): boolean {\n    return this._primary;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DescriÃ§Ã£o da primeira aÃ§Ã£o.\n   *\n   * @default `false`\n   */\n  @Input('p-primary-label') set primaryLabel(value: string) {\n    this._primaryLabel = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get primaryLabel(): string {\n    return this._primaryLabel;\n  }\n\n  /** DescriÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('p-secondary-label') secondaryLabel?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * TÃ­tulo do `po-widget`.\n   *\n   * @default `false`\n   */\n  @Input('p-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre a Ã¡rea total do `po-widget`. */\n  @Output('p-click') click?: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /** FunÃ§Ã£o que serÃ¡ disparada com o valor do `p-disabled` quando esta propriedade for alterada. */\n  @Output('p-on-disabled') onDisabled?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na primeira aÃ§Ã£o. */\n  @Output('p-primary-action') primaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na segunda aÃ§Ã£o. */\n  @Output('p-secondary-action') secondaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o chamada ao clicar no Ã­cone de configuraÃ§Ã£o */\n  @Output('p-setting') setting?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada ao clicar no tÃ­tulo. */\n  @Output('p-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setHeight(height: number);\n\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\n\nimport { PoWidgetBaseComponent } from './po-widget-base.component';\n\n/**\n * @docsExtends PoWidgetBaseComponent\n *\n * @example\n *\n * <example name=\"po-widget-basic\" title=\"Portinari Widget Basic\">\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.html\"> </file>\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-labs\" title=\"Portinari Widget Labs\">\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.html\"> </file>\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-finance-dashboard\" title=\"Portinari Widget - Finance dashboard\">\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-card\" title=\"Portinari Widget - Card\">\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.html\"> </file>\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-widget',\n  templateUrl: './po-widget.component.html'\n})\nexport class PoWidgetComponent extends PoWidgetBaseComponent implements OnInit {\n\n  get showTitleAction(): boolean {\n    return !!this.titleAction.observers[0];\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setHeight(this.height);\n  }\n\n  hasTitleHelpOrSetting(): boolean {\n    return !!this.title || !!this.help || !!this.setting.observers[0];\n  }\n\n  onClick(event: MouseEvent) {\n    if (!this.disabled) {\n      this.click.emit(event);\n    }\n  }\n\n  openHelp(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      window.open(this.help, '_blank');\n    }\n  }\n\n  runPrimaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.primaryAction.emit();\n    }\n  }\n\n  runSecondaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.secondaryAction.emit();\n    }\n  }\n\n  runTitleAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.titleAction.emit();\n    }\n  }\n\n  setHeight(height: number) {\n    if (height) {\n      let bodyHeight = height;\n      const hasSettingOrHelp = this.setting.observers.length > 0 || this.help;\n      const footerBorder = 1;\n      const footerHeight = 40;\n      const settingHeight = 37;\n      const shadowHeight = 2;\n      const titleHeight = 50;\n\n      if (this.noShadow) {\n        bodyHeight -= shadowHeight;\n      }\n\n      if (hasSettingOrHelp && !this.title) {\n        bodyHeight -= settingHeight;\n      }\n\n      if (this.title) {\n        bodyHeight -= titleHeight;\n      }\n\n      if (this.primaryLabel) {\n        bodyHeight -= footerHeight + footerBorder;\n      }\n\n      this.containerHeight = `${bodyHeight}px`;\n    } else {\n      this.containerHeight = `auto`;\n    }\n  }\n\n  settingOutput(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.setting.emit();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoContainerModule } from '../po-container/index';\nimport { PoWidgetComponent } from './po-widget.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-widget\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoContainerModule\n  ],\n  exports: [\n    PoWidgetComponent\n  ],\n  declarations: [PoWidgetComponent]\n})\nexport class PoWidgetModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoAccordionModule } from './po-accordion/po-accordion.module';\nimport { PoAvatarModule } from './po-avatar/po-avatar.module';\nimport { PoBreadcrumbModule } from './po-breadcrumb/po-breadcrumb.module';\nimport { PoButtonModule } from './po-button/po-button.module';\nimport { PoButtonGroupModule } from './po-button-group/po-button-group.module';\nimport { PoCalendarModule } from './po-calendar/po-calendar.module';\nimport { PoChartModule } from './po-chart/po-chart.module';\nimport { PoContainerModule } from './po-container/po-container.module';\nimport { PoDisclaimerGroupModule } from './po-disclaimer-group/po-disclaimer-group.module';\nimport { PoDisclaimerModule } from './po-disclaimer/po-disclaimer.module';\nimport { PoDividerModule } from './po-divider/po-divider.module';\nimport { PoDropdownModule } from './po-dropdown/po-dropdown.module';\nimport { PoDynamicModule } from './po-dynamic/po-dynamic.module';\nimport { PoFieldModule } from './po-field/po-field.module';\nimport { PoGridModule } from './po-grid/po-grid.module';\nimport { PoInfoModule } from './po-info/po-info.module';\nimport { PoListViewModule } from './po-list-view/po-list-view.module';\nimport { PoLoadingModule } from './po-loading/po-loading.module';\nimport { PoMenuModule } from './po-menu/po-menu.module';\nimport { PoMenuPanelModule } from './po-menu-panel/po-menu-panel.module';\nimport { PoModalModule } from './po-modal/po-modal.module';\nimport { PoNavbarModule } from './po-navbar/po-navbar.module';\nimport { PoPageModule } from './po-page/po-page.module';\nimport { PoPopoverModule } from './po-popover/po-popover.module';\nimport { PoPopupModule } from './po-popup/po-popup.module';\nimport { PoProgressModule } from './po-progress/po-progress.module';\nimport { PoSlideModule } from './po-slide/po-slide.module';\nimport { PoStepperModule } from './po-stepper/po-stepper.module';\nimport { PoTableModule } from './po-table/po-table.module';\nimport { PoTabsModule } from './po-tabs/po-tabs.module';\nimport { PoTagModule } from './po-tag/po-tag.module';\nimport { PoToolbarModule } from './po-toolbar/po-toolbar.module';\nimport { PoWidgetModule } from './po-widget/po-widget.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoAccordionModule,\n    PoAvatarModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoButtonGroupModule,\n    PoCalendarModule,\n    PoChartModule,\n    PoContainerModule,\n    PoDisclaimerGroupModule,\n    PoDisclaimerModule,\n    PoDividerModule,\n    PoDropdownModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoGridModule,\n    PoInfoModule,\n    PoListViewModule,\n    PoLoadingModule,\n    PoMenuModule,\n    PoMenuPanelModule,\n    PoModalModule,\n    PoNavbarModule,\n    PoPageModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoProgressModule,\n    PoSlideModule,\n    PoStepperModule,\n    PoTableModule,\n    PoTabsModule,\n    PoTagModule,\n    PoToolbarModule,\n    PoWidgetModule\n  ],\n  exports: [\n    PoAccordionModule,\n    PoAvatarModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoButtonGroupModule,\n    PoCalendarModule,\n    PoChartModule,\n    PoContainerModule,\n    PoDisclaimerGroupModule,\n    PoDisclaimerModule,\n    PoDividerModule,\n    PoDropdownModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoGridModule,\n    PoInfoModule,\n    PoListViewModule,\n    PoLoadingModule,\n    PoMenuModule,\n    PoMenuPanelModule,\n    PoModalModule,\n    PoNavbarModule,\n    PoPageModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoProgressModule,\n    PoSlideModule,\n    PoStepperModule,\n    PoTableModule,\n    PoTabsModule,\n    PoTagModule,\n    PoToolbarModule,\n    PoWidgetModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoComponentsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoTooltipModule } from './po-tooltip/po-tooltip.module';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    PoTooltipModule\n  ],\n  exports: [\n    PoTooltipModule\n  ],\n  providers: [],\n  bootstrap: []\n})\n\nexport class PoDirectivesModule { }\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [],\n  bootstrap: []\n})\nexport class PoGuardsModule { }\n","import { HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpEvent, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst NO_ERROR_HEADER_PARAM = 'X-Portinari-No-Error';\n\n/**\n * @description\n *\n * O serviÃ§o Portinari Http Interceptor realiza o tratamento de requisiÃ§Ãµes HTTP conforme o padrÃ£o do\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) para adaptÃ¡-lo\n * ao modelo do PO.\n *\n * Ao analisar o objeto `_messages` retornado pela requisiÃ§Ã£o, o serviÃ§o exibirÃ¡ notificaÃ§Ãµes com mensagens na tela.\n * Os retornos de erros com cÃ³digos 4xx e 5xx sÃ£o tratados automaticamente, sem a necessidade de incluir o `_messages`.\n *\n * TambÃ©m existe a possibilidade de nÃ£o apresentar a notificaÃ§Ã£o quando houver algum erro com cÃ³digos 4xx e 5xx,\n * utilizando o parÃ¢metro `X-Portinari-No-Error` que foi definido conforme o\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) (em CabeÃ§alhos Customizados).\n * O parÃ¢metro `X-Portinari-No-Error` deve ser informado no cabeÃ§alho da requisiÃ§Ã£o com o valor `'true'` para funcionar corretamente,\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Portinari-No-Error': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * > ApÃ³s a validaÃ§Ã£o no interceptor, o parÃ¢metro serÃ¡ removido do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * O `Content-Type` deve ser `application/json` e a estrutura de mensagem recebida pelo serviÃ§o deve seguir o\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395)\n * (em Mensagens de sucesso para coleÃ§Ãµes), exemplo:\n *  - _messages: lista de mensagens de erro ou informativo resultante do serviÃ§o.\n *    - type: success, warning, error, e information;\n *    - code: tÃ­tulo ou cÃ³digo da mensagem;\n *    - message: texto da mensagem;\n *    - detailedMessage: detalhamento do erro ou informativo;\n *\n * Ao importar o mÃ³dulo `PoModule` na aplicaÃ§Ã£o, o `po-http-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n * Ao realizar requisiÃ§Ãµes utilize o `HttpClient`, conforme exemplo abaixo:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class UserService {\n *\n *   constructor(private http: HttpClient) { }\n *\n *   getUsers() {\n *     return this.http.get('/api/users');\n *   }\n *\n *   ...\n *\n * }\n * ```\n *\n */\nexport abstract class PoHttpInterceptorBaseService implements HttpInterceptor {\n\n  notificationTypes = ['success', 'warning', 'error', 'information'];\n\n  constructor(private notification: any, private dialog: any) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const cloneRequest = request.clone();\n\n    request = request.headers.has(NO_ERROR_HEADER_PARAM) ? this.cloneRequestWithoutNoErrorHeaderParam(request) : request;\n\n    return next.handle(request).pipe(tap((response: HttpEvent<any>) => {\n\n      if (response instanceof HttpResponse) {\n\n        this.processResponse(response);\n\n      }\n    }, (error: HttpErrorResponse) => {\n\n      this.processErrorResponse(error, cloneRequest);\n\n    }));\n  }\n\n  processResponse(response: HttpResponse<any>) {\n    if (response.body && response.body._messages) {\n\n      const messages = response.body._messages;\n\n      if (messages instanceof Array) {\n        messages.forEach((message: any) => {\n          this.showNotification(message);\n        });\n      } else {\n        this.showNotification(messages);\n      }\n    }\n  }\n\n  processErrorResponse(response: HttpErrorResponse, request: HttpRequest<any>) {\n    const errorResponse = response.status !== 0\n      ? response.error\n      : { code: 0, message: 'Servidor nÃ£o estÃ¡ respondendo.', detailedMessage: response.message };\n\n    const hasNoErrorParam = this.hasNoErrorParam(request);\n\n    // not show the notification when has NoError parameter on header of request.\n    if (errorResponse && errorResponse.message && !hasNoErrorParam) {\n      this.showNotification({ ...errorResponse, type: 'error' });\n    }\n  }\n\n  private cloneRequestWithoutNoErrorHeaderParam(request: HttpRequest<any>): HttpRequest<any> {\n    return request && request.clone({headers: request.headers.delete(NO_ERROR_HEADER_PARAM)});\n  }\n\n  private hasNoErrorParam(request: HttpRequest<any>): boolean {\n    const noErrorParam = request && request.headers.get(NO_ERROR_HEADER_PARAM);\n\n    return noErrorParam && noErrorParam.toString().toLocaleLowerCase() === 'true';\n  }\n\n  private showNotification(response: any) {\n    const typeNotification = this.notificationTypes.includes(response.type) ? response.type : 'information';\n\n    const notificationAction = this.generateNotificationAction(response);\n\n    this.notification[typeNotification]({\n      message: response.message,\n      actionLabel: notificationAction.label,\n      action: notificationAction.action\n    });\n  }\n\n  private generateNotificationAction(errorResponse: any) {\n\n    let notificationAction;\n    let notificationLabel;\n\n    let notificationMessage = errorResponse.message.concat(` ${errorResponse.detailedMessage}`);\n\n    if (errorResponse.details && errorResponse.details instanceof Array) {\n      errorResponse.details.forEach((detailError: any) => {\n        notificationMessage += `\\n${detailError.message}`;\n      });\n    }\n\n    if (errorResponse.helpUrl && !(errorResponse.detailedMessage || errorResponse.details)) {\n      notificationLabel = 'Ajuda';\n      notificationAction = this.generateUrlHelpFunction(errorResponse.helpUrl);\n\n    } else if (errorResponse.detailedMessage || errorResponse.details) {\n      notificationLabel = 'Detalhes';\n      notificationAction = this.generateDialogDetailFunction(errorResponse, notificationMessage);\n    }\n    return { label: notificationLabel, action: notificationAction };\n  }\n\n  private generateUrlHelpFunction(helpUrl: string) {\n    return () => { window.open(helpUrl, '_blank'); };\n  }\n\n  private generateDialogDetailFunction(errorResponse: any, notificationMessage: string) {\n    return () => {\n      this.dialog.alert({\n        title: errorResponse.code,\n        message: notificationMessage,\n        ok: errorResponse.helpUrl ? this.generateUrlHelpFunction(errorResponse.helpUrl) : undefined\n      });\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoHttpInterceptorBaseService } from './po-http-interceptor-base.service';\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\nimport { PoDialogService } from './../../services/po-dialog/po-dialog.service';\n\n/**\n * @docsExtends PoHttpInterceptorBaseService\n *\n * @example\n * <example name='po-http-interceptor-labs' title='Portinari Http Interceptor Labs'>\n *  <file name='sample-po-http-interceptor-labs.component.ts'> </file>\n *  <file name='sample-po-http-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable()\nexport class PoHttpInterceptorService extends PoHttpInterceptorBaseService {\n  constructor(notification: PoNotificationService, dialog: PoDialogService) {\n    super(notification, dialog);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { PoDialogService } from './../../services/po-dialog/po-dialog.service';\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\nimport { PoHttpInterceptorService } from './po-http-interceptor.service';\n\n@NgModule({\n  providers: [\n    PoHttpInterceptorService,\n    PoDialogService,\n    PoNotificationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: PoHttpInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class PoHttpInterceptorModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por efetuar o controle de interaÃ§Ã£o com o serviÃ§o de interceptor `PoHttpRequestInterceptorService`\n * gerenciando o seu estado.\n */\n@Injectable()\nexport class PoHttpRequesControltService {\n\n  controlHttpRequest: Subject<number> = new Subject<number>();\n\n  getControlHttpRequest(): Observable<any> {\n    return this.controlHttpRequest.asObservable();\n  }\n\n  send(value: number = 0) {\n    this.controlHttpRequest.next(value);\n  }\n\n}\n","import { ComponentRef, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoLoadingOverlayComponent } from '../../components/po-loading/po-loading-overlay/po-loading-overlay.component';\n\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\n\nconst noCountPendingRequests = 'X-Portinari-No-Count-Pending-Requests';\nconst screenLock = 'X-Portinari-Screen-Lock';\n\n/**\n * @description\n *\n * O serviÃ§o Portinari Http Request Interceptor realiza a contabilizaÃ§Ã£o de requisiÃ§Ãµes pendentes na aplicaÃ§Ã£o.\n *\n * Existe a possibilidade de nÃ£o efetuar a contabilizaÃ§Ã£o das requisiÃ§Ãµes pendentes, utilizando o parÃ¢metro\n * `X-Portinari-No-Count-Pending-Requests`. Para isso deve ser informado no cabeÃ§alho da requisiÃ§Ã£o com o valor `'true'`,\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Portinari-No-Count-Pending-Requests': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * Para obter a quantidade de requisiÃ§Ãµes pendentes, deve inscrever-se no mÃ©todo `getCountPendingRequests` do\n * serviÃ§o `PoHttpRequestInterceptorService`, com isso, ao realizar requisiÃ§Ãµes utilizando `HttpClient`,\n * serÃ¡ retornado a quantidade de requisiÃ§Ãµes pendentes.\n *\n * TambÃ©m existe a possibildade de travar a tela e mostrar uma imagem de _loading_ durante o processamento de uma requisiÃ§Ã£o\n * deve-se passar o parÃ¢metro `X-Portinari-Screen-Lock` no cabeÃ§alho da requisiÃ§Ã£o com valor `'true'`.\n *\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Portinari-Screen-Lock': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * > ApÃ³s a validaÃ§Ã£o no interceptor, o parÃ¢metro serÃ¡ removido do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * Ao importar o mÃ³dulo `PoModule` na aplicaÃ§Ã£o, o `po-http-request-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n *\n * Segue abaixo um exemplo de uso:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class CustomersService {\n *\n *  headers = { 'X-Portinari-No-Count-Pending-Requests': true, 'X-Portinari-Screen-Lock': 'true' }\n *  pendingRequests: number = 0;\n *  subscription: Subscription;\n *\n *  constructor(\n *    private http: HttpClient,\n *    private httpRequestInterceptor: PoHttpRequestInterceptorService) { }\n *\n *  ngOnDestroy(): void {\n *    this.subscription.unsubscribe();\n *  }\n *\n *  ngOnInit(): void {\n *    this.subscription = this.httpRequestInterceptor.getCountPendingRequests().subscribe(data => {\n *      this.pendingRequests = data;\n *    });\n *  }\n *\n *  getCustomers() {\n *    return this.http.get(`/customers/1`, { headers: headers });\n *  }\n *\n *  ...\n *\n * }\n * ```\n *\n * @example\n * <example name='po-http-request-interceptor-labs' title='Portinari Http Request Interceptor Labs'>\n *  <file name='sample-po-http-request-interceptor-labs.component.ts'> </file>\n *  <file name='sample-po-http-request-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoHttpRequestInterceptorService implements HttpInterceptor {\n\n  private loadingOverlayComponent: ComponentRef<PoLoadingOverlayComponent> = undefined;\n\n  private pendingRequests: number = 0;\n  private overlayRequests: number = 0;\n\n  constructor(\n    private controlHttpRequest: PoHttpRequesControltService,\n    private poComponentInjector: PoComponentInjectorService) {  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    const requestClone = request.clone();\n\n    request = this.requestCloneWithoutHeaderParam([noCountPendingRequests, screenLock], request);\n\n    this.setCountPendingRequests(true, requestClone);\n    this.setCountOverlayRequests(true, requestClone);\n\n    return next.handle(request).pipe(\n      tap((response: HttpEvent<any>) => {\n        if (response instanceof HttpResponse) {\n          this.setCountPendingRequests(false, requestClone);\n          this.setCountOverlayRequests(false, requestClone);\n        }\n      }),\n      catchError(error => {\n        this.setCountPendingRequests(false, requestClone);\n        this.setCountOverlayRequests(false, requestClone);\n\n        return throwError(error);\n      })\n    );\n  }\n\n  getCountPendingRequests(): Observable<any> {\n    return this.controlHttpRequest.getControlHttpRequest();\n  }\n\n  private buildLoading() {\n    if (!this.loadingOverlayComponent) {\n      this.loadingOverlayComponent = this.poComponentInjector.createComponentInApplication(PoLoadingOverlayComponent);\n      this.loadingOverlayComponent.instance.screenLock = true;\n      this.loadingOverlayComponent.instance.changeDetector.detectChanges();\n    }\n  }\n\n  private destroyLoading() {\n    if (this.loadingOverlayComponent) {\n      this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent);\n      this.loadingOverlayComponent = undefined;\n    }\n  }\n\n  private requestCloneWithoutHeaderParam(headersParams: Array<string>, request: HttpRequest<any>): HttpRequest<any> {\n    let isRequestClone = false;\n\n    headersParams.forEach(headerParam => {\n      if (request.headers.has(headerParam)) {\n        request.headers.delete(headerParam);\n        isRequestClone = true;\n      }\n\n    });\n\n    return isRequestClone ? request.clone({headers: request.headers}) : request;\n  }\n\n  private setCountPendingRequests(isIncrement: boolean, request: HttpRequest<any>) {\n\n    const hasCountPendingRequestHeaderParam = request.headers.has(noCountPendingRequests);\n    const headerParam = request.headers.get(noCountPendingRequests);\n\n    if (hasCountPendingRequestHeaderParam && (headerParam.toString().toLowerCase() === 'true' ) ) {\n      return;\n    }\n\n    this.pendingRequests += isIncrement ? 1 : -1;\n    this.controlHttpRequest.send(this.pendingRequests);\n\n  }\n\n  private setCountOverlayRequests(isIncrement: boolean, request: HttpRequest<any>) {\n    const hasOverlayRequestHeaderParam = request.headers.has(screenLock);\n\n    if (hasOverlayRequestHeaderParam) {\n      const headerParam = request.headers.get(screenLock);\n\n      if (headerParam.toString().toLowerCase() === 'false') {\n        return;\n      }\n\n      this.overlayRequests += isIncrement ? 1 : -1;\n      this.overlayRequests > 0 ? this.buildLoading() : this.destroyLoading();\n    }\n  }\n\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\nimport { PoHttpRequestInterceptorService } from './po-http-request-interceptor.service';\n\nimport { PoLoadingComponent } from '../../components/po-loading/po-loading.component';\nimport { PoLoadingOverlayComponent } from '../../components/po-loading/po-loading-overlay/po-loading-overlay.component';\n\n@NgModule({\n  providers: [\n    PoHttpRequesControltService,\n    PoHttpRequestInterceptorService,\n    PoComponentInjectorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: PoHttpRequestInterceptorService,\n      multi: true\n    }\n  ],\n  entryComponents: [PoLoadingOverlayComponent, PoLoadingComponent]\n})\nexport class PoHttpRequestModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoHttpInterceptorModule } from './po-http-interceptor/po-http-interceptor.module';\nimport { PoHttpRequestModule } from './po-http-request/po-http-request.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoHttpInterceptorModule,\n    PoHttpRequestModule\n  ],\n  exports: [\n    PoHttpInterceptorModule,\n    PoHttpRequestModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoInterceptorsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoTimeModule } from '../pipes/po-time/po-time.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoTimeModule\n  ],\n  exports: [\n    PoTimeModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoPipesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoDirectivesModule } from './directives/directives.module';\nimport { PoGuardsModule } from './guards/guards.module';\nimport { PoInterceptorsModule } from './interceptors/interceptors.module';\nimport { PoPipesModule } from './pipes/pipes.module';\nimport { PoServicesModule } from './services/services.module';\nimport { PoNotificationService } from './services/po-notification/po-notification.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoComponentsModule,\n    PoDirectivesModule,\n    PoGuardsModule,\n    PoInterceptorsModule,\n    PoPipesModule,\n    PoServicesModule\n  ],\n  exports: [\n    PoComponentsModule,\n    PoDirectivesModule,\n    PoInterceptorsModule,\n    PoGuardsModule,\n    PoPipesModule,\n    PoServicesModule\n  ],\n  providers: [ PoNotificationService ],\n  bootstrap: []\n})\nexport class PoModule { }\n","import { InjectionToken } from '@angular/core';\n\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\n\nexport const I18N_CONFIG = new InjectionToken<PoI18nConfig>('I18N_CONFIG');\n","import { HttpClient } from '@angular/common/http';\nimport { Inject } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isLanguage, reloadCurrentPage } from '../../utils/util';\nimport { PoLanguageService } from '../po-language/po-language.service';\n\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\nimport { PoI18nLiterals } from './interfaces/po-i18n-literals.interface';\n\n/**\n * @description\n *\n * O serviÃ§o `PoI18nService` possibilita utilizar mÃºltiplos idiomas e contextos na aplicaÃ§Ã£o.\n *\n * > Antes da utilizaÃ§Ã£o do serviÃ§o, Ã© necessÃ¡rio realizar a\n * [importaÃ§Ã£o e configuraÃ§Ã£o do mÃ³dulo `PoI18nModule`](/documentation/po-i18n#i18n-config).\n *\n * **UtilizaÃ§Ã£o do serviÃ§o `PoI18nService`:**\n *\n * Para utilizar o serviÃ§o basta importÃ¡-lo nos componentes que necessitarem de literais e fazer a injeÃ§Ã£o de\n * dependÃªncia no construtor:\n * ```\n *  import { PoI18nService } from '@portinari/portinari-ui';\n *  ...\n *  constructor(private poI18nService: PoI18nService) { }\n *  ...\n * ```\n *\n * Por fim realizar a busca pelas literais, inscrevendo-se no [Observable](https://angular.io/guide/observables) pelo\n * mÃ©todo `getLiterals()`.\n *\n * > O mÃ©todo `getLiterals()` pode receber um objeto do tipo da interface `PoI18nLiterals` como parÃ¢metro,\n * porÃ©m, nenhuma das propriedades sÃ£o obrigatÃ³rias. Caso nenhum parÃ¢metro seja passado, serÃ£o buscadas\n * todas as literais do contexto definido com padrÃ£o, no idioma definido como padrÃ£o.\n *\n * Exemplos de requisiÃ§Ã£o:\n * ```\n * literals = {};\n * literalsEn = {};\n * literalsCrm = {};\n *\n * constructor(private poI18nService: PoI18nService) {\n *   poI18nService.getLiterals()\n *     .subscribe((literals) => {\n *       this.literals = literals;\n *     });\n *\n *   poI18nService.getLiterals({context: 'crm', literals: ['add', 'remove']})\n *     .subscribe((literals) => {\n *       this.literalsCrm = literals;\n *     });\n *\n *   poI18nService.getLiterals({language: 'en-us'})\n *     .subscribe((literals) => {\n *       this.literalsEn = literals;\n *     });\n * }\n * ```\n *\n * Para apresentar as literais capturadas acima no HTML do componente, deve-se utilizar o\n * seguinte cÃ³digo:\n *\n * <pre ngNonBindable>\n * {{ literals?.add }}\n * {{ literals?.remove }}\n * </pre>\n *\n * Caso as literais contenham variÃ¡veis que precisem ser substituÃ­das, pode-se utilizar o *pipe* `poI18n`.\n * Ã possÃ­vel informar propriedades do componente como `name` e `nickname` ou\n * informar o valor diretamente com \"\" ou nÃºmero, conforme o exemplo abaixo:\n *\n * <pre ngNonBindable>\n * {{ literals?.people | poI18n:[120] }}\n * {{ literals?.greeting | poI18n:[name, nickname] }}\n * {{ literals?.greeting | poI18n:[\"Brad\", \"Green\"] }}\n * </pre>\n *\n * > Ã importante o uso do operador `?` (Elvis) para evitar erros enquanto as literais nÃ£o forem carregadas.\n *\n * ### Teste unitÃ¡rio\n *\n * Abaixo segue um exemplo de *setup* inicial de teste unitÃ¡rio do *AppComponent* que utiliza o `PoI18nService`:\n *\n * ```\n * import { async, TestBed } from '@angular/core/testing';\n * import { HttpClientTestingModule } from '@angular/common/http/testing';\n *\n * import { PoI18nModule } from '@portinari/portinari-ui';\n *\n * import { AppComponent } from './app.component';\n *\n * describe('AppComponent', () => {\n *   const anotherPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const generalPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const config = {\n *     default: {\n *       language: 'pt-BR',\n *       context: 'general',\n *       cache: false\n *     },\n *     contexts: {\n *       general: {\n *         'pt-br': generalPT\n *       },\n *       another: {\n *         'pt-br': anotherPT\n *       }\n *     }\n *   };\n *\n *   beforeEach(async(() => {\n *     TestBed.configureTestingModule({\n *       declarations: [\n *         AppComponent\n *       ],\n *       imports: [\n *         HttpClientTestingModule,\n *         PoI18nModule.config(config)\n *       ]\n *     }).compileComponents();\n *   }));\n *\n *   it('should create the app', async(() => {\n *     const fixture = TestBed.createComponent(AppComponent);\n *     const app = fixture.debugElement.componentInstance;\n *\n *     expect(app).toBeTruthy();\n *   }));\n *\n * });\n * ```\n */\n\nexport class PoI18nBaseService {\n\n  private varI18n: any = {};\n\n  private contextDefault: string;\n\n  private useCache: boolean = false;\n\n  private servicesContext: any = {};\n\n  constructor(\n    @Inject(I18N_CONFIG) private config?: PoI18nConfig,\n    @Inject(HttpClient) private http?: HttpClient,\n    private languageService?: PoLanguageService) {\n\n    this.setConfig(config);\n  }\n\n  /**\n   * <a id=\"get-language\"></a>\n   * MÃ©todo que retorna o idioma padrÃ£o ativo.\n   *\n   * A busca deste idioma pelo mÃ©todo serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo [`setLanguage()`](documentation/po-i18n#setLanguage).\n   *\n   *   2 - o valor inserido no mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido na propriedade\n   * `language` da interface [`PoI18nConfigDefault`](documentation/po-i18n#poI18nConfigDefault).\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo PO (`pt`, `en` ou `es`), serÃ¡ retornado valor `pt`.\n   *\n   * **Retorno:**\n   *\n   * `string` com a sigla do idioma padrÃ£o.\n   */\n  getLanguage(): string {\n    return this.languageService.getLanguage();\n  }\n\n  /**\n   * MÃ©todo que retorna o idioma padrÃ£o ativo, com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n   * Por exemplo: \"pt\" ou \"es\".\n   *\n   * A busca deste idioma Ã© baseada no mÃ©todo [**getLanguage()**](/documentation/po-i18n#get-language).\n   *\n   * **Retorno:**\n   *\n   * `string` com a sigla do idioma padrÃ£o.\n   */\n  getShortLanguage(): string {\n    return this.languageService.getShortLanguage();\n  }\n\n  /**\n   * <a id=\"setLanguage\"></a>\n   * MÃ©todo para alterar o idioma padrÃ£o do mÃ³dulo do i18n.\n   *\n   * Ao utilizar este mÃ©todo, o idioma ficarÃ¡ gravado no armazenamento local do navegador, que serÃ¡ utilizado pelo\n   * serviÃ§o do `i18n` para buscar as literais no idioma padrÃ£o.\n   *\n   * @param language {string} Sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   *\n   * @param reload {boolean} Indica se a pÃ¡gina atual poderÃ¡ ser recarregada apÃ³s a alteraÃ§Ã£o do idioma.\n   *\n   * Este recurso pode ser Ãºtil para os usuÃ¡rios que utilizam o mÃ©todo `getLiterals()` do serviÃ§o do i18n para poder\n   * buscar novamente as literais no novo idioma configurado.\n   */\n  setLanguage(language: string, reload?: boolean): void {\n\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    this.languageService.setLanguage(language);\n\n    if (reload) {\n      reloadCurrentPage();\n    }\n\n  }\n\n  private setConfig(config: PoI18nConfig) {\n    // Seta as configuraÃ§Ãµes padrÃµes definidas no importaÃ§Ã£o do mÃ³dulo\n    if (config['default']) {\n\n      this.languageService.setLanguageDefault(config['default']['language']);\n\n      this.contextDefault = (config['default']['context']) ? config['default']['context'] : '';\n      this.useCache = (config['default']['cache']) ? config['default']['cache'] : false;\n    }\n\n    // Carrega a lista dos contextos e as contantes informadas\n    if (config['contexts']) {\n      this.setVarI18n(config['contexts']);\n\n      // Se nenhum contexto foi definido como padrÃ£o,\n      // entÃ£o define o primeiro contexto\n      if (!this.contextDefault) {\n        for (const context in config['contexts']) {\n          if (this.config['contexts'].hasOwnProperty(context)) {\n            this.contextDefault = context;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  getLiterals(options: PoI18nLiterals = {}): Observable<object> {\n    const language = options['language'] ? options['language'].toLowerCase() : this.getLanguage();\n    const context = (options['context']) ? options['context'] : this.contextDefault;\n    const literals: Array<string> = (options['literals']) ? options['literals'] : [];\n\n    return new Observable(observer => {\n      if (this.servicesContext[context]) {\n        // Faz o processo de busca de um contexto que contÃ©m serviÃ§o\n        this.getLiteralsFromContextService(language, context, literals, observer);\n      } else {\n        // Faz o processo de busca de um contexto que utiliza constante\n        this.getLiteralsFromContextConstant(language, context, literals, observer);\n      }\n    });\n  }\n\n  // Processo de busca de um contexto que contÃ©m serviÃ§o.\n  //    1 - Procura na variÃ¡vel I18n deste serviÃ§o\n  //    2 - Procura no local storage (Se o cache estiver definido como true na configuraÃ§Ã£o do mÃ³dulo)\n  //    3 - Dispara o serviÃ§o, mesmo que jÃ¡ tenha encontrado no local storage, para garantir a atualizaÃ§Ã£o\n  //    4 - Se nenhuma literal for encontrada, entÃ£o busca em pt-br\n  private getLiteralsFromContextService(language: string,\n                                        context: string,\n                                        literals: Array<string>,\n                                        observer: any,\n                                        translations: any = {},\n                                        languageAlternative: string = null) {\n\n    // Idioma usado para tentar buscar as literais faltantes\n    const languageSearch = (languageAlternative) ? languageAlternative : language;\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(languageSearch, context, literals));\n\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // realiza a busca no localStorage e em seguida no serviÃ§o\n    this.getLiteralsLocalStorageAndCache(languageSearch, context, literals, observer, translations, languageAlternative);\n  }\n\n  // Procura no local storage e em seguida no serviÃ§o\n  // Caso nÃ£o encontre nem no serviÃ§o, recomeÃ§a a busca em pt-br\n  private getLiteralsLocalStorageAndCache(language: string,\n                                          context: string,\n                                          literals: Array<string>,\n                                          observer: any,\n                                          translations: any,\n                                          languageAlternative: string = null) {\n\n    const languageSearch = (languageAlternative) ? languageAlternative : language;\n    let translationTemp;\n    // Verifica se usa cache\n    if (this.useCache) {\n      translationTemp = this.searchInLocalStorage(languageSearch, context, literals);\n      if (this.countObject(translationTemp) > 0) {\n        this.updateVarI18n(language, context, translationTemp);\n        translations = this.mergeObject(translationTemp, translations);\n        observer.next(translations);\n      }\n    }\n\n    // Busca do ServiÃ§o\n    this.getHttpService(this.servicesContext[context], languageSearch, literals)\n      .subscribe(\n        response => {\n          if (response) {\n            this.updateLocalStorage(language, context, response);\n            this.updateVarI18n(language, context, response);\n            translationTemp = this.searchInVarI18n(language, context, literals);\n            translations = this.mergeObject(translationTemp, translations);\n            observer.next(translations);\n          }\n\n          // Se nÃ£o encontrou todas as literais pesquisadas no idioma\n          // EntÃ£o refaz o processo procurando em portuguÃªs\n          if (literals.length > this.countObject(translations)) {\n            if (languageAlternative === 'pt-br') {\n              // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n              translations = this.completeFaultLiterals(language, context, literals, translations);\n              this.updateLocalStorage(language, context, translations);\n              this.updateVarI18n(language, context, translations);\n              observer.next(translations);\n            } else {\n              this.getLiteralsFromContextService(language, context, literals, observer, translations, 'pt-br');\n            }\n          }\n        });\n  }\n\n  // Procura pela lista de literais\n  // Se nÃ£o encontrar todas, procura em pt-br\n  private getLiteralsFromContextConstant(language: string,\n                                         context: string,\n                                         literals: Array<string>,\n                                         observer: any,\n                                         translations: any = {}) {\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(language, context, literals));\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // Se foi pesquisado por literais\n    if (literals.length > 0) {\n      // Se nÃ£o encontrou todas as literais pesquisadas no idioma, procura em portuguÃªs\n      if (literals.length > this.countObject(translations)) {\n        if (language === 'pt-br') {\n          // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n          translations = this.completeFaultLiterals(language, context, literals, translations);\n          observer.next(translations);\n        } else {\n          this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n        }\n      }\n    } else {\n      // Se nÃ£o encontrar nenhuma literal, procura em portuguÃªs\n      if (this.countObject(translations) === 0 && language !== 'pt-br') {\n        this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n      }\n\n      // caso nÃ£o informar literais e nÃ£o houver traduÃ§Ã£o\n      observer.next(translations);\n      observer.complete();\n    }\n  }\n\n  // Busca pelas literais no local storage\n  private searchInLocalStorage(language: string, context: string, literals: Array<string>): any {\n    const translations: any = {};\n\n    if (literals.length > 0) {\n      for (let i = 0; i < literals.length; i++) {\n        const literal = literals[i];\n        const translation = localStorage.getItem(language + '-' + context + '-' + literal);\n        if (translation) {\n          translations[literal] = translation;\n        }\n      }\n    }\n    return translations;\n  }\n\n  // Busca pelas literais na variÃ¡vel do serviÃ§o\n  private searchInVarI18n(language: string, context: string, literals: Array<string>): any {\n    let translations: any = {};\n\n    if (this.varI18n[language] && this.varI18n[language][context]) {\n      const content = this.varI18n[language][context];\n\n      if (literals.length > 0) {\n        // Busca as literais desejadas\n        for (let i = 0; i < literals.length; i++) {\n          const literal = literals[i];\n          if (content.hasOwnProperty(literal)) {\n            translations[literal] = content[literal];\n          }\n        }\n      } else {\n        // Atribui todas as literais\n        translations = { ...content };\n      }\n    }\n    return translations;\n  }\n\n  // Atualiza o local storage\n  private updateLocalStorage(language: string, context: string, data: any) {\n    if (this.useCache) {\n      for (const literal in data) {\n        if (data.hasOwnProperty(literal)) {\n          localStorage.setItem(language + '-' + context + '-' + literal, data[literal]);\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais com os objetos passados na configuraÃ§Ã£o\n  private setVarI18n(contexts: any) {\n    // Percorre os contextos\n    for (const context in contexts) {\n      if (contexts.hasOwnProperty(context)) {\n        const contextContent = contexts[context];\n\n        // Percorre os idiomas dentro do contexto\n        for (const language in contextContent) {\n          if (contextContent.hasOwnProperty(language)) {\n            const languageContent = contextContent[language];\n\n            if (language === 'url') {\n              this.servicesContext[context] = languageContent;\n            } else {\n              this.updateVarI18n(language, context, languageContent);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais idioma e contexto\n  private updateVarI18n(language: string, context: string, data: any) {\n    language = language.toLowerCase();\n\n    if (!this.varI18n[language]) {\n      this.varI18n[language] = {[context]: {}};\n    }\n    if (!this.varI18n[language][context]) {\n      this.varI18n[language][context] = {};\n    }\n\n    // Cria ou atualiza o contexto dentro do storage\n    this.varI18n[language][context] = this.mergeObject(data, this.varI18n[language][context]);\n  }\n\n  private getHttpService(url: string, language: string, literals: Array<string>): Observable<object> {\n    let param = '?language=' + language;\n    if (literals.length > 0) {\n      param += '&literals=' + literals.join();\n    }\n\n    // Remove a barra final do endereÃ§o\n    url = (url.lastIndexOf('/') === url.length - 1) ? url.substr(0, url.length - 1) : url;\n\n    return this.http.get(url + param);\n  }\n\n  // Completa com o nome da literais, as que nÃ£o foram encontradas\n  private completeFaultLiterals(language: string,\n                                context: string,\n                                literals: Array<string>,\n                                translations: any) {\n    for (let i = 0; i < literals.length; i++) {\n      const literal = literals[i];\n      if (!translations[literal]) {\n        translations[literal] = literal;\n      }\n    }\n    return translations;\n  }\n\n  // Conta os atributos do objeto\n  private countObject(obj: object) {\n    return Object.keys(obj).length;\n  }\n\n  // Faz o merge dos objetos, sempre dando preferÃªncia para o primeiro objeto de parÃ¢metro\n  private mergeObject(objPermanent: any, obj: any) {\n    return { ...obj, ...objPermanent };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { PoLanguageService } from './../po-language/po-language.service';\n\nimport { PoI18nBaseService } from './po-i18n-base.service';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\n\n/**\n * @docsExtends PoI18nBaseService\n */\n\n@Injectable()\nexport class PoI18nService extends PoI18nBaseService { }\n\n// FunÃ§Ã£o usada para retornar instÃ¢ncia para o mÃ³dulo po-i18n.module\nexport function returnPoI18nService(config: PoI18nConfig, http: HttpClient, languageService: PoLanguageService) {\n  return new PoI18nService(config, http, languageService);\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { PoLanguageService } from './../po-language/po-language.service';\n\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\nimport { returnPoI18nService, PoI18nService } from './po-i18n.service';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\nimport { PoLanguageModule } from '../po-language/po-language.module';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `PoI18nService` para controle de idiomas com PO.\n *\n * Para utilizaÃ§Ã£o do serviÃ§o de idiomas `PoI18nService`, deve-se importar este mÃ³dulo mesmo jÃ¡ havendo importado\n * o mÃ³dulo `PoModule`. Na importaÃ§Ã£o deve ser invocado o mÃ©todo `config`, informando um objeto que deve implementar\n * a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig) para configuraÃ§Ã£o.\n *\n * <a id=\"i18n-config\"></a>\n * **Exemplo de configuraÃ§Ã£o do mÃ³dulo do i18n:**\n * ```\n * import { PoI18nConfig } from '@portinari/portinari-ui';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: PoI18nConfig = {\n *   default: {\n *     language: 'pt-BR',\n *     context: 'general',\n *     cache: true\n *   },\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt,\n *       'en-US': generalEn\n *     },\n *     hcm: {\n *       url: 'http://10.1.1.1/api/translations/hcm/'\n *     }\n *   }\n * };\n *\n * @NgModule({\n *   declarations: [],\n *   imports: [\n *     PoModule,\n *     PoI18nModule.config(i18nConfig)\n *   ],\n *   bootstrap: [AppComponent]\n * })\n * ```\n *\n * Para cada contexto Ã© possÃ­vel definir a origem das literais, que podem ser de um serviÃ§o REST ou\n * de um objeto. Exemplo:\n *\n * Arquivo general-pt.ts\n * ```\n * export const generalPt = {\n *  add: 'Adicionar',\n *  greeting: 'Prazer, {0} {1}',\n *  people: '{0} Pessoas,\n *  remove: 'Remover'\n * }\n * ```\n *\n * Arquivo general-en.ts\n * ```\n * export const generalEn = {\n *  add: 'Add',\n *  greeting: 'Nice to meet you, {0} {1}',\n *  people: '{0} People,\n *  remove: 'Remove'\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de contextos usando constantes externas:**\n * ```\n * import { PoI18nConfig } from '@portinari/portinari-ui';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: PoI18nConfig = {\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt, // constantes em arquivos separados\n *       'en-US': generalEn // constantes em arquivos separados\n *     },\n *     crm: {\n *       url: 'http://10.0.0.1:3000/api/translations/crm'\n *     }\n *   },\n *   default: {}\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de um contexto utilizando serviÃ§o:**\n *\n * Ao optar por utilizar um serviÃ§o para configuraÃ§Ã£o de contexto, deverÃ¡ ser definida a URL\n * especÃ­fica do contexto, como nos exemplos abaixo:\n *\n *  - http://10.0.0.1:3000/api/translations/crm\n *  - http://10.0.0.1:3000/api/translations/general\n *\n * Os idiomas e literais serÃ£o automaticamente buscados com parÃ¢metros na prÃ³pria URL:\n * - **language**: o idioma serÃ¡ sempre passado por parÃ¢metro e Ã© recomendado utilizar uma das linguagens\n * suportadas pelo PO (`pt-br`, `en-us` ou `es-es`).\n * - **literals**: as literais serÃ£o separadas por vÃ­rgula. Caso esse parÃ¢metro nÃ£o seja informado, o\n * serviÃ§o deve retornar todas as literais do idioma.\n *\n * Exemplos de requisiÃ§Ã£o:\n *\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br&literals=add,remove,text\n *\n * > Sempre que o idioma solicitado nÃ£o for encontrado, serÃ¡ buscado por `pt-br`.\n *\n * AlÃ©m dos contextos, Ã© possÃ­vel definir as configuraÃ§Ãµes *default* do sistema na configuraÃ§Ã£o do\n * mÃ³dulo utilizando a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig):\n *\n * **Exemplo de padrÃµes definidos:**\n * ```\n * const i18nConfig: PoI18nConfig = {\n *   contexts: {\n *     general: { }\n *   },\n *   default: {\n *    language: 'pt-BR',\n *    context: 'general',\n *    cache: true\n *   }\n * }\n * ```\n *\n * **Importante:**\n *\n * Recomenda-se que as definiÃ§Ãµes *default* sejam realizadas apenas uma vez na aplicaÃ§Ã£o,\n * preferencialmente no mÃ³dulo `AppModule`.\n *\n * **i18n com *Lazy loading***\n *\n * Para aplicaÃ§Ãµes que utilizem a abordagem de mÃ³dulos com carregamento *lazy loading*, caso seja\n * definida outra configuraÃ§Ã£o do `PoI18nModule`, deve-se atentar os seguintes detalhes:\n *\n * - Caso existam literais comuns na aplicaÃ§Ã£o, estas devem ser reimportadas;\n * - NÃ£o defina outra *default language* para este mÃ³dulo. Caso for definida, serÃ¡ sobreposta para\n * toda a aplicaÃ§Ã£o;\n * - Caso precise de mÃ³dulos carregados via *lazy loading* com linguagens diferentes, utilize o\n * mÃ©todo [`setLanguage()`](documentation/po-i18n#setLanguage) disponibilizado pelo `PoI18nService`\n * para definir a linguagem da aplicaÃ§Ã£o e dos mÃ³dulos com as linguagens diferentes.\n */\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    PoLanguageModule\n  ]\n})\nexport class PoI18nModule {\n\n  static config(config: PoI18nConfig): ModuleWithProviders {\n    return {\n      ngModule: PoI18nModule,\n      providers: [\n        {\n          provide: I18N_CONFIG,\n          useValue: config\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initializeLanguageDefault,\n          multi: true,\n          deps: [I18N_CONFIG, PoLanguageService]\n        },\n        {\n          provide: PoI18nService,\n          useFactory: returnPoI18nService,\n          deps: [I18N_CONFIG, HttpClient, PoLanguageService]\n        }\n      ]\n    };\n  }\n\n}\n\nexport function initializeLanguageDefault(config: PoI18nConfig, languageService: PoLanguageService) {\n  // tslint:disable-next-line:prefer-immediate-return\n  const setDefaultLanguage = () => {\n    if (config.default.language) {\n      languageService.setLanguageDefault(config.default.language);\n    }\n  };\n  return setDefaultLanguage;\n}\n"]}